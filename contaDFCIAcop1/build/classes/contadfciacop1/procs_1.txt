REP_MSGPOLI03_DIARIO           

begin
    select cbo_clientes_empresas.entidad
    from cbo_clientes_empresas
    where cbo_clientes_empresas.id_socsyst01 = :pempresa
    into :entidad;

    Select '01 al ' || (cbo_meses_maximosdias.socsyst10_maximo_dia ||
    ' de ' || cbo_meses_maximosdias.socsyst10_filtro_des) || ' del ' || :pano
    from cbo_meses_maximosdias(:pano)
    where cbo_meses_maximosdias.socsyst10_codigo = :pmes
    into :FECHA;

    FOR SELECT
    vr_msgpoli01_msgpoli02.rela_socsyst10,
    vr_msgpoli01_msgpoli02.socsyst10_codigo,
    vr_msgpoli01_msgpoli02.MSGPOLI01_FCTA,
    vr_msgpoli01_msgpoli02.msgpoli02_ano,
    vr_msgpoli01_msgpoli02.msgpoli02_mes,
    vr_msgpoli01_msgpoli02.SOCSYST10_FILTRO_DES,
    vr_msgpoli01_msgpoli02.MSGPOLI01_DOCNRO,
    vr_msgpoli01_msgpoli02.MSGPOLI01_DESCRIPCION,
    vr_msgpoli01_msgpoli02.MSGPOLI02_DEBE,
    vr_msgpoli01_msgpoli02.MSGPOLI02_HABER,
    vr_msgpoli01_msgpoli02.ID_MSGPOLI01,
    vr_msgpoli01_msgpoli02.ID_MSGPOLI02,
    vr_msgpoli01_msgpoli02.rela_siccont02,
    vr_msgpoli01_msgpoli02.rela_socsyst01,
    vr_msgpoli01_msgpoli02.siccont02_codigo,
    vr_msgpoli01_msgpoli02.siccont02_codext,
    vr_msgpoli01_msgpoli02.siccont02_descri,
    vr_msgpoli01_msgpoli02.siccont02_tipo
    FROM vr_msgpoli01_msgpoli02
    WHERE vr_msgpoli01_msgpoli02.rela_socsyst01 = :pempresa
      AND vr_msgpoli01_msgpoli02.msgpoli02_ano = :pano
      AND vr_msgpoli01_msgpoli02.msgpoli02_mes = :pmes
      order by vr_msgpoli01_msgpoli02.socsyst10_codigo,
               vr_msgpoli01_msgpoli02.msgpoli01_fcta,
               vr_msgpoli01_msgpoli02.msgpoli01_docnro

    into :RELA_SOCSYST10,
         :SOCSYST10_CODIGO,
         :MSGPOLI01_FCTA,
         :MSGPOLI02_ANO,
         :MSGPOLI02_MES,
         :SOCSYST10_FILTRO_DES,
         :MSGPOLI01_DOCNRO,
         :MSGPOLI01_DESCRIPCION,
         :MSGPOLI02_DEBE,
         :MSGPOLI02_HABER,
         :ID_MSGPOLI01,
         :ID_MSGPOLI02,
         :RELA_SICCONT02,
         :RELA_SOCSYST01,
         :SICCONT02_CODIGO,
         :siccont02_codext,
         :SICCONT02_DESCRI,
         :SICCONT02_TIPO
   do
   begin
     suspend;
   end
end
CBO_MESES_CONT                 

begin
ID_MES = 0;
MES = 0;
while(MES <= 12) do
BEGIN
     ID_MES = ID_MES + 1;
     MES = ID_MES;
  suspend;
  END
end
PRD_MSGPOLI34_AFAVOR           

BEGIN
    FOR
        SELECT
            MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_AFAVOR,
            GRID_MSGPOLI23.ID_MSGPOLI23,
            GRID_MSGPOLI23.MSGPOLI23_IMPORTE_AFAVOR,
            GRID_MSGPOLI23.MSGPOLI23_IMPORTE_AFAVOR,
            GRID_MSGPOLI23.MSGPOLI24_DESCRI,
            GRID_MSGPOLI23.MSGPOLI24_DESCRI || ' - ' || CAST(GRID_MSGPOLI23.MSGPOLI23_IMPORTE_AFAVOR AS VARCHAR(10))
        FROM GRID_MSGPOLI23
        INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (GRID_MSGPOLI23.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
        WHERE GRID_MSGPOLI23.RELA_SOCSYST01 = :PARAM_SOCSYST01
            AND GRID_MSGPOLI23.MSGPOLI23_ANO = :PARAM_ANIO
            AND GRID_MSGPOLI23.MSGPOLI23_MES = :PARAM_MES
            AND GRID_MSGPOLI23.CODIGO_BITACORA = 'MODIFICADO'
            AND GRID_MSGPOLI23.MSGPOLI23_IMPORTE_AFAVOR > 0
        INTO
            :RELA_SICCONT02,
            :ID_MSGPOLI23,
            :MSGPOLI23_IMPORTE_AFAVOR,
            :MSGPOLI23_DISPONIBLE,
            :MSGPOLI24_DESCRI,
            :MSGPOLI23_CONCAT
    DO
    BEGIN
        SUSPEND;
    END
END
PRD_PYMINGR02_IMPUESTOS        

BEGIN
    IF (:PARAM_TIPO = 'GASTOS') THEN
      BEGIN
        SELECT
          SUM(PYMEGRE05_MOV_IMPUESTOS.PYMEGRE05_HABER + PYMEGRE05_MOV_IMPUESTOS.PYMEGRE05_DEBE),
          MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE
        FROM PYMEGRE05_MOV_IMPUESTOS
        INNER JOIN SICCONT73_MOV_IMPUESTOS ON (PYMEGRE05_MOV_IMPUESTOS.RELA_SICCONT02 = SICCONT73_MOV_IMPUESTOS.RELA_SICCONT02)
        INNER JOIN MSGPOLI09_CAB_IMPUESTOS ON (SICCONT73_MOV_IMPUESTOS.ID_SICCONT73 = MSGPOLI09_CAB_IMPUESTOS.RELA_SICCONT73)
        WHERE PYMEGRE05_MOV_IMPUESTOS.RELA_PYMEGRE03 = :PARAM_ID
          AND MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_CODEXT LIKE TRIM(:PARAM_CODIGO)
        GROUP BY MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE
        INTO
           :IMPORTE,
           :PORCENTAJE;

        IF (:IMPORTE IS NULL) THEN
          IMPORTE = 0;

        SUSPEND;
      END

    IF (:PARAM_TIPO = 'CONCEPTOS') THEN
      BEGIN
        SELECT
          SUM(PYMINGR05_MOV_IMPUESTOS.PYMINGR05_HABER + PYMINGR05_MOV_IMPUESTOS.PYMINGR05_DEBE),
          MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE
        FROM PYMINGR05_MOV_IMPUESTOS
        INNER JOIN SICCONT73_MOV_IMPUESTOS ON (PYMINGR05_MOV_IMPUESTOS.RELA_SICCONT02 = SICCONT73_MOV_IMPUESTOS.RELA_SICCONT02)
        INNER JOIN MSGPOLI09_CAB_IMPUESTOS ON (SICCONT73_MOV_IMPUESTOS.ID_SICCONT73 = MSGPOLI09_CAB_IMPUESTOS.RELA_SICCONT73)
        WHERE PYMINGR05_MOV_IMPUESTOS.RELA_PYMINGR02 = :PARAM_ID
          AND MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_CODEXT LIKE TRIM(:PARAM_CODIGO)
        GROUP BY MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE
        INTO
          :IMPORTE,
          :PORCENTAJE;

        IF (:IMPORTE IS NULL) THEN
          IMPORTE = 0;

        SUSPEND;
      END

    IF (:PARAM_TIPO = 'ITEMS') THEN
      BEGIN
        SELECT
          SUM(PYMINGR05_MOV_IMPUESTOS.PYMINGR05_HABER + PYMINGR05_MOV_IMPUESTOS.PYMINGR05_DEBE),
          MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE
        FROM PYMINGR05_MOV_IMPUESTOS
        INNER JOIN SICCONT73_MOV_IMPUESTOS ON (PYMINGR05_MOV_IMPUESTOS.RELA_SICCONT02 = SICCONT73_MOV_IMPUESTOS.RELA_SICCONT02)
        INNER JOIN MSGPOLI09_CAB_IMPUESTOS ON (SICCONT73_MOV_IMPUESTOS.ID_SICCONT73 = MSGPOLI09_CAB_IMPUESTOS.RELA_SICCONT73)
        WHERE PYMINGR05_MOV_IMPUESTOS.RELA_PYMINGR06 = :PARAM_ID
          AND MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_CODEXT LIKE TRIM(:PARAM_CODIGO)
        GROUP BY MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE
        INTO
          :IMPORTE,
          :PORCENTAJE;

        IF (:IMPORTE IS NULL) THEN
          IMPORTE = 0;

        SUSPEND;
      END
END
REP_SOCUSUA40_SOCUSUA02        

DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
begin
    SELECT
    VR_ENTIDADES_ALL.rela_socusua20,
    VR_ENTIDADES_ALL.rela_socusua30,
    VR_ENTIDADES_ALL.socusua01_tipo,
    VR_ENTIDADES_ALL.entidad
    FROM VR_ENTIDADES_ALL
    WHERE VR_ENTIDADES_ALL.id_socusua02 = :rela_socusua02
    into :rela_socusua20,
         :rela_socusua30,
         :ENTIDAD_TIPO,
         :ENTIDAD;

    if (rela_socusua20 is not null) then
        FOR SELECT
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20,
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10,
        SOCUSUA40_DET_DOCUMENTOS.ID_SOCUSUA40,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_CODEXT,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_FAPL,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo
        FROM SOCUSUA40_DET_DOCUMENTOS
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        where SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20 = :rela_socusua20
        into :RELA_ENTIDAD,
             :RELA_SOCSYST10,
             :ID_SOCUSUA40,
             :SOCUSUA40_CODEXT,
             :SOCUSUA40_NUMERO,
             :SOCUSUA40_FAPL,
             :SOCSYST10_FILTRO_DES,
             :socsyst10_codigo
        do
            suspend;
    else
        FOR SELECT
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20,
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20,
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10,
        SOCUSUA40_DET_DOCUMENTOS.ID_SOCUSUA40,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_CODEXT,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_FAPL,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo
        FROM SOCUSUA40_DET_DOCUMENTOS
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        where SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA30 = :rela_socusua30
        into :RELA_SOCUSUA20,
             :RELA_ENTIDAD,
             :RELA_SOCSYST10,
             :ID_SOCUSUA40,
             :SOCUSUA40_CODEXT,
             :SOCUSUA40_NUMERO,
             :SOCUSUA40_FAPL,
             :SOCSYST10_FILTRO_DES,
             :socsyst10_codigo
        do
            suspend;
end
SOC$DB_DESACTIVA_ALL           

DECLARE VARIABLE TABLA_SQL VARCHAR(8000);
DECLARE VARIABLE CONSTRAINT_NAME VARCHAR(500);
DECLARE VARIABLE FIELD_NAME VARCHAR(500);
DECLARE VARIABLE REFERENCES_FIELD VARCHAR(500);
DECLARE VARIABLE REFERENCES_TABLE VARCHAR(500);
DECLARE VARIABLE ON_DELETE VARCHAR(500);
begin
    delete from ztmpsoc$db_migracion;

    FOR SELECT
    soc$db_generators.table_name,
    soc$db_generators.table_rowcount,
    soc$db_generators.maxid,
    soc$db_generators.id,
    soc$db_generators.triggername,
    soc$db_generators.alias
    FROM soc$db_generators(1)
    INTO :table_name,
         :table_rowcount,
         :maxid,
         :id,
         :triggername,
         :alias
    do
    BEGIN
        TABLA_SQL = '';
        FKY_COUNT = 0;

        if (triggername is not null and triggername <> '') then
        begin
            if (modo = 0) then
                TABLA_SQL = 'ALTER TRIGGER ' || trim(:triggername) || ' INACTIVE';
            else
                TABLA_SQL = 'ALTER TRIGGER ' || trim(:triggername) || ' ACTIVE';

            if (:EJECUTA IS NOT NULL AND EJECUTA = 5) then
                EXECUTE STATEMENT :TABLA_SQL;
        end

        FOR select
        SOC$DB_FOREIGNS.constraint_name,
        SOC$DB_FOREIGNS.field_name,
        SOC$DB_FOREIGNS.references_field,
        SOC$DB_FOREIGNS.references_table,
        SOC$DB_FOREIGNS.on_delete
        from SOC$DB_FOREIGNS
        where SOC$DB_FOREIGNS.table_name = :table_name
        into :constraint_name,
             :FIELD_NAME,
             :REFERENCES_FIELD,
             :references_table,
             :on_delete
        DO
        BEGIN
            FKY_COUNT = FKY_COUNT + 1;
            TABLA_SQL = 'ALTER TABLE ' || trim(:table_name) || ' DROP CONSTRAINT ' || trim(:constraint_name);

            if (:EJECUTA IS NOT NULL AND EJECUTA = 5) then
                EXECUTE STATEMENT :TABLA_SQL;

            if (:on_delete = 'RESTRICT') then
                on_delete = 'NO ACTION';

            TABLA_SQL = 'alter table ' || trim(:table_name) || ' add constraint ' || trim(:constraint_name) ||
                        ' foreign key (' || trim(:field_name) || ') references ' || trim(:references_table) ||
                        '(' || trim(:references_field) || ') on delete ' || trim(:on_delete);

            INSERT INTO ztmpsoc$db_migracion(ztmpsoc$db_migracion.soc$db_tabla_name,
                                             ztmpsoc$db_migracion.soc$db_foreigns)
            VALUES(:table_name, :TABLA_SQL);

        END

        suspend;
    END
end
PRD_PYMVENT25                  

begin
    ID_PYMVENT24 = null;
    select
    pymvent24_cab_clientes.id_pymvent24,
    pymvent24_cab_clientes.rela_socusua42,
    pymvent24_cab_clientes.pymvent24_cliente,
    pymvent24_cab_clientes.pymvent24_direccion,
    pymvent24_cab_clientes.pymvent24_correro,
    pymvent24_cab_clientes.pymvent24_codpostal,
    pymvent24_cab_clientes.pymvent24_telefonos,
    pymvent24_cab_clientes.pymvent24_documentos
    from pymvent24_cab_clientes
    where pymvent24_cab_clientes.pymvent24_documentos = :documento
    into :ID_PYMVENT24,
         :rela_socusua42,
         :pymvent24_cliente,
         :pymvent24_direccion,
         :pymvent24_correro,
         :pymvent24_codpostal,
         :pymvent24_telefonos,
         :pymvent24_documentos;

    if (ID_PYMVENT24 is not null) then
    begin
        ID_PYMVENT25 = null;
        select pymvent25_cab_buro.id_pymvent25
        from pymvent25_cab_buro
        where pymvent25_cab_buro.rela_pymvent24 = :ID_PYMVENT24
        and pymvent25_cab_buro.rela_socsyst01 = :socsyst01
        into :ID_PYMVENT25;
    end

    suspend;
end
PRD_ON2CFDS12_IMPUESTOS        

BEGIN
  FOR
    SELECT
        ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TIPO,
        ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_IMPUESTO,
        ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TASA,
        ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_IMPORTE
    FROM ON2CFDS12_DET_IMPUESTOS
    WHERE ON2CFDS12_DET_IMPUESTOS.RELA_ON2CFDS10 = :ID_ON2CFDS10
      AND ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TIPO = 'I'
    INTO
        :TIPO,
        :IMPUESTO,
        :TASA,
        :IMPORTE
  DO
  BEGIN
    SUSPEND;
  END

  FOR
    SELECT
        ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TIPO,
        ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_IMPUESTO,
        ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TASA,
        ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_IMPORTE
    FROM ON2CFDS12_DET_IMPUESTOS
    WHERE ON2CFDS12_DET_IMPUESTOS.RELA_ON2CFDS10 = :ID_ON2CFDS10
      AND ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TIPO = 'R'
    INTO
        :TIPO,
        :IMPUESTO,
        :TASA,
        :IMPORTE
  DO
  BEGIN
    SUSPEND;
  END
END
PRD_CFD                        

DECLARE VARIABLE RELA_SOCUSUA42 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
DECLARE VARIABLE SOCUSUA50_DESCRI VARCHAR(200);
DECLARE VARIABLE SOCSYST06_NIVEL INTEGER;
DECLARE VARIABLE PYMINGR01_DOCNRO VARCHAR(20);
DECLARE VARIABLE EXISTE_CONTABILIDAD BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_VERCFD BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_PAC BIGINT;
DECLARE VARIABLE CONTADOR_TIPO VARCHAR(10);
BEGIN
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
  IF (:FLAG = 0) THEN
    BEGIN
      SELECT
          PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
          PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
          PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_FAPL
      FROM PYMINGR01_CAB_FACTURAS
      WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :ID
      INTO
          :RELA_SOCSYST01,
          :RELA_SOCWFLO01,
          :RELA_SICINGR01,
          :PYMINGR01_DOCNRO,
          :FOLIO_FECHA;
    END
  ELSE
    IF (:FLAG = 1) THEN
      BEGIN
          SELECT
              PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
              PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
              PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
              PYMVENT24_CAB_CLIENTES.RELA_SICINGR01
          FROM PYMVENT20_CAB_TICKETS
          INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT24_CAB_cLIENTES.ID_PYMVENT24 = PYMVENT20_CAB_TICKETS.RELA_PYMVENT24)
          WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :ID
          INTO
              :RELA_SOCSYST01,
              :RELA_SOCWFLO01,
              :RELA_PYMVENT24,
              :RELA_SICINGR01;
      END
  ELSE
    IF (:FLAG = 2) THEN
      BEGIN
          SELECT
              ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST01,
              ON2CFDS10_CAB_FACTURAS.RELA_SOCWFLO01,
              ON2CFDS10_CAB_FACTURAS.RELA_PYMVENT24,
              PYMVENT24_CAB_CLIENTES.RELA_SICINGR01
          FROM ON2CFDS10_CAB_FACTURAS
          INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT24_CAB_CLIENTES.ID_PYMVENT24 = ON2CFDS10_CAB_FACTURAS.RELA_PYMVENT24)
          WHERE ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = :ID
          INTO
              :RELA_SOCSYST01,
              :RELA_SOCWFLO01,
              :RELA_PYMVENT24,
              :RELA_SICINGR01;
      END
  ELSE
    IF (:FLAG = 4) THEN
      BEGIN
          SELECT
          SRHNOMI01_CAB_SUELDOS.rela_socsyst01,
          SRHNOMI01_CAB_SUELDOS.rela_socwflo01,
          SRHNOMI02_DET_EMPLEADOS.rela_srhmain10
          FROM SRHNOMI02_DET_EMPLEADOS
          INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
          WHERE SRHNOMI02_DET_EMPLEADOS.id_srhnomi02 = :ID
          INTO
              :RELA_SOCSYST01,
              :RELA_SOCWFLO01,
              :rela_srhmain10;
      END
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */

    CONTADOR_TIPO = 'CFD';
    if (:FLAG = 4) then CONTADOR_TIPO = 'NOMINACFDI';

    SELECT
    SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21
    FROM SOCSYST20_DET_FACTELECT
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :RELA_SOCSYST01
    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :RELA_SOCWFLO01
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :CONTADOR_TIPO
    AND SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 IS NOT NULL
    INTO :RELA_SOCSYST21;

/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */

  SELECT
      SOCSYST01_CAB_CLIENTES.rela_socsyst10_pac,
      SOCSYST01_CAB_CLIENTES.RELA_SOCSYST10_VERCFD,
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_CLAVEPRIVADA,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_FE_KEY,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_FE_REQ,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_FE_CER,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_NROCERTIFICADO,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_FORMATEADO,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,
      SOCSYST20_DET_FACTELECT.ID_SOCSYST20,
      SOCSYST20_DET_FACTELECT.SOCSYST20_FOLIO_SERIE,
      SOCSYST20_DET_FACTELECT.SOCSYST20_FOLIO_DESDE,
      SOCSYST20_DET_FACTELECT.SOCSYST20_FOLIO_HASTA,
      SOCSYST20_DET_FACTELECT.SOCSYST20_MINFOLIOANTE,
      SOCSYST20_DET_FACTELECT.SOCSYST20_NRO_APROBA,
      SOCSYST20_DET_FACTELECT.SOCSYST20_ANO_APROBA,
      SOCSYST20_DET_FACTELECT.SOCSYST20_FECHA_APROBA,
      SOCSYST20_DET_FACTELECT.SOCSYST20_IMGCBB,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_CFDI_USR,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_CFDI_PWD
  FROM SOCSYST20_DET_FACTELECT
  INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
  INNER JOIN SOCSYST01_CAB_CLIENTES ON (SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
  WHERE SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21 = :RELA_SOCSYST21
  INTO
      :rela_socsyst10_pac,
      :RELA_SOCSYST10_VERCFD,
      :RELA_SOCSYST01,
      :RELA_SOCUSUA02,
      :SOCSYST01_CLAVEPRIVADA,
      :SOCSYST01_FE_KEY,
      :SOCSYST01_FE_REQ,
      :SOCSYST01_FE_CER,
      :SOCSYST01_NROCERTIFICADO,
      :SOCSYST21_FORMATEADO,
      :SOCSYST21_CONTADOR,
      :SOCSYST21_LONGITUD,
      :SOCSYST21_PREFIJO,
      :ID_SOCSYST20,
      :SOCSYST20_FOLIO_SERIE,
      :SOCSYST20_FOLIO_DESDE,
      :SOCSYST20_FOLIO_HASTA,
      :SOCSYST20_MINFOLIOANTE,
      :SOCSYST20_NRO_APROBA,
      :SOCSYST20_ANO_APROBA,
      :SOCSYST20_FECHA_APROBA,
      :SOCSYST20_IMGCBB,
      :SOCSYST01_CFDI_USR,
      :SOCSYST01_CFDI_PWD;

    VERCFD = '2.0';
    IF (:RELA_SOCSYST10_VERCFD IS NOT NULL) THEN
        SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
        FROM SOCSYST10_TBL_LISTAESTADOS
        WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = :RELA_SOCSYST10_VERCFD
        INTO :VERCFD;

    IF (:SOCSYST20_FOLIO_SERIE IS NULL) THEN
        SOCSYST20_FOLIO_SERIE = '';

    FOLIOSALERTA = -1;
    IF (:SOCSYST21_CONTADOR >= :SOCSYST20_MINFOLIOANTE) THEN
        FOLIOSALERTA = SOCSYST20_FOLIO_HASTA - SOCSYST21_CONTADOR;

    IF (:rela_socsyst10_pac IS NOT NULL) THEN
        SELECT socsyst10_tbl_listaestados.socsyst10_codigo
        FROM socsyst10_tbl_listaestados
        WHERE socsyst10_tbl_listaestados.id_socsyst10 = :rela_socsyst10_pac
        INTO :SOCSYST01_CFDI_PAC;

/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */

  IF (:ID_SOCSYST20 IS NOT NULL) THEN
  BEGIN
      SOCSYST21_FORMATEADO = NULL;
      FOLIO_FECHA = NULL;

      IF (:FLAG = 0) THEN
        BEGIN
          SELECT
              PYMINGR18_DEP_FACTELECT.ID_PYMINGR18,
              PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,
              PYMINGR18_DEP_FACTELECT.PYMINGR18_FAPL,
              PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID,
              PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID_CANCELA,
              PYMINGR18_DEP_FACTELECT.pymingr18_uuid_fecha,
              PYMINGR18_DEP_FACTELECT.pymingr18_uuid_ver,
              B_SubStr(PYMINGR18_DEP_FACTELECT.pymingr18_sellosat,1,255),
              PYMINGR18_DEP_FACTELECT.pymingr18_nocertsat
          FROM PYMINGR18_DEP_FACTELECT
          WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = :ID
            AND PYMINGR18_DEP_FACTELECT.PYMINGR18_CANCELADO IS NULL
          INTO
              :ULTID_FOLIO,
              :SOCSYST21_FORMATEADO,
              :FOLIO_FECHA,
              :UUID,
              :UUID_CANCELA,
              :UUID_FECHA,
              :VERSION,
              :SELLOSAT,
              :NOCERTSAT;

          IF (:SOCSYST21_FORMATEADO IS NULL) THEN
            BEGIN
              INSERT INTO PYMINGR18_DEP_FACTELECT(PYMINGR18_DEP_FACTELECT.RELA_SOCSYST01,
                                                  PYMINGR18_DEP_FACTELECT.RELA_SOCWFLO01,
                                                  PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01,
                                                  PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,
                                                  PYMINGR18_DEP_FACTELECT.PYMINGR18_VERSION)
                                           VALUES(:RELA_SOCSYST01,
                                                  :RELA_SOCWFLO01,
                                                  :ID,
                                                  'xxxxx',
                                                  :VERCFD);

              SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
              FROM SOCUTIL02_TBL_ULTIDS
              WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
              INTO :ULTID_FOLIO;

              SELECT
                  PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,
                  PYMINGR18_DEP_FACTELECT.PYMINGR18_FAPL
              FROM PYMINGR18_DEP_FACTELECT
              WHERE PYMINGR18_DEP_FACTELECT.ID_PYMINGR18 = :ULTID_FOLIO
              INTO
                  :SOCSYST21_FORMATEADO,
                  :FOLIO_FECHA;
            END
        END
      ELSE
        IF (:FLAG = 1) THEN
          BEGIN
            SOCSYST21_FORMATEADO = NULL;

            SELECT
                PYMVENT28_DEP_FACTELECT.ID_PYMVENT28,
                PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
                PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL,
                PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID,
                PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID_CANCELA,
                PYMVENT28_DEP_FACTELECT.PYMVENT28_uuid_fecha,
                PYMVENT28_DEP_FACTELECT.PYMVENT28_uuid_ver,
                B_SubStr(PYMVENT28_DEP_FACTELECT.PYMVENT28_sellosat, 1, 255),
                PYMVENT28_DEP_FACTELECT.PYMVENT28_nocertsat
            FROM PYMVENT28_DEP_FACTELECT
            WHERE PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20 = :ID
              AND PYMVENT28_DEP_FACTELECT.PYMVENT28_CANCELADO IS NULL
            INTO
                :ULTID_FOLIO,
                :SOCSYST21_FORMATEADO,
                :FOLIO_FECHA,
                :UUID,
                :UUID_CANCELA,
                :UUID_FECHA,
                :VERSION,
                :SELLOSAT,
                :NOCERTSAT;

            IF (:SOCSYST21_FORMATEADO IS NULL) THEN
              BEGIN
                INSERT INTO PYMVENT28_DEP_FACTELECT(PYMVENT28_DEP_FACTELECT.RELA_SOCSYST01,
                                                    PYMVENT28_DEP_FACTELECT.RELA_SOCWFLO01,
                                                    PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20,
                                                    PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
                                                    PYMVENT28_DEP_FACTELECT.PYMVENT28_VERSION)
                                              VALUES(:RELA_SOCSYST01,
                                                     :RELA_SOCWFLO01,
                                                     :ID,
                                                     'xxxxx',
                                                     :VERCFD);

                SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
                FROM SOCUTIL02_TBL_ULTIDS
                WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
                INTO :ULTID_FOLIO;

                SELECT
                    PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
                    PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL
                FROM PYMVENT28_DEP_FACTELECT
                WHERE PYMVENT28_DEP_FACTELECT.ID_PYMVENT28 = :ULTID_FOLIO
                INTO
                    :SOCSYST21_FORMATEADO,
                    :FOLIO_FECHA;
              END
          END
      ELSE
        IF (:FLAG = 2)  THEN
          BEGIN
            SOCSYST21_FORMATEADO = NULL;

            SELECT
                ON2CFDS18_DEP_FACTELECT.ID_ON2CFDS18,
                ON2CFDS18_DEP_FACTELECT.ON2CFDS18_DOCNRO,
                ON2CFDS18_DEP_FACTELECT.ON2CFDS18_FAPL,
                ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID,
                ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID_CANCELA,
                ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID_FECHA,
                ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID_VER,
                ON2CFDS18_DEP_FACTELECT.ON2CFDS18_SELLOSAT,
                ON2CFDS18_DEP_FACTELECT.ON2CFDS18_NOCERTSAT
            FROM ON2CFDS18_DEP_FACTELECT
            WHERE ON2CFDS18_DEP_FACTELECT.RELA_ON2CFDS10 = :ID
              AND ON2CFDS18_DEP_FACTELECT.ON2CFDS18_CANCELADO IS NULL
            INTO
                :ULTID_FOLIO,
                :SOCSYST21_FORMATEADO,
                :FOLIO_FECHA,
                :UUID,
                :UUID_CANCELA,
                :UUID_FECHA,
                :VERSION,
                :SELLOSAT,
                :NOCERTSAT;

            IF (:SOCSYST21_FORMATEADO IS NULL) THEN
              BEGIN
                INSERT INTO ON2CFDS18_DEP_FACTELECT(ON2CFDS18_DEP_FACTELECT.RELA_SOCSYST01,
                                                    ON2CFDS18_DEP_FACTELECT.RELA_SOCWFLO01,
                                                    ON2CFDS18_DEP_FACTELECT.RELA_ON2CFDS10,
                                                    ON2CFDS18_DEP_FACTELECT.ON2CFDS18_DOCNRO,
                                                    ON2CFDS18_DEP_FACTELECT.ON2CFDS18_VERSION)
                                             VALUES(:RELA_SOCSYST01,
                                                    :RELA_SOCWFLO01,
                                                    :ID,
                                                    'xxxxx',
                                                    :VERCFD);

                SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
                FROM SOCUTIL02_TBL_ULTIDS
                WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
                INTO :ULTID_FOLIO;

                SELECT
                    ON2CFDS18_DEP_FACTELECT.ON2CFDS18_DOCNRO,
                    ON2CFDS18_DEP_FACTELECT.ON2CFDS18_FAPL
                FROM ON2CFDS18_DEP_FACTELECT
                WHERE ON2CFDS18_DEP_FACTELECT.ID_ON2CFDS18 = :ULTID_FOLIO
                INTO
                    :SOCSYST21_FORMATEADO,
                    :FOLIO_FECHA;
              END
        END
      ELSE
        IF (:FLAG = 4)  THEN
          BEGIN
            SOCSYST21_FORMATEADO = NULL;

            SELECT
                SRHNOMI18_DEP_FACTELECT.ID_SRHNOMI18,
                SRHNOMI18_DEP_FACTELECT.SRHNOMI18_DOCNRO,
                SRHNOMI18_DEP_FACTELECT.SRHNOMI18_FAPL,
                SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID,
                SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_CANCELA,
                SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_FECHA,
                SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_VER,
                SRHNOMI18_DEP_FACTELECT.SRHNOMI18_SELLOSAT,
                SRHNOMI18_DEP_FACTELECT.SRHNOMI18_NOCERTSAT
            FROM SRHNOMI18_DEP_FACTELECT
            WHERE SRHNOMI18_DEP_FACTELECT.rela_srhnomi02 = :ID
              AND SRHNOMI18_DEP_FACTELECT.SRHNOMI18_CANCELADO IS NULL
            INTO
                :ULTID_FOLIO,
                :SOCSYST21_FORMATEADO,
                :FOLIO_FECHA,
                :UUID,
                :UUID_CANCELA,
                :UUID_FECHA,
                :VERSION,
                :SELLOSAT,
                :NOCERTSAT;

            IF (:SOCSYST21_FORMATEADO IS NULL) THEN
              BEGIN
                INSERT INTO SRHNOMI18_DEP_FACTELECT(SRHNOMI18_DEP_FACTELECT.RELA_SOCSYST01,
                                                    SRHNOMI18_DEP_FACTELECT.RELA_SOCWFLO01,
                                                    SRHNOMI18_DEP_FACTELECT.rela_srhnomi02,
                                                    SRHNOMI18_DEP_FACTELECT.SRHNOMI18_DOCNRO,
                                                    SRHNOMI18_DEP_FACTELECT.SRHNOMI18_VERSION)
                                             VALUES(:RELA_SOCSYST01,
                                                    :RELA_SOCWFLO01,
                                                    :ID,
                                                    'xxxxx',
                                                    :VERCFD);

                SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
                FROM SOCUTIL02_TBL_ULTIDS
                WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
                INTO :ULTID_FOLIO;

                SELECT
                    SRHNOMI18_DEP_FACTELECT.SRHNOMI18_DOCNRO,
                    SRHNOMI18_DEP_FACTELECT.SRHNOMI18_FAPL
                FROM SRHNOMI18_DEP_FACTELECT
                WHERE SRHNOMI18_DEP_FACTELECT.ID_SRHNOMI18 = :ULTID_FOLIO
                INTO
                    :SOCSYST21_FORMATEADO,
                    :FOLIO_FECHA;
              END                                  
        END

/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
      /* ---------------- */
      /* DATOS DEL EMISOR */
      /* ---------------- */

      SELECT
          REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,
          REP_SOCUSUA40_SOCUSUA02.ENTIDAD,
          REP_SOCUSUA40_SOCUSUA02.ENTIDAD_TIPO
      FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
      WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
      INTO
          :EMISOR_RFC,
          :EMISOR,
          :EMISOR_TIPO;

      SELECT SNVL(REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,'')
      FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
      WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'CURP'
      INTO
          :EMISOR_CURP;

      SELECT
          REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA42,
          REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA50,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CALLE,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_NRO,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PISO,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_DEPTO,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CP,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_LINEA,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_CELU,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_FAX
      FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
      WHERE REP_SOCUSUA41_SOCUSUA02.RELA_SOCWFLO01 = :RELA_SOCWFLO01
        AND REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 0
      INTO
          :RELA_SOCUSUA42,
          :RELA_SOCUSUA50,
          :EMISOR_CALLE,
          :EMISOR_NRO_EXTERIOR,
          :EMISOR_NRO_INTERIOR,
          :EMISOR_PISO,
          :EMISOR_CP,
          :EMISOR_TELEFONOS,
          :EMISOR_CELULAR,
          :EMISOR_FAX;

      IF (:RELA_SOCUSUA42 IS NULL) THEN
        SELECT
            REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA42,
            REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA50,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CALLE,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_NRO,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PISO,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_DEPTO,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CP,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_LINEA,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_CELU,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_FAX
        FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 1
        INTO
            :RELA_SOCUSUA42,
            :RELA_SOCUSUA50,
            :EMISOR_CALLE,
            :EMISOR_NRO_EXTERIOR,
            :EMISOR_NRO_INTERIOR,
            :EMISOR_PISO,
            :EMISOR_CP,
            :EMISOR_TELEFONOS,
            :EMISOR_CELULAR,
            :EMISOR_FAX;

      IF (:RELA_SOCUSUA42 IS NOT NULL) THEN
        SELECT
            SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA,
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO,
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CIUDAD,
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO
        FROM SOCUSUA42_TBL_CODPOSTALES
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :RELA_SOCUSUA42
        INTO
            :EMISOR_PAIS,
            :EMISOR_ESTADO,
            :EMISOR_MUNICIPIO,
            :EMISOR_LOCALIDAD,
            :EMISOR_COLONIA;
      ELSE
        FOR
          SELECT
              REP_SOCUSUA50.SOCUSUA50_DESCRI,
              REP_SOCUSUA50.SOCSYST06_NIVEL
          FROM REP_SOCUSUA50(:RELA_SOCUSUA50)
          INTO :SOCUSUA50_DESCRI,
               :SOCSYST06_NIVEL
        DO
        BEGIN
           IF (:SOCSYST06_NIVEL = 1) THEN
             EMISOR_PAIS = :SOCUSUA50_DESCRI;
           ELSE
             IF (:SOCSYST06_NIVEL = 2) THEN
               EMISOR_ESTADO = :SOCUSUA50_DESCRI;
             ELSE
               IF (:SOCSYST06_NIVEL = 3) THEN
                 EMISOR_MUNICIPIO = :SOCUSUA50_DESCRI;
               ELSE
                 IF (:SOCSYST06_NIVEL = 4) THEN
                   EMISOR_LOCALIDAD = :SOCUSUA50_DESCRI;
        END

      SELECT
          VW_ENTIDADES_CORREOS.SOCUSUA41_MAIL_PERSO,
          VW_ENTIDADES_CORREOS.SOCUSUA41_MAIL_PASSW
      FROM VW_ENTIDADES_CORREOS
      WHERE VW_ENTIDADES_CORREOS.ID_SOCUSUA02 = :RELA_SOCUSUA02
      INTO
          :EMISOR_CORREO,
          :EMISOR_CORREO_PWD;

/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */

      IF (:RELA_SICINGR01 IS NOT NULL) THEN
        /* ---------------------------------------------------------------------------------------- */
        /* DATOS DEL RECEPTOR POR LA TABLA PYMINGR01 - ESTA ES VALIDO PARA HACER ASIENTOS CONTABLES */
        /* ---------------------------------------------------------------------------------------- */
        BEGIN
          SELECT
              SICINGR01_CAB_CLIENTES.RELA_SOCUSUA02
          FROM SICINGR01_CAB_CLIENTES
          WHERE SICINGR01_CAB_CLIENTES.ID_SICINGR01 = :RELA_SICINGR01
          INTO :RELA_SOCUSUA02;
        
          SELECT
              REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,
              REP_SOCUSUA40_SOCUSUA02.ENTIDAD,
              REP_SOCUSUA40_SOCUSUA02.ENTIDAD_TIPO
          FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
          WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
          INTO
              :RECEPTOR_RFC,
              :RECEPTOR,
              :RECEPTOR_TIPO;

          SELECT
              REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA42,
              REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA50,
              REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CALLE,
              REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_NRO,
              SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PISO,'') || ' ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_DEPTO,''),
              REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CP
          FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
          WHERE REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 1
          INTO
              :RELA_SOCUSUA42,
              :RELA_SOCUSUA50,
              :RECEPTOR_CALLE,
              :RECEPTOR_NRO_EXTERIOR,
              :RECEPTOR_NRO_INTERIOR,
              :RECEPTOR_CP;

          IF (:RELA_SOCUSUA42 IS NOT NULL) THEN
            SELECT
                RUPPER(SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CIUDAD),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO)
            FROM SOCUSUA42_TBL_CODPOSTALES
            INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
            WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :RELA_SOCUSUA42
            INTO
                :RECEPTOR_PAIS,
                :RECEPTOR_ESTADO,
                :RECEPTOR_MUNICIPIO,
                :RECEPTOR_LOCALIDAD,
                :RECEPTOR_COLONIA;
          ELSE
            FOR
              SELECT
                  REP_SOCUSUA50.SOCUSUA50_DESCRI,
                  REP_SOCUSUA50.SOCSYST06_NIVEL
              FROM REP_SOCUSUA50(:RELA_SOCUSUA50)
              INTO
                  :SOCUSUA50_DESCRI,
                  :SOCSYST06_NIVEL
            DO
            BEGIN
              IF (:SOCSYST06_NIVEL = 1) THEN
                RECEPTOR_PAIS = :SOCUSUA50_DESCRI;
              ELSE
                IF (:SOCSYST06_NIVEL = 2) THEN
                  RECEPTOR_ESTADO = :SOCUSUA50_DESCRI;
                ELSE
                  IF (:SOCSYST06_NIVEL = 3) THEN
                    RECEPTOR_MUNICIPIO = :SOCUSUA50_DESCRI;
                  ELSE
                    IF (:SOCSYST06_NIVEL = 4) THEN
                      RECEPTOR_LOCALIDAD = :SOCUSUA50_DESCRI;
            END

          SELECT
              VW_ENTIDADES_CORREOS.SOCUSUA41_MAIL_PERSO,
              VW_ENTIDADES_CORREOS.SOCUSUA41_MAIL_PASSW
          FROM VW_ENTIDADES_CORREOS
          WHERE VW_ENTIDADES_CORREOS.ID_SOCUSUA02 = :RELA_SOCUSUA02
          INTO
              :RECEPTOR_CORREO,
              :RECEPTOR_CORREO_PWD;
        END
      ELSE
        IF (:RELA_PYMVENT24 IS NOT NULL) THEN
        /* ---------------------------------------------------------------------------------------- */
        /* DATOS DEL RECEPTOR POR LA TABLA PYMVENT20 - ESTA ES VALIDO PARA HACER ASIENTOS CONTABLES */
        /* ---------------------------------------------------------------------------------------- */
        BEGIN
            SELECT
                PYMVENT24_CAB_CLIENTES.PYMVENT24_DOCUMENTOS,
                PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
                PYMVENT24_CAB_CLIENTES.PYMVENT24_DIRECCION,
                PYMVENT24_CAB_CLIENTES.PYMVENT24_NROEXT,
                SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_NROINT,'') || ' ' || SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_PISO,''),
                PYMVENT24_CAB_CLIENTES.PYMVENT24_CODPOSTAL,
                PYMVENT24_CAB_CLIENTES.PYMVENT24_CORRERO,
                RUPPER(SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CIUDAD),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO)
            FROM SOCUSUA50_ARB_LOCALIDADES
            INNER JOIN SOCUSUA42_TBL_CODPOSTALES ON (SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50 = SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50)
            INNER JOIN PYMVENT24_CAB_CLIENTES ON (SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = PYMVENT24_CAB_CLIENTES.RELA_SOCUSUA42)
            WHERE PYMVENT24_CAB_CLIENTES.ID_PYMVENT24 = :RELA_PYMVENT24
            INTO
                :RECEPTOR_RFC,
                :RECEPTOR,
                :RECEPTOR_CALLE,
                :RECEPTOR_NRO_EXTERIOR,
                :RECEPTOR_NRO_INTERIOR,
                :RECEPTOR_CP,
                :RECEPTOR_CORREO,
                :RECEPTOR_PAIS,
                :RECEPTOR_ESTADO,
                :RECEPTOR_MUNICIPIO,
                :RECEPTOR_LOCALIDAD,
                :RECEPTOR_COLONIA;
        END
      ELSE
        IF (:rela_srhmain10 IS NOT NULL) THEN
        begin
            SELECT
            cbo_srhmain10.id_socusua02,
            cbo_srhmain10.entidad
            FROM cbo_srhmain10
            WHERE cbo_srhmain10.id_srhmain10 = :rela_srhmain10
            INTO :RELA_SOCUSUA02,
                 :RECEPTOR;

            SELECT FIRST 1
            PRD_DOCUMENTOS_EMPLEADO.socusua40_numero
            FROM PRD_DOCUMENTOS_EMPLEADO(:RELA_SOCUSUA02, 0, NULL,NULL,NULL)
            WHERE PRD_DOCUMENTOS_EMPLEADO.SOCSYST10_CODIGO = 'RFC'
            INTO :RECEPTOR_RFC;

            SELECT first 1
            REP_SOCUSUA41_SOCUSUA02.rela_socusua42,
            REP_SOCUSUA41_SOCUSUA02.socusua41_calle,
            REP_SOCUSUA41_SOCUSUA02.socusua41_nro,
            REP_SOCUSUA41_SOCUSUA02.socusua41_depto,
            REP_SOCUSUA41_SOCUSUA02.socusua41_cp,
            REP_SOCUSUA41_SOCUSUA02.socusua41_mail_perso
            FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
            WHERE REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 1
            INTO :rela_socusua42,
                 :RECEPTOR_CALLE,
                 :RECEPTOR_NRO_EXTERIOR,
                 :RECEPTOR_NRO_INTERIOR,
                 :RECEPTOR_CP,
                 :RECEPTOR_CORREO;

            IF (:RELA_SOCUSUA42 IS NOT NULL) THEN
            SELECT
                RUPPER(SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CIUDAD),
                RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO)
            FROM SOCUSUA42_TBL_CODPOSTALES
            INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
            WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :RELA_SOCUSUA42
            INTO
                :RECEPTOR_PAIS,
                :RECEPTOR_ESTADO,
                :RECEPTOR_MUNICIPIO,
                :RECEPTOR_LOCALIDAD,
                :RECEPTOR_COLONIA;
          ELSE
            FOR
              SELECT
                  REP_SOCUSUA50.SOCUSUA50_DESCRI,
                  REP_SOCUSUA50.SOCSYST06_NIVEL
              FROM REP_SOCUSUA50(:RELA_SOCUSUA50)
              INTO
                  :SOCUSUA50_DESCRI,
                  :SOCSYST06_NIVEL
            DO
            BEGIN
              IF (:SOCSYST06_NIVEL = 1) THEN
                RECEPTOR_PAIS = :SOCUSUA50_DESCRI;
              ELSE
                IF (:SOCSYST06_NIVEL = 2) THEN
                  RECEPTOR_ESTADO = :SOCUSUA50_DESCRI;
                ELSE
                  IF (:SOCSYST06_NIVEL = 3) THEN
                    RECEPTOR_MUNICIPIO = :SOCUSUA50_DESCRI;
                  ELSE
                    IF (:SOCSYST06_NIVEL = 4) THEN
                      RECEPTOR_LOCALIDAD = :SOCUSUA50_DESCRI;
            END

        end
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------------------------------------- */
      /* -------------------------------------------------------------------------------------------------------- */
      /* --- VERIFICA QUE LA CONTABILIDAD SE HA HECHO CORRECTAMENTE CRUZANDO IMPORTES Y OTRAS COSAS-------------- */
      /* --- IMPORTANTE. SI TIENE CONTABILIDAD Y TODO ESTA BIEN, SE ENVIA EN CONTABILIDAD EL MENSAJE "OK" ------- */
      /* -------------------------------------------------------------------------------------------------------- */

      IF ((:RELA_MSGPOLI01 <= 0) OR (:RELA_MSGPOLI01 IS NULL)) THEN
        CONTABILIDAD = NULL;
      ELSE
        BEGIN
          EXISTE_CONTABILIDAD = NULL;

          SELECT FIRST 1 MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07
          FROM MSGPOLI07_DET_FACTURAS
          WHERE MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = :RELA_MSGPOLI01
            AND MSGPOLI07_DET_FACTURAS.RELA_SICINGR01 = :RELA_SICINGR01
          INTO :EXISTE_CONTABILIDAD;

          IF (:EXISTE_CONTABILIDAD IS NOT NULL) THEN
            CONTABILIDAD = 'OK';
          ELSE
            CONTABILIDAD = 'No se localizo la póliza correspondiente. Verifique Cliente o Tipo de póliza';
        END

      execute procedure prd_LOCALIDAD :rela_socwflo01 RETURNING_VALUES LUGAR_EXPEDICION;

      SUSPEND;
  END
END
PRD_VENTAS_POR_VENDEDOR        

begin
    FOR SELECT
    CBO_SRHMAIN10.entidad,
    sum(PYMVENT21_DET_TICKETS.pymvent21_cantidad),
    sum(PYMVENT21_DET_TICKETS.pymvent21_total)
    FROM PYMVENT20_CAB_TICKETS
    INNER JOIN CBO_SRHMAIN10 ON (PYMVENT20_CAB_TICKETS.RELA_SRHMAIN10_VENDEDOR = CBO_SRHMAIN10.ID_SRHMAIN10)
    INNER JOIN PYMVENT21_DET_TICKETS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT21_DET_TICKETS.RELA_PYMVENT20)
    INNER JOIN pyminve10_cab_productos ON (pyminve10_cab_productos.id_pyminve10 = PYMVENT21_DET_TICKETS.rela_pyminve10)
    where PYMVENT20_CAB_TICKETS.rela_socsyst01 = :rela_socsyst01
    and pyminve10_cab_productos.rela_socsyst10 = :rela_familia
    and CAST(PYMVENT21_DET_TICKETS.pymvent21_fapl AS DATE) between :FECHA_DESDE and :FECHA_HASTA
    GROUP by CBO_SRHMAIN10.entidad
    INTO :vendedor,
         :cantidad,
         :vendido
    DO
    begin
        suspend;
    end
end
REP_MSGPOLI01_GENERAL_XML      

DECLARE VARIABLE TIPO_POLIZA_DESC VARCHAR(100);
DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE UNAVEZ SMALLINT;
DECLARE VARIABLE ANOF VARCHAR(10);
DECLARE VARIABLE MESF VARCHAR(10);
DECLARE VARIABLE DIAF VARCHAR(10);
DECLARE VARIABLE MSGPOLI01_FCTA DATE;
DECLARE VARIABLE RELA_SICEGRE01 BIGINT;
DECLARE VARIABLE RELA_SICINGR01 BIGINT;
DECLARE VARIABLE RELA_SRHMAIN10 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02X BIGINT;
BEGIN
    UNAVEZ = 0;

    FOR SELECT
    REP_MSGPOLI01_GENERAL.SICCONT02_DESCRI,
    REP_MSGPOLI01_GENERAL.SICCONT02_CODEXT,
    REP_MSGPOLI01_GENERAL.MSGPOLI02_HABER,
    REP_MSGPOLI01_GENERAL.MSGPOLI02_DEBE,
    REP_MSGPOLI01_GENERAL.ID_MSGPOLI02,
    REP_MSGPOLI01_GENERAL.MSGPOLI01_FCTA,
    REP_MSGPOLI01_GENERAL.MSGPOLI01_DESCRIPCION,
    REP_MSGPOLI01_GENERAL.MSGPOLI01_DOCNRO,
    REP_MSGPOLI01_GENERAL.ID_MSGPOLI01,
    REP_MSGPOLI01_GENERAL.tipo_accion_codigo,
    REP_MSGPOLI01_GENERAL.TIPO_ACCION_POLIZA,
    REP_MSGPOLI01_GENERAL.socsyst10_filtro_des,
    REP_MSGPOLI01_GENERAL.RELA_SOCSYST01
    FROM REP_MSGPOLI01_GENERAL(:INPUT_ID)
    INTO :SICCONT02_DESCRI,
         :SICCONT02_CODEXT,
         :MSGPOLI02_HABER,
         :MSGPOLI02_DEBE,
         :ID_MSGPOLI02,
         :MSGPOLI01_FCTA,
         :MSGPOLI01_DESCRIPCION,
         :MSGPOLI01_DOCNRO,
         :ID_MSGPOLI01,
         :TIPO_ACCION_CODIGO,
         :TIPO_ACCION_POLIZA,
         :TIPO_POLIZA_DESC,
         :RELA_SOCSYST01

    DO
    BEGIN
        tipo_poliza = null;
        if (STRPOS('INGRESO', UPPER(TIPO_POLIZA_DESC)) <> 0) then
            tipo_poliza = '1';
        else if (STRPOS('EGRESO', UPPER(TIPO_POLIZA_DESC)) <> 0) then
            tipo_poliza = '2';
        else if (STRPOS('DIARIO', UPPER(TIPO_POLIZA_DESC)) <> 0) then
            tipo_poliza = '3';

        if (tipo_poliza is not null) then
        BEGIN
            select distinct
            cbo_monedas_cotizacion.id_socsyst10,
            cbo_monedas_cotizacion.socsyst10_codigo,
            cbo_monedas_cotizacion.siccont04_compra
            from msgpoli02_det_polizas
            INNER JOIN cbo_monedas_cotizacion ON (msgpoli02_det_polizas.rela_socsyst10_moneda = cbo_monedas_cotizacion.id_socsyst10)
            where msgpoli02_det_polizas.id_msgpoli02 = :ID_MSGPOLI02
            into :rela_socsyst10_moneda,
                 :moneda,
                 :cambio;

            empresa = null;
            RFC = null;
            ano = null;
            mes = null;

            if (UNAVEZ = 0) then
            BEGIN
                UNAVEZ = 1;

                Select socsyst01_cab_clientes.rela_socusua02
                from socsyst01_cab_clientes
                where socsyst01_cab_clientes.id_socsyst01 = :RELA_SOCSYST01
                into :rela_socusua02;

                select
                vw_rfc.rfc,
                vw_rfc.entidad
                from vw_rfc(:rela_socusua02)
                into :rfc,
                     :empresa;

                RFC = strreplace(:RFC,'-','');
                ano = cast(extractyear(current_date) as varchar(4));
                mes = cast(extractmonth(current_date) as varchar(2));

                if (strlen(trim(mes)) = 1) then
                    mes = '0' || :mes;
            END

            ANOF = cast(extractyear(MSGPOLI01_FCTA) as varchar(4));
            MESF = cast(extractmonth(MSGPOLI01_FCTA) as varchar(2));
            DIAF = cast(extractday(MSGPOLI01_FCTA) as varchar(2));

            if (strlen(trim(MESF)) = 1) then
                MESF = '0' || :MESF;

            if (strlen(trim(DIAF)) = 1) then
                DIAF = '0' || :DIAF;

            MSGPOLI01_FECHA = ANOF || '-' || MESF || '-' || DIAF;

            rela_sicegre01 = null;
            rela_sicingr01 = null;
            rela_srhmain10 = null;
            rela_socusua02x = null;

            select
            msgpoli02_det_polizas.rela_sicegre01,
            msgpoli02_det_polizas.rela_sicingr01,
            msgpoli02_det_polizas.rela_srhmain10
            from msgpoli02_det_polizas
            where msgpoli02_det_polizas.id_msgpoli02 = :ID_MSGPOLI02
            into :rela_sicegre01,
                 :rela_sicingr01,
                 :rela_srhmain10;

            entidad_tipo = 'NAP';

            if (rela_sicegre01 is not null) then
            begin
                entidad_tipo = 'PRO';
                select sicegre01_cab_proveedores.rela_socusua02
                from sicegre01_cab_proveedores
                where sicegre01_cab_proveedores.id_sicegre01 = :rela_sicegre01
                into :rela_socusua02x;
            end
            else if (rela_sicingr01 is not null) then
            begin
                entidad_tipo = 'CLI';
                select sicingr01_cab_clientes.rela_socusua02
                from sicingr01_cab_clientes
                where sicingr01_cab_clientes.id_sicingr01 = :rela_sicingr01
                into :rela_socusua02x;
            end
            else if (rela_srhmain10 is not null) then
            begin
                entidad_tipo = 'EMP';
                select srhmain10_cab_empleado.rela_socusua02
                from srhmain10_cab_empleado
                where srhmain10_cab_empleado.id_srhmain10 = :rela_srhmain10
                into :rela_socusua02x;
            end

            entidad_rfc = null;
            entidad = null;

            select
            vw_rfc.rfc,
            vw_rfc.entidad
            from vw_rfc(:rela_socusua02x)
            into :entidad_rfc,
                 :entidad;

            suspend;
        END
    END
END
VW_RFC                         

DECLARE VARIABLE RELA_SOCUSUA01 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
begin
    Select
    socusua02_mae_usuarios.rela_socusua01
    from socusua02_mae_usuarios
    where socusua02_mae_usuarios.id_socusua02 = :rela_socusua02
    into :rela_socusua01;

    select
    socusua01_mae_entidades.rela_socusua20,
    socusua01_mae_entidades.rela_socusua30
    from socusua01_mae_entidades
    where socusua01_mae_entidades.id_socusua01 = :rela_socusua01
    into :rela_socusua20,
         :rela_socusua30;

    if (rela_socusua20 is not null) then
    begin
        Select
        socusua20_mae_entmorales.socusua20_denominacion || ' ' || socsyst10_tbl_listaestados.socsyst10_filtro_des
        from socusua20_mae_entmorales
        INNER JOIN socsyst10_tbl_listaestados ON (socsyst10_tbl_listaestados.id_socsyst10 = socusua20_mae_entmorales.refe_socsyst10_sociedad)
        where socusua20_mae_entmorales.id_socusua20 = :rela_socusua20
        into :entidad;

        select first 1 GRID_SOCUSUA40.socusua40_numero
        from GRID_SOCUSUA40
        where GRID_SOCUSUA40.rela_socusua20 = :rela_socusua20
        and GRID_SOCUSUA40.socsyst10_codigo = 'RFC'
        into :RFC;
    end
    else if (rela_socusua30 is not null) then
    begin
        Select
        trim(socusua30_mae_entfisicas.socusua30_ape_padre) || ' ' ||
        trim(socusua30_mae_entfisicas.socusua30_ape_madre) || ', ' ||
        trim(socusua30_mae_entfisicas.socusua30_nombres)
        from socusua30_mae_entfisicas
        where socusua30_mae_entfisicas.id_socusua30 = :rela_socusua30
        into :entidad;

        select first 1 GRID_SOCUSUA40.socusua40_numero
        from GRID_SOCUSUA40
        where GRID_SOCUSUA40.rela_socusua30 = :rela_socusua30
        and GRID_SOCUSUA40.socsyst10_codigo = 'RFC'
        into :RFC;
    end

    if (RFC is not null) then
        RFC = STRREPLACE(RFC, '-', '')  ;
    suspend;
end
VW_PYMINVE40                   

DECLARE VARIABLE RELA_PADRE BIGINT;
DECLARE VARIABLE XFILTRO VARCHAR(100);
begin
    XFILTRO = TRIM(:filtro);
    if (RELA_SOCSYST01X = -1) then
        BEGIN
            FOR SELECT
            ID_pyminve40,
            RELA_pyminve40,
            pyminve40_DESCRI,
            pyminve40_CODIGO,
            RELA_SOCWFLO01,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN pyminve40_arb_locaciones ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = pyminve40_arb_locaciones.RELA_SOCSYST06)
            ORDER BY pyminve40_CODIGO
            INTO :ID_pyminve40,
                 :RELA_pyminve40,
                 :pyminve40_DESCRI,
                 :pyminve40_CODIGO,
                 :RELA_SOCWFLO01,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION
            DO
            SUSPEND;
        END
    else if (XFILTRO='-1') then
        BEGIN
            FOR SELECT
            ID_pyminve40,
            RELA_pyminve40,
            pyminve40_DESCRI,
            pyminve40_CODIGO,
            RELA_SOCWFLO01,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN pyminve40_arb_locaciones ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = pyminve40_arb_locaciones.RELA_SOCSYST06)
            where pyminve40_arb_locaciones.rela_socsyst01 = :RELA_SOCSYST01X
            ORDER BY pyminve40_CODIGO
            INTO :ID_pyminve40,
                 :RELA_pyminve40,
                 :pyminve40_DESCRI,
                 :pyminve40_CODIGO,
                 :RELA_SOCWFLO01,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION
            DO
            SUSPEND;
        END
    else
        SELECT
        RELA_PYMINVE40
        FROM pyminve40_arb_locaciones
        WHERE pyminve40_CODIGO = :XFILTRO
        INTO :RELA_PADRE;

        while (RELA_PADRE is not null) DO
        begin
            FOR SELECT
            ID_pyminve40,
            RELA_pyminve40,
            pyminve40_DESCRI,
            pyminve40_CODIGO,
            RELA_SOCWFLO01,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN pyminve40_arb_locaciones ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = pyminve40_arb_locaciones.RELA_SOCSYST06)
            where pyminve40_arb_locaciones.rela_socsyst01 = :RELA_SOCSYST01X
            and ID_pyminve40 = :RELA_PADRE
            INTO :ID_pyminve40,
                 :RELA_pyminve40,
                 :pyminve40_DESCRI,
                 :pyminve40_CODIGO,
                 :RELA_SOCWFLO01,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION
            DO
            SUSPEND;
            RELA_PADRE = :RELA_pyminve40;                
        end

        FOR SELECT
        ID_pyminve40,
        RELA_pyminve40,
        pyminve40_DESCRI,
        pyminve40_CODIGO,
        RELA_SOCWFLO01,
        SOCSYST06_NIVEL,
        SOCSYST06_ACCION
        FROM SOCSYST06_DET_ARBNIVELES
        INNER JOIN pyminve40_arb_locaciones ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = pyminve40_arb_locaciones.RELA_SOCSYST06)
        WHERE pyminve40_arb_locaciones.rela_socsyst01 = :RELA_SOCSYST01X
        and pyminve40_CODIGO LIKE :XFILTRO || '%'
        ORDER BY pyminve40_CODIGO
        INTO :ID_pyminve40,
             :RELA_pyminve40,
             :pyminve40_DESCRI,
             :pyminve40_CODIGO,
             :RELA_SOCWFLO01,
             :SOCSYST06_NIVEL,
             :SOCSYST06_ACCION
        DO
        SUSPEND;

end
PRD_SRHNOMI03CFDI_MODI         

DECLARE VARIABLE EXISTE BIGINT;
begin
    FOR Select
    PRD_SRHNOMI03CFDI.RELA_SICCONT02,
    PRD_SRHNOMI03CFDI.RELA_SRHMAIN11,
    PRD_SRHNOMI03CFDI.RELA_SRHNOMI02,
    PRD_SRHNOMI03CFDI.ID_SRHNOMI03,
    PRD_SRHNOMI03CFDI.SICCONT72_CODIGO,
    PRD_SRHNOMI03CFDI.SICCONT02_CODEXT,
    PRD_SRHNOMI03CFDI.SICCONT02_DESCRI,
    PRD_SRHNOMI03CFDI.SRHNOMI03_GRAVADO,
    PRD_SRHNOMI03CFDI.SRHNOMI03_IMPORTE,
    PRD_SRHNOMI03CFDI.SRHNOMI03_FAPL
    from PRD_SRHNOMI03CFDI('M',:rela_socsyst01, :id_srhmain10, :id_srhnomi02)

    UNION ALL

    Select
    PRD_SRHNOMI03CFDI.RELA_SICCONT02,
    PRD_SRHNOMI03CFDI.RELA_SRHMAIN11,
    PRD_SRHNOMI03CFDI.RELA_SRHNOMI02,
    PRD_SRHNOMI03CFDI.ID_SRHNOMI03,
    PRD_SRHNOMI03CFDI.SICCONT72_CODIGO,
    PRD_SRHNOMI03CFDI.SICCONT02_CODEXT,
    PRD_SRHNOMI03CFDI.SICCONT02_DESCRI,
    PRD_SRHNOMI03CFDI.SRHNOMI03_GRAVADO,
    PRD_SRHNOMI03CFDI.SRHNOMI03_IMPORTE,
    PRD_SRHNOMI03CFDI.SRHNOMI03_FAPL
    from PRD_SRHNOMI03CFDI('A',:rela_socsyst01, :id_srhmain10, :id_srhmain10 * -1)
    INTO :RELA_SICCONT02,
         :RELA_SRHMAIN11,
         :RELA_SRHNOMI02,
         :ID_SRHNOMI03,
         :SICCONT72_CODIGO,
         :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :SRHNOMI03_GRAVADO,
         :SRHNOMI03_IMPORTE,
         :SRHNOMI03_FAPL
    DO
    BEGIN

        if (:rela_srhnomi02 < 0) then
            begin
            existe = 0;
            Select
            PRD_SRHNOMI03CFDI.ID_SRHNOMI03
            from PRD_SRHNOMI03CFDI('M',:rela_socsyst01, :id_srhmain10, :id_srhnomi02)
            where PRD_SRHNOMI03CFDI.rela_siccont02 = :rela_siccont02
            into :existe;

            if (existe = 0) then
                suspend;
            end
        else
            suspend;

    END
end
PRD_SRHNOMI04CFDI_MODI         

DECLARE VARIABLE EXISTE BIGINT;
begin
    FOR Select
    PRD_SRHNOMI04CFDI.RELA_SICCONT02,
    PRD_SRHNOMI04CFDI.RELA_SRHMAIN12,
    PRD_SRHNOMI04CFDI.RELA_SRHNOMI02,
    PRD_SRHNOMI04CFDI.ID_SRHNOMI04,
    PRD_SRHNOMI04CFDI.SICCONT72_CODIGO,
    PRD_SRHNOMI04CFDI.SICCONT02_CODEXT,
    PRD_SRHNOMI04CFDI.SICCONT02_DESCRI,
    PRD_SRHNOMI04CFDI.SRHNOMI04_GRAVADO,
    PRD_SRHNOMI04CFDI.SRHNOMI04_IMPORTE,
    PRD_SRHNOMI04CFDI.SRHNOMI04_FAPL
    from PRD_SRHNOMI04CFDI('M',:rela_socsyst01, :id_srhmain10, :id_srhnomi02)

    UNION ALL

    Select
    PRD_SRHNOMI04CFDI.RELA_SICCONT02,
    PRD_SRHNOMI04CFDI.RELA_SRHMAIN12,
    PRD_SRHNOMI04CFDI.RELA_SRHNOMI02,
    PRD_SRHNOMI04CFDI.ID_SRHNOMI04,
    PRD_SRHNOMI04CFDI.SICCONT72_CODIGO,
    PRD_SRHNOMI04CFDI.SICCONT02_CODEXT,
    PRD_SRHNOMI04CFDI.SICCONT02_DESCRI,
    PRD_SRHNOMI04CFDI.SRHNOMI04_GRAVADO,
    PRD_SRHNOMI04CFDI.SRHNOMI04_IMPORTE,
    PRD_SRHNOMI04CFDI.SRHNOMI04_FAPL
    from PRD_SRHNOMI04CFDI('A',:rela_socsyst01, :id_srhmain10, :id_srhmain10 * -1)
    INTO :RELA_SICCONT02,
         :RELA_SRHMAIN12,
         :RELA_SRHNOMI02,
         :ID_SRHNOMI04,
         :SICCONT72_CODIGO,
         :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :SRHNOMI04_GRAVADO,
         :SRHNOMI04_IMPORTE,
         :SRHNOMI04_FAPL
    DO
    BEGIN
        if (:rela_srhnomi02 < 0) then
            begin
            existe = 0;
            Select
            PRD_SRHNOMI04CFDI.ID_SRHNOMI04
            from PRD_SRHNOMI04CFDI('M',:rela_socsyst01, :id_srhmain10, :id_srhnomi02)
            where PRD_SRHNOMI04CFDI.rela_siccont02 = :rela_siccont02
            into :existe;

            if (existe = 0) then
                suspend;
            end
        else
            suspend;
    END
end
PRD_SRHNOMI05CFDI_MODI         

DECLARE VARIABLE EXISTE BIGINT;
begin
    FOR Select
    PRD_SRHNOMI05CFDI.RELA_SICCONT02,
    PRD_SRHNOMI05CFDI.RELA_SRHMAIN13,
    PRD_SRHNOMI05CFDI.RELA_SRHNOMI02,
    PRD_SRHNOMI05CFDI.ID_SRHNOMI05,
    PRD_SRHNOMI05CFDI.SICCONT72_CODIGO,
    PRD_SRHNOMI05CFDI.SICCONT02_CODEXT,
    PRD_SRHNOMI05CFDI.SICCONT02_DESCRI,
    PRD_SRHNOMI05CFDI.srhnomi05_dias,
    PRD_SRHNOMI05CFDI.SRHNOMI05_IMPORTE,
    PRD_SRHNOMI05CFDI.SRHNOMI05_FAPL
    from PRD_SRHNOMI05CFDI('M',:rela_socsyst01, :id_srhmain10, :id_srhnomi02)

    UNION ALL

    Select
    PRD_SRHNOMI05CFDI.RELA_SICCONT02,
    PRD_SRHNOMI05CFDI.RELA_SRHMAIN13,
    PRD_SRHNOMI05CFDI.RELA_SRHNOMI02,
    PRD_SRHNOMI05CFDI.ID_SRHNOMI05,
    PRD_SRHNOMI05CFDI.SICCONT72_CODIGO,
    PRD_SRHNOMI05CFDI.SICCONT02_CODEXT,
    PRD_SRHNOMI05CFDI.SICCONT02_DESCRI,
    PRD_SRHNOMI05CFDI.srhnomi05_dias,
    PRD_SRHNOMI05CFDI.SRHNOMI05_IMPORTE,
    PRD_SRHNOMI05CFDI.SRHNOMI05_FAPL
    from PRD_SRHNOMI05CFDI('A',:rela_socsyst01, :id_srhmain10, :id_srhmain10 * -1)
    INTO :RELA_SICCONT02,
         :RELA_SRHMAIN13,
         :RELA_SRHNOMI02,
         :ID_SRHNOMI05,
         :SICCONT72_CODIGO,
         :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :srhnomi05_dias,
         :SRHNOMI05_IMPORTE,
         :SRHNOMI05_FAPL
    DO
    BEGIN
        if (:rela_srhnomi02 < 0) then
            begin
            existe = 0;
            Select
            PRD_SRHNOMI05CFDI.ID_SRHNOMI05
            from PRD_SRHNOMI05CFDI('M',:rela_socsyst01, :id_srhmain10, :id_srhnomi02)
            where PRD_SRHNOMI05CFDI.rela_siccont02 = :rela_siccont02
            into :existe;

            if (existe = 0) then
                suspend;
            end
        else
            suspend;
    END
end
REP_SCEXMLS10_FACTURAS         

DECLARE VARIABLE SQLUSER VARCHAR(2000);
DECLARE VARIABLE SCEXMLS14_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE SCEXMLS14_IMPUESTO VARCHAR(200);
DECLARE VARIABLE SCEXMLS14_RETENIDO SMALLINT;
DECLARE VARIABLE SCEXMLS14_TASA DOUBLE PRECISION;
DECLARE VARIABLE ID_MONEDA BIGINT;
BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :SUCURSAL;

  ID_MONEDA = NULL;

  SELECT FIRST 1 CBO_MONEDAS_COTIZACION.ID_SOCSYST10
  FROM CBO_MONEDAS_COTIZACION
  WHERE CBO_MONEDAS_COTIZACION.RELA_SOCSYST01 = :PARAM_EMPRESA
    AND CBO_MONEDAS_COTIZACION.ID_SOCSYST10 = :PARAM_MONEDA
    AND CBO_MONEDAS_COTIZACION.SICCONT04_VENTA != 1
  INTO :ID_MONEDA;

  SQLUSER = 'SELECT
                 SCEXMLS11_DET_MIGRACION.RELA_MSGPOLI01,
                 SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_ENTIDAD,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_RFC,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_FOLIO,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID_IMPORTE,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID_FECHA,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_MONEDA,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_CAMBIO,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_DESCUENTO,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_SUBTOTAL
             FROM SCEXMLS10_CAB_MIGRACION
             INNER JOIN SCEXMLS11_DET_MIGRACION ON (SCEXMLS10_CAB_MIGRACION.ID_SCEXMLS10 = SCEXMLS11_DET_MIGRACION.RELA_SCEXMLS10)
             WHERE SCEXMLS10_CAB_MIGRACION.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             ' AND SCEXMLS10_CAB_MIGRACION.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA ||
             ' AND SCEXMLS11_DET_MIGRACION.RELA_SOCSYST10 = ' || :PARAM_TIPO  ||
             ' AND SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID_FECHA BETWEEN ''' || :PARAM_FECHADESDE || ''' AND ''' || :PARAM_FECHAHASTA || '''';

  SQLUSER = :SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.SCEXMLS11_CAMBIO = 1';

  IF (:ID_MONEDA IS NOT NULL) THEN
    SQLUSER = :SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.SCEXMLS11_CAMBIO != 1';

  IF (:PARAM_ENTIDAD != -1) THEN
    SQLUSER = :SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SICINGR01 = ' || :PARAM_ENTIDAD;

  FOR EXECUTE STATEMENT :SQLUSER
  INTO
      :RELA_MSGPOLI01,
      :ID_SCEXMLS11,
      :SCEXMLS11_ENTIDAD,
      :SCEXMLS11_RFC,
      :SCEXMLS11_FOLIO,
      :SCEXMLS11_UUID,
      :SCEXMLS11_UUID_IMPORTE,
      :SCEXMLS11_UUID_FECHA,
      :SCEXMLS11_MONEDA,
      :SCEXMLS11_CAMBIO,
      :SCEXMLS11_DESCUENTO,
      :SCEXMLS11_SUBTOTAL
  DO
  BEGIN
    IF (:PARAM_FLAG = 0) THEN
      BEGIN
        FOR
          SELECT
              SCEXMLS40_CAB_POLIZAS.SCEXMLS40_FECHA,
              SCEXMLS40_CAB_POLIZAS.SCEXMLS40_COTIZA,
              SCEXMLS41_DET_XMLS.SCEXMLS41_IMPORTE
          FROM SCEXMLS41_DET_XMLS
          INNER JOIN SCEXMLS40_CAB_POLIZAS ON (SCEXMLS41_DET_XMLS.RELA_SCEXMLS40 = SCEXMLS40_CAB_POLIZAS.ID_SCEXMLS40)
          WHERE SCEXMLS41_DET_XMLS.RELA_SCEXMLS11 = :ID_SCEXMLS11
            AND SCEXMLS40_CAB_POLIZAS.SCEXMLS40_FECHA BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
          INTO
              :FECHA_COBRO,
              :TASA_COBRO,
              :IMPORTE_COBRADO
        DO
        BEGIN
          SUSPEND;
        END
      END
    ELSE
      BEGIN
        IVA16 = 0;
        IVA0 = 0;
        IEPS = 0;
        IMPLOC = 0;
        RETIVA = 0;
        RETISR = 0;
        RETLOC = 0;

        FOR
          SELECT
              SCEXMLS14_DET_IMPUESTOS.SCEXMLS14_IMPORTE,
              SCEXMLS21_DET_IMPUESTOS.SCEXMLS21_IMPUESTO,
              SCEXMLS21_DET_IMPUESTOS.SCEXMLS21_RETENIDO,
              SCEXMLS21_DET_IMPUESTOS.SCEXMLS21_TASA
          FROM SCEXMLS14_DET_IMPUESTOS
          INNER JOIN SCEXMLS21_DET_IMPUESTOS ON (SCEXMLS14_DET_IMPUESTOS.RELA_SCEXMLS21 = SCEXMLS21_DET_IMPUESTOS.ID_SCEXMLS21)
          WHERE SCEXMLS14_DET_IMPUESTOS.RELA_SCEXMLS11 = :ID_SCEXMLS11
          INTO
              :SCEXMLS14_IMPORTE,
              :SCEXMLS14_IMPUESTO,
              :SCEXMLS14_RETENIDO,
              :SCEXMLS14_TASA
        DO
        BEGIN
          IF (:SCEXMLS14_RETENIDO = 0) THEN
            BEGIN
              IF (:SCEXMLS14_IMPUESTO = 'IVA') THEN
                IF (:SCEXMLS14_TASA = 16) THEN
                  IVA16 = :IVA16 + :SCEXMLS14_IMPORTE;
                ELSE
                  IVA0 = :IVA0 + :SCEXMLS14_IMPORTE;
              ELSE
                IF (:SCEXMLS14_IMPUESTO = 'IEPS') THEN
                  IEPS = :IEPS + :SCEXMLS14_IMPORTE;
                ELSE
                  IMPLOC = :IMPLOC + :SCEXMLS14_IMPORTE;
            END
          ELSE
            BEGIN
              IF (:SCEXMLS14_IMPUESTO = 'IVA') THEN
                RETIVA = :RETIVA + :SCEXMLS14_IMPORTE;
              ELSE
                IF (:SCEXMLS14_IMPUESTO = 'ISR') THEN
                  RETISR = :RETISR + :SCEXMLS14_IMPORTE;
                ELSE
                  RETLOC = :RETLOC + :SCEXMLS14_IMPORTE;
            END
        END

        SELECT SUM(SCEXMLS41_DET_XMLS.SCEXMLS41_IMPORTE)
        FROM SCEXMLS41_DET_XMLS
        INNER JOIN SCEXMLS40_CAB_POLIZAS ON (SCEXMLS41_DET_XMLS.RELA_SCEXMLS40 = SCEXMLS40_CAB_POLIZAS.ID_SCEXMLS40)
        WHERE SCEXMLS41_DET_XMLS.RELA_SCEXMLS11 = :ID_SCEXMLS11
          AND SCEXMLS40_CAB_POLIZAS.SCEXMLS40_FECHA BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO :IMPORTE_COBRADO;

        IF (:IMPORTE_COBRADO IS NULL) THEN
          IMPORTE_COBRADO = 0;

        SUSPEND;
      END
  END
END
PRD_SRHNOMI06CFDI_MODI         

DECLARE VARIABLE EXISTE BIGINT;
begin
    FOR Select
    PRD_SRHNOMI06CFDI.RELA_SICCONT02,
    PRD_SRHNOMI06CFDI.RELA_SRHMAIN14,
    PRD_SRHNOMI06CFDI.RELA_SRHNOMI02,
    PRD_SRHNOMI06CFDI.ID_SRHNOMI06,
    PRD_SRHNOMI06CFDI.SICCONT72_CODIGO,
    PRD_SRHNOMI06CFDI.SICCONT02_CODEXT,
    PRD_SRHNOMI06CFDI.SICCONT02_DESCRI,
    PRD_SRHNOMI06CFDI.srhnomi06_dias,
    PRD_SRHNOMI06CFDI.srhnomi06_horas,
    PRD_SRHNOMI06CFDI.SRHNOMI06_IMPORTE,
    PRD_SRHNOMI06CFDI.SRHNOMI06_FAPL
    from PRD_SRHNOMI06CFDI('M',:rela_socsyst01, :id_srhmain10, :id_srhnomi02)

    UNION ALL

    Select
    PRD_SRHNOMI06CFDI.RELA_SICCONT02,
    PRD_SRHNOMI06CFDI.RELA_SRHMAIN14,
    PRD_SRHNOMI06CFDI.RELA_SRHNOMI02,
    PRD_SRHNOMI06CFDI.ID_SRHNOMI06,
    PRD_SRHNOMI06CFDI.SICCONT72_CODIGO,
    PRD_SRHNOMI06CFDI.SICCONT02_CODEXT,
    PRD_SRHNOMI06CFDI.SICCONT02_DESCRI,
    PRD_SRHNOMI06CFDI.srhnomi06_dias,
    PRD_SRHNOMI06CFDI.srhnomi06_horas,
    PRD_SRHNOMI06CFDI.SRHNOMI06_IMPORTE,
    PRD_SRHNOMI06CFDI.SRHNOMI06_FAPL
    from PRD_SRHNOMI06CFDI('A',:rela_socsyst01, :id_srhmain10, :id_srhmain10 * -1)
    INTO :RELA_SICCONT02,
         :RELA_SRHMAIN14,
         :RELA_SRHNOMI02,
         :ID_SRHNOMI06,
         :SICCONT72_CODIGO,
         :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :srhnomi06_dias,
         :srhnomi06_horas,
         :SRHNOMI06_IMPORTE,
         :SRHNOMI06_FAPL
    DO
    BEGIN
        if (:rela_srhnomi02 < 0) then
            begin
            existe = 0;
            Select
            PRD_SRHNOMI06CFDI.ID_SRHNOMI06
            from PRD_SRHNOMI06CFDI('M',:rela_socsyst01, :id_srhmain10, :id_srhnomi02)
            where PRD_SRHNOMI06CFDI.rela_siccont02 = :rela_siccont02
            into :existe;

            if (existe = 0) then
                suspend;
            end
        else
            suspend;
    END
end
API_FECHA_CADENA               

begin
    if (:modo = 0) then
    begin
        if (extractmonth(:FECHA) = 1) then
           CADENA = 'Enero';
        else if (extractmonth(:FECHA) = 2) then
           CADENA = 'Febrero';
        else if (extractmonth(:FECHA) = 3) then
           CADENA = 'Marzo';
        else if (extractmonth(:FECHA) = 4) then
           CADENA = 'Abril';
        else if (extractmonth(:FECHA) = 5) then
           CADENA = 'Mayo';
        else if (extractmonth(:FECHA) = 6) then
           CADENA = 'Junio';
        else if (extractmonth(:FECHA) = 7) then
           CADENA = 'Julio';
        else if (extractmonth(:FECHA) = 8) then
           CADENA = 'Agosto';
        else if (extractmonth(:FECHA) = 9) then
           CADENA = 'Septiembre';
        else if (extractmonth(:FECHA) = 10) then
           CADENA = 'Octubre';
        else if (extractmonth(:FECHA) = 11) then
           CADENA = 'Noviembre';
        else if (extractmonth(:FECHA) = 12) then
           CADENA = 'Diciembre';
    end
    else if (:modo = 1) then
    begin
        if (extractmonth(:FECHA) = 1) then
           CADENA = 'Ene';
        else if (extractmonth(:FECHA) = 2) then
           CADENA = 'Feb';
        else if (extractmonth(:FECHA) = 3) then
           CADENA = 'Mar';
        else if (extractmonth(:FECHA) = 4) then
           CADENA = 'Abr';
        else if (extractmonth(:FECHA) = 5) then
           CADENA = 'May';
        else if (extractmonth(:FECHA) = 6) then
           CADENA = 'Jun';
        else if (extractmonth(:FECHA) = 7) then
           CADENA = 'Jul';
        else if (extractmonth(:FECHA) = 8) then
           CADENA = 'Ago';
        else if (extractmonth(:FECHA) = 9) then
           CADENA = 'Sep';
        else if (extractmonth(:FECHA) = 10) then
           CADENA = 'Oct';
        else if (extractmonth(:FECHA) = 11) then
           CADENA = 'Nov';
        else if (extractmonth(:FECHA) = 12) then
           CADENA = 'Dic';
    end
    
    if (:modo = 0) then
        CADENA = PadLeft(cast(extractday(:FECHA) as varchar(2)),2,'0') || ' de '
                 || CADENA || ' del ' || cast(extractyear(:FECHA) as varchar(4));
    else
        CADENA = PadLeft(cast(extractday(:FECHA) as varchar(2)),2,'0') || '/'
                 || CADENA || '/' || cast(extractyear(:FECHA) as varchar(4));
  suspend;
end
GRID_PYMVENT10P                

begin
    SELECT
    CBO_SRHMAIN10.entidad,
    PYMVENT01_CAB_CAJAS.RELA_SOCWFLO01,
    PYMVENT01_CAB_CAJAS.RELA_SOCSYST01,
    PYMVENT01_CAB_CAJAS.PYMVENT01_EXCLUSIVO,
    PYMVENT01_CAB_CAJAS.id_pymvent01
    FROM CBO_SRHMAIN10
    INNER JOIN PYMVENT01_CAB_CAJAS ON (CBO_SRHMAIN10.ID_SRHMAIN10 = PYMVENT01_CAB_CAJAS.RELA_SRHMAIN10_SUPERVISOR)
    WHERE PYMVENT01_CAB_CAJAS.id_pymvent01 = :prela_pymvent01
    INTO :SUPERVISOR,
         :RELA_SOCWFLO01,
         :RELA_SOCSYST01,
         :PYMVENT01_EXCLUSIVO,
         :rela_pymvent01;

    SELECT
    CBO_SRHMAIN10.entidad,
    PYMVENT02_DET_CAJEROS.id_pymvent02,
    PYMVENT02_DET_CAJEROS.rela_socusua02,
    PYMVENT02_DET_CAJEROS.rela_srhmain10
    FROM CBO_SRHMAIN10
    INNER JOIN PYMVENT02_DET_CAJEROS ON (CBO_SRHMAIN10.ID_SRHMAIN10 = PYMVENT02_DET_CAJEROS.rela_srhmain10)
    WHERE PYMVENT02_DET_CAJEROS.rela_pymvent01 = :prela_pymvent01
      and PYMVENT02_DET_CAJEROS.rela_srhmain10 = :PRELA_SRHMAIN10
    INTO :ENTIDAD,
         :rela_pymvent02,
         :rela_socusua02,
         :rela_srhmain10;
       
    for SELECT
    grid_pymvent10w.ID_PYMVENT10,
    grid_pymvent10w.pymvent10_fecha,
    grid_pymvent10w.PYMVENT10_HAPERTURA,
    grid_pymvent10w.PYMVENT10_HCIERRE,
    grid_pymvent10w.pymvent20_subtotal,
    grid_pymvent10w.pymvent20_descuentos,
    grid_pymvent10w.pymvent21_adeudo,
    grid_pymvent10w.pymvent20_total,
    grid_pymvent10w.movimientos
    FROM grid_pymvent10w
    where grid_pymvent10w.rela_pymvent01 = :rela_pymvent01
      and grid_pymvent10w.rela_pymvent02 = :rela_pymvent02
      and grid_pymvent10w.pymvent10_fecha between :pfecha_desde and :pfecha_hasta
    order by grid_pymvent10w.pymvent10_fecha
    into :ID_PYMVENT10,
         :PYMVENT10_FECHA,
         :PYMVENT10_HAPERTURA,
         :PYMVENT10_HCIERRE,
         :PYMVENT20_SUBTOTAL,
         :PYMVENT20_DESCUENTOS,
         :PYMVENT21_ADEUDO,
         :PYMVENT20_TOTAL,
         :MOVIMIENTOS
    do
    begin
        suspend;
    end
end
PRD_SOCSYST20_SGPINGR04        

DECLARE VARIABLE RELA_PADRE BIGINT;
BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
REP_SOCUSUA41_SOCUSUA02        

DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
BEGIN
    SELECT
        VR_ENTIDADES_ALL.RELA_SOCUSUA20,
        VR_ENTIDADES_ALL.RELA_SOCUSUA30
    FROM VR_ENTIDADES_ALL
    WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02
    INTO :RELA_SOCUSUA20,
         :RELA_SOCUSUA30;

    IF (:RELA_SOCUSUA20 IS NOT NULL) THEN
      FOR
        SELECT
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCWFLO01,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA42,
            SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
            SOCUSUA41_DET_LOCALIDADES.ID_SOCUSUA41,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_FAPL,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL
        FROM SOCUSUA41_DET_LOCALIDADES
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20 = :RELA_SOCUSUA20
        INTO
            :RELA_SOCWFLO01,
            :RELA_SOCUSUA42,
            :SOCUSUA50_DESCRI,
            :RELA_ENTIDAD,
            :RELA_SOCUSUA50,
            :ID_SOCUSUA41,
            :SOCUSUA41_CALLE,
            :SOCUSUA41_NRO,
            :SOCUSUA41_PISO,
            :SOCUSUA41_DEPTO,
            :SOCUSUA41_TELE_LINEA,
            :SOCUSUA41_TELE_CELU,
            :SOCUSUA41_TELE_FAX,
            :SOCUSUA41_MAIL_PERSO,
            :SOCUSUA41_FAPL,
            :SOCUSUA41_CP,
            :SOCUSUA41_PRINCIPAL
      DO
      SUSPEND;
    ELSE
      FOR
        SELECT
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCWFLO01,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA42,
            SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
            SOCUSUA41_DET_LOCALIDADES.ID_SOCUSUA41,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_FAPL,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL
        FROM SOCUSUA41_DET_LOCALIDADES
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA30 = :RELA_SOCUSUA30
        INTO
            :RELA_SOCWFLO01,
            :RELA_SOCUSUA42,
            :SOCUSUA50_DESCRI,
            :RELA_ENTIDAD,
            :RELA_SOCUSUA50,
            :ID_SOCUSUA41,
            :SOCUSUA41_CALLE,
            :SOCUSUA41_NRO,
            :SOCUSUA41_PISO,
            :SOCUSUA41_DEPTO,
            :SOCUSUA41_TELE_LINEA,
            :SOCUSUA41_TELE_CELU,
            :SOCUSUA41_TELE_FAX,
            :SOCUSUA41_MAIL_PERSO,
            :SOCUSUA41_FAPL,
            :SOCUSUA41_CP,
            :SOCUSUA41_PRINCIPAL
      DO
      SUSPEND;
END
REP_MSGPOLI34                  

BEGIN
  SELECT CBO_MESES.SOCSYST10_FILTRO_DES
  FROM CBO_MESES
  WHERE CBO_MESES.SOCSYST10_CODIGO = :MES
  INTO :MESES;

  FOR
    SELECT
        GRID_MSGPOLI34_PAGADOS.RELA_SOCSYST01,
        GRID_MSGPOLI34_PAGADOS.RELA_MSGPOLI24,
        GRID_MSGPOLI34_PAGADOS.RELA_MSGPOLI20,
        GRID_MSGPOLI34_PAGADOS.ID_MSGPOLI23,
        GRID_MSGPOLI34_PAGADOS.ID_MSGPOLI34,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI24_DESCRI,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI34_FDPAGAR,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI34_FPAGO,
        CAST('Impuestos' AS VARCHAR(12)),
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_IMPORTE,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_AFAVOR,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_RECARGO,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_ACTUALIZACION,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_ACREDITAMIENTOS,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_IMPORTEF,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI23_ANO,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI23_MES,
        CBO_CLIENTES_EMPRESAS.ENTIDAD,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODIGO,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_DESCRI
    FROM MSGPOLI24_ARB_ORGANIZADOR
    INNER JOIN GRID_MSGPOLI34_PAGADOS ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = GRID_MSGPOLI34_PAGADOS.RELA_MSGPOLI24)
    INNER JOIN CBO_CLIENTES_EMPRESAS ON (GRID_MSGPOLI34_PAGADOS.RELA_SOCSYST01 = CBO_CLIENTES_EMPRESAS.ID_SOCSYST01)
    WHERE GRID_MSGPOLI34_PAGADOS.RELA_SOCSYST01 = :EMPRESA
        AND GRID_MSGPOLI34_PAGADOS.MSGPOLI23_ANO = :ANO
        AND GRID_MSGPOLI34_PAGADOS.MSGPOLI23_MES = :MES

    UNION

    SELECT
        GRID_MSGPOLI34_PAGADOS_RET.RELA_SOCSYST01,
        GRID_MSGPOLI34_PAGADOS_RET.RELA_MSGPOLI24,
        GRID_MSGPOLI34_PAGADOS_RET.RELA_MSGPOLI20,
        GRID_MSGPOLI34_PAGADOS_RET.ID_MSGPOLI23,
        GRID_MSGPOLI34_PAGADOS_RET.ID_MSGPOLI34,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI24_DESCRI,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI34_FDPAGAR,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI34_FPAGO,
        CAST('Retenciones' AS VARCHAR(12)),
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_IMPORTE,
        CAST(0 AS DOUBLE PRECISION),
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_RECARGO,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_ACTUALIZACION,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_ACREDITAMIENTOS,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_IMPORTEF,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI23_ANO,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI23_MES,
        CBO_CLIENTES_EMPRESAS.ENTIDAD,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODIGO,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_DESCRI
    FROM MSGPOLI24_ARB_ORGANIZADOR
    INNER JOIN GRID_MSGPOLI34_PAGADOS_RET ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = GRID_MSGPOLI34_PAGADOS_RET.RELA_MSGPOLI24)
    INNER JOIN CBO_CLIENTES_EMPRESAS ON (GRID_MSGPOLI34_PAGADOS_RET.RELA_SOCSYST01 = CBO_CLIENTES_EMPRESAS.ID_SOCSYST01)
    WHERE GRID_MSGPOLI34_PAGADOS_RET.RELA_SOCSYST01 = :EMPRESA
        AND GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI23_ANO = :ANO
        AND GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI23_MES = :MES
    INTO :RELA_SOCSYST01,
         :RELA_MSGPOLI24,
         :RELA_MSGPOLI20,
         :ID_MSGPOLI23,
         :ID_MSGPOLI34,
         :MSGPOLI24_DESCRI,
         :MSGPOLI34_FDPAGAR,
         :MSGPOLI34_FPAGO,
         :MSGPOLI34_TIPO,
         :MSGPOLI35_IMPORTE,
         :MSGPOLI35_AFAVOR,
         :MSGPOLI35_RECARGO,
         :MSGPOLI35_ACTUALIZACION,
         :MSGPOLI35_ACREDITAMIENTOS,
         :MSGPOLI35_IMPORTEF,
         :MSGPOLI23_ANO,
         :MSGPOLI23_MES,
         :ENTIDAD,
         :MSGPOLI24_CODIGO,
         :MSGPOLI24_CODEXT,
         :MSGPOLI24_DESCRI1
  DO
  BEGIN
   SELECT VW_MSGPOLI24.MSGPOLI24_DESCRI,
          VW_MSGPOLI24.MSGPOLI24_CODEXT
   FROM VW_MSGPOLI24(:RELA_MSGPOLI24)
   WHERE VW_MSGPOLI24.SOCSYST06_NIVEL = 2
   INTO :MSGPOLI24_GRUPO,
        :MSGPOLI24_CODEXTX;

   MSGPOLI24_GRUPOX = '';

   IF (msgpoli24_codextx = '01.02') then
        select
        VW_MSGPOLI24.msgpoli24_descri
        from VW_MSGPOLI24(:RELA_MSGPOLI24)
        where VW_MSGPOLI24.socsyst06_nivel = 3
        into :msgpoli24_grupox;

        msgpoli24_grupox = msgpoli24_grupo || ' - ' || msgpoli24_grupox;

    SUSPEND;
  END
END
REP_ON2CFDS10_FACTURA          

DECLARE VARIABLE MONEDA VARCHAR(50);
DECLARE VARIABLE RELA_SOCSYST10_MONEDA BIGINT;
BEGIN
    SELECT
        SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
        SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
        SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO,''),
        SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_FONDO,'')
    FROM SOCSYST01_CAB_CLIENTES
    WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
    INTO
        :RELA_SOCUSUA02,
        :EMPRESA,
        :LOGO,
        :FONDO;

    SELECT SNVL(SOCSYST08_DET_REGFISCALES.SOCSYST08_REGFISCAL,'')
    FROM SOCSYST08_DET_REGFISCALES
    WHERE SOCSYST08_DET_REGFISCALES.RELA_SOCSYST01 = :PARAM_EMPRESA
    INTO :REGFISCAL;

    SELECT
        PRD_CFD.ULTID_FOLIO,
        STRREPEAT('0', 8 - STRLEN(INTTOSTR(:PARAM_EMPRESA,:PARAM_EMPRESA))),
        STRREPEAT('$', 12 - (PRD_CFD.SOCSYST21_LONGITUD + STRLEN(SNVL(PRD_CFD.SOCSYST21_PREFIJO,'')))),
        INTTOSTR(PRD_CFD.SOCSYST20_ANO_APROBA,PRD_CFD.SOCSYST20_ANO_APROBA) || INTTOSTR(PRD_CFD.SOCSYST20_NRO_APROBA,PRD_CFD.SOCSYST20_NRO_APROBA),
        PRD_CFD.SOCSYST20_ANO_APROBA,
        PRD_CFD.SOCSYST20_NRO_APROBA,
        EXTRACTDAY(PRD_CFD.SOCSYST20_FECHA_APROBA) || '/' || EXTRACTMONTH(PRD_CFD.SOCSYST20_FECHA_APROBA) || '/' || EXTRACTYEAR(PRD_CFD.SOCSYST20_FECHA_APROBA),
        PRD_CFD.SOCSYST20_IMGCBB,
        PRD_CFD.SOCSYST01_NROCERTIFICADO,
        PRD_CFD.SOCSYST20_FOLIO_SERIE,
        PRD_CFD.SOCSYST20_FOLIO_DESDE,
        PRD_CFD.SOCSYST20_FOLIO_HASTA,
        PRD_CFD.FOLIO_FECHA,
        PRD_CFD.EMISOR,
        PRD_CFD.EMISOR_RFC,
        PRD_CFD.EMISOR_CURP,
        PRD_CFD.EMISOR_CALLE || ' No. ' || SNVL(PRD_CFD.EMISOR_NRO_EXTERIOR,''),
        SNVL(PRD_CFD.EMISOR_NRO_INTERIOR,''),
        SNVL(PRD_CFD.EMISOR_PISO,''),
        SNVL(PRD_CFD.EMISOR_COLONIA,''),
        SNVL(PRD_CFD.LUGAR_EXPEDICION,''),
        PRD_CFD.EMISOR_CP,
        PRD_CFD.EMISOR_MUNICIPIO || ', ' || PRD_CFD.EMISOR_ESTADO || ', ' || PRD_CFD.EMISOR_PAIS,
        PRD_CFD.EMISOR_TELEFONOS,
        PRD_CFD.EMISOR_FAX,
        PRD_CFD.EMISOR_CELULAR,
        PRD_CFD.EMISOR_CORREO,
        PRD_CFD.RECEPTOR,
        PRD_CFD.RECEPTOR_RFC,
        PRD_CFD.RECEPTOR_CALLE || ' No. ' || SNVL(PRD_CFD.RECEPTOR_NRO_EXTERIOR,'') || ' ' || SNVL(PRD_CFD.RECEPTOR_NRO_INTERIOR,'') || ', Col. ' || PRD_CFD.RECEPTOR_COLONIA ||  ' C.P. ' || PRD_CFD.RECEPTOR_CP,
        PRD_CFD.RECEPTOR_MUNICIPIO || ', ' || PRD_CFD.RECEPTOR_ESTADO || ', ' || PRD_CFD.RECEPTOR_PAIS,
        PRD_CFD.SOCSYST21_FORMATEADO
    FROM PRD_CFD(2, :PARAM_ID, -1)
    INTO
        :ULTID_FOLIO,
        :FORMATO_EMPRESA,
        :FORMATO,
        :ANOYNUMERO,
        :ANOAPROBA,
        :NUMEROAPROBA,
        :FECHA_APROBA,
        :IMG_CBB,
        :NROCERTIFICADO,
        :FOLIO_SERIE,
        :FOLIO_DESDE,
        :FOLIO_HASTA,
        :FOLIO_FECHA,
        :EMISOR,
        :EMISOR_RFC,
        :EMISOR_CURP,
        :EMISOR_CALLE,
        :EMISOR_NROINT,
        :EMISOR_PISO,
        :EMISOR_LOCALIDAD,
        :LUGAR_EXPEDICION,
        :EMISOR_CP,
        :EMISOR_CIUDAD,
        :EMISOR_TELEFONOS,
        :EMISOR_FAX,
        :EMISOR_CELULAR,
        :EMISOR_CORREO,
        :RECEPTOR,
        :RECEPTOR_RFC,
        :RECEPTOR_DIRECCION,
        :RECEPTOR_CIUDAD,
        :FOLIO;

    EMISOR_DIRECCION = EMISOR_CALLE;

    IF (:EMISOR_NROINT != '') THEN
      EMISOR_DIRECCION = EMISOR_DIRECCION || ' Int. ' || :EMISOR_NROINT;

    IF (:EMISOR_PISO != '') THEN
      EMISOR_DIRECCION = EMISOR_DIRECCION || ' Piso ' || :EMISOR_PISO;

    IF (:EMISOR_LOCALIDAD != '') THEN
      EMISOR_DIRECCION = EMISOR_DIRECCION || ' ' || :EMISOR_LOCALIDAD;

    IF (:EMISOR_TELEFONOS != '') THEN
      EMISOR_TELEFONOS = 'Tel. ' || EMISOR_TELEFONOS;

    IF (:EMISOR_FAX != '') THEN
      EMISOR_FAX = 'Fax ' || EMISOR_FAX;

    IF (:EMISOR_CELULAR != '') THEN
      EMISOR_CELULAR = 'Celular ' || EMISOR_CELULAR;

    SELECT
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_DOCNRO,
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_CADENAORIGINAL,
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_SELLO,
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID,
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID_CANCELA,
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID_FECHA,
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID_VER,
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_SELLOSAT,
        ON2CFDS18_DEP_FACTELECT.ON2CFDS18_NOCERTSAT
    FROM ON2CFDS18_DEP_FACTELECT
    WHERE ON2CFDS18_DEP_FACTELECT.ID_ON2CFDS18 = :ULTID_FOLIO
    INTO
        :DOCNRO_ELECT,
        :CADENA,
        :SELLO,
        :UUID,
        :UUID_CANCELA,
        :UUID_FECHA,
        :UUID_VER,
        :SELLOSAT,
        :NOCERTSAT;

    SELECT
        ON2CFDS10_CAB_FACTURAS.RELA_SOCWFLO01,
        ON2CFDS10_CAB_FACTURAS.ON2CFDS10_DOCNRO,
        ON2CFDS10_CAB_FACTURAS.ON2CFDS10_FDOCU,
        ON2CFDS10_CAB_FACTURAS.ON2CFDS10_SUBTOTAL,
        ON2CFDS10_CAB_FACTURAS.ON2CFDS10_DESCUENTO,
        ON2CFDS10_CAB_FACTURAS.ON2CFDS10_TOTAL,
        ON2CFDS10_CAB_FACTURAS.ON2CFDS10_TOTAL_IRETENIDOS,
        ON2CFDS10_CAB_FACTURAS.ON2CFDS10_TOTAL_ITRASLADADOS,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1,
        (SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
         FROM SOCSYST10_TBL_LISTAESTADOS
         WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST10_MPAGO),
        ON2CFDS10_CAB_FACTURAS.ON2CFDS10_NUMCTAPAGO
    FROM ON2CFDS10_CAB_FACTURAS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    INNER JOIN SOCSYST01_CAB_CLIENTES ON (ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
    WHERE ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = :PARAM_ID
    INTO
        :RELA_SOCWFLO01,
        :DOCNRO,
        :DOCNRO_FECHA,
        :SUBTOTAL,
        :DESCUENTO,
        :TOTAL,
        :TOTAL_IRETENIDOS,
        :TOTAL_ITRASLADADOS,
        :DOCUMENTO_TIPO,
        :TIPO_DOCU,
        :TIPOPAGO,
        :NUMCTAPAGO;

    IF (:DOCNRO_ELECT IS NULL) THEN
      BEGIN
        SELECT
            REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,
            REP_SOCUSUA40_SOCUSUA02.ENTIDAD
        FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
        INTO
            :EMISOR_RFC,
            :EMISOR;

        SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO
        FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'CURP'
        INTO :EMISOR_CURP;

        SELECT
            REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA42,
            REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA50,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CALLE || ' No. ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_NRO,'') || ' ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_DEPTO,'') || ' ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PISO,'') || ' C.P. ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CP,''),
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_LINEA,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_CELU,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_FAX,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_MAIL_PERSO
        FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 1
        INTO
            :RELA_SOCUSUA42,
            :RELA_SOCUSUA50,
            :EMISOR_DIRECCION,
            :EMISOR_TELEFONOS,
            :EMISOR_CELULAR,
            :EMISOR_FAX,
            :EMISOR_CORREO;

        SELECT
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO,
            RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO) || ', ' || RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA) || ', ' || RUPPER(SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI)
        FROM SOCUSUA42_TBL_CODPOSTALES
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :RELA_SOCUSUA42
        INTO
            :EMISOR_LOCALIDAD,
            :EMISOR_CIUDAD;

        EXECUTE PROCEDURE PRD_LOCALIDAD :RELA_SOCWFLO01 RETURNING_VALUES LUGAR_EXPEDICION;
      END

    SELECT SUM(ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_IMPORTE)
    FROM ON2CFDS12_DET_IMPUESTOS
    WHERE ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TIPO = 'I'
      AND ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_IMPUESTO = 'ISH'
      AND ON2CFDS12_DET_IMPUESTOS.RELA_ON2CFDS10 = :PARAM_ID
    INTO :TOTAL_ISH;

    IF (:TOTAL_ISH IS NULL) THEN
      TOTAL_ISH = 0;

    SELECT
        ON2CFDS14_DEP_ADDENDAS.RELA_SOCSYST10_MONEDA,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_ORDENCOMPRAS,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_FVTO,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_CONDICIONPAGO,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_COTIZACION,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_NOTAS
    FROM ON2CFDS14_DEP_ADDENDAS
    WHERE ON2CFDS14_DEP_ADDENDAS.RELA_ON2CFDS10 = :PARAM_ID
    INTO
        :RELA_SOCSYST10_MONEDA,
        :ON2CFDS14_ORDENCOMPRAS,
        :ON2CFDS14_FVTO,
        :ON2CFDS14_CONDICIONPAGO,
        :COTIZACION,
        :NOTAS;

    IF (:RELA_SOCSYST10_MONEDA IS NOT NULL) THEN
        SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
        FROM SOCSYST10_TBL_LISTAESTADOS
        WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = :RELA_SOCSYST10_MONEDA
        INTO :MONEDA;

    IF (:MONEDA IS NULL) THEN
        MONEDA = 'MXN';

    IF (:TOTAL IS NOT NULL) THEN
        SELECT API_NUM_MEXICO.CNUMERO
        FROM API_NUM_MEXICO(:TOTAL, :MONEDA)
        INTO :TOTAL_LETRA;

    IF (:ON2CFDS14_FVTO IS NOT NULL) THEN
        EXECUTE PROCEDURE API_FECHA_CADENA :ON2CFDS14_FVTO, 0 RETURNING_VALUES ON2CFDS14_FVTO_CADENA;

    IF (:FOLIO_FECHA IS NOT NULL) THEN
        EXECUTE PROCEDURE API_FECHA_CADENA :FOLIO_FECHA, 1 RETURNING_VALUES FOLIO_FECHA_CADENA;

    SUSPEND;
END
GRID_PYMEGRE02                 

DECLARE VARIABLE RELA_PYMREFE01 BIGINT;
BEGIN
  ENTIDAD = NULL;
  IF (:FILTRO = 'FACTURAS') THEN
    BEGIN
      FOR
        SELECT
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_CONCEPTO,
            MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_SUBTOTAL,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL,
            PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
            PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01,
            PYMEGRE02_CAB_FACTURAS.RELA_PYMREFE01
        FROM PYMEGRE02_CAB_FACTURAS
        INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
        WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = :EMPRESA
          AND PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = :ORGANIGRAMA
          AND PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = :IDENTIDAD
        INTO
            :FOLIO,
            :CONCEPTO,
            :POLIZA,
            :FECHA,
            :SUBTOTAL,
            :TOTAL,
            :ID_GRAL,
            :RELA_MSGPOLI01,
            :RELA_PYMREFE01
        DO
        BEGIN
           CHEQUE = '';
           FCHEQUE = NULL;
           FACTURA = '';
           REFERENCIA = NULL;

           SELECT PYMREFE01_CAB_REFERENCIAS.PYMREFE01_DOCNRO
           FROM PYMREFE01_CAB_REFERENCIAS
           WHERE PYMREFE01_CAB_REFERENCIAS.ID_PYMREFE01 = :RELA_PYMREFE01
           INTO :REFERENCIA;

           SELECT FIRST 1
               VW_PYMEGRE10_PYMEGRE11.PYMEGRE10_DOCNRO,
               VW_PYMEGRE10_PYMEGRE11.PYMEGRE10_FCHE
           FROM VW_PYMEGRE10_PYMEGRE11
           WHERE VW_PYMEGRE10_PYMEGRE11.RELA_PYMEGRE02 = :ID_GRAL
             AND VW_PYMEGRE10_PYMEGRE11.RELA_MSGPOLI01_CANCELADO IS NULL
           INTO
               :CHEQUE,
               :FCHEQUE;

           IF (CHEQUE IS NULL) THEN
             BEGIN
                CHEQUE = '';
                FCHEQUE = NULL;
             END

           SELECT FIRST 1
               PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO
           FROM PYMINGR15_MOV_GASTOS
           INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
           WHERE PYMINGR01_CAB_fACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
             AND PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02 = :ID_GRAL
           INTO
               :FACTURA;

           IF (:FACTURA IS NULL) THEN
             FACTURA = '';

           SUSPEND;
        END
    END
  ELSE
    IF (:FILTRO = 'GASTOS') THEN
      BEGIN
         FOR
           SELECT
               PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_DOCNRO,
               PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_DESCRI,
               MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
               PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_FAPL,
               0,
               PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_IMPORTE,
               PYMEGRE06_CAB_NOTASGASTOS.ID_PYMEGRE06,
               PYMEGRE06_CAB_NOTASGASTOS.RELA_MSGPOLI01
           FROM PYMEGRE06_CAB_NOTASGASTOS
           INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMEGRE06_CAB_NOTASGASTOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
           WHERE PYMEGRE06_CAB_NOTASGASTOS.RELA_SOCSYST01 = :EMPRESA
             AND PYMEGRE06_CAB_NOTASGASTOS.RELA_SOCWFLO01 = :ORGANIGRAMA
             AND PYMEGRE06_CAB_NOTASGASTOS.RELA_SRHMAIN10 = :IDENTIDAD
           INTO
               :FOLIO,
               :CONCEPTO,
               :POLIZA,
               :FECHA,
               :SUBTOTAL,
               :TOTAL,
               :ID_GRAL,
               :RELA_MSGPOLI01
         DO
         BEGIN
            CHEQUE = '';
            FCHEQUE = NULL;

            SELECT FIRST 1
                VW_PYMEGRE10_PYMEGRE11.PYMEGRE10_DOCNRO,
                VW_PYMEGRE10_PYMEGRE11.PYMEGRE10_FCHE
            FROM VW_PYMEGRE10_PYMEGRE11
            WHERE VW_PYMEGRE10_PYMEGRE11.RELA_PYMEGRE06 = :ID_GRAL
            INTO :CHEQUE, :FCHEQUE;

            IF (CHEQUE IS NULL) THEN
              BEGIN
                CHEQUE = '';
                FCHEQUE = NULL;
              END

            SUSPEND;
         END
      END
    ELSE
      IF (:FILTRO = 'RENDICION') THEN
        BEGIN
           FOR
             SELECT
                 CBO_SRHMAIN10.ENTIDAD,
                 PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
                 PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
                 MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                 PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FAPL,
                 PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
                 PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
                 PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01
             FROM PYMEGRE10_CAB_CHEQUES
             INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
             INNER JOIN CBO_SRHMAIN10 ON (PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10 = CBO_SRHMAIN10.ID_SRHMAIN10)
             WHERE PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :EMPRESA
               AND PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = :ORGANIGRAMA
             INTO
                 :ENTIDAD,
                 :CHEQUE,
                 :FCHEQUE,
                 :POLIZA,
                 :FECHA,
                 :SUBTOTAL,
                 :ID_GRAL,
                 :RELA_MSGPOLI01
           DO
           BEGIN
              SELECT DNVL(SUM(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL), 0.00)
              FROM PYMEGRE12_MOV_RENDICIONES
              INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMEGRE12_MOV_RENDICIONES.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
              WHERE PYMEGRE12_MOV_RENDICIONES.RELA_PYMEGRE10 = :ID_GRAL
              INTO :TOTAL;

              TOTAL = SUBTOTAL - TOTAL;

              IF (TOTAL != 0) THEN
                  SUSPEND;
           END
        END
END
PRD_PYMVENT20_ULTTICKET        

BEGIN

  SELECT MAX(SOCUTIL01_MOV_LOGS.SOCUTIL01_ULTID)
  FROM SOCUTIL01_MOV_LOGS
  WHERE SOCUTIL01_MOV_LOGS.SOCUTIL01_USUARIO = CURRENT_USER
    AND SOCUTIL01_MOV_LOGS.SOCUTIL01_TABLA = 'PYMVENT20'
    AND SOCUTIL01_MOV_LOGS.SOCUTIL01_ACCION = 'A'
  INTO :ID_PYMVENT20;

  SELECT
      PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
      PYMVENT20_CAB_TICKETS.PYMVENT20_PRESUPUESTO
  FROM PYMVENT20_CAB_TICKETS
  WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :ID_PYMVENT20
  INTO
    :PYMVENT20_DOCNRO,
    :PYMVENT20_PRESUPUESTO;

  IF (:PYMVENT20_PRESUPUESTO = 1) THEN
    SELECT
        PYMVENT40_CAB_PRESUPUESTO.PYMVENT40_DOCNRO,
        PYMVENT40_CAB_PRESUPUESTO.PYMVENT40_VIGENCIA,
        PYMVENT40_CAB_PRESUPUESTO.PYMVENT40_NOTAS
    FROM PYMVENT40_CAB_PRESUPUESTO
    WHERE PYMVENT40_CAB_PRESUPUESTO.RELA_PYMVENT20 = :ID_PYMVENT20
    INTO
        :PYMVENT40_DOCNRO,
        :PYMVENT40_VIGENCIA,
        :PYMVENT40_NOTAS;

  SUSPEND;
END
REP_PYMVENT10_VENTAGLOBAL      

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :ID_SOCSYST01,
     :EMPRESA;

  FOR
    SELECT
        PYMVENT01_CAB_CAJAS.RELA_SOCSYST10_IMPUESTOS,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        CATEGORIA.SOCSYST10_FILTRO_DES,
        FAMILIA.SOCSYST10_FILTRO_DES,
        PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
        PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL,
        CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE)
    FROM PYMVENT21_DET_TICKETS
    INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
    INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
    INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
    WHERE PYMVENT20_CAB_TICKETS.PYMVENT20_CANCELADO = 0
      AND PYMVENT21_DET_TICKETS.RELA_PYMVENT21 IS NULL
      AND PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    INTO
        :RELA_SOCSYST10_IMPUESTOS,
        :RELA_PYMINVE10,
        :CATEGORIA,
        :FAMILIA,
        :CODIGO,
        :DESCRIPCION,
        :DESCUENTOS,
        :PRECIO_COSTO,
        :PRECIO_VENTA,
        :FECHA
  DO
  BEGIN
    IF (:RELA_SOCSYST10_IMPUESTOS IS NOT NULL) THEN
      BEGIN
        SELECT CBO_TIPOFACTURASVENTAS.PORCENTAJE
        FROM CBO_TIPOFACTURASVENTAS(:PARAM_EMPRESA)
        WHERE CBO_TIPOFACTURASVENTAS.ID_SOCSYST10 = :RELA_SOCSYST10_IMPUESTOS
        INTO :PORCENTAJE;

        SUBTOTAL_COSTO = PRECIO_COSTO / (1 + (PORCENTAJE / 100));
        IVA_COSTO = PRECIO_COSTO - SUBTOTAL_COSTO;

        SUBTOTAL_VENTA = PRECIO_VENTA / (1 + (PORCENTAJE / 100));
        IVA_VENTA = PRECIO_VENTA - SUBTOTAL_VENTA;

        SUSPEND;
      END
  END
END
GRID_PYMINVE10_PYMINVE301      

DECLARE VARIABLE COSTO_PROVEEDOR DOUBLE PRECISION;
begin
    for SELECT 0,
    T00.RELA_SOCSYST01,
    CAT.SOCSYST10_FILTRO_DES,
    FAM.SOCSYST10_FILTRO_DES,
    T00.PYMINVE10_CODIGO,
    T00.PYMINVE10_DESCRIPCION,
    T00.pyminve10_maxdesc,
    T00.ID_PYMINVE10,
    T00.PYMINVE10_PCOSTO,
    T00.PYMINVE10_UTILIDAD,
    CAT.SOCSYST10_FILTRO_DES ||
    FAM.SOCSYST10_FILTRO_DES ||
    T00.PYMINVE10_CODIGO ||
    T00.PYMINVE10_DESCRIPCION,
    dnvl(STK.pyminve30_cantidad,0),
    T00.pyminve10_mtc,
    T00.pyminve10_utilidad_x_empq,
    T00.pyminve10_lotesize,
    T00.pyminve10_modeloregalo

    FROM PYMINVE10_CAB_PRODUCTOS T00
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS CAT ON (T00.RELA_SOCSYST10 = CAT.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAM ON (T00.RELA_SOCSYST10_FAMILIA = FAM.ID_SOCSYST10)
    INNER JOIN VW_PYMINVE30_STOCK_ALL STK ON (T00.id_pyminve10 = STK.rela_pyminve10)
    where PYMINVE10_CAB_PRODUCTOS.rela_socsyst01 = :RELA_SOCSYST01x
/*      AND PYMINVE10_CAB_PRODUCTOS.PYMINVE10_NOACTIVO = 0    */

    UNION ALL

    SELECT 0,
    T00.RELA_SOCSYST01,
    CAT.SOCSYST10_FILTRO_DES,
    FAM.SOCSYST10_FILTRO_DES,
    T00.PYMINVE10_CODIGO,
    T00.PYMINVE10_DESCRIPCION,
    T00.pyminve10_maxdesc,
    T00.ID_PYMINVE10,
    T00.PYMINVE10_PCOSTO,
    T00.PYMINVE10_UTILIDAD,
    CAT.SOCSYST10_FILTRO_DES ||
    FAM.SOCSYST10_FILTRO_DES ||
    T00.PYMINVE10_CODIGO ||
    T00.PYMINVE10_DESCRIPCION,
    CAST(0 AS DOUBLE PRECISION),
    T00.pyminve10_mtc,
    T00.pyminve10_utilidad_x_empq,
    T00.pyminve10_lotesize,
    T00.pyminve10_modeloregalo

    FROM PYMINVE10_CAB_PRODUCTOS T00
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS CAT ON (T00.RELA_SOCSYST10 = CAT.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAM ON (T00.RELA_SOCSYST10_FAMILIA = FAM.ID_SOCSYST10)
    WHERE not EXISTS (SELECT FIRST 1 pyminve30_mov_stock.id_pyminve30
                      FROM pyminve30_mov_stock
                      WHERE pyminve30_mov_stock.rela_pyminve10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      AND PYMINVE10_CAB_PRODUCTOS.rela_socsyst01 = :RELA_SOCSYST01x
/*      AND PYMINVE10_CAB_PRODUCTOS.PYMINVE10_NOACTIVO = 0              */

    INTO :MARCA,
         :RELA_SOCSYST01,
         :CATEGORIA,
         :FAMILIA,
         :PYMINVE10_CODIGO,
         :PYMINVE10_DESCRIPCION,
         :PYMINVE10_MAXDESC,
         :ID_PYMINVE10,
         :PYMINVE10_PCOSTO,
         :PYMINVE10_UTILIDAD,
         :BUSQUEDA,
         :STOCK,
         :MTC,
         :pyminve10_utilidad_x_empq,
         :pyminve10_lotesize,
         :pyminve10_modeloregalo
    DO
    BEGIN
        select first 1 PYMINVE20_MOV_UPLOADS.id_pyminve20
        from PYMINVE20_MOV_UPLOADS
        where PYMINVE20_MOV_UPLOADS.rela_pyminve10 = :ID_PYMINVE10
        into :CONIMAGENES;

        if (CONIMAGENES is null) then
            CONIMAGENES = 0;

        SELECT FIRST 1 PYMINVE15_DET_PRECIOS.ID_PYMINVE15
        FROM PYMINVE15_DET_PRECIOS
        WHERE PYMINVE15_DET_PRECIOS.RELA_PYMINVE10 = :ID_PYMINVE10
        INTO :CONPRECIOS;

        IF (:CONPRECIOS IS NULL) THEN
            CONPRECIOS = 0;

        costo_proveedor = null;
        select min(PYMINVE12_DET_PROVEEDORES.pyminve12_importe)
        from PYMINVE12_DET_PROVEEDORES
        where PYMINVE12_DET_PROVEEDORES.rela_pyminve10 = :ID_PYMINVE10
        into :costo_proveedor;

        if (costo_proveedor is not null) then
            PYMINVE10_PCOSTO = costo_proveedor;

        PYMINVE10_PVENTA = PYMINVE10_PCOSTO + ((PYMINVE10_PCOSTO * PYMINVE10_UTILIDAD) / 100);
        
        if (pyminve10_utilidad_x_empq = 1) then
            PYMINVE10_PVENTA = PYMINVE10_PVENTA * pyminve10_lotesize;

        suspend;
    END
end
PRD_PYMINVE36_RECONSTRUYE      

DECLARE VARIABLE RELA_SOCSYST10_MODELO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TALLA BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_COLOR BIGINT;
DECLARE VARIABLE CANTIDADMTC DOUBLE PRECISION;
begin
    delete from PYMINVE36_MOV_CANTIDADES;
    delete from PYMINVE37_MOV_CANTIDADES_MTC;

    for select
    VW_PYMINVE30_STOCK_ALMA_X_ORGA.rela_socsyst01,
    VW_PYMINVE30_STOCK_ALMA_X_ORGA.rela_pyminve10,
    VW_PYMINVE30_STOCK_ALMA_X_ORGA.rela_socwflo01,
    VW_PYMINVE30_STOCK_ALMA_X_ORGA.rela_pyminve40,
    VW_PYMINVE30_STOCK_ALMA_X_ORGA.pyminve30_cantidad,
    VW_PYMINVE30_STOCK_ALMA_X_ORGA.PYMINVE10_MTC
    from VW_PYMINVE30_STOCK_ALMA_X_ORGA
    WHERE VW_PYMINVE30_STOCK_ALMA_X_ORGA.rela_socsyst01 = :rela_socsyst01X

    into :rela_socsyst01,
         :rela_pyminve10,
         :rela_socwflo01,
         :rela_pyminve40,
         :pyminve30_cantidad,
         :PYMINVE10_MTC
    do
    begin
        if (PYMINVE10_MTC = 0) then
        begin
            insert into PYMINVE36_MOV_CANTIDADES(
                        PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE10,
                        PYMINVE36_MOV_CANTIDADES.RELA_SOCWFLO01,
                        PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE40,
                        PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD)
                 values(:rela_pyminve10,
                        :rela_socwflo01,
                        :rela_pyminve40,
                        :pyminve30_cantidad);
        end
        else
        begin
            for select
            PYMINVE35_DEP_MTC.rela_socsyst10_modelo,
            PYMINVE35_DEP_MTC.rela_socsyst10_talla,
            PYMINVE35_DEP_MTC.rela_socsyst10_color,
            sum(PYMINVE30_MOV_STOCK.pyminve30_cantidad)
            from PYMINVE30_MOV_STOCK
            inner join PYMINVE35_DEP_MTC on (PYMINVE30_MOV_STOCK.id_pyminve30 = PYMINVE35_DEP_MTC.rela_pyminve30)
            where PYMINVE30_MOV_STOCK.rela_pyminve10 = :rela_pyminve10
              and PYMINVE30_MOV_STOCK.rela_socwflo01 = :rela_socwflo01
              and PYMINVE30_MOV_STOCK.rela_pyminve40 = :rela_pyminve40
            group by
            PYMINVE35_DEP_MTC.rela_socsyst10_modelo,
            PYMINVE35_DEP_MTC.rela_socsyst10_talla,
            PYMINVE35_DEP_MTC.rela_socsyst10_color
            into :rela_socsyst10_modelo,
                 :rela_socsyst10_talla,
                 :rela_socsyst10_color,
                 :cantidadmtc
            do
            begin
                insert into PYMINVE37_MOV_CANTIDADES_MTC(
                            PYMINVE37_MOV_CANTIDADES_MTC.RELA_PYMINVE10,
                            PYMINVE37_MOV_CANTIDADES_MTC.RELA_SOCWFLO01,
                            PYMINVE37_MOV_CANTIDADES_MTC.RELA_PYMINVE40,
                            PYMINVE37_MOV_CANTIDADES_MTC.rela_socsyst10_modelo,
                            PYMINVE37_MOV_CANTIDADES_MTC.rela_socsyst10_talla,
                            PYMINVE37_MOV_CANTIDADES_MTC.rela_socsyst10_color,
                            PYMINVE37_MOV_CANTIDADES_MTC.pyminve37_cantidad)
                 values(:rela_pyminve10,
                        :rela_socwflo01,
                        :rela_pyminve40,
                        :rela_socsyst10_modelo,
                        :rela_socsyst10_talla,
                        :rela_socsyst10_color,
                        :cantidadmtc);
            end
        end
        
        suspend;

    end
    

end
PRD_ON2REGI04                  

DECLARE VARIABLE ENTIDADX CHAR(255);
begin
    if ((MODALIDAD = '') OR (MODALIDAD IS NULL)) then
    BEGIN
        FOR SELECT
            ON2REGI04_DESPACHO,
            ON2REGI04_DIRECCION,
            ON2REGI04_PAGWEB,
            ON2REGI04_TELEFONO,
            ON2REGI04_NOTAS,
            TIPO_REFERENCIA1,
            ON2REGI04_REFERENCIAS,
            ON2REGI04_CORREO,
            TIPO_REFERENCIA2,
            ON2REGI04_REFERENCIAS2,
            ON2REGI04_CORREO2,
            SOCUSUA42_CODPOSTAL,
            SOCUSUA42_ASENTAMIENTO,
            SOCUSUA42_ASENTAMIENTO_TIPO,
            SOCUSUA42_MUNICIPIO,
            SOCUSUA42_ESTADOPROVINCIA,
            SOCUSUA42_CIUDAD,
            SOCUSUA42_ZONA,
            ON2REGI04_FAPL,
            ID_ON2REGI04,
            ENTIDAD
        FROM GRID_ON2REGI04 WHERE CLAVE like '%' || UPPER(TRIM(:BUSQUEDA)) || '%'
        INTO :ON2REGI04_DESPACHO,
            :ON2REGI04_DIRECCION,
            :ON2REGI04_PAGWEB,
            :ON2REGI04_TELEFONO,
            :ON2REGI04_NOTAS,
            :TIPO_REFERENCIA1,
            :ON2REGI04_REFERENCIAS,
            :ON2REGI04_CORREO,
            :TIPO_REFERENCIA2,
            :ON2REGI04_REFERENCIAS2,
            :ON2REGI04_CORREO2,
            :SOCUSUA42_CODPOSTAL,
            :SOCUSUA42_ASENTAMIENTO,
            :SOCUSUA42_ASENTAMIENTO_TIPO,
            :SOCUSUA42_MUNICIPIO,
            :SOCUSUA42_ESTADOPROVINCIA,
            :SOCUSUA42_CIUDAD,
            :SOCUSUA42_ZONA,
            :ON2REGI04_FAPL,
            :ID_ON2REGI04,
            :ENTIDAD
        DO
        BEGIN
            MARCA = :MARCAX;
            suspend;
        END

    END
    else
    begin
        BUSQUEDA = '''' || '%' || UPPER(TRIM(:BUSQUEDA)) || '%' || '''';

        FOR EXECUTE STATEMENT 'SELECT
            ON2REGI04_DESPACHO,
            ON2REGI04_DIRECCION,
            ON2REGI04_PAGWEB,
            ON2REGI04_TELEFONO,
            ON2REGI04_NOTAS,
            TIPO_REFERENCIA1,
            ON2REGI04_REFERENCIAS,
            ON2REGI04_CORREO,
            TIPO_REFERENCIA2,
            ON2REGI04_REFERENCIAS2,
            ON2REGI04_CORREO2,
            SOCUSUA42_CODPOSTAL,
            SOCUSUA42_ASENTAMIENTO,
            SOCUSUA42_ASENTAMIENTO_TIPO,
            SOCUSUA42_MUNICIPIO,
            SOCUSUA42_ESTADOPROVINCIA,
            SOCUSUA42_CIUDAD,
            SOCUSUA42_ZONA,
            ON2REGI04_FAPL,
            ID_ON2REGI04,
            ENTIDAD
            FROM GRID_ON2REGI04 WHERE UPPER(TRIM(' || MODALIDAD || ')) like ' || BUSQUEDA
        INTO :ON2REGI04_DESPACHO,
             :ON2REGI04_DIRECCION,
             :ON2REGI04_PAGWEB,
             :ON2REGI04_TELEFONO,
             :ON2REGI04_NOTAS,
             :TIPO_REFERENCIA1,
             :ON2REGI04_REFERENCIAS,
             :ON2REGI04_CORREO,
             :TIPO_REFERENCIA2,
             :ON2REGI04_REFERENCIAS2,
             :ON2REGI04_CORREO2,
             :SOCUSUA42_CODPOSTAL,
             :SOCUSUA42_ASENTAMIENTO,
             :SOCUSUA42_ASENTAMIENTO_TIPO,
             :SOCUSUA42_MUNICIPIO,
             :SOCUSUA42_ESTADOPROVINCIA,
             :SOCUSUA42_CIUDAD,
             :SOCUSUA42_ZONA,
             :ON2REGI04_FAPL,
             :ID_ON2REGI04,
             :ENTIDADX
        DO
        begin
            MARCA = :MARCAX;
            ENTIDAD = CAST(ENTIDADX AS VARCHAR(300));
            SUSPEND;
        end

    end
end
SOC$_CFDIXMLS_ENTIDADES_REPARA 

DECLARE VARIABLE RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE RELA_SICINGR01 BIGINT;
DECLARE VARIABLE RELA_SICEGRE01 BIGINT;
DECLARE VARIABLE RELA_SRHMAIN10 BIGINT;
DECLARE VARIABLE SCEXMLS11_RFC VARCHAR(50);
DECLARE VARIABLE STRCODARCOTIPO VARCHAR(50);
begin
    FOR SELECT
    scexmls11_det_migracion.rela_socsyst10,
    scexmls11_det_migracion.rela_sicingr01,
    scexmls11_det_migracion.rela_sicegre01,
    scexmls11_det_migracion.rela_srhmain10,
    scexmls11_det_migracion.id_scexmls11,
    scexmls11_det_migracion.scexmls11_rfc
    FROM scexmls11_det_migracion
    INNER JOIN scexmls10_cab_migracion on (scexmls10_cab_migracion.id_scexmls10 = scexmls11_det_migracion.rela_scexmls10)
    where scexmls10_cab_migracion.rela_socsyst01 = :rela_socsyst01
    and scexmls11_det_migracion.scexmls11_error is null
    into :rela_socsyst10,
         :rela_sicingr01,
         :rela_sicegre01,
         :rela_srhmain10,
         :id_scexmls11,
         :scexmls11_rfc
    do
    begin
        STATUS = 'Sin Referencia de Entidad';
        Select socsyst10_tbl_listaestados.socsyst10_codigo
        from socsyst10_tbl_listaestados
        where socsyst10_tbl_listaestados.id_socsyst10 = :rela_socsyst10
        into :strCodArcoTipo;

        if ((strCodArcoTipo = 'CLIENTE' AND rela_sicingr01 IS null) or
            (strCodArcoTipo = 'PROVE' AND rela_sicegre01 IS null) or
            (strCodArcoTipo = 'NOMI' AND rela_srhmain10 IS null)) then
        BEGIN
            if (strCodArcoTipo = 'CLIENTE' AND rela_sicingr01 IS null) then
            begin
                select VW_RFC_POR_RFC.id
                from VW_RFC_POR_RFC('C', :scexmls11_rfc, -1)
                into :ID_ENTIDAD;

                STATUS = 'Corrigiendo Entidad Cliente RFC ' || :scexmls11_rfc;
                if (ID_ENTIDAD is null) then
                    STATUS = 'No se encontro el RFC del Cliente';
                else
                    update scexmls11_det_migracion set scexmls11_det_migracion.rela_sicingr01 = :ID_ENTIDAD
                    where scexmls11_det_migracion.id_scexmls11 = :id_scexmls11;

            end
            else if (strCodArcoTipo = 'PROVE' AND rela_sicegre01 IS null) then
            begin
                select VW_RFC_POR_RFC.id
                from VW_RFC_POR_RFC('P', :scexmls11_rfc, -1)
                into :ID_ENTIDAD;

                STATUS = 'Corrigiendo Entidad Proveedor RFC ' || :scexmls11_rfc;
                if (ID_ENTIDAD is null) then
                    STATUS = 'No se encontro el RFC del Proveedor';
                else
                    update scexmls11_det_migracion set scexmls11_det_migracion.rela_sicegre01 = :ID_ENTIDAD
                    where scexmls11_det_migracion.id_scexmls11 = :id_scexmls11;

            end
            else if (strCodArcoTipo = 'NOMI' AND rela_srhmain10 IS null) then
            begin
                select VW_RFC_POR_RFC.id
                from VW_RFC_POR_RFC('E', :scexmls11_rfc, -1)
                into :ID_ENTIDAD;

                STATUS = 'Corrigiendo Entidad Empleado RFC ' || :scexmls11_rfc;
                if (ID_ENTIDAD is null) then
                    STATUS = 'No se encontro el RFC del Empleado';
                else
                    update scexmls11_det_migracion set scexmls11_det_migracion.rela_srhmain10 = :ID_ENTIDAD
                    where scexmls11_det_migracion.id_scexmls11 = :id_scexmls11;


            end
            else 
                STATUS = 'Con Referencia Asignada con Código ' || strCodArcoTipo;
        END

        suspend;
    end
end
PRD_MSGPOLI01_MSGPOLI02_XMLS   

DECLARE VARIABLE RELA_MSGPOLI01_ORIGEN BIGINT;
DECLARE VARIABLE SCEXMLS41_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_POLIZA_ORIGEN DOUBLE PRECISION;
DECLARE VARIABLE PORCENTAJE DOUBLE PRECISION;
DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE RELA_SICCONT02_DESCUENTO_I BIGINT;
DECLARE VARIABLE RELA_SICCONT02_DESCUENTO_E BIGINT;
DECLARE VARIABLE RELA_SICCONT02_DESCUENTO BIGINT;
DECLARE VARIABLE SCEXMLS11_DESCUENTO DOUBLE PRECISION;
DECLARE VARIABLE CONCEPTOS_CANTIDAD INTEGER;
DECLARE VARIABLE DESCUENTO_REAL DOUBLE PRECISION;
begin
    select msgpoli01_cab_polizas.rela_socsyst01
    from msgpoli01_cab_polizas
    where msgpoli01_cab_polizas.id_msgpoli01 = :RELA_MSGPOLI01
    into :rela_socsyst01;

    select
    scexmls20_cab_parametrizacion.rela_siccont02_descuento_i,
    scexmls20_cab_parametrizacion.rela_siccont02_descuento_e
    from scexmls20_cab_parametrizacion
    where scexmls20_cab_parametrizacion.rela_socsyst01 = :rela_socsyst01
    into :rela_siccont02_descuento_i,
         :rela_siccont02_descuento_e;

    for Select
    scexmls11_det_migracion.rela_msgpoli01,
    codigo.socsyst10_codigo,
    accion.socsyst10_codigo,
    SCEXMLS41_DET_XMLS.scexmls41_importe,
    scexmls11_det_migracion.scexmls11_uuid_importe,
    scexmls11_det_migracion.scexmls11_descuento,
    (select count(scexmls13_det_conceptos.id_scexmls13)
     from scexmls13_det_conceptos
     where scexmls13_det_conceptos.rela_scexmls11 = scexmls11_det_migracion.id_scexmls11
    )
    from SCEXMLS40_CAB_POLIZAS
    inner join SCEXMLS41_DET_XMLS on (SCEXMLS41_DET_XMLS.rela_scexmls40 = SCEXMLS40_CAB_POLIZAS.id_scexmls40)
    inner join scexmls11_det_migracion on (scexmls11_det_migracion.id_scexmls11 = SCEXMLS41_DET_XMLS.rela_scexmls11)
    inner join msgpoli01_cab_polizas on (msgpoli01_cab_polizas.id_msgpoli01 = SCEXMLS40_CAB_POLIZAS.rela_msgpoli01)
    inner join socsyst10_tbl_listaestados codigo on (codigo.id_socsyst10 = msgpoli01_cab_polizas.rela_socsyst10)
    inner join socsyst10_tbl_listaestados accion on (accion.id_socsyst10 = msgpoli01_cab_polizas.rela_socsyst10_accion)
    where SCEXMLS40_CAB_POLIZAS.rela_msgpoli01 = :rela_msgpoli01
    into :rela_msgpoli01_origen,
         :SOCSYST10_CODIGO,
         :SOCSYST10_CODIGO_ACCION,
         :SCEXMLS41_IMPORTE,
         :IMPORTE_POLIZA_ORIGEN,
         :scexmls11_descuento,
         :CONCEPTOS_CANTIDAD
    do
    begin
        descuento_real = scexmls11_descuento / CONCEPTOS_CANTIDAD;

        if (SOCSYST10_CODIGO = 'PO-1-ING') then
            rela_siccont02_descuento = rela_siccont02_descuento_i;
        ELSE
            rela_siccont02_descuento = rela_siccont02_descuento_e;

        for Select
        msgpoli02_det_polizas.rela_siccont02,
        siccont02_arb_plancta_emp.siccont02_tipo,
        siccont02_arb_plancta_emp.siccont02_codigo,
        siccont02_arb_plancta_emp.siccont02_codext,
        siccont02_arb_plancta_emp.siccont02_descri,
        msgpoli02_det_polizas.msgpoli02_debe,
        msgpoli02_det_polizas.msgpoli02_haber
        from msgpoli01_cab_polizas
        inner join msgpoli02_det_polizas on (msgpoli02_det_polizas.rela_msgpoli01 = msgpoli01_cab_polizas.id_msgpoli01)
        inner join siccont02_arb_plancta_emp on (siccont02_arb_plancta_emp.id_siccont02 = msgpoli02_det_polizas.rela_siccont02)
        where msgpoli01_cab_polizas.id_msgpoli01 = :rela_msgpoli01_origen
        --and msgpoli02_det_polizas.rela_siccont02 <> :rela_siccont02_descuento
        into :rela_siccont02,
             :siccont02_tipo,
             :siccont02_codigo,
             :siccont02_codext,
             :siccont02_descri,
             :msgpoli02_debe,
             :msgpoli02_haber
        do
        begin
            if ((msgpoli02_debe + msgpoli02_haber) <> 0) then
            begin
                MSGPOLI02_SALDO = 0;
                PORCENTAJE = 100;

                if (scexmls11_descuento = 0) then
                begin
                    if (SCEXMLS41_IMPORTE <> IMPORTE_POLIZA_ORIGEN) then
                        PORCENTAJE = (SCEXMLS41_IMPORTE / IMPORTE_POLIZA_ORIGEN) * 100;

                    if (msgpoli02_debe <> 0) then
                    BEGIN
                        MSGPOLI02_SALDO =  msgpoli02_debe - ((msgpoli02_debe * PORCENTAJE) / 100);
                        msgpoli02_debe = (msgpoli02_debe * PORCENTAJE) / 100;
                    END
                    else
                    BEGIN
                        MSGPOLI02_SALDO =  msgpoli02_haber - ((msgpoli02_haber * PORCENTAJE) / 100);
                        msgpoli02_haber = (msgpoli02_haber * PORCENTAJE) / 100;
                    end
                end
                else
                begin
                    if (SCEXMLS41_IMPORTE <> IMPORTE_POLIZA_ORIGEN) then
                        PORCENTAJE = (SCEXMLS41_IMPORTE / IMPORTE_POLIZA_ORIGEN) * 100;

                    if (SOCSYST10_CODIGO = 'PO-1-ING') then
                    begin
                        if (msgpoli02_debe <> 0) then
                        BEGIN
                            MSGPOLI02_SALDO =  msgpoli02_debe - ((msgpoli02_debe * PORCENTAJE) / 100);
                            msgpoli02_debe = (msgpoli02_debe * PORCENTAJE) / 100;
                        END
                        else
                        BEGIN
                            MSGPOLI02_SALDO = msgpoli02_haber - (((msgpoli02_haber - descuento_real) * PORCENTAJE) / 100);
                            MSGPOLI02_SALDO = MSGPOLI02_SALDO - descuento_real;
                            msgpoli02_haber = ((msgpoli02_haber - descuento_real) * PORCENTAJE) / 100;
                        end
                    end
                    else
                    begin
                        if (msgpoli02_debe <> 0) then
                        BEGIN
                            MSGPOLI02_SALDO =  msgpoli02_debe - (((msgpoli02_debe - descuento_real) * PORCENTAJE) / 100);
                            MSGPOLI02_SALDO = MSGPOLI02_SALDO - descuento_real;
                            msgpoli02_debe = ((msgpoli02_debe - descuento_real) * PORCENTAJE) / 100;
                        END
                        else
                        BEGIN
                            MSGPOLI02_SALDO =  msgpoli02_haber - ((msgpoli02_haber * PORCENTAJE) / 100);
                            msgpoli02_haber = (msgpoli02_haber * PORCENTAJE) / 100;
                        end
                    end
                end

                suspend;
            end





            /*
             if (SOCSYST10_CODIGO = 'PO-1-ING') then
             begin
                if (msgpoli02_debe <> 0) then
                BEGIN
                    if (SCEXMLS41_IMPORTE <> IMPORTE_POLIZA_ORIGEN) then
                        PORCENTAJE = (SCEXMLS41_IMPORTE / (IMPORTE_POLIZA_ORIGEN)) * 100;

                    MSGPOLI02_SALDO =  msgpoli02_debe - ((msgpoli02_debe * PORCENTAJE) / 100);
                    msgpoli02_debe = (msgpoli02_debe * PORCENTAJE) / 100;
                END
                else
                BEGIN
                    if (SCEXMLS41_IMPORTE <> IMPORTE_POLIZA_ORIGEN) then
                    PORCENTAJE = (SCEXMLS41_IMPORTE / (IMPORTE_POLIZA_ORIGEN + scexmls11_descuento)) * 100;

                    MSGPOLI02_SALDO =  msgpoli02_haber - ((msgpoli02_haber * PORCENTAJE) / 100);
                    msgpoli02_haber = (msgpoli02_haber * PORCENTAJE) / 100;
                end
             end
             else
             begin
                if (msgpoli02_haber <> 0) then
                BEGIN
                    if (SCEXMLS41_IMPORTE <> IMPORTE_POLIZA_ORIGEN) then
                        PORCENTAJE = (SCEXMLS41_IMPORTE / (IMPORTE_POLIZA_ORIGEN)) * 100;

                    MSGPOLI02_SALDO =  msgpoli02_debe - ((msgpoli02_debe * PORCENTAJE) / 100);
                    msgpoli02_debe = (msgpoli02_debe * PORCENTAJE) / 100;
                END
                else
                BEGIN
                    if (SCEXMLS41_IMPORTE <> IMPORTE_POLIZA_ORIGEN) then
                    PORCENTAJE = (SCEXMLS41_IMPORTE / (IMPORTE_POLIZA_ORIGEN + scexmls11_descuento)) * 100;

                    MSGPOLI02_SALDO =  msgpoli02_haber - ((msgpoli02_haber * PORCENTAJE) / 100);
                    msgpoli02_haber = (msgpoli02_haber * PORCENTAJE) / 100;
                end
             end

            */


        end
    end
end
REP_PYMINVE30_STOCK            

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  SELECT
      SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01,
      SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
      SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO = :PARAM_ORGA
  INTO
      :RELA_SOCWFLO01,
      :SUCURSAL,
      :SUCURSAL_CODIGO;

  DELETE FROM ZTMPINVE30_MOVIMIENTOS
  WHERE ZTMPINVE30_MOVIMIENTOS.USUARIO = CURRENT_USER;

  INSERT INTO ZTMPINVE30_MOVIMIENTOS
      SELECT
          CURRENT_USER,
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
          SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD),
          CAST(PYMINVE30_MOV_STOCK.PYMINVE30_FAPL AS DATE)
      FROM PYMINVE30_MOV_STOCK
      WHERE PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :RELA_SOCWFLO01
        AND CAST(PYMINVE30_MOV_STOCK.PYMINVE30_FAPL AS DATE) BETWEEN :PARAM_FDESDE AND :PARAM_FHASTA
      GROUP BY
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
          PYMINVE30_MOV_STOCK.PYMINVE30_FAPL;

  IF (:PARAM_ACTIVIDAD = -1) THEN
    FOR
      SELECT
          ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE50,
          ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE10,
          PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10,
          PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO + ((PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD) / 100),
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
          ((PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX - PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN) / 2 + PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN),
          TIPO.SOCSYST10_FILTRO_DES,
          PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO,
          STRREPEAT(' ',SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL*2) || PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
          ZTMPINVE30_MOVIMIENTOS.CANTIDAD,
          ZTMPINVE30_MOVIMIENTOS.FECHA
      FROM ZTMPINVE30_MOVIMIENTOS
      INNER JOIN PYMINVE50_CAB_CONCEPTOS ON (ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO ON (PYMINVE50_CAB_CONCEPTOS.RELA_SOCSYST10 = TIPO.ID_SOCSYST10)
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
      INNER JOIN PYMINVE40_ARB_LOCACIONES ON (ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
      INNER JOIN SOCSYST06_DET_ARBNIVELES ON (PYMINVE40_ARB_LOCACIONES.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
      WHERE ZTMPINVE30_MOVIMIENTOS.USUARIO = CURRENT_USER
        AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      INTO
          :RELA_PYMINVE50,
          :RELA_PYMINVE10,
          :RELA_SOCSYST10,
          :RELA_SOCSYST10_FAMILIA,
          :PRODUCTO_CODIGO,
          :PRODUCTO,
          :CATEGORIA,
          :FAMILIA,
          :PRECIO_COSTO,
          :PRECIO_VENTA,
          :STOCKMIN,
          :STOCKMAX,
          :TIPO,
          :CONCEPTO,
          :LOCACION_CODIGO,
          :LOCACION,
          :CANTIDAD,
          :FECHA
    DO
    BEGIN
      STOCKACTUAL = 0;

      SELECT SUM(PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD)
      FROM PYMINVE36_MOV_CANTIDADES
      WHERE PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE10 = :RELA_PYMINVE10
      INTO :STOCKACTUAL;

      SUSPEND;
    END
  ELSE
    FOR
      SELECT
          ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE50,
          ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE10,
          PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10,
          PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO + ((PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD) / 100),
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
          ((PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX - PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN) / 2 + PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN),
          TIPO.SOCSYST10_FILTRO_DES,
          PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO,
          STRREPEAT(' ',SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL*2) || PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
          ZTMPINVE30_MOVIMIENTOS.CANTIDAD,
          ZTMPINVE30_MOVIMIENTOS.FECHA
      FROM ZTMPINVE30_MOVIMIENTOS
      INNER JOIN PYMINVE50_CAB_CONCEPTOS ON (ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO ON (PYMINVE50_CAB_CONCEPTOS.RELA_SOCSYST10 = TIPO.ID_SOCSYST10)
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
      INNER JOIN PYMINVE40_ARB_LOCACIONES ON (ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
      INNER JOIN SOCSYST06_DET_ARBNIVELES ON (PYMINVE40_ARB_LOCACIONES.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
      WHERE ZTMPINVE30_MOVIMIENTOS.USUARIO = CURRENT_USER
        AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE50 = :PARAM_ACTIVIDAD
      INTO
          :RELA_PYMINVE50,
          :RELA_PYMINVE10,
          :RELA_SOCSYST10,
          :RELA_SOCSYST10_FAMILIA,
          :PRODUCTO_CODIGO,
          :PRODUCTO,
          :CATEGORIA,
          :FAMILIA,
          :PRECIO_COSTO,
          :PRECIO_VENTA,
          :STOCKMIN,
          :STOCKMAX,
          :TIPO,
          :CONCEPTO,
          :LOCACION_CODIGO,
          :LOCACION,
          :CANTIDAD,
          :FECHA
    DO
    BEGIN
      STOCKACTUAL = 0;

      SELECT SUM(PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD)
      FROM PYMINVE36_MOV_CANTIDADES
      WHERE PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE10 = :RELA_PYMINVE10
      INTO :STOCKACTUAL;

      SUSPEND;
    END
END
REP_PYMVENT10_CONCENTRADO      

BEGIN
    FOR
      SELECT
          PYMVENT01_CAB_CAJAS.RELA_SOCWFLO01,
          PYMVENT01_CAB_CAJAS.RELA_SOCSYST01,
          PYMVENT01_CAB_CAJAS.ID_PYMVENT01,
          PYMVENT01_CAB_CAJAS.PYMVENT01_DESCRIPCION,
          PYMVENT01_CAB_CAJAS.PYMVENT01_CODIGO,
          SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          SUM(DNVL(GRID_PYMVENT10_TOTALES.PYMVENT20_SUBTOTAL,0)),
          SUM(DNVL(GRID_PYMVENT10_TOTALES.PYMVENT20_DESCUENTOS,0)),
          SUM(DNVL(GRID_PYMVENT10_TOTALES.PYMVENT20_TOTAL,0)),
          SUM(DNVL(GRID_PYMVENT10_TOTALES.PYMVENT21_ADEUDO,0)),
          SUM(INVL(GRID_PYMVENT10_TOTALES.MOVIMIENTOS,0))
      FROM PYMVENT10_CAB_APERTURACIERRE
      INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
      INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT01_CAB_CAJAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT01_CAB_CAJAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN GRID_PYMVENT10_TOTALES ON (PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10 = GRID_PYMVENT10_TOTALES.RELA_PYMVENT10)
      WHERE PYMVENT01_CAB_CAJAS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT10_CAB_APERTURACIERRE.PYMVENT10_FECHA BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
      GROUP BY
        PYMVENT01_CAB_CAJAS.RELA_SOCWFLO01,
        PYMVENT01_CAB_CAJAS.RELA_SOCSYST01,
        PYMVENT01_CAB_CAJAS.ID_PYMVENT01,
        PYMVENT01_CAB_CAJAS.PYMVENT01_DESCRIPCION,
        PYMVENT01_CAB_CAJAS.PYMVENT01_CODIGO,
        SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
        SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
      INTO
          :RELA_SOCWFLO01,
          :RELA_SOCSYST01,
          :ID_PYMVENT01,
          :CAJA,
          :CAJA_CODIGO,
          :EMPRESA,
          :SUCURSAL,
          :SUBTOTAL,
          :DESCUENTOS,
          :TOTAL,
          :ADEUDO,
          :MOVIMIENTOS
    DO
    BEGIN
        SUSPEND;
    END
END
PRD_PYMINVE25_PEDIDOS          

DECLARE VARIABLE PYMINVE27_CANTIDAD DOUBLE PRECISION;
DECLARE VARIABLE STATUS_CONT INTEGER;
begin
    FOR SELECT
    PYMINVE25_CAB_PEDIDOS.RELA_SOCWFLO01,
    PYMINVE25_CAB_PEDIDOS.RELA_SOCSYST01,
    PYMINVE25_CAB_PEDIDOS.RELA_SICEGRE01,
    PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25,
    PYMINVE25_CAB_PEDIDOS.PYMINVE25_DOCNRO,
    PYMINVE25_CAB_PEDIDOS.PYMINVE25_FENTREGA,
    SUM(PYMINVE26_DET_PEDIDOS.PYMINVE26_CANTIDAD),
    SUM(PYMINVE26_DET_PEDIDOS.PYMINVE26_TOTAL)
    FROM PYMINVE25_CAB_PEDIDOS
    INNER JOIN PYMINVE26_DET_PEDIDOS ON (PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25 = PYMINVE26_DET_PEDIDOS.RELA_PYMINVE25)
    WHERE PYMINVE25_CAB_PEDIDOS.RELA_SOCWFLO01 = :rela_socwflo01x
    AND PYMINVE25_CAB_PEDIDOS.rela_socsyst01 = :rela_socsyst01x
    AND PYMINVE25_CAB_PEDIDOS.rela_sicegre01 = :rela_sicegre01x
    and PYMINVE25_CAB_PEDIDOS.pyminve25_fentrega between :fecha_desde and :fecha_hasta

    GROUP BY
    PYMINVE25_CAB_PEDIDOS.RELA_SOCWFLO01,
    PYMINVE25_CAB_PEDIDOS.RELA_SOCSYST01,
    PYMINVE25_CAB_PEDIDOS.RELA_SICEGRE01,
    PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25,
    PYMINVE25_CAB_PEDIDOS.PYMINVE25_DOCNRO,
    PYMINVE25_CAB_PEDIDOS.PYMINVE25_FENTREGA
    INTO :RELA_SOCWFLO01,
         :RELA_SOCSYST01,
         :RELA_SICEGRE01,
         :ID_PYMINVE25,
         :PYMINVE25_DOCNRO,
         :PYMINVE25_FENTREGA,
         :CANTIDAD,
         :TOTAL
    DO
    BEGIN
        SELECT SUM(GRID_PYMINVE27.PYMINVE27_CANTIDAD)
        FROM GRID_PYMINVE27
        WHERE GRID_PYMINVE27.RELA_PYMINVE25 = :ID_PYMINVE25
        into :PYMINVE27_CANTIDAD;

        if (PYMINVE27_CANTIDAD IS NULL) then
            PYMINVE27_CANTIDAD = 0;

        if ((CANTIDAD - PYMINVE27_CANTIDAD) > 0) then
        BEGIN
            status = 'Pendiente';
            STATUS_CONT = 0;
        END
        else
        BEGIN
            status = 'Recibido';
            STATUS_CONT = 1;
        END
        
        if (STATUSX = STATUS_CONT) then
        BEGIN
            SELECT SUM(GRID_PYMINVE27.PYMINVE27_CANTIDAD)
            FROM GRID_PYMINVE27
            WHERE GRID_PYMINVE27.RELA_PYMINVE25 = :ID_PYMINVE25
            into :CANTIDAD_RECIBIDA;

            if (CANTIDAD_RECIBIDA is null) then
                CANTIDAD_RECIBIDA = 0;

            SELECT
            SUM(GRID_PYMINVE27.PYMINVE27_CANTIDAD * PYMINVE26_DET_PEDIDOS.PYMINVE26_IMPCOSTOUNI)
            FROM GRID_PYMINVE27
            INNER JOIN PYMINVE26_DET_PEDIDOS ON (GRID_PYMINVE27.RELA_PYMINVE26 = PYMINVE26_DET_PEDIDOS.ID_PYMINVE26)
            WHERE GRID_PYMINVE27.RELA_PYMINVE25 = :ID_PYMINVE25
            into :TOTAL_RECIBIDO;

            if (TOTAL_RECIBIDO is null) then
                TOTAL_RECIBIDO = 0;

            porcentaje = cantidad_recibida / CANTIDAD * 100;
            SUSPEND;
        END
    END
end
PRD_PYMINVE30_NROSERIES        

DECLARE VARIABLE VAR_NROLOTE VARCHAR(50);
BEGIN
  LOTE = '';

  IF (:PARAM_TABLA = 'PYMVENT21') THEN
    FOR
      SELECT DISTINCT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
      FROM PYMVENT21_DET_TICKETS
      INNER JOIN PYMINVE31_DEP_PROVEEDORES ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE = PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30)
      WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = :PARAM_ID
        AND PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = :PARAM_PYMINVE10
      INTO :VAR_NROLOTE
    DO
    BEGIN
      IF (STRLEN(:LOTE || VAR_NROLOTE || '  ') <= 1000) THEN
        LOTE = LOTE || VAR_NROLOTE || '  ';
    END
  ELSE
    IF (:PARAM_TABLA = 'PYMINGR06') THEN
      FOR
        SELECT DISTINCT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
        FROM PYMINGR06_DET_ITEMS
        INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINGR06_DET_ITEMS.RELA_PYMVENT21 = PYMVENT21_DET_TICKETS.ID_PYMVENT21)
        INNER JOIN PYMINVE31_DEP_PROVEEDORES ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE = PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30)
        WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :PARAM_ID
          AND PYMINGR06_DET_ITEMS.RELA_PYMINVE10 = :PARAM_PYMINVE10
        INTO :VAR_NROLOTE
      DO
      BEGIN
        IF (STRLEN(:LOTE || VAR_NROLOTE || '  ') <= 1000) THEN
          LOTE = LOTE || VAR_NROLOTE || '  ';
      END
    ELSE
      IF (:PARAM_TABLA = 'PYMINVE30') THEN
        FOR
          SELECT DISTINCT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
          FROM PYMINVE30_MOV_STOCK
          INNER JOIN PYMINVE31_DEP_PROVEEDORES ON (PYMINVE30_MOV_STOCK.ID_PYMINVE30 = PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30)
          WHERE PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :PARAM_ID
            AND PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = :PARAM_PYMINVE10
            AND PYMINVE30_MOV_STOCK.ID_PYMINVE30 NOT IN (SELECT PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE
                                                         FROM PYMVENT21_DET_TICKETS
                                                         WHERE PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = :PARAM_ID
                                                           AND PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = :PARAM_PYMINVE10)
          INTO :VAR_NROLOTE
        DO
        BEGIN
          IF (STRLEN(:LOTE || VAR_NROLOTE || '  ') <= 1000) THEN
            LOTE = LOTE || VAR_NROLOTE || '  ';
        END
      ELSE
        IF (:PARAM_TABLA = 'PYMINVE45') THEN
          FOR
            SELECT DISTINCT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
            FROM PYMINVE46_DET_TRANSFERENCIAS
            INNER JOIN PYMINVE30_MOV_sTOCK ON (PYMINVE46_DET_TRANSFERENCIAS.RELA_PYMINVE30 = PYMINVE30_MOV_sTOCK.ID_PYMINVE30)
            INNER JOIN PYMINVE31_DEP_PROVEEDORES ON (PYMINVE46_DET_TRANSFERENCIAS.RELA_PYMINVE30 = PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30)
            WHERE PYMINVE46_DET_TRANSFERENCIAS.RELA_PYMINVE45 = :PARAM_ID
              AND PYMINVE30_MOV_sTOCK.RELA_PYMINVE10 = :PARAM_PYMINVE10
            INTO :VAR_NROLOTE
          DO
          BEGIN
            IF (STRLEN(:LOTE || VAR_NROLOTE || '  ') <= 1000) THEN
              LOTE = LOTE || VAR_NROLOTE || '  ';
          END

  SUSPEND;
END
PRD_PYMINVE26                  

begin
    for SELECT
    PYMINVE26_DET_PEDIDOS.RELA_PYMINVE25,
    PYMINVE26_DET_PEDIDOS.RELA_PYMINVE10,
    PYMINVE26_DET_PEDIDOS.RELA_PYMINVE12,
    CAST(NULL AS BIGINT),
    CAST(NULL AS BIGINT),
    CAST(NULL AS BIGINT),
    PYMINVE26_DET_PEDIDOS.ID_PYMINVE26,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
    PYMINVE12_DET_PROVEEDORES.PYMINVE12_CODIGO,
    PYMINVE12_DET_PROVEEDORES.PYMINVE12_DESCRIPCION,
    PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
    PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE + (PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD / 100),
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_MTC,
    PYMINVE26_DET_PEDIDOS.PYMINVE26_CANTIDAD,
    PYMINVE26_DET_PEDIDOS.PYMINVE26_IMPCOSTOUNI,
    PYMINVE26_DET_PEDIDOS.PYMINVE26_TOTAL,
    CAST('No' AS VARCHAR(2)),
    CAST('' AS VARCHAR(50)),
    CAST('' AS VARCHAR(50)),
    CAST('' AS VARCHAR(50))
    FROM PYMINVE26_DET_PEDIDOS
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE26_DET_PEDIDOS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE26_DET_PEDIDOS.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
    WHERE NOT EXISTS(SELECT PYMINVE28_DEP_PEDIDOS.RELA_PYMINVE26
                 FROM PYMINVE28_DEP_PEDIDOS
                 WHERE PYMINVE28_DEP_PEDIDOS.RELA_PYMINVE26 = PYMINVE26_DET_PEDIDOS.ID_PYMINVE26)
    and PYMINVE26_DET_PEDIDOS.RELA_PYMINVE25 = :RELA_PYMINVE25X

    UNION ALL

    SELECT
    PYMINVE26_DET_PEDIDOS.RELA_PYMINVE25,
    PYMINVE26_DET_PEDIDOS.RELA_PYMINVE10,
    PYMINVE26_DET_PEDIDOS.RELA_PYMINVE12,
    PYMINVE28_DEP_PEDIDOS.RELA_SOCSYST10_MODELO,
    PYMINVE28_DEP_PEDIDOS.RELA_SOCSYST10_TALLA,
    PYMINVE28_DEP_PEDIDOS.RELA_SOCSYST10_COLOR,
    PYMINVE26_DET_PEDIDOS.ID_PYMINVE26,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
    PYMINVE12_DET_PROVEEDORES.PYMINVE12_CODIGO,
    PYMINVE12_DET_PROVEEDORES.PYMINVE12_DESCRIPCION,
    PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
    PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE + (PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD / 100),
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_MTC,
    PYMINVE26_DET_PEDIDOS.PYMINVE26_CANTIDAD,
    PYMINVE26_DET_PEDIDOS.PYMINVE26_IMPCOSTOUNI,
    PYMINVE26_DET_PEDIDOS.PYMINVE26_TOTAL,
    CAST('Si' AS VARCHAR(2)),
    MODELO.SOCSYST10_FILTRO_DES,
    TALLA.SOCSYST10_FILTRO_DES,
    COLOR.SOCSYST10_FILTRO_DES
    FROM PYMINVE26_DET_PEDIDOS
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE26_DET_PEDIDOS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE26_DET_PEDIDOS.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
INNER JOIN PYMINVE28_DEP_PEDIDOS ON (PYMINVE26_DET_PEDIDOS.ID_PYMINVE26 = PYMINVE28_DEP_PEDIDOS.RELA_PYMINVE26)
INNER JOIN SOCSYST10_TBL_LISTAESTADOS MODELO ON  (PYMINVE28_DEP_PEDIDOS.RELA_SOCSYST10_MODELO = MODELO.ID_SOCSYST10)
INNER JOIN SOCSYST10_TBL_LISTAESTADOS TALLA ON  (PYMINVE28_DEP_PEDIDOS.RELA_SOCSYST10_TALLA = TALLA.ID_SOCSYST10)
INNER JOIN SOCSYST10_TBL_LISTAESTADOS COLOR ON  (PYMINVE28_DEP_PEDIDOS.RELA_SOCSYST10_COLOR = COLOR.ID_SOCSYST10)
where PYMINVE26_DET_PEDIDOS.RELA_PYMINVE25 = :RELA_PYMINVE25X
into :RELA_PYMINVE25,
    :RELA_PYMINVE10,
    :RELA_PYMINVE12,
    :RELA_SOCSYST10_MODELO,
    :RELA_SOCSYST10_TALLA,
    :RELA_SOCSYST10_COLOR,
    :ID_PYMINVE26,
    :PYMINVE10_CODIGO,
    :PYMINVE10_DESCRIPCION,
    :PYMINVE12_CODIGO,
    :PYMINVE12_DESCRIPCION,
    :PYMINVE12_IMPORTE,
    :PYMINVE10_PCOSTO,
    :PYMINVE10_PVENTA,
    :PYMINVE10_UTILIDAD,
    :PYMINVE10_STOCKMIN,
    :PYMINVE10_STOCKMAX,
    :PYMINVE10_MTC,
    :PYMINVE26_CANTIDAD,
    :PYMINVE26_IMPCOSTOUNI,
    :PYMINVE26_TOTAL,
    :MTC,
    :MODELO,
    :TALLA,
    :COLOR
    do
    begin
        SELECT sum(PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD)
        FROM PYMINVE27_DET_RECEPCION
        WHERE PYMINVE27_DET_RECEPCION.RELA_PYMINVE26 = :ID_PYMINVE26
        into :restante;
        
        if (restante is null) then
            restante = 0;

        restante = PYMINVE26_CANTIDAD - restante;
        suspend;
    end
end
PRD_NOMINA_SALARIO             

BEGIN
  FOR
    SELECT
        SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10,
        SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_nom/*,
        (SELECT GRID_SRHMAIN10.ENTIDAD
         FROM GRID_SRHMAIN10
         WHERE GRID_SRHMAIN10.ID_SRHMAIN10 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10)*/
    FROM SRHNOMI01_CAB_SUELDOS
    INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01)
    WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    INTO :RELA_SRHMAIN10,
         :SALARIO/*,
         :EMPLEADO*/
  DO
  BEGIN
     SUSPEND;
  END
END
PRD_PYMINGR16_PYMINGR37        
BEGIN
    SELECT
        1,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO
    FROM PYMINGR37_MOV_ANTICIPOS
    INNER JOIN PYMINGR16_MOV_ANTICIPOS ON (PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR16 = PYMINGR16_MOV_ANTICIPOS.ID_PYMINGR16)
    INNER JOIN PYMINGR35_CAB_SALDOS ON (PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR35 = PYMINGR35_CAB_SALDOS.ID_PYMINGR35)
    INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMINGR35_CAB_SALDOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
    WHERE PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = :PARAM_MSGPOLI01
    INTO
        :TIPO,
        :REFERENCIA;

    IF (TIPO IS NULL) THEN
      SELECT
          2,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO
      FROM PYMINGR16_MOV_ANTICIPOS
      INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
      WHERE PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = :PARAM_MSGPOLI01
      INTO
          :TIPO,
          :REFERENCIA;

    SUSPEND;
END
PRD_PYMINGR30_ANTICIPOS        

DECLARE VARIABLE ID_SOCSYST10_ARCO BIGINT;
DECLARE VARIABLE ID_SOCSYST10_ACCION BIGINT;
DECLARE VARIABLE ID_SOCSYST10_CARGO BIGINT;
DECLARE VARIABLE ID_SOCSYST10_ABONO BIGINT;
DECLARE VARIABLE ID_SOCSYST10_TIPOPOLIZA BIGINT;
DECLARE VARIABLE ID_MSGPOLI01 BIGINT;
DECLARE VARIABLE ID_SICCONT02 BIGINT;
BEGIN
  IF (:PARAM_TIPO = 0) THEN
    BEGIN
      SELECT CBO_ARCO_ENTIDADES.ID_SOCSYST10
      FROM CBO_ARCO_ENTIDADES
      WHERE CBO_ARCO_ENTIDADES.SOCSYST10_CODIGO = 'CLIENTE'
      INTO :ID_SOCSYST10_ARCO;

      SELECT CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10
      FROM CBO_TIPOACCIONPOLIZAS
      WHERE CBO_TIPOACCIONPOLIZAS.SOCSYST10_CODIGO = 'AUTOANTICIPOS'
      INTO :ID_SOCSYST10_ACCION;

      SELECT CBO_COLUMNAS_POLIZAS.ID_SOCSYST10
      FROM CBO_COLUMNAS_POLIZAS
      WHERE CBO_COLUMNAS_POLIZAS.SOCSYST10_CODIGO = '0'
      INTO :ID_SOCSYST10_CARGO;

      SELECT CBO_COLUMNAS_POLIZAS.ID_SOCSYST10
      FROM CBO_COLUMNAS_POLIZAS
      WHERE CBO_COLUMNAS_POLIZAS.SOCSYST10_CODIGO = '1'
      INTO :ID_SOCSYST10_ABONO;

      SELECT CBO_TIPOSPOLIZAS.ID_SOCSYST10
      FROM CBO_TIPOSPOLIZAS
      WHERE CBO_TIPOSPOLIZAS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND CBO_TIPOSPOLIZAS.SOCSYST10_CODIGO = 'PO-1-ING'
      INTO :ID_SOCSYST10_TIPOPOLIZA;

      INSERT INTO MSGPOLI01_CAB_POLIZAS (MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                                         MSGPOLI01_CAB_POLIZAS.RELA_SOCUSUA02_ACCION,
                                         MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION,
                                         MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                                         MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                                         MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                                         MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                                         MSGPOLI01_CAB_POLIZAS.MSGPOLI01_IMPCANT,
                                         MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA)
                                 VALUES (:PARAM_SOCWFLO01,
                                         :PARAM_USER,
                                         :ID_SOCSYST10_ACCION,
                                         :ID_SOCSYST10_TIPOPOLIZA,
                                         :PARAM_EMPRESA,
                                         :PARAM_CONCEPTO,
                                         NULL,
                                         0,
                                         :PARAM_FECHA);

      SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
      FROM SOCUTIL02_TBL_ULTIDS
      WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
      INTO :ID_MSGPOLI01;

      SELECT GRID_SICCONT72_CTAS.RELA_SICCONT02
      FROM GRID_SICCONT72_CTAS
      WHERE GRID_SICCONT72_CTAS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND GRID_SICCONT72_CTAS.SOCSYST10_CODIGO = 'ANTICIPO'
      INTO :ID_SICCONT02;

      INSERT INTO MSGPOLI02_DET_POLIZAS (MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
                                         MSGPOLI02_DET_POLIZAS.RELA_SOCSYST01,
                                         MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
                                         MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_COLUM,
                                         MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_ARCO,
                                         MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
                                         MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE,
                                         MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER,
                                         MSGPOLI02_DET_POLIZAS.MSGPOLI02_ANO,
                                         MSGPOLI02_DET_POLIZAS.MSGPOLI02_MES)
                                 VALUES (:ID_MSGPOLI01,
                                         :PARAM_EMPRESA,
                                         :ID_SICCONT02,
                                         :ID_SOCSYST10_ABONO,
                                         :ID_SOCSYST10_ARCO,
                                         :PARAM_CLIENTE,
                                         0,
                                         :PARAM_IMPORTE,
                                         EXTRACTYEAR(:PARAM_FECHA),
                                         EXTRACTMONTH(:PARAM_FECHA));

      INSERT INTO MSGPOLI02_DET_POLIZAS (MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
                                         MSGPOLI02_DET_POLIZAS.RELA_SOCSYST01,
                                         MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
                                         MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_COLUM,
                                         MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_ARCO,
                                         MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
                                         MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE,
                                         MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER,
                                         MSGPOLI02_DET_POLIZAS.MSGPOLI02_ANO,
                                         MSGPOLI02_DET_POLIZAS.MSGPOLI02_MES)
                                 VALUES (:ID_MSGPOLI01,
                                         :PARAM_EMPRESA,
                                         :PARAM_BANCO,
                                         :ID_SOCSYST10_CARGO,
                                         :ID_SOCSYST10_ARCO,
                                         :PARAM_CLIENTE,
                                         :PARAM_IMPORTE,
                                         0,
                                         EXTRACTYEAR(:PARAM_FECHA),
                                         EXTRACTMONTH(:PARAM_FECHA));

      INSERT INTO PYMINGR30_CAB_DEPOSITOS (PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01,
                                           PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01,
                                           PYMINGR30_CAB_DEPOSITOS.RELA_SICINGR01,
                                           PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01,
                                           PYMINGR30_CAB_DEPOSITOS.RELA_SICCONT02_BANCO,
                                           PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP,
                                           PYMINGR30_CAB_DEPOSITOS.PYMINGR30_IMPORTE,
                                           PYMINGR30_CAB_DEPOSITOS.PYMINGR30_CONCILIADO,
                                           PYMINGR30_CAB_DEPOSITOS.PYMINGR30_ANTICIPO)
                                   VALUES (:PARAM_EMPRESA,
                                           :PARAM_ORGANIGRAMA,
                                           :PARAM_CLIENTE,
                                           :ID_MSGPOLI01,
                                           :PARAM_BANCO,
                                           :PARAM_FECHA,
                                           :PARAM_IMPORTE,
                                           0,
                                           1);

      OK = 1;
      SUSPEND;
    END
  ELSE
    IF (:PARAM_TIPO = 1) THEN
      BEGIN
        SELECT CBO_COLUMNAS_POLIZAS.ID_SOCSYST10
        FROM CBO_COLUMNAS_POLIZAS
        WHERE CBO_COLUMNAS_POLIZAS.SOCSYST10_CODIGO = '0'
        INTO :ID_SOCSYST10_CARGO;

        SELECT CBO_COLUMNAS_POLIZAS.ID_SOCSYST10
        FROM CBO_COLUMNAS_POLIZAS
        WHERE CBO_COLUMNAS_POLIZAS.SOCSYST10_CODIGO = '1'
        INTO :ID_SOCSYST10_ABONO;

        SELECT GRID_SICCONT72_CTAS.RELA_SICCONT02
        FROM GRID_SICCONT72_CTAS
        WHERE GRID_SICCONT72_CTAS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND GRID_SICCONT72_CTAS.SOCSYST10_CODIGO = 'ANTICIPO'
        INTO :ID_SICCONT02;

        SELECT PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01
        FROM PYMINGR30_CAB_DEPOSITOS
        WHERE PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 = :PARAM_ID
        INTO :ID_MSGPOLI01;

        UPDATE MSGPOLI01_CAB_POLIZAS
        SET MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION = :PARAM_CONCEPTO,
            MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA = :PARAM_FECHA
        WHERE MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = :ID_MSGPOLI01;

        UPDATE MSGPOLI02_DET_POLIZAS
        SET MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = :ID_SICCONT02,
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE = 0,
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER = :PARAM_IMPORTE,
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_ANO = EXTRACTYEAR(:PARAM_FECHA),
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_MES = EXTRACTMONTH(:PARAM_FECHA)
        WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = :ID_MSGPOLI01
          AND MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_COLUM = :ID_SOCSYST10_ABONO;

        UPDATE MSGPOLI02_DET_POLIZAS
        SET MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = :PARAM_BANCO,
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE = :PARAM_IMPORTE,
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER = 0,
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_ANO = EXTRACTYEAR(:PARAM_FECHA),
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_MES = EXTRACTMONTH(:PARAM_FECHA)
        WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = :ID_MSGPOLI01
          AND MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_COLUM = :ID_SOCSYST10_CARGO;

        UPDATE PYMINGR30_CAB_DEPOSITOS
        SET PYMINGR30_CAB_DEPOSITOS.PYMINGR30_IMPORTE = :PARAM_IMPORTE,
            PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP = :PARAM_FECHA
        WHERE PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 = :PARAM_ID;

        OK = 1;
        SUSPEND;
      END
    ELSE
      IF (:PARAM_TIPO = 2) THEN
        BEGIN
          DELETE FROM PYMINGR30_CAB_DEPOSITOS WHERE PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 = :PARAM_ID;

          OK = 1;
          SUSPEND;
       END
END
VW_PYMINGR37_ANTICIPOS         

DECLARE VARIABLE DBL_SALDO DECIMAL(15,2);
DECLARE VARIABLE GASTOS DOUBLE PRECISION;
BEGIN
  FOR
    SELECT
        MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL
    FROM PYMINGR01_CAB_FACTURAS
    INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
    WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
      AND (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 NOT IN (SELECT PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07
                                                       FROM PYMEGRE11_DET_FACTURASNOTAS
                                                       INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36)
           OR MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 IN (SELECT PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07
                                                      FROM PYMINGR36_DET_FACTURAS
                                                      WHERE PYMINGR36_DET_FACTURAS.PYMINGR36_IMPORTE != PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO)))
    INTO
        :RELA_MSGPOLI07,
        :TOTAL
  DO
  BEGIN
    DBL_SALDO = 0;

    SELECT SUM(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL)
    FROM PYMEGRE02_CAB_FACTURAS
    INNER JOIN PYMINGR15_MOV_GASTOS ON (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 = PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02)
    INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
    INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01)
    WHERE MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = :RELA_MSGPOLI07
    INTO :GASTOS;

    IF (:GASTOS IS NOT NULL) THEN
      TOTAL = TOTAL + GASTOS;

    FOR
      SELECT
          CAST(-1 AS BIGINT),
          CAST(-1 AS BIGINT),
          PYMINGR16_MOV_ANTICIPOS.ID_PYMINGR16,
          CAST(-1 AS BIGINT),
          CAST(-1 AS BIGINT),
          PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE
    FROM PYMINGR16_MOV_ANTICIPOS
    INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
    INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
    WHERE MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = :RELA_MSGPOLI07
      AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      AND PYMINGR16_MOV_ANTICIPOS.ID_PYMINGR16 NOT IN (SELECT PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR16
                                                       FROM PYMINGR37_MOV_ANTICIPOS)
    INTO
        :RELA_PYMINGR35,
        :RELA_PYMINGR36,
        :RELA_PYMINGR16,
        :RELA_PYMINGR30,
        :ID_PYMINGR37,
        :ANTICIPO
    DO
    BEGIN
      DBL_SALDO = DBL_SALDO + ANTICIPO;

      IF (:DBL_SALDO <= :TOTAL) THEN
        SALDO = 0;
      ELSE
        SALDO = DBL_SALDO - TOTAL;

      SUSPEND;
    END
  END
END
VW_PYMINGR37_PYMINGR30         

DECLARE VARIABLE DBL_ANTICIPOS DECIMAL(15,2);
BEGIN
  FOR
    SELECT
        PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30,
        PYMINGR30_CAB_DEPOSITOS.PYMINGR30_IMPORTE
    FROM PYMINGR30_CAB_DEPOSITOS
    WHERE PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      AND PYMINGR30_CAB_DEPOSITOS.RELA_SICINGR01 = :PARAM_CLIENTE
      AND PYMINGR30_CAB_DEPOSITOS.PYMINGR30_ANTICIPO = 1
      AND (PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01 NOT IN (SELECT PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                          FROM PYMINGR16_MOV_ANTICIPOS)
           OR (PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 IN (SELECT PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR30
                                                        FROM PYMINGR37_MOV_ANTICIPOS
                                                        INNER JOIN PYMINGR30_CAB_DEPOSITOS ON (PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR30 = PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30)
                                                        WHERE PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01 NOT IN (SELECT PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                                                                             FROM PYMINGR16_MOV_ANTICIPOS)
                                                        GROUP BY PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR30,PYMINGR30_CAB_DEPOSITOS.PYMINGR30_IMPORTE
                                                        HAVING SUM(PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE) < PYMINGR30_CAB_DEPOSITOS.PYMINGR30_IMPORTE)))
    INTO
        :ID_PYMINGR30,
        :PYMINGR30_IMPORTE
  DO
  BEGIN
    SALDO = 0;
    DBL_ANTICIPOS = 0;

    SELECT SUM(PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE)
    FROM PYMINGR37_MOV_ANTICIPOS
    WHERE PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR30 = :ID_PYMINGR30
    INTO :DBL_ANTICIPOS;

    IF (:DBL_ANTICIPOS IS NULL) THEN
      DBL_ANTICIPOS = 0;

    SALDO = PYMINGR30_IMPORTE - DBL_ANTICIPOS;
    VALORANTERIOR = SALDO;

    IF (:SALDO != 0) THEN
      SUSPEND;
  END
END
CBO_CAMBIO                     

DECLARE VARIABLE RELA_PYMINVE40 BIGINT;
DECLARE VARIABLE ID_PYMVENT20 BIGINT;
DECLARE VARIABLE PYMVENT22_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE PYMVENT11_IMPSISTEMAX DOUBLE PRECISION;
begin
    SELECT
    COUNT(pymvent20_cab_tickets.id_pymvent20),
    DNVL(SUM(pymvent20_cab_tickets.pymvent20_total), CAST(0.00 AS DOUBLE PRECISION))
    FROM pymvent20_cab_tickets
    WHERE pymvent20_cab_tickets.rela_pymvent10 = :RELA_PYMVENT10X
    AND pymvent20_cab_tickets.pymvent20_cancelado = 1
    AND pymvent20_cab_tickets.pymvent20_presupuesto = 0
    INTO :CANTIDAD_CANCELADOS, :PYMVENT11_CANCELADOS;

    select
    COUNT(pymvent31_det_retiros.id_pymvent31),
    DNVL(sum(pymvent31_det_retiros.pymvent31_importe), CAST(0.00 AS DOUBLE PRECISION))
    from pymvent31_det_retiros
    where pymvent31_det_retiros.rela_pymvent10 = :RELA_PYMVENT10X
    into :CANTIDAD_RETIROS, :SALIDA_EFECTIVO;

    select
    COUNT(pymvent35_det_ingresos.id_pymvent35),
    DNVL(sum(pymvent35_det_ingresos.pymvent35_importe),CAST(0.00 AS DOUBLE PRECISION))
    from pymvent35_det_ingresos
    where pymvent35_det_ingresos.rela_pymvent10 = :RELA_PYMVENT10X
    into :CANTIDAD_ENTRADAS, :ENTRADA_EFECTIVO;

    IF (:CANTIDAD_ENTRADAS IS NULL OR :CANTIDAD_ENTRADAS = 0) THEN
      BEGIN
        CANTIDAD_ENTRADAS = 0;
        ENTRADA_EFECTIVO = 0;
      END

    select pymvent01_cab_cajas.rela_pyminve40
    from pymvent10_cab_aperturacierre
    inner join pymvent01_cab_cajas on (pymvent01_cab_cajas.id_pymvent01 = pymvent10_cab_aperturacierre.rela_pymvent01)
    where pymvent10_cab_aperturacierre.id_pymvent10 = :RELA_PYMVENT10X
    into :rela_pyminve40;

    SELECT COUNT(pymvent20_cab_tickets.id_pymvent20),
    SUM(pymvent20_cab_tickets.pymvent20_total)
    FROM pymvent20_cab_tickets
    WHERE pymvent20_cab_tickets.pymvent20_presupuesto = 1
    INTO :cantidad_cotiza, cotiza_importe;

    select PRD_PYMINVE10_STOCK_EFICIENCIA.porcentaje
    from PRD_PYMINVE10_STOCK_EFICIENCIA(:rela_pyminve40, :RELA_PYMVENT10X)
    into :EFICIENCIA_STOCK;

    IMPORTE_APERTURA = 0;
    IMPORTE_INGRESOS = 0;

    for select
    PYMVENT11_DET_RENDICIONES.id_pymvent11,
    PYMVENT11_DET_RENDICIONES.RELA_PYMVENT10,
    PYMVENT11_DET_RENDICIONES.rela_socsyst10,
    SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
    SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
    PYMVENT11_DET_RENDICIONES.pymvent11_impapertura,
    PYMVENT11_DET_RENDICIONES.pymvent11_impcierre,
    PYMVENT11_DET_RENDICIONES.PYMVENT11_PORCENTAJE,
    dnvl(PYMVENT11_DET_RENDICIONES.pymvent11_porcentaje_vta, 0),
    PYMVENT11_DET_RENDICIONES.pymvent11_fapl,
    SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo_ext1
    from PYMVENT11_DET_RENDICIONES
    inner join SOCSYST10_TBL_LISTAESTADOS on (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    where PYMVENT11_DET_RENDICIONES.RELA_PYMVENT10 = :RELA_PYMVENT10X
    ORDER BY
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO DESC
    into :id_pymvent11,
         :RELA_PYMVENT10,
         :rela_socsyst10,
         :SOCSYST10_CODIGO,
         :SOCSYST10_FILTRO_DES,
         :pymvent11_impapertura,
         :pymvent11_impcierre,
         :PYMVENT11_PORCENTAJE,
         :pymvent11_porcentaje_vta,
         :pymvent11_fapl,
         :socsyst10_codigo_ext1
    do
    begin
        PYMVENT11_IMPSISTEMA = 0;
        IMPORTE_APERTURA = 0;
        PYMVENT11_IMPSISTEMAX = 0;
        ID_PYMVENT20 = 0;
        PYMVENT22_IMPORTE = 0;
        IMPORTE_INGRESOS = 0;

        if (SOCSYST10_CODIGO = 'EFECTIVO') then
        begin
            PYMVENT11_IMPSISTEMA = 0;
            IMPORTE_APERTURA = PYMVENT11_IMPAPERTURA;

            for select
            pymvent20_cab_tickets.pymvent20_total,
            pymvent20_cab_tickets.id_pymvent20
            FROM pymvent20_cab_tickets
            WHERE pymvent20_cab_tickets.rela_pymvent10 = :RELA_PYMVENT10X
            AND pymvent20_cab_tickets.pymvent20_cancelado = 0
            AND pymvent20_cab_tickets.pymvent20_presupuesto = 0
            into :PYMVENT11_IMPSISTEMAX,
                 :id_pymvent20
            do
            begin
                select sum(pymvent22_mov_cambios.pymvent22_importe)
                from pymvent22_mov_cambios
                inner join PYMVENT11_DET_RENDICIONES on (PYMVENT11_DET_RENDICIONES.id_pymvent11 = pymvent22_mov_cambios.rela_pymvent11)
                inner join SOCSYST10_TBL_LISTAESTADOS on (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                where pymvent22_mov_cambios.rela_pymvent20 = :id_pymvent20
                and SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EFECTIVO'
                into :pymvent22_importe;

                if (pymvent22_importe is null) then
                    pymvent22_importe = 0;

                if (pymvent22_importe < PYMVENT11_IMPSISTEMAX) then
                    PYMVENT11_IMPSISTEMA = PYMVENT11_IMPSISTEMA + pymvent22_importe;
                else
                    PYMVENT11_IMPSISTEMA = PYMVENT11_IMPSISTEMA + PYMVENT11_IMPSISTEMAX;

                IMPORTE_INGRESOS = PYMVENT11_IMPSISTEMA;
            end
        end
        else
        begin
            select sum(pymvent22_mov_cambios.pymvent22_importe)
            from pymvent22_mov_cambios
            INNER JOIN pymvent20_cab_tickets ON (pymvent22_mov_cambios.rela_pymvent20 = pymvent20_cab_tickets.id_pymvent20)
            where pymvent22_mov_cambios.rela_pymvent11 = :id_pymvent11
            and pymvent20_cab_tickets.pymvent20_cancelado = 0
            and pymvent20_cab_tickets.pymvent20_presupuesto = 0
            into :PYMVENT11_IMPSISTEMA;

            if (PYMVENT11_PORCENTAJE > 0) then
                PYMVENT11_IMPSISTEMA = PYMVENT11_IMPSISTEMA / PYMVENT11_PORCENTAJE;
        end

        if (PYMVENT11_IMPSISTEMA IS NULL) then
            PYMVENT11_IMPSISTEMA = 0;
        suspend;
    end
end
PRD_PYMINVE10_STOCK_EFICIENCIA 

DECLARE VARIABLE VENTA DOUBLE PRECISION;
DECLARE VARIABLE STOCK DOUBLE PRECISION;
begin
    if (ID_PYMINVE40 is not null) then
        select
        SUM(VW_PYMINVE10_STOCK_EFICIENCIA.cantidad_stock),
        SUM(VW_PYMINVE10_STOCK_EFICIENCIA.cantidad_venta)
        FROM VW_PYMINVE10_STOCK_EFICIENCIA
        WHERE VW_PYMINVE10_STOCK_EFICIENCIA.rela_pymvent10 = :ID_PYMVENT10
        AND VW_PYMINVE10_STOCK_EFICIENCIA.rela_pyminve40 = :ID_PYMINVE40
        into :venta, :stock;
    else
        select
        SUM(VW_PYMINVE10_STOCK_EFICIENCIA.cantidad_stock),
        SUM(VW_PYMINVE10_STOCK_EFICIENCIA.cantidad_venta)
        FROM VW_PYMINVE10_STOCK_EFICIENCIA
        into :venta, :stock;

    if (venta > stock) then
        begin
            porcentaje = venta - stock;
            porcentaje = 100 - (porcentaje / venta * 100);
        end
    else if (stock > venta) then
        begin
            porcentaje = stock - venta;
            porcentaje = 100 - (porcentaje / stock * 100);
        end
    else
        porcentaje = 100;

    suspend;
end
PRD_PYMVENT10_NEW              

DECLARE VARIABLE RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE ID_PYMVENT05 BIGINT;
begin
    insert into pymvent10_cab_aperturacierre(
                pymvent10_cab_aperturacierre.rela_pymvent01,
                pymvent10_cab_aperturacierre.rela_pymvent02,
                pymvent10_cab_aperturacierre.pymvent10_hapertura,
                pymvent10_cab_aperturacierre.pymvent10_fecha)

    values(:ID_PYMVENT01,
           :ID_PYMVENT02,
           current_time,
           current_date);

    /* ---------------------------------------------------------------------------------------- */

    select socutil02_tbl_ultids.socutil02_ultid
    from socutil02_tbl_ultids
    where socutil02_tbl_ultids.socutil02_usuario = current_user
    into :ID_PYMVENT10;

    /* ---------------------------------------------------------------------------------------- */

    for select
    pymvent05_det_rendicion.rela_socsyst10,
    pymvent05_det_rendicion.id_pymvent05
    from pymvent05_det_rendicion
    where pymvent05_det_rendicion.rela_pymvent01 = :ID_PYMVENT01
    into :rela_socsyst10, :id_pymvent05
    do
    begin
        insert into PYMVENT11_DET_RENDICIONES(
                    PYMVENT11_DET_RENDICIONES.rela_pymvent10,
                    PYMVENT11_DET_RENDICIONES.rela_socsyst10,
                    PYMVENT11_DET_RENDICIONES.rela_pymvent05,
                    PYMVENT11_DET_RENDICIONES.pymvent11_impapertura,
                    PYMVENT11_DET_RENDICIONES.pymvent11_impcierre,
                    PYMVENT11_DET_RENDICIONES.pymvent11_impsistema,
                    PYMVENT11_DET_RENDICIONES.pymvent11_porcentaje)
        values(
                :ID_PYMVENT10,
                :rela_socsyst10,
                :id_pymvent05,
                0,
                0,
                0,
                0);
    end
        
    suspend;
end
REP_PYMVENT20_VVENDEDORES      

BEGIN
    IF (ID_SRHMAIN10 != -1) THEN
        BEGIN
            FOR
              SELECT
                  PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
                  PYMVENT20_CAB_TICKETS.RELA_SRHMAIN10_VENDEDOR,
                  SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
                  SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
                  CBO_SRHMAIN10.ENTIDAD,
                  CATEGORIA.SOCSYST10_FILTRO_DES,
                  FAMILIA.SOCSYST10_FILTRO_DES,
                  PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
                  PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
                  CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE),
                  PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL,
                  PYMVENT20_CAB_TICKETS.PYMVENT20_DESCUENTOS,
                  PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL,
                  PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
                  PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
                  PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
                  PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL,
                  PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
                  PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL
              FROM PYMVENT20_CAB_TICKETS
              INNER JOIN PYMVENT21_DET_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
              INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
              INNER JOIN CBO_SRHMAIN10 ON (CBO_SRHMAIN10.ID_SRHMAIN10 = PYMVENT20_CAB_TICKETS.RELA_SRHMAIN10_VENDEDOR)
              INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
              INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
              WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :ID_SOCSYST01
                AND PYMVENT20_CAB_TICKETS.RELA_SRHMAIN10_VENDEDOR = :ID_SRHMAIN10
                AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :FECHA_DESDE AND :FECHA_HASTA
                ORDER BY
                    PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL,
                    PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO
            INTO
                :RELA_SOCSYST01,
                :RELA_SRHMAIN10,
                :EMPRESA,
                :SUCURSAL,
                :VENDEDOR,
                :CATEGORIA,
                :FAMILIA,
                :ID_PYMVENT20,
                :PYMVENT20_DOCNRO,
                :PYMVENT20_FAPL,
                :PYMVENT20_SUBTOTAL,
                :PYMVENT20_DESCUENTOS,
                :PYMVENT20_TOTAL,
                :PYMVENT21_CODIGO,
                :PYMVENT21_DESCRIPCION,
                :PYMVENT21_CANTIDAD,
                :PYMVENT21_SUBTOTAL,
                :PYMVENT21_DESCUENTOS,
                :PYMVENT21_TOTAL
            DO
            BEGIN
                SELECT FIRST 1 PYMVENT04_DET_VENDEDORES.PYMVENT04_COMISION
                FROM PYMVENT04_DET_VENDEDORES
                WHERE PYMVENT04_DET_VENDEDORES.RELA_SRHMAIN10 = :RELA_SRHMAIN10
                INTO :COMISION;

                IF (:COMISION IS NULL) THEN
                    COMISION = 0;

                SUSPEND;
            END
        END
    ELSE
        BEGIN
            FOR
              SELECT
                  PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
                  PYMVENT20_CAB_TICKETS.RELA_SRHMAIN10_VENDEDOR,
                  SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
                  SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
                  CBO_SRHMAIN10.ENTIDAD,
                  CATEGORIA.SOCSYST10_FILTRO_DES,
                  FAMILIA.SOCSYST10_FILTRO_DES,
                  PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
                  PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
                  CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE),
                  PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL,
                  PYMVENT20_CAB_TICKETS.PYMVENT20_DESCUENTOS,
                  PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL,
                  PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
                  PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
                  PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
                  PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL,
                  PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
                  PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL
              FROM PYMVENT20_CAB_TICKETS
              INNER JOIN PYMVENT21_DET_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
              INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
              INNER JOIN CBO_SRHMAIN10 ON (CBO_SRHMAIN10.ID_SRHMAIN10 = PYMVENT20_CAB_TICKETS.RELA_SRHMAIN10_VENDEDOR)
              INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
              INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
              WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :ID_SOCSYST01
                AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :FECHA_DESDE AND :FECHA_HASTA
              ORDER BY
                  CBO_SRHMAIN10.ENTIDAD,
                  PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL,
                  PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO
            INTO
                :RELA_SOCSYST01,
                :RELA_SRHMAIN10,
                :EMPRESA,
                :SUCURSAL,
                :VENDEDOR,
                :CATEGORIA,
                :FAMILIA,
                :ID_PYMVENT20,
                :PYMVENT20_DOCNRO,
                :PYMVENT20_FAPL,
                :PYMVENT20_SUBTOTAL,
                :PYMVENT20_DESCUENTOS,
                :PYMVENT20_TOTAL,
                :PYMVENT21_CODIGO,
                :PYMVENT21_DESCRIPCION,
                :PYMVENT21_CANTIDAD,
                :PYMVENT21_SUBTOTAL,
                :PYMVENT21_DESCUENTOS,
                :PYMVENT21_TOTAL
            DO
            BEGIN
                SELECT FIRST 1 PYMVENT04_DET_VENDEDORES.PYMVENT04_COMISION
                FROM PYMVENT04_DET_VENDEDORES
                WHERE PYMVENT04_DET_VENDEDORES.RELA_SRHMAIN10 = :RELA_SRHMAIN10
                INTO :COMISION;

                IF (:COMISION IS NULL) THEN
                    COMISION = 0;

                SUSPEND;
            END
        END
END
VW_RFC_POR_RFC                 

DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
begin
    FOR SELECT
    GRID_SOCUSUA40.rela_socusua20,
    GRID_SOCUSUA40.rela_socusua30
    FROM GRID_SOCUSUA40
    WHERE GRID_SOCUSUA40.socsyst10_codigo = 'RFC'
    AND upper(strreplace(GRID_SOCUSUA40.socusua40_numero,'-','')) = upper(strreplace(:RFC,'-',''))
    into :rela_socusua20,
         :rela_socusua30
    DO
    BEGIN
        /* ------------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------------ */
    
        if (rela_socusua20 is not null) then
        BEGIN
            tipopersona = 'M';
            if (TIPO = 'P') then
                Select FIRST 1 VR_ENTIDADES_ALL.entidad, VR_ENTIDADES_ALL.id_socusua02
                from VR_ENTIDADES_ALL
                WHERE VR_ENTIDADES_ALL.socsyst10_codigo = 'UP'
                AND VR_ENTIDADES_ALL.rela_socusua20 = :rela_socusua20
                into :entidad, :id_socusua02;
            ELSE if (TIPO = 'C') then
                Select FIRST 1 VR_ENTIDADES_ALL.entidad, VR_ENTIDADES_ALL.id_socusua02
                from VR_ENTIDADES_ALL
                WHERE VR_ENTIDADES_ALL.socsyst10_codigo = 'UC'
                AND VR_ENTIDADES_ALL.rela_socusua20 = :rela_socusua20
                into :entidad, :id_socusua02;
            ELSE if (TIPO = 'E') then
                Select FIRST 1 VR_ENTIDADES_ALL.entidad, VR_ENTIDADES_ALL.id_socusua02
                from VR_ENTIDADES_ALL
                WHERE VR_ENTIDADES_ALL.socsyst10_codigo = 'UE'
                AND VR_ENTIDADES_ALL.rela_socusua20 = :rela_socusua20
                into :entidad, :id_socusua02;
            ELSE if (TIPO = 'M') then
                Select FIRST 1 VR_ENTIDADES_ALL.entidad, VR_ENTIDADES_ALL.id_socusua02
                from VR_ENTIDADES_ALL
                WHERE VR_ENTIDADES_ALL.socsyst10_codigo = 'UCT'
                AND VR_ENTIDADES_ALL.rela_socusua20 = :rela_socusua20
                into :entidad, :id_socusua02;
        END
        else
        BEGIN
            tipopersona = 'F';
            if (TIPO = 'P') then
                Select FIRST 1 VR_ENTIDADES_ALL.entidad, VR_ENTIDADES_ALL.id_socusua02
                from VR_ENTIDADES_ALL
                where VR_ENTIDADES_ALL.socsyst10_codigo = 'UP'
                AND VR_ENTIDADES_ALL.rela_socusua30 = :rela_socusua30
                into :entidad, id_socusua02;
            ELSE if (TIPO = 'C') then
                Select FIRST 1 VR_ENTIDADES_ALL.entidad, VR_ENTIDADES_ALL.id_socusua02
                from VR_ENTIDADES_ALL
                where VR_ENTIDADES_ALL.socsyst10_codigo = 'UC'
                AND VR_ENTIDADES_ALL.rela_socusua30 = :rela_socusua30
                into :entidad, id_socusua02;
            ELSE if (TIPO = 'E') then
                Select FIRST 1 VR_ENTIDADES_ALL.entidad, VR_ENTIDADES_ALL.id_socusua02
                from VR_ENTIDADES_ALL
                where VR_ENTIDADES_ALL.socsyst10_codigo = 'UE'
                AND VR_ENTIDADES_ALL.rela_socusua30 = :rela_socusua30
                into :entidad, id_socusua02;
            ELSE if (TIPO = 'M') then
                Select FIRST 1 VR_ENTIDADES_ALL.entidad, VR_ENTIDADES_ALL.id_socusua02
                from VR_ENTIDADES_ALL
                where VR_ENTIDADES_ALL.socsyst10_codigo = 'UCT'
                AND VR_ENTIDADES_ALL.rela_socusua30 = :rela_socusua30
                into :entidad, id_socusua02;
        END

        /* ------------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------------ */ 

        if (idx = -1 or (idx is null) ) then
        begin
            if (TIPO = 'P') then
                SELECT sicegre01_cab_proveedores.id_sicegre01
                FROM sicegre01_cab_proveedores
                WHERE sicegre01_cab_proveedores.rela_socusua02 = :id_socusua02
                INTO :ID;
            ELSE if (TIPO = 'C') then
                SELECT sicingr01_cab_clientes.id_sicingr01
                FROM sicingr01_cab_clientes
                WHERE sicingr01_cab_clientes.rela_socusua02 = :id_socusua02
                INTO :ID;
            ELSE if (TIPO = 'E') then
                SELECT srhmain10_cab_empleado.id_srhmain10
                FROM srhmain10_cab_empleado
                WHERE srhmain10_cab_empleado.rela_socusua02 = :id_socusua02
                INTO :ID;
            ELSE if (TIPO = 'M') then
                SELECT socsyst01_cab_clientes.id_socsyst01
                FROM socsyst01_cab_clientes
                WHERE socsyst01_cab_clientes.rela_socusua02 = :id_socusua02
                INTO :ID;
        end
        else
            begin
            if (TIPO = 'P') then
                SELECT sicegre01_cab_proveedores.id_sicegre01
                FROM sicegre01_cab_proveedores
                WHERE sicegre01_cab_proveedores.id_sicegre01 = :idx
                and sicegre01_cab_proveedores.rela_socusua02 = :id_socusua02
                INTO :ID;
            ELSE if (TIPO = 'C') then
                SELECT sicingr01_cab_clientes.id_sicingr01
                FROM sicingr01_cab_clientes
                WHERE sicingr01_cab_clientes.id_sicingr01 = :idx
                and sicingr01_cab_clientes.rela_socusua02 = :id_socusua02
                INTO :ID;
            ELSE if (TIPO = 'E') then
                SELECT srhmain10_cab_empleado.id_srhmain10
                FROM srhmain10_cab_empleado
                WHERE srhmain10_cab_empleado.id_srhmain10 = :idx
                and srhmain10_cab_empleado.rela_socusua02 = :id_socusua02
                INTO :ID;
            ELSE if (TIPO = 'M') then
                SELECT socsyst01_cab_clientes.id_socsyst01
                FROM socsyst01_cab_clientes
                WHERE socsyst01_cab_clientes.id_socsyst01 = :idx
                and socsyst01_cab_clientes.rela_socusua02 = :id_socusua02
                INTO :ID;
        end


        if (ID is not null) then
        BEGIN
            suspend;
            break;
        END
    END







end
VW_PYMINGR18_MSGPOLI01_XML     

DECLARE VARIABLE RELA_SICINGR01 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE ID_PYMINGR01 BIGINT;
begin
    SELECT
    PYMINGR01_CAB_FACTURAS.rela_socsyst01,
    PYMINGR01_CAB_FACTURAS.rela_sicingr01,
    PYMINGR01_CAB_FACTURAS.pymingr01_total,
    PYMINGR01_CAB_FACTURAS.id_pymingr01
    FROM PYMINGR01_CAB_FACTURAS
    WHERE PYMINGR01_CAB_FACTURAS.rela_msgpoli01 = :rela_msgpoli01
    into :rela_socsyst01,
         :RELA_SICINGR01,
         :MONTO,
         :ID_PYMINGR01;

    select
    sicingr01_cab_clientes.rela_socusua02
    from sicingr01_cab_clientes
    where sicingr01_cab_clientes.id_sicingr01 = :RELA_SICINGR01
    INTO :rela_socusua02;

    select VW_RFC.rfc
    from VW_RFC(:rela_socusua02)
    into :rfc;

    select
    pymingr18_dep_factelect.pymingr18_uuid
    from pymingr18_dep_factelect
    where pymingr18_dep_factelect.rela_socsyst01 = :rela_socsyst01
    and pymingr18_dep_factelect.rela_pymingr01 = :id_pymingr01
    into :uuid;
    suspend;
end
SOC$_CFDIXML_PCONTABLE_01      

DECLARE VARIABLE SCEXMLS24_IMPORTE_IVA DOUBLE PRECISION;
DECLARE VARIABLE SCEXMLS24_IMPORTE_OTROS DOUBLE PRECISION;
DECLARE VARIABLE TASA_IVA DOUBLE PRECISION;
DECLARE VARIABLE RELA_SCEXMLS22 BIGINT;
DECLARE VARIABLE ID_PRIMER_ID BIGINT;
DECLARE VARIABLE ID_SCEXMLS24 BIGINT;
DECLARE VARIABLE SCEXMLS24_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE SCEXMLS24_IMPORTE_IVA_CALCULADO DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_DIFERENCIA DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_DETALLES DOUBLE PRECISION;
DECLARE VARIABLE SCEXMLS22_EXCENTO INTEGER;
begin
    STATUS = 'OK';

    SELECT
    sum(scexmls24_tmp_transacciones.scexmls24_importe),
    max(SCEXMLS21_DET_IMPUESTOS.scexmls21_tasa)
    FROM scexmls24_tmp_transacciones
    inner join SCEXMLS21_DET_IMPUESTOS on (scexmls24_tmp_transacciones.rela_scexmls21 = SCEXMLS21_DET_IMPUESTOS.id_scexmls21)
    WHERE scexmls24_tmp_transacciones.scexmls24_user = current_user
    AND scexmls24_tmp_transacciones.scexmls24_uuid = :uuid
    AND SCEXMLS21_DET_IMPUESTOS.scexmls21_tipo = 'E'
    AND upper(SCEXMLS21_DET_IMPUESTOS.scexmls21_impuesto) = 'IVA'
    AND SCEXMLS21_DET_IMPUESTOS.scexmls21_tasa <> 0
    INTO :scexmls24_importe_iva,
         :tasa_iva;

    SELECT
    sum(scexmls24_tmp_transacciones.scexmls24_importe)
    FROM scexmls24_tmp_transacciones
    inner join SCEXMLS21_DET_IMPUESTOS on (scexmls24_tmp_transacciones.rela_scexmls21 = SCEXMLS21_DET_IMPUESTOS.id_scexmls21)
    WHERE scexmls24_tmp_transacciones.scexmls24_user = current_user
    AND scexmls24_tmp_transacciones.scexmls24_uuid = :uuid
    AND SCEXMLS21_DET_IMPUESTOS.scexmls21_tipo = 'E'
    AND (upper(SCEXMLS21_DET_IMPUESTOS.scexmls21_impuesto) = 'IVA'
    AND SCEXMLS21_DET_IMPUESTOS.scexmls21_tasa = 0)
    AND upper(SCEXMLS21_DET_IMPUESTOS.scexmls21_impuesto) <> 'IVA'
    INTO :scexmls24_importe_otros;

    if (scexmls24_importe_otros IS NULL) then
       scexmls24_importe_otros = 0;

    importe_detalles = 0;
    if (scexmls24_importe_iva <> 0) then
    BEGIN
        ID_PRIMER_ID = -1;
        scexmls24_importe_iva_calculado = 0;
        IMPORTE_DIFERENCIA = -1964;

        for select
        scexmls24_tmp_transacciones.id_scexmls24,
        scexmls24_tmp_transacciones.rela_scexmls22,
        scexmls22_det_conceptos.scexmls22_excento,
        scexmls24_tmp_transacciones.scexmls24_importe
        from scexmls24_tmp_transacciones
        inner join scexmls22_det_conceptos on (scexmls24_tmp_transacciones.rela_scexmls22 = scexmls22_det_conceptos.id_scexmls22)
        where scexmls24_tmp_transacciones.scexmls24_user = current_user
        AND scexmls24_tmp_transacciones.scexmls24_uuid = :uuid
        and scexmls22_det_conceptos.scexmls22_tipo = 'E'
        into :id_scexmls24,
             :rela_scexmls22,
             :scexmls22_excento,
             :scexmls24_importe
        DO
        BEGIN
            if (scexmls22_excento = 0 ) then
            begin
                if (ID_PRIMER_ID = -1) then
                    ID_PRIMER_ID = :id_scexmls24;

                scexmls24_importe_iva_calculado = scexmls24_importe_iva_calculado + (scexmls24_importe * tasa_iva /100);
                scexmls24_importe = scexmls24_importe + (scexmls24_importe * tasa_iva /100);

                UPDATE scexmls24_tmp_transacciones SET scexmls24_tmp_transacciones.scexmls24_importe = :scexmls24_importe
                WHERE scexmls24_tmp_transacciones.id_scexmls24 = :id_scexmls24;

                importe_detalles = importe_detalles + scexmls24_importe;
            end
        END

        if (ID_PRIMER_ID <> -1) then
        BEGIN
            IMPORTE_DIFERENCIA = scexmls24_importe_iva - scexmls24_importe_iva_calculado;

            if (IMPORTE_DIFERENCIA <> 0 ) then
                UPDATE scexmls24_tmp_transacciones SET scexmls24_tmp_transacciones.scexmls24_importe =
                                                       scexmls24_tmp_transacciones.scexmls24_importe + :IMPORTE_DIFERENCIA
                WHERE scexmls24_tmp_transacciones.id_scexmls24 = :ID_PRIMER_ID;

            delete FROM scexmls24_tmp_transacciones
            WHERE scexmls24_tmp_transacciones.scexmls24_user = current_user
            AND scexmls24_tmp_transacciones.scexmls24_uuid = :uuid
            AND scexmls24_tmp_transacciones.scexmls24_tipo = 'I'
            AND upper(scexmls24_tmp_transacciones.scexmls24_descripcion) = 'IVA'
            AND scexmls24_tmp_transacciones.scexmls24_importe <> 0;
        END
    END

    uuid_importe = cast(uuid_importe as numeric(12,2));
    scexmls24_importe_otros = cast(scexmls24_importe_otros as numeric(12,2));
    importe_detalles = cast(importe_detalles + IMPORTE_DIFERENCIA as numeric(12,2));

    if (uuid_importe <> (importe_detalles + scexmls24_importe_otros)) then
        status = 'Inconsistencia en el Recalculo. El XML tiene otros impuestos. Y un Detalle o todos los detalles son Sin impuestos';

    suspend;
end
PRD_TID_PYMVENT21              

DECLARE VARIABLE DBLCANTIDADSTOCK DOUBLE PRECISION;
DECLARE VARIABLE ID_PYMINVE50_ENTRADA BIGINT;
DECLARE VARIABLE DBLCANTIDADTICKET DOUBLE PRECISION;
begin
    rela_pyminve30 = null;
    pymvent21_descuenta_stock = pymvent21_descuenta_stockx;
    /* ------------------------------------------------------------ */
    /* ENTRO SI SOLO SI VOY A DESCONTAR EN STOCK, SINO NO HAGO NADA */
    /* ------------------------------------------------------------ */
    if (pymvent21_descuenta_stock <> 0) then
    BEGIN
        dblCantidadTicket = pymvent21_cantidad;
        dblCantidadStock = 0;

        /* ---------------------------------------------------------------------- */
        /* Si el flag es -1 significa que descuento en inventario solo hasta CERO */
        /* Evitando así que el stock este en NEGATIVO                             */
        /* ---------------------------------------------------------------------- */
        if (pymvent21_descuenta_stock = -1) then
        begin
            Select
            GRID_PYMINVE10_LOCACION_CANTI.pyminve30_cantidad
            from GRID_PYMINVE10_LOCACION_CANTI
            where GRID_PYMINVE10_LOCACION_CANTI.rela_pyminve10 = :rela_pyminve10
            and GRID_PYMINVE10_LOCACION_CANTI.rela_socwflo01 = :rela_socwflo01
            and GRID_PYMINVE10_LOCACION_CANTI.rela_pyminve40 = :rela_pyminve40
            into :dblCantidadStock;

            if (dblCantidadStock is null) then
                dblCantidadStock = 0;

            if ((dblCantidadStock - dblCantidadTicket) < 0) then
                dblCantidadTicket = dblCantidadStock;
        end

        pymvent21_descuenta_stock = 0;

        /* ------------------------------------------------------------------------------------------- */
        /* si despues de todo la varibale dblCantidadStock es diferente de cero puede ser tambien -1   */
        /* por esa razon lo primero que hace es ponerlo en 1 porque ya se evaluo si llegaba hasta cero */
        /* y se toma la cantida como esta y se inserta en stock descontando                            */
        /* ------------------------------------------------------------------------------------------- */
        if (dblCantidadTicket <> 0) then
        begin
            pymvent21_descuenta_stock = 1;

            insert into pyminve30_mov_stock(
                        pyminve30_mov_stock.rela_pyminve50,
                        pyminve30_mov_stock.rela_socusua02,
                        pyminve30_mov_stock.rela_socwflo01,
                        pyminve30_mov_stock.rela_pyminve10,
                        pyminve30_mov_stock.rela_pyminve40,
                        pyminve30_mov_stock.pyminve30_cantidad,
                        pyminve30_mov_stock.pyminve30_existencia)
                values(
                        :rela_pyminve50,
                        :rela_socusua02,
                        :rela_socwflo01,
                        :rela_pyminve10,
                        :rela_pyminve40,
                        :dblCantidadTicket * (-1),
                        0);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :rela_pyminve30;

            if (rela_pyminve30_noserie is not null) then
                update pyminve30_mov_stock set pyminve30_mov_stock.rela_pyminve30 = :rela_pyminve30_noserie
                where pyminve30_mov_stock.id_pyminve30 = :rela_pyminve30;

            if (rela_socsyst10_modelo is not null) then
            begin
                insert into PYMINVE35_DEP_MTC(
                            PYMINVE35_DEP_MTC.rela_pyminve30,
                            PYMINVE35_DEP_MTC.rela_socsyst10_modelo,
                            PYMINVE35_DEP_MTC.rela_socsyst10_talla,
                            PYMINVE35_DEP_MTC.rela_socsyst10_color)
                    values(
                            :rela_pyminve30,
                            :rela_socsyst10_modelo,
                            :rela_socsyst10_talla,
                            :rela_socsyst10_color);
            end

        end

        /* --------------------------------------------------------------------------------------------- */
        /* ------------- aqui solo se da de alta o de entrada a los apartados si es que hay ------------ */
        /* --------------------------------------------------------------------------------------------- */
        if ((rela_pyminve40_traspaso is not null) and (rela_pyminve30 is not null)) then
        begin
            select cbo_pyminve50_automaticos.id_pyminve50
            from cbo_pyminve50_automaticos
            where cbo_pyminve50_automaticos.pyminve50_codigo = 'PV-EN-APA'
            into :id_pyminve50_entrada;

            insert into pyminve30_mov_stock(
                        pyminve30_mov_stock.rela_pyminve50,
                        pyminve30_mov_stock.rela_socusua02,
                        pyminve30_mov_stock.rela_socwflo01,
                        pyminve30_mov_stock.rela_pyminve10,
                        pyminve30_mov_stock.rela_pyminve40,
                        pyminve30_mov_stock.rela_pyminve30,
                        pyminve30_mov_stock.pyminve30_cantidad,
                        pyminve30_mov_stock.pyminve30_existencia)
                values(
                        :id_pyminve50_entrada,
                        :rela_socusua02,
                        :rela_socwflo01,
                        :rela_pyminve10,
                        :rela_pyminve40_traspaso,
                        :rela_pyminve30,
                        :pymvent21_cantidad,
                        0);

           if (rela_pyminve30_noserie is not null) then
                update pyminve30_mov_stock set pyminve30_mov_stock.rela_pyminve30 = :rela_pyminve30_noserie
                where pyminve30_mov_stock.id_pyminve30 = :rela_pyminve30;
        end
        else if ((rela_pyminve40_traspaso is not null) and (rela_pyminve30 is null)) then
        begin
            select cbo_pyminve50_automaticos.id_pyminve50
            from cbo_pyminve50_automaticos
            where cbo_pyminve50_automaticos.pyminve50_codigo = 'PV-EN-APA'
            into :id_pyminve50_entrada;

            insert into pyminve30_mov_stock(
                        pyminve30_mov_stock.rela_pyminve50,
                        pyminve30_mov_stock.rela_socusua02,
                        pyminve30_mov_stock.rela_socwflo01,
                        pyminve30_mov_stock.rela_pyminve10,
                        pyminve30_mov_stock.rela_pyminve40,
                        pyminve30_mov_stock.pyminve30_cantidad,
                        pyminve30_mov_stock.pyminve30_existencia)
                values(
                        :id_pyminve50_entrada,
                        :rela_socusua02,
                        :rela_socwflo01,
                        :rela_pyminve10,
                        :rela_pyminve40_traspaso,
                        :pymvent21_cantidad,
                        0);

                select socutil02_tbl_ultids.socutil02_ultid
                from socutil02_tbl_ultids
                where socutil02_tbl_ultids.socutil02_usuario = current_user
                into rela_pyminve30;
        end
    END
end
REP_PYMVENT28_FACTURAS         

DECLARE VARIABLE PORCENTAJE_DESC DECIMAL(15,2);
DECLARE VARIABLE PORCENTAJE DECIMAL(15,2);
BEGIN
  SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
  FROM CBO_CLIENTES_EMPRESAS_ALL
  WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO :EMPRESA;

  IF (:PARAM_FILTRO = 0) THEN
    IF (:PARAM_CLIENTE != -1) THEN
      FOR
        SELECT
            PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
            PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
            PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
            PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID_CANCELA,
            CAST(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL AS DATE),
            PYMVENT28_DEP_FACTELECT.PYMVENT28_CANCELADO,
            PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL,
            DNVL((SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS)
                  FROM PYMVENT21_DET_TICKETS
                  WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20), 0),
            PYMVENT24_CAB_CLIENTES.PYMVENT24_DESCUENTO,
            SNVL((SELECT SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO
                  FROM SOCSYST20_DET_FACTELECT
                  INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
                  WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = PYMVENT20_CAB_TICKETS.RELA_SOCSYST01
                    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01), '')
        FROM PYMVENT20_CAB_TICKETS
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        INNER JOIN PYMVENT28_DEP_FACTELECT ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20)
        WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = :PARAM_CLIENTE
          AND CAST(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
           :RELA_SOCSYST01,
           :RELA_SOCWFLO01,
           :RELA_PYMVENT24,
           :ID_PYMVENT20,
           :CLIENTE,
           :DOCNRO,
           :PYMVENT28_UUID,
           :PYMVENT28_UUID_CANCELA,
           :FECHA,
           :FECHA_CANCELADA,
           :SUBTOTAL,
           :DESCUENTOS,
           :PORCENTAJE_DESC,
           :SERIE
      DO
      BEGIN
         SELECT DNVL(PRD_PYMVENT20_PYMVENT01.PORCENTAJE,0)
         FROM PRD_PYMVENT20_PYMVENT01(:PARAM_EMPRESA,:ID_PYMVENT20)
         INTO :PORCENTAJE;

         SUBTOTAL = SUBTOTAL / (1 + (PORCENTAJE / 100));

         IF (DESCUENTOS != 0) THEN
           DESCUENTOS = SUBTOTAL * (PORCENTAJE_DESC / 100);

         IMPUESTOS = ((SUBTOTAL - DESCUENTOS) * PORCENTAJE) / 100;
         TOTAL = (SUBTOTAL - DESCUENTOS) + IMPUESTOS;

         TIMBRADA = 'No';

         IF (:PYMVENT28_UUID IS NOT NULL) THEN
           TIMBRADA = 'Si';

         SUSPEND;
      END
    ELSE
      FOR
        SELECT
            PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
            PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
            PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
            PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID_CANCELA,
            CAST(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL AS DATE),
            PYMVENT28_DEP_FACTELECT.PYMVENT28_CANCELADO,
            PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL,
            DNVL((SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS)
                  FROM PYMVENT21_DET_TICKETS
                  WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20), 0),
            PYMVENT24_CAB_CLIENTES.PYMVENT24_DESCUENTO,
            SNVL((SELECT SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO
                  FROM SOCSYST20_DET_FACTELECT
                  INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
                  WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = PYMVENT20_CAB_TICKETS.RELA_SOCSYST01
                    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01), '')
        FROM PYMVENT20_CAB_TICKETS
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        INNER JOIN PYMVENT28_DEP_FACTELECT ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20)
        WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND CAST(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
           :RELA_SOCSYST01,
           :RELA_SOCWFLO01,
           :RELA_PYMVENT24,
           :ID_PYMVENT20,
           :CLIENTE,
           :DOCNRO,
           :PYMVENT28_UUID,
           :PYMVENT28_UUID_CANCELA,
           :FECHA,
           :FECHA_CANCELADA,
           :SUBTOTAL,
           :DESCUENTOS,
           :PORCENTAJE_DESC,
           :SERIE
      DO
      BEGIN
         SELECT DNVL(PRD_PYMVENT20_PYMVENT01.PORCENTAJE,0)
         FROM PRD_PYMVENT20_PYMVENT01(:PARAM_EMPRESA,:ID_PYMVENT20)
         INTO :PORCENTAJE;

         SUBTOTAL = SUBTOTAL / (1 + (PORCENTAJE / 100));

         IF (DESCUENTOS != 0) THEN
           DESCUENTOS = SUBTOTAL * (PORCENTAJE_DESC / 100);

         IMPUESTOS = ((SUBTOTAL - DESCUENTOS) * PORCENTAJE) / 100;
         TOTAL = (SUBTOTAL - DESCUENTOS) + IMPUESTOS;

         TIMBRADA = 'No';

         IF (:PYMVENT28_UUID IS NOT NULL) THEN
           TIMBRADA = 'Si';

         SUSPEND;
      END
  ELSE
    IF (:PARAM_CLIENTE != -1) THEN
      FOR
        SELECT
            PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
            PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
            PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
            PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID,
            CAST(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL AS DATE),
            PYMVENT28_DEP_FACTELECT.PYMVENT28_CANCELADO,
            PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL,
            DNVL((SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS)
                  FROM PYMVENT21_DET_TICKETS
                  WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20), 0),
            PYMVENT24_CAB_CLIENTES.PYMVENT24_DESCUENTO,
            SNVL((SELECT SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO
                  FROM SOCSYST20_DET_FACTELECT
                  INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
                  WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = PYMVENT20_CAB_TICKETS.RELA_SOCSYST01
                    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01), '')
        FROM PYMVENT20_CAB_TICKETS
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        INNER JOIN PYMVENT28_DEP_FACTELECT ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20)
        WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = :PARAM_CLIENTE
          AND CAST(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
          AND PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID IS NULL
        INTO
           :RELA_SOCSYST01,
           :RELA_SOCWFLO01,
           :RELA_PYMVENT24,
           :ID_PYMVENT20,
           :CLIENTE,
           :DOCNRO,
           :PYMVENT28_UUID,
           :FECHA,
           :FECHA_CANCELADA,
           :SUBTOTAL,
           :DESCUENTOS,
           :PORCENTAJE_DESC,
           :SERIE
      DO
      BEGIN
         SELECT DNVL(PRD_PYMVENT20_PYMVENT01.PORCENTAJE,0)
         FROM PRD_PYMVENT20_PYMVENT01(:PARAM_EMPRESA,:ID_PYMVENT20)
         INTO :PORCENTAJE;

         SUBTOTAL = SUBTOTAL / (1 + (PORCENTAJE / 100));

         IF (DESCUENTOS != 0) THEN
           DESCUENTOS = SUBTOTAL * (PORCENTAJE_DESC / 100);

         IMPUESTOS = ((SUBTOTAL - DESCUENTOS) * PORCENTAJE) / 100;
         TOTAL = (SUBTOTAL - DESCUENTOS) + IMPUESTOS;

         SUSPEND;
      END
    ELSE
      FOR
        SELECT
            PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
            PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
            PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
            PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
            PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID,
            CAST(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL AS DATE),
            PYMVENT28_DEP_FACTELECT.PYMVENT28_CANCELADO,
            PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL,
            DNVL((SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS)
                  FROM PYMVENT21_DET_TICKETS
                  WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20), 0),
            PYMVENT24_CAB_CLIENTES.PYMVENT24_DESCUENTO,
            SNVL((SELECT SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO
                  FROM SOCSYST20_DET_FACTELECT
                  INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
                  WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = PYMVENT20_CAB_TICKETS.RELA_SOCSYST01
                    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01), '')
        FROM PYMVENT20_CAB_TICKETS
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        INNER JOIN PYMVENT28_DEP_FACTELECT ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20)
        WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND CAST(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
          AND PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID IS NULL
        INTO
           :RELA_SOCSYST01,
           :RELA_SOCWFLO01,
           :RELA_PYMVENT24,
           :ID_PYMVENT20,
           :CLIENTE,
           :DOCNRO,
           :PYMVENT28_UUID,
           :FECHA,
           :FECHA_CANCELADA,
           :SUBTOTAL,
           :DESCUENTOS,
           :PORCENTAJE_DESC,
           :SERIE
      DO
      BEGIN
         SELECT DNVL(PRD_PYMVENT20_PYMVENT01.PORCENTAJE,0)
         FROM PRD_PYMVENT20_PYMVENT01(:PARAM_EMPRESA,:ID_PYMVENT20)
         INTO :PORCENTAJE;

         SUBTOTAL = SUBTOTAL / (1 + (PORCENTAJE / 100));

         IF (DESCUENTOS != 0) THEN
           DESCUENTOS = SUBTOTAL * (PORCENTAJE_DESC / 100);

         IMPUESTOS = ((SUBTOTAL - DESCUENTOS) * PORCENTAJE) / 100;
         TOTAL = (SUBTOTAL - DESCUENTOS) + IMPUESTOS;

         SUSPEND;
      END
END
PRD_CFDI                       

DECLARE VARIABLE ID_MSGPOLI26 BIGINT;
DECLARE VARIABLE ID_ON2CFDS15 BIGINT;
BEGIN
    IF (:FLAG = 0) THEN
      BEGIN
        SELECT MSGPOLI26_CAB_INTERFACES.ID_MSGPOLI26
        FROM MSGPOLI26_CAB_INTERFACES
        WHERE MSGPOLI26_CAB_INTERFACES.MSGPOLI26_PROCESO = 'JAM$_PYMINGR01'
        INTO :ID_MSGPOLI26;

        ID_ON2CFDS15 = NULL;

        SELECT ON2CFDS15_MOV_SAT.ID_ON2CFDS15
        FROM ON2CFDS15_MOV_SAT
        WHERE ON2CFDS15_MOV_SAT.RELA_ON2CFDS18 = :ID
        AND ON2CFDS15_MOV_SAT.RELA_MSGPOLI26 = :ID_MSGPOLI26
        INTO :ID_ON2CFDS15;

        UPDATE PYMINGR18_DEP_FACTELECT SET
                                           PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID = :UUID,
                                           PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID_FECHA = :UUID_FECHA,
                                           PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID_VER = :UUID_VER,
                                           PYMINGR18_DEP_FACTELECT.PYMINGR18_SELLOSAT = :SELLOSAT,
                                           PYMINGR18_DEP_FACTELECT.PYMINGR18_NOCERTSAT = :NOCERTSAT
        WHERE PYMINGR18_DEP_FACTELECT.ID_PYMINGR18 = :ID
          AND PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID IS NULL;

        IF (:ID_ON2CFDS15 IS NULL) THEN
            INSERT INTO ON2CFDS15_MOV_SAT(ON2CFDS15_MOV_SAT.RELA_PYMINGR18, ON2CFDS15_MOV_SAT.RELA_MSGPOLI26)
                                  VALUES (:ID, :ID_MSGPOLI26);
      END
    ELSE
      IF (:FLAG = 1) THEN
        BEGIN
          SELECT MSGPOLI26_CAB_INTERFACES.ID_MSGPOLI26
          FROM MSGPOLI26_CAB_INTERFACES
          WHERE MSGPOLI26_CAB_INTERFACES.MSGPOLI26_PROCESO = 'JAM$_PYMVENT20'
          INTO :ID_MSGPOLI26;

          ID_ON2CFDS15 = NULL;

          SELECT ON2CFDS15_MOV_SAT.ID_ON2CFDS15
          FROM ON2CFDS15_MOV_SAT
          WHERE ON2CFDS15_MOV_SAT.RELA_ON2CFDS18 = :ID
          AND ON2CFDS15_MOV_SAT.RELA_MSGPOLI26 = :ID_MSGPOLI26
          INTO :ID_ON2CFDS15;

          UPDATE PYMVENT28_DEP_FACTELECT SET
                                             PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID = :UUID,
                                             PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID_FECHA = :UUID_FECHA,
                                             PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID_VER = :UUID_VER,
                                             PYMVENT28_DEP_FACTELECT.PYMVENT28_SELLOSAT = :SELLOSAT,
                                             PYMVENT28_DEP_FACTELECT.PYMVENT28_NOCERTSAT = :NOCERTSAT
          WHERE PYMVENT28_DEP_FACTELECT.ID_PYMVENT28 = :ID
            AND PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID IS NULL;

          IF (:ID_ON2CFDS15 IS NULL) THEN
              INSERT INTO ON2CFDS15_MOV_SAT(ON2CFDS15_MOV_SAT.RELA_PYMVENT28, ON2CFDS15_MOV_SAT.RELA_MSGPOLI26)
                                    VALUES (:ID, :ID_MSGPOLI26);
        END
      ELSE
        IF (:FLAG = 2) THEN
          BEGIN
            SELECT MSGPOLI26_CAB_INTERFACES.ID_MSGPOLI26
            FROM MSGPOLI26_CAB_INTERFACES
            WHERE MSGPOLI26_CAB_INTERFACES.MSGPOLI26_PROCESO = 'JAM$_ON2CFDS10'
            INTO :ID_MSGPOLI26;

            ID_ON2CFDS15 = NULL;

            SELECT ON2CFDS15_MOV_SAT.ID_ON2CFDS15
            FROM ON2CFDS15_MOV_SAT
            WHERE ON2CFDS15_MOV_SAT.RELA_ON2CFDS18 = :ID
            AND ON2CFDS15_MOV_SAT.RELA_MSGPOLI26 = :ID_MSGPOLI26
            INTO :ID_ON2CFDS15;

            UPDATE ON2CFDS18_DEP_FACTELECT SET
                                               ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID = :UUID,
                                               ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID_FECHA = :UUID_FECHA,
                                               ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID_VER = :UUID_VER,
                                               ON2CFDS18_DEP_FACTELECT.ON2CFDS18_SELLOSAT = :SELLOSAT,
                                               ON2CFDS18_DEP_FACTELECT.ON2CFDS18_NOCERTSAT = :NOCERTSAT
            WHERE ON2CFDS18_DEP_FACTELECT.ID_ON2CFDS18 = :ID
              AND ON2CFDS18_DEP_FACTELECT.ON2CFDS18_UUID IS NULL;

            IF (:ID_ON2CFDS15 IS NULL) THEN
                INSERT INTO ON2CFDS15_MOV_SAT(ON2CFDS15_MOV_SAT.RELA_ON2CFDS18,  ON2CFDS15_MOV_SAT.RELA_MSGPOLI26)
                                      VALUES (:ID, :ID_MSGPOLI26);
          END
    ELSE
        IF (:FLAG = 4) THEN
          BEGIN
            SELECT MSGPOLI26_CAB_INTERFACES.ID_MSGPOLI26
            FROM MSGPOLI26_CAB_INTERFACES
            WHERE MSGPOLI26_CAB_INTERFACES.MSGPOLI26_PROCESO = 'JAM$_SRHNOMI01'
            INTO :ID_MSGPOLI26;

            ID_ON2CFDS15 = NULL;

            SELECT ON2CFDS15_MOV_SAT.ID_ON2CFDS15
            FROM ON2CFDS15_MOV_SAT
            WHERE ON2CFDS15_MOV_SAT.rela_srhnomi18 = :ID
            AND ON2CFDS15_MOV_SAT.RELA_MSGPOLI26 = :ID_MSGPOLI26
            INTO :ID_ON2CFDS15;

            UPDATE SRHNOMI18_DEP_FACTELECT SET
                                               SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID = :UUID,
                                               SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_FECHA = :UUID_FECHA,
                                               SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_VER = :UUID_VER,
                                               SRHNOMI18_DEP_FACTELECT.SRHNOMI18_SELLOSAT = :SELLOSAT,
                                               SRHNOMI18_DEP_FACTELECT.SRHNOMI18_NOCERTSAT = :NOCERTSAT
            WHERE SRHNOMI18_DEP_FACTELECT.ID_SRHNOMI18 = :ID
              AND SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID IS NULL;

            IF (:ID_ON2CFDS15 IS NULL) THEN
                INSERT INTO ON2CFDS15_MOV_SAT(ON2CFDS15_MOV_SAT.rela_srhnomi18,  ON2CFDS15_MOV_SAT.RELA_MSGPOLI26)
                                      VALUES (:ID, :ID_MSGPOLI26);
          END

    OK = 'OK';

    SUSPEND;
END
GRID_PYMINGR01                 

DECLARE VARIABLE RELA_PYMREFE01 BIGINT;
DECLARE VARIABLE RELA_PYMLOGI01 BIGINT;
BEGIN
  FOR
    SELECT
        PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
        PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
        PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO,
        PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_TIPO,
        PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_TIPOPAGO,
        PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_FORMAPAGO,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
        (SELECT FIRST 1 SNVL(PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,'')
         FROM PYMINGR18_DEP_FACTELECT
         WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
        PYMINGR01_CAB_FACTURAS.PYMINGR01_CONCEPTO,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_FVTO,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_DESCUENTOS,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_EXTEMPORANEO,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
        MONEDA.SOCSYST10_CODIGO_EXT1,
        INVL(PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPCANT,(SELECT FIRST 1 PYMINGR18_DEP_FACTELECT.PYMINGR18_IMPCANT
                                                       FROM PYMINGR18_DEP_FACTELECT
                                                       WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)),
        PYMINGR01_CAB_FACTURAS.RELA_PYMREFE01,
        PYMINGR01_CAB_FACTURAS.RELA_PYMLOGI01
    FROM PYMINGR01_CAB_FACTURAS
    INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
    WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :EMPRESA
        AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = :SUCURSAL
        AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :IDENTIDAD
    INTO
        :ID_PYMINGR01,
        :RELA_MSGPOLI01,
        :RELA_MSGPOLI01_CANCELADO,
        :RELA_SOCSYST10_TIPO,
        :RELA_SOCSYST10_TIPOPAGO,
        :RELA_SOCSYST10_FORMAPAGO,
        :FOLIO,
        :FOLIO_ELECT,
        :CONCEPTO,
        :POLIZA,
        :FECHA,
        :FECHA_VTO,
        :SUBTOTAL,
        :IMPUESTOS,
        :DESCUENTOS,
        :TOTAL,
        :PAGO_EXT,
        :TIPOCAMBIO,
        :MONEDA,
        :IMPCANT,
        :RELA_PYMREFE01,
        :RELA_PYMLOGI01
  DO
  BEGIN
     TIPOC = 'F';
     REFERENCIA = NULL;
     REFERENCIA_LOG = NULL;

     SELECT PYMREFE01_CAB_REFERENCIAS.PYMREFE01_DOCNRO
     FROM PYMREFE01_CAB_REFERENCIAS
     WHERE PYMREFE01_CAB_REFERENCIAS.ID_PYMREFE01 = :RELA_PYMREFE01
     INTO :REFERENCIA;

     SELECT PYMLOGI01_CAB_REFERENCIAS.PYMLOGI01_DOCNRO
     FROM PYMLOGI01_CAB_REFERENCIAS
     WHERE PYMLOGI01_CAB_REFERENCIAS.ID_PYMLOGI01 = :RELA_PYMLOGI01
     INTO :REFERENCIA_LOG;

     IF (:RELA_SOCSYST10_TIPO IS NOT NULL) THEN
       SELECT CBO_CFDS_TIPOS.SOCSYST10_CODIGO
       FROM CBO_CFDS_TIPOS
       WHERE CBO_CFDS_TIPOS.ID_SOCSYST10 = :RELA_SOCSYST10_TIPO
       INTO :TIPOC;

     IF (:RELA_SOCSYST10_TIPOPAGO IS NOT NULL) THEN
       SELECT CBO_CAMBIOS_LISTA.SOCSYST10_FILTRO_DES
       FROM CBO_CAMBIOS_LISTA
       WHERE CBO_CAMBIOS_LISTA.ID_SOCSYST10 = :RELA_SOCSYST10_TIPOPAGO
       INTO :TIPOPAGO;

     IF (:RELA_SOCSYST10_FORMAPAGO IS NOT NULL) THEN
       SELECT CBO_FORMADEPAGO.SOCSYST10_FILTRO_DES
       FROM CBO_FORMADEPAGO
       WHERE CBO_FORMADEPAGO.ID_SOCSYST10 = :RELA_SOCSYST10_FORMAPAGO
       INTO :FORMAPAGO;

     IF (RELA_MSGPOLI01_CANCELADO IS NULL) THEN
        IF (:IMPCANT != 0) THEN
            TIPO = 'Impresa';
         ELSE
            TIPO = 'Vigente';
     ELSE
        BEGIN
           SELECT MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO
           FROM MSGPOLI01_CAB_POLIZAS
           WHERE MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = :RELA_MSGPOLI01_CANCELADO
           INTO :POLIZA;

           TIPO = 'Cancelado';
        END
     SUSPEND;
  END
END
GRID_CTOCOSTOS_CONTABLE        

begin
    FOR SELECT
    MSGPOLI02_DET_POLIZAS.rela_siccont02,
    SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
    SICCONT02_ARB_PLANCTA_EMP.siccont02_descri,
    SUM(MSGPOLI02_DET_POLIZAS.msgpoli02_debe),
    SUM(MSGPOLI02_DET_POLIZAS.msgpoli02_haber)
    FROM SICCONT02_ARB_PLANCTA_EMP
    INNER JOIN MSGPOLI02_DET_POLIZAS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = MSGPOLI02_DET_POLIZAS.RELA_SICCONT02)
    INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
    INNER JOIN SCEXMLS11_DET_MIGRACION ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = SCEXMLS11_DET_MIGRACION.RELA_MSGPOLI01)
    INNER JOIN SCEXMLS13_DET_CONCEPTOS ON (SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11 = SCEXMLS13_DET_CONCEPTOS.RELA_SCEXMLS11)
    INNER JOIN SCEXMLS61_DET_CTOCOSTOS ON (SCEXMLS13_DET_CONCEPTOS.ID_SCEXMLS13 = SCEXMLS61_DET_CTOCOSTOS.RELA_SCEXMLS13)
    WHERE SCEXMLS61_DET_CTOCOSTOS.rela_scexmls60 = :id_scexmls60
    GROUP by 
    MSGPOLI02_DET_POLIZAS.rela_siccont02,
    SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
    SICCONT02_ARB_PLANCTA_EMP.siccont02_descri
    INTO :ID_SICCONT02,
         :CUENTA,
         :CONCEPTO,
         :DEBE,
         :HABER
    DO
    BEGIN
        suspend;
    END
end
GRID_CTOCOSTOS_PRESUPUESTO     

DECLARE VARIABLE RELA_SCEXMLS70 BIGINT;
DECLARE VARIABLE SCEXMLS60_DESCRIPCION VARCHAR(200);
DECLARE VARIABLE SCEXMLS60_IMPO_MIN DOUBLE PRECISION;
DECLARE VARIABLE SCEXMLS60_IMPO_MAX DOUBLE PRECISION;
begin
    select
    scexmls60_cab_ctocostos.rela_scexmls70,
    scexmls60_cab_ctocostos.scexmls60_descripcion,
    scexmls60_cab_ctocostos.scexmls60_impo_min,
    scexmls60_cab_ctocostos.scexmls60_impo_max
    from scexmls60_cab_ctocostos
    where scexmls60_cab_ctocostos.id_scexmls60 = :ID_SCEXMLS60
    into :rela_scexmls70,
         :scexmls60_descripcion,
         :scexmls60_impo_min,
         :scexmls60_impo_max;

    if (rela_scexmls70 is null) then
    begin
        ID = ID_SCEXMLS60;
        TIPO = :scexmls60_descripcion;
        INGRESOS = scexmls60_impo_min;
        EGRESOS = scexmls60_impo_max;
        suspend;
    end
    else
    begin
    end
end
GRID_CTOCOSTOS_TOTALES         

DECLARE VARIABLE SUMA DOUBLE PRECISION;
begin
  FOR SELECT
  MAX(grid_ctocostos_resumen_suma.id_scexmls61),
  grid_ctocostos_resumen_suma.tipo,
  SUM(grid_ctocostos_resumen_suma.scexmls61_importe)
  FROM grid_ctocostos_resumen_suma
  WHERE grid_ctocostos_resumen_suma.rela_scexmls60 = :ID_SCEXMLS60
  GROUP BY grid_ctocostos_resumen_suma.tipo
  INTO  :ID,
        :TIPO,
        :SUMA
  DO
  BEGIN
    if (SUMA < 0) then
    begin
        INGRESOS = 0.00;
        EGRESOS = :SUMA * -1;
        suspend;
    end
    else
    begin
        INGRESOS = :SUMA;
        EGRESOS = 0.00;
        suspend;
    end
  END
end
PRD_PYMINGR01_ORIGENDESTINO    

DECLARE VARIABLE CODIGO_ENTIDAD VARCHAR(20);
DECLARE VARIABLE RELA_CLIENTE BIGINT;
DECLARE VARIABLE RELA_PROVEEDOR BIGINT;
DECLARE VARIABLE RELA_EMPLEADO BIGINT;
BEGIN
   FOR
   SELECT FIRST 1
        TIPOENTIDAD.SOCSYST10_CODIGO,
        PYMINGR04_DET_ENTIDADES.RELA_SICINGR01,
        PYMINGR04_DET_ENTIDADES.RELA_SICEGRE01,
        PYMINGR04_DET_ENTIDADES.RELA_SRHMAIN10
   FROM PYMINGR04_DET_ENTIDADES
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIAENTIDADES ON (PYMINGR04_DET_ENTIDADES.RELA_SOCSYST10_CATEGORIA = CATEGORIAENTIDADES.ID_SOCSYST10)
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPOENTIDAD ON (PYMINGR04_DET_ENTIDADES.RELA_SOCSYST10 = TIPOENTIDAD.ID_SOCSYST10)
   WHERE PYMINGR04_DET_ENTIDADES.RELA_PYMINGR01 = :PARAM_FACTURA
     AND CATEGORIAENTIDADES.SOCSYST10_CODIGO = :PARAM_CODIGO
   INTO
       :CODIGO_ENTIDAD,
       :RELA_CLIENTE,
       :RELA_PROVEEDOR,
       :RELA_EMPLEADO
   DO
   BEGIN
        IF (CODIGO_ENTIDAD = 'CLIENTE') THEN
            BEGIN
                SELECT
                   PRD_SICINGR01.SOCUSUA02_ENTIDAD,
                   PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC,
                   PRD_SICINGR01.SOCUSUA41_DOMICILIO,
                   PRD_SICINGR01.SOCUSUA41_COLONIA,
                   PRD_SICINGR01.SOCUSUA41_TELEFONO,
                   SNVL(PRD_SICINGR01.SOCUSUA41_DEPTO,''),
                   SNVL(PRD_SICINGR01.SOCUSUA41_PISO,''),
                   PRD_SICINGR01.SOCUSUA41_CP,
                   PRD_SICINGR01.SOCUSUA50_CIUDAD
                FROM PRD_SICINGR01(:RELA_CLIENTE)
                INTO
                    :ENTIDAD,
                    :RFC,
                    :DIRECCION,
                    :COLONIA,
                    :TELEFONO,
                    :NOINTERIOR,
                    :PISO,
                    :CP,
                    :CIUDAD;

                IF (:NOINTERIOR != '') THEN
                  DIRECCION = DIRECCION || ' Int. ' || :NOINTERIOR;

                IF (:PISO != '') THEN
                  DIRECCION = DIRECCION || ' Piso ' || :PISO;
            END
        ELSE
            IF (CODIGO_ENTIDAD = 'PROVEEDOR') THEN
                BEGIN
                    SELECT
                       PRD_SICEGRE01.SOCUSUA02_ENTIDAD,
                       PRD_SICEGRE01.SOCUSUA20_SOCUSUA30_RFC,
                       PRD_SICEGRE01.SOCUSUA41_DOMICILIO,
                       PRD_SICEGRE01.SOCUSUA41_COLONIA,
                       PRD_SICEGRE01.SOCUSUA41_TELEFONO,
                       SNVL(PRD_SICEGRE01.SOCUSUA41_DEPTO,''),
                       SNVL(PRD_SICEGRE01.SOCUSUA41_PISO,''),
                       PRD_SICEGRE01.SOCUSUA41_CP,
                       PRD_SICEGRE01.SOCUSUA50_CIUDAD
                    FROM PRD_SICEGRE01(:RELA_PROVEEDOR)
                    INTO
                        :ENTIDAD,
                        :RFC,
                        :DIRECCION,
                        :COLONIA,
                        :TELEFONO,
                        :NOINTERIOR,
                        :PISO,
                        :CP,
                        :CIUDAD;

                    IF (:NOINTERIOR != '') THEN
                      DIRECCION = DIRECCION || ' Int. ' || :NOINTERIOR;

                    IF (:PISO != '') THEN
                      DIRECCION = DIRECCION || ' Piso ' || :PISO;
                END
            ELSE
                BEGIN
                    SELECT
                       PRD_SRHMAIN10.SOCUSUA02_ENTIDAD,
                       PRD_SRHMAIN10.SOCUSUA20_SOCUSUA30_RFC,
                       PRD_SRHMAIN10.SOCUSUA41_DOMICILIO,
                       PRD_SRHMAIN10.SOCUSUA41_COLONIA,
                       PRD_SRHMAIN10.SOCUSUA41_TELEFONO,
                       SNVL(PRD_SRHMAIN10.SOCUSUA41_DEPTO,''),
                       SNVL(PRD_SRHMAIN10.SOCUSUA41_PISO,''),
                       PRD_SRHMAIN10.SOCUSUA41_CP,
                       PRD_SRHMAIN10.SOCUSUA50_CIUDAD
                    FROM PRD_SRHMAIN10(:RELA_EMPLEADO)
                    INTO
                        :ENTIDAD,
                        :RFC,
                        :DIRECCION,
                        :COLONIA,
                        :TELEFONO,
                        :NOINTERIOR,
                        :PISO,
                        :CP,
                        :CIUDAD;

                    IF (:NOINTERIOR != '') THEN
                      DIRECCION = DIRECCION || ' Int. ' || :NOINTERIOR;

                    IF (:PISO != '') THEN
                      DIRECCION = DIRECCION || ' Piso ' || :PISO;
                END
        END

    SUSPEND;
END
WEB_CODPOSTALES                

DECLARE VARIABLE CADENA1 VARCHAR(50);
DECLARE VARIABLE CADENA2 VARCHAR(50);
DECLARE VARIABLE POS INTEGER;
begin
    SELECT socusua50_arb_localidades.socusua50_descri
    FROM socusua50_arb_localidades
    WHERE socusua50_arb_localidades.id_socusua50 = :ID_SOCUSUA50
    INTO :SOCUSUA42_PAIS;

    for select
    socusua42_tbl_codpostales.id_socusua42,
    socusua42_tbl_codpostales.socusua42_estadoprovincia,
    socusua42_tbl_codpostales.socusua42_municipio,
    socusua42_tbl_codpostales.socusua42_ciudad,
    socusua42_tbl_codpostales.socusua42_asentamiento
    from socusua42_tbl_codpostales
    where socusua42_tbl_codpostales.socusua42_codpostal = :codpostal
    and socusua42_tbl_codpostales.rela_socusua50 = :ID_SOCUSUA50
    into
    :id_socusua42,
    :socusua42_estadoprovincia,
    :socusua42_municipio,
    :socusua42_ciudad,
    :socusua42_asentamiento
    do
    begin
        if (strlen(socusua42_asentamiento) > 44) then
            begin
                POS = strlen(socusua42_asentamiento);
                CADENA1 = trim(substr(socusua42_asentamiento, 1, 14));
                CADENA2 = trim(substr(socusua42_asentamiento, pos - 30, pos));

                socusua42_asentamiento = CADENA1 || '..' || CADENA2;
            end
          suspend;
    end
end
WEB_SETUP                      

begin
    SESSION = GEN_ID(web_idsession,1);
    RELA_SOCUSUA50 = 4;
    RELA_SOCSYST01 = 159;
    RELA_SOCWFLO01 = 97;
    RELA_PYMINVE40 = 21;
    RELA_SOCUSUA42 = 83373;
    RELA_PYMINVE50 = 24;
    RELA_PYMVENT10 = 101;
    RELA_DOCUMENTO = 14;
    RELA_SOCUSUA02 = 308;
    RELA_SOCSYST10 = 1057;
    RELA_SOCSYST10_CONSULTOR = 1359;
    DEFAULT_FILTRO_VER = 1215;

    SYS_PATH_IMAGES = 'http://www.officenet2.com:8024/JAMMexico/Images/dbpictures/calculos/';
    SYS_MAIL_PROPIETARIO = 'anibal_mohr@officenet2.com';
    DOCUMENTO_FISCAL = 'Registro Federal de Contribuyente (RFC)';

    SYS_TEMPLATE_WEB_CAB = 'http://www.officenet2.com/ON2/cabtienda.htm';
    SYS_TEMPLATE_WEB_PIE = 'http://www.officenet2.com/ON2/pietienda.htm';
    SYS_ENTIDAD_PROPIETARIO = 'Office Net2';
    suspend;
end
JAM$_COPYARBOL_MSGPOLI12       

DECLARE VARIABLE RELA_SOCSYST10_MODO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE RELA_MSGPOLI09 BIGINT;
DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RELA_SICCONT02_TARJET BIGINT;
begin
    NOK = 0;
    FOR SELECT
    MSGPOLI12_MOV_FILTROIMPUESTOS.rela_socsyst10_modo,
    MSGPOLI12_MOV_FILTROIMPUESTOS.rela_socsyst10,
    MSGPOLI12_MOV_FILTROIMPUESTOS.rela_msgpoli09,
    MSGPOLI12_MOV_FILTROIMPUESTOS.rela_siccont02
    FROM MSGPOLI12_MOV_FILTROIMPUESTOS
    WHERE MSGPOLI12_MOV_FILTROIMPUESTOS.rela_socsyst01 = :source
    INTO :rela_socsyst10_modo,
         :rela_socsyst10,
         :rela_msgpoli09,
         :rela_siccont02
    DO
    BEGIN
        NOK = NOK + 1;
        rela_siccont02_tarjet = null;

        if (rela_siccont02 is not null) then
            select rela_siccont02_tarjet
            from jam$_copyarbol_iguales(:target, :rela_siccont02)
            into :rela_siccont02_tarjet;

        insert into MSGPOLI12_MOV_FILTROIMPUESTOS (MSGPOLI12_MOV_FILTROIMPUESTOS.rela_socsyst01,
                                                   MSGPOLI12_MOV_FILTROIMPUESTOS.rela_socsyst10_modo,
                                                   MSGPOLI12_MOV_FILTROIMPUESTOS.rela_socsyst10,
                                                   MSGPOLI12_MOV_FILTROIMPUESTOS.rela_msgpoli09,
                                                   MSGPOLI12_MOV_FILTROIMPUESTOS.rela_siccont02)
        values(:target,
               :rela_socsyst10_modo,
               :rela_socsyst10,
               :rela_msgpoli09,
               :rela_siccont02);

    END

    suspend;
end
PRD_MSGPOLI01_MSGPOLI02_1      

DECLARE VARIABLE ID_PYMEGRE10 BIGINT;
begin
    id_pymegre10 = null;
    select
    pymegre10_cab_cheques.id_pymegre10
    FROM CBO_SICEGRE01_FACT
    INNER JOIN PYMEGRE10_CAB_CHEQUES ON (CBO_SICEGRE01_FACT.ID_SICEGRE01 = PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01)
    where pymegre10_cab_cheques.rela_msgpoli01 =  :RELA_MSGPOLI01
    and CBO_SICEGRE01_FACT.rela_socsyst01 = pymegre10_cab_cheques.rela_socsyst01
    and pymegre10_cab_cheques.rela_sicegre01 is not null
    and pymegre10_cab_cheques.rela_msgpoli01_cancelado is null
    into :id_pymegre10;

    FOR SELECT
    ID_MSGPOLI01,
    ID_MSGPOLI02,
    RELA_SICCONT02,
    SICCONT02_TIPO,
    SICCONT02_CODIGO,
    SICCONT02_CODEXT,
    SICCONT02_DESCRI,
    MSGPOLI02_DEBE,
    MSGPOLI02_HABER,
    MSGPOLI02_SALDO,
    SOCSYST10_CODIGO,
    socsyst10_codigo_accion
    FROM VR_MSGPOLI01_MSGPOLI02_1
    WHERE ID_MSGPOLI01 = :RELA_MSGPOLI01
    INTO
    :ID_MSGPOLI01,
    :ID_MSGPOLI02,
    :RELA_SICCONT02,
    :SICCONT02_TIPO,
    :SICCONT02_CODIGO,
    :SICCONT02_CODEXT,
    :SICCONT02_DESCRI,
    :MSGPOLI02_DEBE,
    :MSGPOLI02_HABER,
    :MSGPOLI02_SALDO,
    :SOCSYST10_CODIGO,
    :SOCSYST10_CODIGO_ACCION
    DO
    BEGIN
        if (id_pymegre10 is not null and MSGPOLI02_HABER = 0) then
        begin
            FOR SELECT
            MSGPOLI02_DET_POLIZAS.rela_msgpoli01,
            MSGPOLI02_DET_POLIZAS.id_msgpoli02,
            MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
            SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
            SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODIGO,
            SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
            SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE,
            MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER
            FROM PYMEGRE11_DET_FACTURASNOTAS
            INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
            INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
            INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
            INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
            WHERE 
            (
                (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :id_pymegre10)
            )
            into
            :ID_MSGPOLI01,
            :ID_MSGPOLI02,
            :RELA_SICCONT02,
            :SICCONT02_TIPO,
            :SICCONT02_CODIGO,
            :SICCONT02_CODEXT,
            :SICCONT02_DESCRI,
            :MSGPOLI02_DEBE,
            :MSGPOLI02_HABER
            do
            begin
                suspend;
            end
        end
        else
        begin
            if (id_pymegre10 IS NULL) then
               suspend;
        end
    END
end
PRD_PYMINVE45_SIN_PYMINVE30    

DECLARE VARIABLE PYMINVE30_CANTIDADX DOUBLE PRECISION;
begin
    delete from ztmpinve46_suma where ztmpinve46_suma.ztmpinve46_user = current_user;

    insert into ztmpinve46_suma(ZTMPINVE46_USER, RELA_PYMINVE30, PYMINVE46_CANTIDAD, RESTO)
                select
                current_user,
                vw_pyminve46_suma_insert.rela_pyminve30,
                vw_pyminve46_suma_insert.pyminve46_cantidad,
                vw_pyminve46_suma_insert.resto
                from vw_pyminve46_suma_insert
                where vw_pyminve46_suma_insert.rela_socwflo01 = :rela_socwflo01x
                and vw_pyminve46_suma_insert.rela_pyminve40 = :rela_pyminve40x;

    for select
    PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
    PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
    PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
    PYMINVE30_MOV_STOCK.ID_PYMINVE30,
    PYMINVE10_CAB_PRODUCTOS.pyminve10_codigo,
    PYMINVE10_CAB_PRODUCTOS.pyminve10_descripcion,
    PYMINVE30_MOV_STOCK.pyminve30_cantidad,
    CAST(PYMINVE30_MOV_STOCK.pyminve30_fapl AS DATE)
    from PYMINVE30_MOV_STOCK
    inner join PYMINVE50_CAB_CONCEPTOS on (PYMINVE30_MOV_STOCK.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
    inner join PYMINVE10_CAB_PRODUCTOS on (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    where PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO = 'EN-RECEP'
    and (dnvl((select ztmpinve46_suma.resto
               from ztmpinve46_suma
               where ztmpinve46_suma.rela_pyminve30 = PYMINVE30_MOV_STOCK.id_pyminve30
               and ztmpinve46_suma.ztmpinve46_user = current_user),
        PYMINVE30_MOV_STOCK.pyminve30_cantidad)) <> 0
    and PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :rela_socwflo01x
    and PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = :rela_pyminve40x
    into :RELA_SOCWFLO01,
         :RELA_PYMINVE40,
         :RELA_PYMINVE10,
         :ID_PYMINVE30,
         :PYMINVE10_CODIGO,
         :PYMINVE10_DESCRIPCION,
         :pyminve30_cantidad,
         :fecha
    do
    begin
        select
        GRID_PYMINVE35_MTC.modelo,
        GRID_PYMINVE35_MTC.talla,
        GRID_PYMINVE35_MTC.color
        from GRID_PYMINVE35_MTC
        where GRID_PYMINVE35_MTC.rela_pyminve30 = :ID_PYMINVE30
        into :modelo,
             :talla,
             :color;

        select
        pyminve31_dep_proveedores.pyminve31_nrolote
        from pyminve31_dep_proveedores
        where pyminve31_dep_proveedores.rela_pyminve30 = :id_pyminve30
        into :PYMINVE31_NROLOTE;

        pyminve30_cantidadx = null;

        select ztmpinve46_suma.resto
        from ztmpinve46_suma
        where ztmpinve46_suma.rela_pyminve30 = :id_pyminve30
        and ztmpinve46_suma.ztmpinve46_user = current_user
        into :pyminve30_cantidadx;

        if (pyminve30_cantidadx is not null) then
            pyminve30_cantidad = pyminve30_cantidadx;

        id_pyminve46 = null;
        suspend;
    end
end
PRD_PYMINVE46_PYMINVE30        

DECLARE VARIABLE RELA_PYMINVE30 BIGINT;
DECLARE VARIABLE RELA_PYMINVE10 BIGINT;
DECLARE VARIABLE ID_PYMINVE50_ENTRADA BIGINT;
DECLARE VARIABLE ID_PYMINVE50_SALIDA BIGINT;
DECLARE VARIABLE PYMINVE30_CANTIDAD DOUBLE PRECISION;
DECLARE VARIABLE PYMINVE45_AFECTASTOCK INTEGER;
DECLARE VARIABLE RELA_SOCWFLO01 BIGINT;
DECLARE VARIABLE RELA_SOCWFLO01_DESTINO BIGINT;
DECLARE VARIABLE RELA_PYMINVE40 BIGINT;
DECLARE VARIABLE RELA_PYMINVE40_DESTINO BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_PYMINVE46 BIGINT;
DECLARE VARIABLE RELA_PYMINVE30_ORIGEN BIGINT;
DECLARE VARIABLE RELA_PYMINVE12 BIGINT;
DECLARE VARIABLE RELA_SICEGRE01 BIGINT;
DECLARE VARIABLE PYMINVE31_NROLOTE VARCHAR(50);
DECLARE VARIABLE RELA_SOCSYST10_MODELO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TALLA BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_COLOR BIGINT;
begin
    OK = 0;
    select pyminve50_cab_conceptos.id_pyminve50
    from pyminve50_cab_conceptos
    where pyminve50_cab_conceptos.pyminve50_codigo = 'TR-EN'
    INTO :id_pyminve50_entrada;

    select pyminve50_cab_conceptos.id_pyminve50
    from pyminve50_cab_conceptos
    where pyminve50_cab_conceptos.pyminve50_codigo = 'TR-SA'
    INTO :id_pyminve50_salida;

    select
    pyminve45_cab_transferencias.pyminve45_afectastock,
    pyminve45_cab_transferencias.rela_socwflo01_destino,
    pyminve45_cab_transferencias.rela_pyminve40_destino,
    pyminve45_cab_transferencias.rela_socusua02
    from pyminve45_cab_transferencias
    where pyminve45_cab_transferencias.id_pyminve45 = :rela_pyminve45
    into :pyminve45_afectastock,
         :rela_socwflo01_destino,
         :rela_pyminve40_destino,
         :rela_socusua02;

    if (:pyminve45_afectastock = 1) then
    begin
        for select
        pyminve46_det_transferencias.id_pyminve46,
        pyminve46_det_transferencias.rela_pyminve30,
        pyminve30_mov_stock.rela_pyminve10,
        pyminve30_mov_stock.rela_socwflo01,
        pyminve30_mov_stock.rela_pyminve40,
        pyminve46_det_transferencias.pyminve46_cantidad
        FROM PYMINVE30_MOV_STOCK
        INNER JOIN PYMINVE46_DET_TRANSFERENCIAS ON (PYMINVE30_MOV_STOCK.ID_PYMINVE30 = PYMINVE46_DET_TRANSFERENCIAS.RELA_PYMINVE30)
        where pyminve46_det_transferencias.rela_pyminve45 = :rela_pyminve45
        and pyminve46_det_transferencias.rela_pyminve30_destino is null
        into :rela_pyminve46,
             :RELA_PYMINVE30_ORIGEN,
             :rela_pyminve10,
             :rela_socwflo01,
             :rela_pyminve40,
             :pyminve30_cantidad
        do
        begin
            rela_pyminve30 = null;
            insert into pyminve30_mov_stock(
                        pyminve30_mov_stock.rela_pyminve50,
                        pyminve30_mov_stock.rela_socusua02,
                        pyminve30_mov_stock.rela_socwflo01,
                        pyminve30_mov_stock.rela_pyminve10,
                        pyminve30_mov_stock.rela_pyminve40,
                        pyminve30_mov_stock.rela_pyminve30,
                        pyminve30_mov_stock.pyminve30_cantidad)
            values(
                        :id_pyminve50_salida,
                        :rela_socusua02,
                        :rela_socwflo01,
                        :rela_pyminve10,
                        :rela_pyminve40,
                        :RELA_PYMINVE30_ORIGEN,
                        :pyminve30_cantidad*-1);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :rela_pyminve30;

            insert into pyminve30_mov_stock(
                        pyminve30_mov_stock.rela_pyminve50,
                        pyminve30_mov_stock.rela_socusua02,
                        pyminve30_mov_stock.rela_socwflo01,
                        pyminve30_mov_stock.rela_pyminve10,
                        pyminve30_mov_stock.rela_pyminve40,
                        pyminve30_mov_stock.rela_pyminve30,
                        pyminve30_mov_stock.pyminve30_cantidad)
            values(
                        :id_pyminve50_entrada,
                        :rela_socusua02,
                        :rela_socwflo01_destino,
                        :rela_pyminve10,
                        :rela_pyminve40_destino,
                        :rela_pyminve30,
                        :pyminve30_cantidad);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :rela_pyminve30;

            UPDATE pyminve46_det_transferencias SET
            pyminve46_det_transferencias.rela_pyminve30_destino = :rela_pyminve30
            where pyminve46_det_transferencias.id_pyminve46 = :rela_pyminve46;

            rela_pyminve12 = null;

            select
            pyminve31_dep_proveedores.rela_pyminve12,
            pyminve31_dep_proveedores.rela_sicegre01,
            pyminve31_dep_proveedores.pyminve31_nrolote
            from pyminve31_dep_proveedores
            where pyminve31_dep_proveedores.rela_pyminve30 = :RELA_PYMINVE30_ORIGEN
            into :rela_pyminve12,
                 :rela_sicegre01,
                 :pyminve31_nrolote;

            if (rela_pyminve12 is not null) then
                insert into pyminve31_dep_proveedores(
                            pyminve31_dep_proveedores.rela_pyminve30,
                            pyminve31_dep_proveedores.rela_pyminve12,
                            pyminve31_dep_proveedores.rela_sicegre01,
                            pyminve31_dep_proveedores.pyminve31_nrolote)
                values(
                            :rela_pyminve30,
                            :rela_pyminve12,
                            :rela_sicegre01,
                            :pyminve31_nrolote );

            rela_socsyst10_modelo = null;

            select
            pyminve35_dep_mtc.rela_socsyst10_modelo,
            pyminve35_dep_mtc.rela_socsyst10_talla,
            pyminve35_dep_mtc.rela_socsyst10_color
            from pyminve35_dep_mtc
            where pyminve35_dep_mtc.rela_pyminve30 = :RELA_PYMINVE30_ORIGEN
            into :rela_socsyst10_modelo,
                 :rela_socsyst10_talla,
                 :rela_socsyst10_color;

            if (rela_socsyst10_modelo is not null) then
                insert into pyminve35_dep_mtc(
                            pyminve35_dep_mtc.rela_pyminve30,
                            pyminve35_dep_mtc.rela_socsyst10_modelo,
                            pyminve35_dep_mtc.rela_socsyst10_talla,
                            pyminve35_dep_mtc.rela_socsyst10_color)
                values(
                            :rela_pyminve30,
                            :rela_socsyst10_modelo,
                            :rela_socsyst10_talla,
                            :rela_socsyst10_color);
            OK = 1;
        end
    end

    suspend;
end
VW_PYMINVE40_ORDER             

begin
    if (rela_socsyst01x <> -1) then
        SELECT
        min(pyminve40_arb_locaciones.pyminve40_codigo)
        FROM pyminve40_arb_locaciones
        INNER JOIN socwflo01_arb_organigrama ON (socwflo01_arb_organigrama.id_socwflo01 = pyminve40_arb_locaciones.rela_socwflo01)
        WHERE socwflo01_arb_organigrama.socwflo01_codigo = :xfiltro
        and socwflo01_arb_organigrama.rela_socsyst01 = :rela_socsyst01x
        INTO :xfiltro;

    FOR SELECT
    ID_PYMINVE40,
    RELA_PYMINVE40,
    PYMINVE40_DESCRI,
    PYMINVE40_CODIGO,
    RELA_SOCWFLO01,
    SOCSYST06_NIVEL,
    SOCSYST06_ACCION
    FROM VW_PYMINVE40(:XFILTRO, :RELA_SOCSYST01x)
    ORDER BY PYMINVE40_CODIGO
    INTO :ID_PYMINVE40,
         :RELA_PYMINVE40,
         :PYMINVE40_DESCRI,
         :PYMINVE40_CODIGO,
         :RELA_SOCWFLO01,
         :SOCSYST06_NIVEL,
         :SOCSYST06_ACCION
    DO
    SUSPEND;
end
PRD_MSGPOLI01_MSGPOLI02_ACUM   

BEGIN
    FOR
      SELECT
          PRD_MSGPOLI01_MSGPOLI02_1.RELA_SICCONT02,
          PRD_MSGPOLI01_MSGPOLI02_1.SICCONT02_TIPO,
          PRD_MSGPOLI01_MSGPOLI02_1.SICCONT02_CODIGO,
          PRD_MSGPOLI01_MSGPOLI02_1.SICCONT02_CODEXT,
          PRD_MSGPOLI01_MSGPOLI02_1.SICCONT02_DESCRI,
          SUM(PRD_MSGPOLI01_MSGPOLI02_1.MSGPOLI02_DEBE),
          SUM(PRD_MSGPOLI01_MSGPOLI02_1.MSGPOLI02_HABER),
          SUM(PRD_MSGPOLI01_MSGPOLI02_1.MSGPOLI02_SALDO),
          PRD_MSGPOLI01_MSGPOLI02_1.SOCSYST10_CODIGO,
          PRD_MSGPOLI01_MSGPOLI02_1.SOCSYST10_CODIGO_ACCION
      FROM PRD_MSGPOLI01_MSGPOLI02_1(:RELA_MSGPOLI01)
      GROUP BY
          PRD_MSGPOLI01_MSGPOLI02_1.RELA_SICCONT02,
          PRD_MSGPOLI01_MSGPOLI02_1.SICCONT02_TIPO,
          PRD_MSGPOLI01_MSGPOLI02_1.SICCONT02_CODIGO,
          PRD_MSGPOLI01_MSGPOLI02_1.SICCONT02_CODEXT,
          PRD_MSGPOLI01_MSGPOLI02_1.SICCONT02_DESCRI,
          PRD_MSGPOLI01_MSGPOLI02_1.SOCSYST10_CODIGO,
          PRD_MSGPOLI01_MSGPOLI02_1.SOCSYST10_CODIGO_ACCION
      INTO
         :RELA_SICCONT02,
         :SICCONT02_TIPO,
         :SICCONT02_CODIGO,
         :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :MSGPOLI02_DEBE,
         :MSGPOLI02_HABER,
         :MSGPOLI02_SALDO,
         :SOCSYST10_CODIGO,
         :SOCSYST10_CODIGO_ACCION
    DO
    BEGIN
        SUSPEND;
    END
END
PRD_MSGPOLI02_SINCON_GROUP     

BEGIN
    FOR
      SELECT
        0,
        GRID_MSGPOLI02_SINCONCILIAR.RELA_SOCSYST01,
        GRID_MSGPOLI02_SINCONCILIAR.socsyst10_codigo_fuente,
        GRID_MSGPOLI02_SINCONCILIAR.socsyst10_codigo_accion,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI01_DOCNRO,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI01_DESCRIPCION,
        GRID_MSGPOLI02_SINCONCILIAR.NOTAS,
        GRID_MSGPOLI02_SINCONCILIAR.RELA_MSGPOLI01,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI01_FCTA,
        GRID_MSGPOLI02_SINCONCILIAR.RELA_SICCONT02,
        MIN(GRID_MSGPOLI02_SINCONCILIAR.ID_MSGPOLI02),
        MAX(GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_DEBE),
        MAX(GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_HABER),
        GRID_MSGPOLI02_SINCONCILIAR.SOCSYST10_FILTRO_DES,
        GRID_MSGPOLI02_SINCONCILIAR.ID_MSGPOLI05,
        0,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_ANO,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_MES
      FROM GRID_MSGPOLI02_SINCONCILIAR
      WHERE (GRID_MSGPOLI02_SINCONCILIAR.RELA_SOCSYST01 = :ID_SOCSYST01 AND GRID_MSGPOLI02_SINCONCILIAR.SOCSYST10_CODIGO_ACCION <> 'ORDGASTOS')
        AND ((GRID_MSGPOLI02_SINCONCILIAR.RELA_SICCONT02 = :ID_SICCONT02 AND GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_ANO = :ANOHASTA AND GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_MES <= :MES)
        OR (GRID_MSGPOLI02_SINCONCILIAR.RELA_SICCONT02 = :ID_SICCONT02 AND GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_ANO <= :ANODESDE))
      GROUP BY
        GRID_MSGPOLI02_SINCONCILIAR.RELA_SOCSYST01,
        GRID_MSGPOLI02_SINCONCILIAR.socsyst10_codigo_fuente,
        GRID_MSGPOLI02_SINCONCILIAR.socsyst10_codigo_accion,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI01_DOCNRO,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI01_DESCRIPCION,
        GRID_MSGPOLI02_SINCONCILIAR.NOTAS,
        GRID_MSGPOLI02_SINCONCILIAR.RELA_MSGPOLI01,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI01_FCTA,
        GRID_MSGPOLI02_SINCONCILIAR.RELA_SICCONT02,
        GRID_MSGPOLI02_SINCONCILIAR.SOCSYST10_FILTRO_DES,
        GRID_MSGPOLI02_SINCONCILIAR.ID_MSGPOLI05,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_ANO,
        GRID_MSGPOLI02_SINCONCILIAR.MSGPOLI02_MES
      INTO
        :MARCA,
        :RELA_SOCSYST01,
        :socsyst10_codigo_fuente,
        :socsyst10_codigo_accion,
        :MSGPOLI01_DOCNRO,
        :MSGPOLI01_DESCRIPCION,
        :NOTAS,
        :RELA_MSGPOLI01,
        :MSGPOLI01_FCTA,
        :RELA_SICCONT02,
        :ID_MSGPOLI02,
        :MSGPOLI02_DEBE,
        :MSGPOLI02_HABER,
        :SOCSYST10_FILTRO_DES,
        :ID_MSGPOLI05,
        :INGRESOFISCAL,
        :MSGPOLI02_ANO,
        :MSGPOLI02_MES
    DO
    BEGIN
        ID_PYMINGR30 = NULL;

        SELECT PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30
        FROM PYMINGR30_CAB_DEPOSITOS
        WHERE PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01 = :RELA_MSGPOLI01
          AND PYMINGR30_CAB_DEPOSITOS.RELA_SICCONT02_BANCO = :ID_SICCONT02
        INTO :ID_PYMINGR30;

        ID_PYMINGR35 = NULL;

        SELECT PYMINGR35_CAB_SALDOS.ID_PYMINGR35
        FROM PYMINGR35_CAB_SALDOS
        WHERE PYMINGR35_CAB_SALDOS.RELA_MSGPOLI01 = :RELA_MSGPOLI01
        INTO :ID_PYMINGR35;

        if (socsyst10_codigo_fuente is null) then
            socsyst10_codigo_fuente = 'PYME';

        SUSPEND;
    END
END
PRD_SOCSYST20_PYMEGRE06        
DECLARE VARIABLE RELA_PADRE BIGINT;
BEGIN
  SELECT
      SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
      SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
      SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
  FROM SOCSYST10_TBL_LISTAESTADOS
  INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
  WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :ARG_IDSOCWFLO01
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
  INTO
      :XID_SOCSYST20,
      :XSOCSYST20_CONTADOR,
      :XSOCSYST20_MASCARA,
      :XSOCSYST20_PREFIJO,
      :XSOCSYST20_POSFIJO,
      :XSOCSYST20_LONGITUD;

  SUSPEND;
END
PRD_SOCSYST20_PYMEGRE10        
BEGIN
  SELECT
      SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
      SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
      SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
  FROM SOCSYST10_TBL_LISTAESTADOS
  INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
  WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SICCONT02_BANCO = :ARG_BANCO
    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :ARG_SOCWFLO01
  INTO
      :XID_SOCSYST20,
      :XSOCSYST20_CONTADOR,
      :XSOCSYST20_MASCARA,
      :XSOCSYST20_PREFIJO,
      :XSOCSYST20_POSFIJO,
      :XSOCSYST20_LONGITUD;

  SUSPEND;
END
PRD_PROXIMO_FOLIO_FACTURA      

DECLARE VARIABLE NID21 BIGINT;
DECLARE VARIABLE NCONTADOR INTEGER;
DECLARE VARIABLE CMASCARA VARCHAR(50);
DECLARE VARIABLE CPREFIJO VARCHAR(50);
DECLARE VARIABLE CPOSFIJO VARCHAR(50);
DECLARE VARIABLE NLONGITUD INTEGER;
DECLARE VARIABLE CCONTADOR VARCHAR(50);
DECLARE VARIABLE CNRODOCUM VARCHAR(50);
BEGIN
    SELECT
        PRD_SOCSYST20_PYMINGR01.XID_SOCSYST20,
        PRD_SOCSYST20_PYMINGR01.XSOCSYST20_CONTADOR,
        PRD_SOCSYST20_PYMINGR01.XSOCSYST20_MASCARA,
        PRD_SOCSYST20_PYMINGR01.XSOCSYST20_PREFIJO,
        PRD_SOCSYST20_PYMINGR01.XSOCSYST20_POSFIJO,
        PRD_SOCSYST20_PYMINGR01.XSOCSYST20_LONGITUD
    FROM PRD_SOCSYST20_PYMINGR01(:EMPRESA,
                                 'FACT',
                                 :ORGANIGRAMA)
    INTO NID21, NCONTADOR, CMASCARA, CPREFIJO, CPOSFIJO, NLONGITUD;

    NCONTADOR = NCONTADOR + 1;
    CCONTADOR = NCONTADOR;
    NLONGITUD = NLONGITUD - STRLEN(CCONTADOR);

    IF (CPREFIJO IS NOT NULL) THEN
        CNRODOCUM = cPREFIJO;

    CNRODOCUM = CNRODOCUM || STRREPEAT(CMASCARA, NLONGITUD) || NCONTADOR;

    IF (cPOSFIJO IS NOT NULL) THEN
        CNRODOCUM = CNRODOCUM || cPOSFIJO;

    FOLIO = CNRODOCUM;
    SUSPEND;
END
REP_PYMEGRE10_CHEQUES          

DECLARE VARIABLE RELA_MSGPOLI01_SINCANCELAR BIGINT;
DECLARE VARIABLE RELA_MSGPOLI01_CANCELADO BIGINT;
DECLARE VARIABLE MODALIDAD INTEGER;
BEGIN
  FOR
    SELECT /* Devuelve todas las notas de gasto */
        PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
        PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
        PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10,
        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
        PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
        GRID_SRHMAIN10.ENTIDAD,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
        PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
    FROM PYMEGRE10_CAB_CHEQUES
    INNER JOIN GRID_SRHMAIN10 ON (PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10 = GRID_SRHMAIN10.ID_SRHMAIN10)

    UNION

    SELECT /* Devuelve todas las facturas */
        PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
        PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
        PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01,
        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
        PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
        GRID_SICEGRE01.ENTIDAD,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
        PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
    FROM PYMEGRE10_CAB_CHEQUES
    INNER JOIN GRID_SICEGRE01 ON (PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01 = GRID_SICEGRE01.ID_SICEGRE01)

    UNION

    SELECT /* Devuelve todas los saldos */
        PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
        PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
        PYMEGRE10_CAB_CHEQUES.RELA_SICINGR01,
        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
        PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
        GRID_SICINGR01.ENTIDAD,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
        PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
    FROM PYMEGRE10_CAB_CHEQUES
    INNER JOIN GRID_SICINGR01 ON (PYMEGRE10_CAB_CHEQUES.RELA_SICINGR01 = GRID_SICINGR01.ID_SICINGR01)
    INTO
        :RELA_SOCSYST01,
        :RELA_SOCWFLO01,
        :RELA_ENTIDAD,
        :RELA_MSGPOLI01_SINCANCELAR,
        :RELA_MSGPOLI01_CANCELADO,
        :ID_PYMEGRE10,
        :PYMEGRE10_DOCNRO,
        :PYMEGRE10_TRANSFERENCIA,
        :PYMEGRE10_FCHE,
        :ENTIDAD,
        :PYMEGRE10_IMPORTE,
        :PYMEGRE10_IMPCANT,
        :MODALIDAD
  DO
    BEGIN
       IF (MODALIDAD = 1) THEN
         ORIGEN = 'Nro. Transferencia - ' || PYMEGRE10_TRANSFERENCIA;
       ELSE
         ORIGEN = 'Nro. Cheque - ' || PYMEGRE10_DOCNRO;

       SELECT API_NUM_MEXICO.CNUMERO
       FROM API_NUM_MEXICO(:PYMEGRE10_IMPORTE,'MXN')
       INTO :TOTAL_LETRA;

       IF (RELA_MSGPOLI01_CANCELADO IS NULL) THEN
          RELA_MSGPOLI01 = RELA_MSGPOLI01_SINCANCELAR;
       ELSE
          RELA_MSGPOLI01 = RELA_MSGPOLI01_CANCELADO;

       SUSPEND;
    END
END
SOC$_CFDIXML_CONCEPTOS         

DECLARE VARIABLE ID_SCEXMLS20 BIGINT;
DECLARE VARIABLE ID_SCEXMLS22 BIGINT;
DECLARE VARIABLE RELA_SICCONT02 BIGINT;
begin
    OK = 1;

    select scexmls20_cab_parametrizacion.id_scexmls20
    from scexmls20_cab_parametrizacion
    where scexmls20_cab_parametrizacion.rela_socsyst01 = :rela_socsyst01
    into :id_scexmls20;

    RELA_SICCONT02 = NULL;
    id_scexmls22 = NULL;
    select
    scexmls22_det_conceptos.id_scexmls22,
    scexmls22_det_conceptos.rela_siccont02
    from scexmls22_det_conceptos
    where scexmls22_det_conceptos.rela_scexmls20 = :id_scexmls20
    AND scexmls22_det_conceptos.scexmls22_tipo = :tipoxml
    AND scexmls22_det_conceptos.scexmls22_concepto = :CONCEPTO
    INTO :ID_SCEXMLS22, RELA_SICCONT02;

    if (ID_SCEXMLS22 IS NULL) then
    BEGIN
       INSERT INTO scexmls22_det_conceptos(scexmls22_det_conceptos.rela_scexmls20,
                                           scexmls22_det_conceptos.scexmls22_tipo,
                                           scexmls22_det_conceptos.scexmls22_concepto)
       VALUES(:id_scexmls20, :tipoxml, :concepto);

       select socutil02_tbl_ultids.socutil02_ultid
       from socutil02_tbl_ultids
       where socutil02_tbl_ultids.socutil02_usuario = current_user
       into :id_scexmls22;

       OK = 0;
    END

    if (RELA_SICCONT02 IS NULL) then
       OK = 0;

    insert into scexmls24_tmp_transacciones(scexmls24_tmp_transacciones.rela_scexmls22,
                                            scexmls24_tmp_transacciones.scexmls24_user,
                                            scexmls24_tmp_transacciones.scexmls24_uuid,
                                            scexmls24_tmp_transacciones.scexmls24_tipo,
                                            scexmls24_tmp_transacciones.scexmls24_descripcion,
                                            scexmls24_tmp_transacciones.scexmls24_cantidad,
                                            scexmls24_tmp_transacciones.scexmls24_importe,
                                            scexmls24_tmp_transacciones.scexmls24_unidad,
                                            scexmls24_tmp_transacciones.scexmls24_valorunidad,
                                            scexmls24_tmp_transacciones.scexmls24_excluir)
    values(:id_scexmls22,
           current_user,
           :uuid,
           'C',
           :concepto,
           :cantidad,
           :importe, 
           :unidad,
           :valorunidad,
           'N');
        
    suspend;
end
SOC$_CFDIXML_ENTIDADES         

DECLARE VARIABLE ID_SOCUSUA50 BIGINT;
DECLARE VARIABLE ID_SOCSYST10_SEXO BIGINT;
DECLARE VARIABLE ID_SOCSYST10_SOCIEDAD BIGINT;
DECLARE VARIABLE ID_SOCSYST10_GIROSOC BIGINT;
DECLARE VARIABLE ID_SOCSYST10_ECIVIL BIGINT;
DECLARE VARIABLE SOCUTIL02_ULTID_SOC01 BIGINT;
DECLARE VARIABLE SOCUTIL02_ULTID_SOC02 BIGINT;
DECLARE VARIABLE SOCUTIL02_ULTID_SOC20 BIGINT;
DECLARE VARIABLE SOCUTIL02_ULTID_SOC30 BIGINT;
DECLARE VARIABLE IDTIPOUSUARIO BIGINT;
DECLARE VARIABLE IDACTIVO BIGINT;
DECLARE VARIABLE IDCHAT BIGINT;
DECLARE VARIABLE IDDOCUMENTORFC BIGINT;
DECLARE VARIABLE ID_SOCUSUA42 BIGINT;
DECLARE VARIABLE EFEDERATIVA INTEGER;
DECLARE VARIABLE ID_SOCWFLO01 BIGINT;
DECLARE VARIABLE IDTIPOPROVEEDOR BIGINT;
DECLARE VARIABLE IDTIPOCLIENTE BIGINT;
DECLARE VARIABLE IDPROCESOS BIGINT;
DECLARE VARIABLE IDPUESTOS BIGINT;
DECLARE VARIABLE IDREGPAGO BIGINT;
DECLARE VARIABLE IDSOCSYST10TIPOCUENTA BIGINT;
DECLARE VARIABLE RELA_SICCONT02_PROVEEDOR BIGINT;
DECLARE VARIABLE RELA_SICCONT02_CLIENTE BIGINT;
DECLARE VARIABLE RELA_SICCONT02_EMPLEADO BIGINT;
DECLARE VARIABLE IDSOCSYST10TIPOCUENTAEGRESOS BIGINT;
begin
    id = null;

    delete from scexmls10_cab_migracion
    where not exists (select scexmls11_det_migracion.id_scexmls11
                      from scexmls11_det_migracion
                      where scexmls11_det_migracion.rela_scexmls10 = scexmls10_cab_migracion.id_scexmls10);


    Select
    scexmls20_cab_parametrizacion.rela_siccont02_proveedor,
    scexmls20_cab_parametrizacion.rela_siccont02_cliente,
    scexmls20_cab_parametrizacion.rela_siccont02_empleado
    from scexmls20_cab_parametrizacion
    where scexmls20_cab_parametrizacion.rela_socsyst01 = :rela_socsyst01
    into :rela_siccont02_proveedor,
         :rela_siccont02_cliente,
         :rela_siccont02_empleado;

    if (rela_siccont02_proveedor is null) then
        EXCEPTION DBXMLCFDI_SCEXMLS20;

    select VW_RFC_POR_RFC.id
    from VW_RFC_POR_RFC(:tipo, :rfc, -1)
    into :id;

    /* ------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------ */

    if (id is null) then
    begin
        select first 1 VW_SOCWFLO01_ORDER.id_socwflo01
        from VW_SOCWFLO01_ORDER(-1)
        where VW_SOCWFLO01_ORDER.rela_socsyst01 = :rela_socsyst01
        and VW_SOCWFLO01_ORDER.rela_socwflo01 is null
        order by VW_SOCWFLO01_ORDER.socwflo01_codigo
        into :id_socwflo01;

        if (id_socwflo01 is null) then
            EXCEPTION DBXMLCFDI_SOCWFLOO1;

        select first 1 socusua50_arb_localidades.id_socusua50
        from socusua50_arb_localidades
        where socusua50_arb_localidades.socusua50_codaduana = 'MEX'
        INTO :id_socusua50;

        efederativa = null;
        SELECT FIRST 1 socusua42_tbl_codpostales.socusua42_efederativa
        FROM socusua42_tbl_codpostales
        WHERE UPPER(socusua42_tbl_codpostales.socusua42_estadoprovincia) = UPPER(:estado)
        INTO :efederativa;

        if (efederativa is null) then
            efederativa = 99;

        id_socusua42 = null;
        SELECT FIRST 1 socusua42_tbl_codpostales.id_socusua42
        FROM socusua42_tbl_codpostales
        WHERE  socusua42_tbl_codpostales.socusua42_codpostal = :codpostal
        AND UPPER(socusua42_tbl_codpostales.socusua42_estadoprovincia) = UPPER(:estado)
        AND UPPER(socusua42_tbl_codpostales.socusua42_municipio) = UPPER(:municipio)
        and UPPER(socusua42_tbl_codpostales.socusua42_asentamiento) = UPPER(:colonia)
        INTO :id_socusua42;

        if (id_socusua42 is null) then
        begin
            insert into socusua42_tbl_codpostales(socusua42_tbl_codpostales.rela_socusua50,
                                                  socusua42_tbl_codpostales.socusua42_codpostal,
                                                  socusua42_tbl_codpostales.socusua42_asentamiento,
                                                  socusua42_tbl_codpostales.socusua42_asentamiento_tipo,
                                                  socusua42_tbl_codpostales.socusua42_municipio,
                                                  socusua42_tbl_codpostales.socusua42_estadoprovincia,
                                                  socusua42_tbl_codpostales.socusua42_ciudad,
                                                  socusua42_tbl_codpostales.socusua42_zona,
                                                  socusua42_tbl_codpostales.socusua42_efederativa)
            values(:id_socusua50,
                   :codpostal,
                   :colonia,
                   'Colonia',
                   :municipio,
                   :estado,
                   :localidad,
                   'Urbano CFDI',
                   :efederativa);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :id_socusua42;
        end

        SELECT FIRST 1 SOCSYST10_TBL_LISTAESTADOS.id_socsyst10
        FROM SOCSYST10_TBL_LISTAESTADOS
        WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_COD = 'ES10'
        and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'SI'
        INTO :IDACTIVO;

        select first 1 CBO_CHATACCESOS.id_socsyst10
        from CBO_CHATACCESOS
        where CBO_CHATACCESOS.socsyst10_codigo = '0'
        into :IDCHAT;

        select CBO_DOCUMENTOS.id_socsyst10
        from CBO_DOCUMENTOS
        where CBO_DOCUMENTOS.socsyst10_codigo = 'RFC'
        into :idDocumentoRfc;

        if (TIPO = 'P') then
            select first 1 CBO_TIPOSUSUARIOS.id_socsyst10
            from CBO_TIPOSUSUARIOS
            where CBO_TIPOSUSUARIOS.codigo = 'UP'
            into :idTipoUsuario;
        else if (TIPO = 'C') then
             select first 1 CBO_TIPOSUSUARIOS.id_socsyst10
             from CBO_TIPOSUSUARIOS
             where CBO_TIPOSUSUARIOS.codigo = 'UC'
             into :idTipoUsuario;
        else if (TIPO = 'E') then
             select first 1 CBO_TIPOSUSUARIOS.id_socsyst10
             from CBO_TIPOSUSUARIOS
             where CBO_TIPOSUSUARIOS.codigo = 'UE'
             into :idTipoUsuario;

        /* ------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------ */

        if (strlen(:rfc) = 12) then
        begin
            select first 1 CBO_TIPOSOCIEDADES.id_socsyst10
            from CBO_TIPOSOCIEDADES
            into :id_socsyst10_sociedad;

            select first 1 cbo_girosociedades.id_socsyst10
            from cbo_girosociedades
            into :id_socsyst10_girosoc;

            insert into socusua20_mae_entmorales(socusua20_mae_entmorales.rela_socusua50,
                                             socusua20_mae_entmorales.refe_socsyst10_sociedad,
                                             socusua20_mae_entmorales.refe_socsyst10_girosoc,
                                             socusua20_mae_entmorales.socusua20_denominacion,
                                             socusua20_mae_entmorales.socusua20_fconst,
                                             socusua20_mae_entmorales.socusua20_certificada)
            values(:id_socusua50,
                   :id_socsyst10_sociedad,
                   :id_socsyst10_girosoc,
                   :ENTIDAD,
                   current_timestamp,
                   0);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :SOCUTIL02_ULTID_SOC20;

            insert into SOCUSUA01_MAE_ENTIDADES(SOCUSUA01_MAE_ENTIDADES.rela_socusua20,
                                                SOCUSUA01_MAE_ENTIDADES.socusua01_tipo)
            values(:SOCUTIL02_ULTID_SOC20, 'M');
        end
        else if (strlen(:rfc) = 13) then
        begin
            select cbo_sexos.id_socsyst10
            from cbo_sexos
            where cbo_sexos.socsyst10_codigo = 'H'
            into :id_socsyst10_sexo;

            select cbo_estadociviles.id_socsyst10
            from cbo_estadociviles
            where cbo_estadociviles.socsyst10_codigo = 'SOL'
            into :id_socsyst10_ecivil;

            insert into SOCUSUA30_MAE_ENTFISICAS(SOCUSUA30_MAE_ENTFISICAS.rela_socusua50,
                                             SOCUSUA30_MAE_ENTFISICAS.rela_socsyst10_ecivil,
                                             SOCUSUA30_MAE_ENTFISICAS.rela_socsyst10_sexo,
                                             SOCUSUA30_MAE_ENTFISICAS.socusua30_nombres,
                                             SOCUSUA30_MAE_ENTFISICAS.socusua30_ape_padre,
                                             SOCUSUA30_MAE_ENTFISICAS.socusua30_ape_madre,
                                             SOCUSUA30_MAE_ENTFISICAS.socusua30_fnac)
            values(:id_socusua50,
                   :id_socsyst10_ecivil,
                   :id_socsyst10_sexo,
                   :ENTIDAD,
                   '',
                   '',
                   current_timestamp);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :SOCUTIL02_ULTID_SOC30;

            insert into SOCUSUA01_MAE_ENTIDADES(SOCUSUA01_MAE_ENTIDADES.rela_socusua30,
                                                SOCUSUA01_MAE_ENTIDADES.socusua01_tipo)
            values(:SOCUTIL02_ULTID_SOC30, 'F');
        end
        else
        begin
            EXCEPTION DBXMLCFDI_RFC;
        end

        /* ------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------ */

        select socutil02_tbl_ultids.socutil02_ultid
        from socutil02_tbl_ultids
        where socutil02_tbl_ultids.socutil02_usuario = current_user
        into :SOCUTIL02_ULTID_SOC01;

        /* ------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------ */

        if (strlen(trim(:calle)) > 50) then
            calle = substr(trim(:calle),1, 50);

        if (socutil02_ultid_soc20 is not null) then
        begin
            insert into socusua40_det_documentos(socusua40_det_documentos.rela_socusua20,
                                                     socusua40_det_documentos.rela_socsyst10,
                                                     socusua40_det_documentos.socusua40_numero,
                                                     socusua40_det_documentos.socusua40_codext)
            values(:SOCUTIL02_ULTID_SOC20, :iddocumentorfc, :rfc, ('AUTCFDI-01-' || :tipo));

            if (codpostal is not null) then
                insert into socusua41_det_localidades(socusua41_det_localidades.rela_socusua20,
                                                      socusua41_det_localidades.rela_socusua50,
                                                      socusua41_det_localidades.rela_socusua42,
                                                      socusua41_det_localidades.socusua41_calle,
                                                      socusua41_det_localidades.socusua41_nro,
                                                      socusua41_det_localidades.socusua41_depto,
                                                      socusua41_det_localidades.socusua41_cp,
                                                      socusua41_det_localidades.socusua41_principal)
                values(:SOCUTIL02_ULTID_SOC20,
                       :id_socusua50,
                       :id_socusua42,
                       :calle,
                       :noexterior,
                       :nointerior,
                       :codpostal,
                       1);
            end
        else if (socutil02_ultid_soc30 is not null) then
        begin
            insert into socusua40_det_documentos(socusua40_det_documentos.rela_socusua30,
                                                     socusua40_det_documentos.rela_socsyst10,
                                                     socusua40_det_documentos.socusua40_numero,
                                                     socusua40_det_documentos.socusua40_codext)
            values(:socutil02_ultid_soc30, :iddocumentorfc, :rfc, ('AUTCFDI-01-' || :tipo));

            if (codpostal is not null) then
                insert into socusua41_det_localidades(socusua41_det_localidades.rela_socusua30,
                                                      socusua41_det_localidades.rela_socusua50,
                                                      socusua41_det_localidades.rela_socusua42,
                                                      socusua41_det_localidades.socusua41_calle,
                                                      socusua41_det_localidades.socusua41_nro,
                                                      socusua41_det_localidades.socusua41_depto,
                                                      socusua41_det_localidades.socusua41_cp,
                                                      socusua41_det_localidades.socusua41_principal)
                values(:SOCUTIL02_ULTID_SOC30,
                       :id_socusua50,
                       :id_socusua42,
                       :calle,
                       :noexterior,
                       :nointerior,
                       :codpostal,
                       1);
        end
        else
        begin
            EXCEPTION DBXMLCFDI_PERSONAS;
        end

        /* ------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------ */

        insert into SOCUSUA02_MAE_USUARIOS(SOCUSUA02_MAE_USUARIOS.RELA_SOCUSUA01,
                                               SOCUSUA02_MAE_USUARIOS.rela_socsyst10_activo,
                                               SOCUSUA02_MAE_USUARIOS.rela_socsyst10_tipo,
                                               SOCUSUA02_MAE_USUARIOS.rela_socsyst10_chat,
                                               SOCUSUA02_MAE_USUARIOS.rela_socsyst01,
                                               SOCUSUA02_MAE_USUARIOS.socusua02_usuario,
                                               SOCUSUA02_MAE_USUARIOS.socusua02_password,
                                               SOCUSUA02_MAE_USUARIOS.socusua02_nivelseg,
                                               SOCUSUA02_MAE_USUARIOS.socusua02_codext,
                                               SOCUSUA02_MAE_USUARIOS.socusua02_accesahd)
        values(:socutil02_ultid_soc01,
                   :idactivo,
                   :idtipousuario,
                   :idchat,
                   :rela_socsyst01,
                   'AUT-' || :SOCUTIL02_ULTID_SOC01,
                   'AUT-' || :SOCUTIL02_ULTID_SOC01,
                   '2',
                   'AUT-' || :SOCUTIL02_ULTID_SOC01,
                   0);

        select socutil02_tbl_ultids.socutil02_ultid
        from socutil02_tbl_ultids
        where socutil02_tbl_ultids.socutil02_usuario = current_user
        into :SOCUTIL02_ULTID_SOC02;

       /* ------------------------------------------------------------------------------------------------ */
       /* ------------------------------------------------------------------------------------------------ */
       /* ------------------------------------------------------------------------------------------------ */

       if (tipo = 'P') then
       BEGIN
           SELECT FIRST 1 SOCSYST10_TBL_LISTAESTADOS.id_socsyst10
           FROM SOCSYST10_TBL_LISTAESTADOS
           WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_COD = 'TV20'
           and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'MYAE'
           INTO :IdTipoProveedor;

           insert into sicegre01_cab_proveedores(sicegre01_cab_proveedores.rela_socusua02,
                                                 sicegre01_cab_proveedores.rela_socwflo01,
                                                 sicegre01_cab_proveedores.rela_socsyst10,
                                                 sicegre01_cab_proveedores.sicegre01_codigo,
                                                 sicegre01_cab_proveedores.sicegre01_nomcomercial)
           values(:socutil02_ultid_soc02,
                  :id_socwflo01,
                  :IdTipoProveedor,
                  'AUT' || :socutil02_ultid_soc02,
                  :entidad);

           select socutil02_tbl_ultids.socutil02_ultid
           from socutil02_tbl_ultids
           where socutil02_tbl_ultids.socutil02_usuario = current_user
           into :id;
       END
       else if (tipo = 'C') then
       BEGIN
           SELECT FIRST 1 SOCSYST10_TBL_LISTAESTADOS.id_socsyst10
           FROM SOCSYST10_TBL_LISTAESTADOS
           WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_COD = 'CL10'
           and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'VAR'
           INTO :IdTipoCliente;

           insert into sicingr01_cab_clientes(sicingr01_cab_clientes.rela_socwflo01,
                                              sicingr01_cab_clientes.rela_socusua02,
                                              sicingr01_cab_clientes.rela_socsyst10_tipo,
                                              sicingr01_cab_clientes.sicingr01_codigo)
           values(:id_socwflo01,
                  :socutil02_ultid_soc02,
                  :IdTipoCliente,
                  'AUT' || :socutil02_ultid_soc02);

           select socutil02_tbl_ultids.socutil02_ultid
           from socutil02_tbl_ultids
           where socutil02_tbl_ultids.socutil02_usuario = current_user
           into :id;
       END
       else if (tipo = 'E') then
       BEGIN
           SELECT first 1 CBO_PROCESO_ADMINISTRATIVO.id_socsyst10
           FROM CBO_PROCESO_ADMINISTRATIVO 
           into :idprocesos;

           SELECT first 1 CBO_TIPOPUESTOS.id_socsyst10
           FROM CBO_TIPOPUESTOS
           into :idpuestos;

           SELECT first 1 CBO_REGIMEN_PAGO.id_socsyst10
           FROM CBO_REGIMEN_PAGO
           into :idregpago;

           insert into SRHMAIN10_CAB_EMPLEADO(SRHMAIN10_CAB_EMPLEADO.rela_socsyst01,
                                              SRHMAIN10_CAB_EMPLEADO.rela_socusua02,
                                              SRHMAIN10_CAB_EMPLEADO.rela_socsyst10_procesos,
                                              SRHMAIN10_CAB_EMPLEADO.rela_socsyst10_puestos,
                                              SRHMAIN10_CAB_EMPLEADO.rela_socsyst10_reg_pago,
                                              SRHMAIN10_CAB_EMPLEADO.srhmain10_codext,
                                              SRHMAIN10_CAB_EMPLEADO.srhmain10_fingreso)
           values(:rela_socsyst01,
                  :socutil02_ultid_soc02,
                  :idprocesos,
                  :idpuestos,
                  :idregpago,
                  'AUT' || :socutil02_ultid_soc02,
                  current_date);

           select socutil02_tbl_ultids.socutil02_ultid
           from socutil02_tbl_ultids
           where socutil02_tbl_ultids.socutil02_usuario = current_user
           into :id;
       END
       else
       begin
           EXCEPTION dbxmlcfdi_sinpce;
       end
    end

    /* ------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------ */

    if (TIPO = 'P') then
    begin
        Select SOCSYST10_TBL_LISTAESTADOS.id_socsyst10
        from SOCSYST10_TBL_LISTAESTADOS
        where SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_cod = 'TA30'
        and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'EGREFISCAL'
        into :idSocSyst10Tipocuenta;

        select first 1 siccont75_mov_sicegre01.rela_siccont02
        from siccont75_mov_sicegre01
        where siccont75_mov_sicegre01.rela_socsyst01 = :rela_socsyst01
        and siccont75_mov_sicegre01.rela_socsyst10 = :idSocSyst10Tipocuenta
        and siccont75_mov_sicegre01.rela_sicegre01 = :id
        into :RELA_SICCONT02;

        if (RELA_SICCONT02 is null) then
        begin
            insert into siccont75_mov_sicegre01(siccont75_mov_sicegre01.rela_socsyst01,
                                                siccont75_mov_sicegre01.rela_socsyst10,
                                                siccont75_mov_sicegre01.rela_sicegre01,
                                                siccont75_mov_sicegre01.rela_siccont02)
            values(:rela_socsyst01,
                   :idSocSyst10Tipocuenta,
                   :id, 
                   :rela_siccont02_proveedor);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :RELA_SICCONT02;
        end
    end
    else if (TIPO = 'C') then
    begin
        Select SOCSYST10_TBL_LISTAESTADOS.id_socsyst10
        from SOCSYST10_TBL_LISTAESTADOS
        where SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_cod = 'TA30'
        and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'INGREFISCAL'
        into :idSocSyst10Tipocuenta;

        select first 1 SICCONT74_MOV_SICINGR01.rela_siccont02
        from SICCONT74_MOV_SICINGR01
        where SICCONT74_MOV_SICINGR01.rela_socsyst01 = :rela_socsyst01
        and SICCONT74_MOV_SICINGR01.rela_socsyst10 = :idSocSyst10Tipocuenta
        and SICCONT74_MOV_SICINGR01.rela_sicingr01 = :id
        into :rela_siccont02;

        if (RELA_SICCONT02 is null) then
        begin
            insert into SICCONT74_MOV_SICINGR01(SICCONT74_MOV_SICINGR01.rela_socsyst01,
                                                SICCONT74_MOV_SICINGR01.rela_socsyst10,
                                                SICCONT74_MOV_SICINGR01.rela_sicingr01,
                                                SICCONT74_MOV_SICINGR01.rela_siccont02)
            values(:rela_socsyst01,
                   :idSocSyst10Tipocuenta,
                   :id, 
                   :rela_siccont02_cliente);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :RELA_SICCONT02;
        end
    end
    else if (TIPO = 'E') then
    begin
        Select SOCSYST10_TBL_LISTAESTADOS.id_socsyst10
        from SOCSYST10_TBL_LISTAESTADOS
        where SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_cod = 'TA30'
        and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'SUELDO'
        into :idSocSyst10Tipocuenta;

        Select SOCSYST10_TBL_LISTAESTADOS.id_socsyst10
        from SOCSYST10_TBL_LISTAESTADOS
        where SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_cod = 'TA30'
        and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'EGREFISCAL'
        into :idsocsyst10tipocuentaegresos;

        select first 1 SICCONT70_MOV_EMPLEADOS.rela_siccont02
        from SICCONT70_MOV_EMPLEADOS
        where SICCONT70_MOV_EMPLEADOS.rela_socsyst01 = :rela_socsyst01
        and SICCONT70_MOV_EMPLEADOS.rela_socsyst10 = :idSocSyst10Tipocuenta
        and SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :id
        into :rela_siccont02;

        if (RELA_SICCONT02 is null) then
        begin
            insert into SICCONT70_MOV_EMPLEADOS(SICCONT70_MOV_EMPLEADOS.rela_socsyst01,
                                                SICCONT70_MOV_EMPLEADOS.rela_socsyst10,
                                                SICCONT70_MOV_EMPLEADOS.rela_srhmain10,
                                                SICCONT70_MOV_EMPLEADOS.rela_siccont02)
            values(:rela_socsyst01,
                   :idSocSyst10Tipocuenta,
                   :id, 
                   :rela_siccont02_empleado);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :RELA_SICCONT02;
        end

        rela_siccont02 = null;

        select first 1 SICCONT70_MOV_EMPLEADOS.rela_siccont02
        from SICCONT70_MOV_EMPLEADOS
        where SICCONT70_MOV_EMPLEADOS.rela_socsyst01 = :rela_socsyst01
        and SICCONT70_MOV_EMPLEADOS.rela_socsyst10 = :idsocsyst10tipocuentaegresos
        and SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :id
        into :rela_siccont02;

        if (RELA_SICCONT02 is null) then
        begin
            insert into SICCONT70_MOV_EMPLEADOS(SICCONT70_MOV_EMPLEADOS.rela_socsyst01,
                                                SICCONT70_MOV_EMPLEADOS.rela_socsyst10,
                                                SICCONT70_MOV_EMPLEADOS.rela_srhmain10,
                                                SICCONT70_MOV_EMPLEADOS.rela_siccont02)
            values(:rela_socsyst01,
                   :idsocsyst10tipocuentaegresos,
                   :id, 
                   :rela_siccont02_empleado);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :RELA_SICCONT02;
        end
    end

    suspend;
end
SOC$_CFDIXML_IMPUESTOS         

DECLARE VARIABLE ID_SCEXMLS20 BIGINT;
DECLARE VARIABLE ID_SCEXMLS21 BIGINT;
DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RETENIDO INTEGER;
begin
    ok = 1;
    retenido = 0;
    if (:tipo = 'R') then
        retenido = 1;

    select scexmls20_cab_parametrizacion.id_scexmls20
    from scexmls20_cab_parametrizacion
    where scexmls20_cab_parametrizacion.rela_socsyst01 = :rela_socsyst01
    into :id_scexmls20;

    rela_siccont02 = NULL;
    ID_SCEXMLS21 = NULL;
    select
    scexmls21_det_impuestos.id_scexmls21, scexmls21_det_impuestos.rela_siccont02
    from scexmls21_det_impuestos
    where scexmls21_det_impuestos.rela_scexmls20 = :id_scexmls20
    and scexmls21_det_impuestos.scexmls21_tipo = :tipoxml
    and scexmls21_det_impuestos.scexmls21_retenido = :retenido
    and scexmls21_det_impuestos.scexmls21_impuesto = :impuesto
    and scexmls21_det_impuestos.scexmls21_tasa = :tasa
    INTO :ID_SCEXMLS21, :rela_siccont02;

    if (ID_SCEXMLS21 is null) then
    BEGIN
        insert into scexmls21_det_impuestos(scexmls21_det_impuestos.rela_scexmls20,
                                            scexmls21_det_impuestos.scexmls21_tipo,
                                            scexmls21_det_impuestos.scexmls21_impuesto,
                                            scexmls21_det_impuestos.scexmls21_retenido,
                                            scexmls21_det_impuestos.scexmls21_tasa)
        values(:id_scexmls20, :tipoxml, :impuesto, :retenido, :tasa);

        select socutil02_tbl_ultids.socutil02_ultid
        from socutil02_tbl_ultids
        where socutil02_tbl_ultids.socutil02_usuario = current_user
        into :id_scexmls21;

        OK = 0;
    END

    if (rela_siccont02 is null) then
       OK = 0;

    insert into scexmls24_tmp_transacciones(scexmls24_tmp_transacciones.rela_scexmls21,
                                            scexmls24_tmp_transacciones.scexmls24_user,
                                            scexmls24_tmp_transacciones.scexmls24_uuid,
                                            scexmls24_tmp_transacciones.scexmls24_tipo,
                                            scexmls24_tmp_transacciones.scexmls24_descripcion,
                                            scexmls24_tmp_transacciones.scexmls24_cantidad,
                                            scexmls24_tmp_transacciones.scexmls24_importe,
                                            scexmls24_tmp_transacciones.scexmls24_unidad,
                                            scexmls24_tmp_transacciones.scexmls24_valorunidad,
                                            scexmls24_tmp_transacciones.scexmls24_excluir)
    values(:ID_SCEXMLS21,
           current_user,
           :uuid,
           'I',
           :impuesto,
           1,
           :importe, 
           'N/A',
           0,
           :excluir);

    suspend;
end
VW_PYMEGRE10_CHEQUES           
DECLARE VARIABLE SQLTIPO VARCHAR(200);
DECLARE VARIABLE SQLUSER VARCHAR(2000);
DECLARE VARIABLE SQLWHERE VARCHAR(200);
BEGIN
  IF (:PARAM_TIPO = 0) THEN
    sqltipo = 'SELECT PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10, ';
  ELSE
    IF (:PARAM_TIPO = 1) THEN
      sqltipo = 'SELECT PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01, ';
    ELSE
      sqltipo = 'SELECT PYMEGRE10_CAB_CHEQUES.RELA_SICINGR01, ';

  sqluser = 'PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01, ' ||
            'PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01, ' ||
            'PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO, ' ||
            'PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10, ' ||
            'PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO, ' ||
            'SNVL((SELECT MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO
                  FROM MSGPOLI01_CAB_POLIZAS
                  WHERE MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO),
                 (SELECT MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO
                  FROM MSGPOLI01_CAB_POLIZAS
                  WHERE MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01)), ' ||
            'PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE, ' ||
            '(SELECT CBO_BANCOS_CHEQUES.SICCONT02_DESCRI
              FROM CBO_BANCOS_CHEQUES
              WHERE CBO_BANCOS_CHEQUES.RELA_SOCSYST01 = PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01
                AND CBO_BANCOS_CHEQUES.ID_SICCONT02 = PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO
                AND CBO_BANCOS_CHEQUES.RELA_SOCWFLO01 = PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01), ' ||
            'PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE, ' ||
            'PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT ' ||
            'FROM PYMEGRE10_CAB_CHEQUES ' ||
            'WHERE PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
            ' AND PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA;

  IF (:PARAM_TIPO = 0) THEN
    sqlwhere = ' AND PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10 = ' || :PARAM_ENTIDAD;
  ELSE
    IF (:PARAM_TIPO = 1) THEN
      sqlwhere = ' AND PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01 = ' || :PARAM_ENTIDAD;
    ELSE
      sqlwhere = ' AND PYMEGRE10_CAB_CHEQUES.RELA_SICINGR01 = ' || :PARAM_ENTIDAD;

  FOR EXECUTE STATEMENT :sqltipo || :sqluser || :sqlwhere
  INTO
      :RELA_ENTIDAD,
      :RELA_SOCWFLO01,
      :RELA_MSGPOLI01,
      :RELA_MSGPOLI01_CANCELADO,
      :ID_PYMEGRE10,
      :PYMEGRE10_DOCNRO,
      :POLIZA,
      :PYMEGRE10_FCHE,
      :BANCO,
      :PYMEGRE10_IMPORTE,
      :PYMEGRE10_IMPCANT
  DO
  BEGIN
    IF (:RELA_MSGPOLI01_CANCELADO IS NOT NULL) THEN
      STATUS = 'Cancelado';
    ELSE
      IF (:PYMEGRE10_IMPCANT != 0) THEN
        STATUS = 'Impreso';
      ELSE
        STATUS = 'Sin Imprimir';

    SUSPEND;
  END
END
CBO_RESERVAS                   

DECLARE VARIABLE NOPAGO BIGINT;
DECLARE VARIABLE PAPAGO BIGINT;
DECLARE VARIABLE PAGO BIGINT;
begin
    SELECT
    pymvent01_cab_cajas.rela_pyminve40_reser_nopago,
    pymvent01_cab_cajas.rela_pyminve40_reser_papago,
    pymvent01_cab_cajas.rela_pyminve40_reser_pago
    FROM pymvent01_cab_cajas
    WHERE pymvent01_cab_cajas.id_pymvent01 = :IDCAJA
    into :nopago, :papago, :pago;

    for select
    SOCSYST10_TBL_LISTAESTADOS.id_socsyst10,
    SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_des,
    SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo
    from SOCSYST10_TBL_LISTAESTADOS
    where SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_cod = 'TR50'
    into :ID_SOCSYST10, :DESCRIPCION, :codigo
    do
    begin
        if (codigo = 'NOPAGO') then
            RELA_PYMINVE40 = :nopago;
        else if (codigo = 'PAGO') then
            RELA_PYMINVE40 = :pago;
        else if (codigo = 'PAPAGO') then
            RELA_PYMINVE40 = :papago;

        if (RELA_PYMINVE40 is not null) then
            suspend;
    end

end
PRD_SOCSYST20_PYMINVE25        

DECLARE VARIABLE RELA_PADRE BIGINT;
BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
VW_PYMVENT10_RESUMEN           

DECLARE VARIABLE RELA_IMPUESTOS BIGINT;
DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE PORCENTAJE DOUBLE PRECISION;
DECLARE VARIABLE IVA_0 DOUBLE PRECISION;
DECLARE VARIABLE IVA_1 DOUBLE PRECISION;
DECLARE VARIABLE TOTAL_DOCUMENTOS DOUBLE PRECISION;
DECLARE VARIABLE INGRESOSX DOUBLE PRECISION;
BEGIN
  SELECT
     DNVL(SUM(VW_PYMVENT10_CORTEZ.SUBTOTAL),0.00),
     DNVL(SUM(VW_PYMVENT10_CORTEZ.DESCUENTOS),0.00),
     DNVL(SUM(VW_PYMVENT10_CORTEZ.ADEUDO),0.00),
     DNVL(SUM(VW_PYMVENT10_CORTEZ.TOTAL),0.00)
  FROM VW_PYMVENT10_CORTEZ(:PARAM_PYMVENT10)
  INTO
      :SUBTOTAL,
      :DESCUENTOS,
      :ADEUDO,
      :TOTAL;

  SELECT
      SUM(CBO_CAMBIO.PYMVENT11_IMPAPERTURA),
      SUM(CBO_CAMBIO.PYMVENT11_IMPSISTEMA)
  FROM CBO_CAMBIO(:PARAM_PYMVENT10)
  WHERE CBO_CAMBIO.SOCSYST10_CODIGO = 'EFECTIVO'
  INTO
      :IMPORTE_APERTURA,
      :IMPORTE_EFECTIVO;

  SELECT SUM(PYMVENT35_DET_INGRESOS.PYMVENT35_IMPORTE)
  FROM PYMVENT35_DET_INGRESOS
  INNER JOIN PYMVENT11_DET_RENDICIONES ON PYMVENT35_DET_INGRESOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10
  WHERE PYMVENT35_DET_INGRESOS.RELA_PYMVENT10 = :PARAM_PYMVENT10
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EFECTIVO'
  INTO :INGRESOS;

  IF (:INGRESOS IS NULL) THEN
    INGRESOS = 0;

  SELECT SUM(CBO_CAMBIO.PYMVENT11_IMPAPERTURA + CBO_CAMBIO.PYMVENT11_IMPSISTEMA)
  FROM CBO_CAMBIO(:PARAM_PYMVENT10)
  WHERE CBO_CAMBIO.SOCSYST10_CODIGO != 'EFECTIVO'
  INTO :TOTAL_DOCUMENTOS;

  EFECTIVO_NETO = TOTAL - TOTAL_DOCUMENTOS;

  SELECT FIRST 1
      PYMVENT01_CAB_CAJAS.RELA_SOCSYST10_IMPUESTOS,
      PYMVENT01_CAB_CAJAS.RELA_SOCSYST01
  FROM PYMVENT01_CAB_CAJAS
  INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
  INTO
      :RELA_IMPUESTOS,
      :RELA_SOCSYST01;

  SELECT CBO_TIPOFACTURASVENTAS.PORCENTAJE
  FROM CBO_TIPOFACTURASVENTAS(:RELA_SOCSYST01)
  WHERE CBO_TIPOFACTURASVENTAS.ID_SOCSYST10 = :RELA_IMPUESTOS
  INTO :PORCENTAJE;

  IF (:PORCENTAJE <> 0) THEN
    BEGIN
        IVA_0 = PORCENTAJE / 100;
        IVA_1 = 1 + IVA_0;
        IVA = TOTAL / IVA_1 * IVA_0;
    END

  SELECT FIRST 1
     DNVL(CBO_CAMBIO.PYMVENT11_CANCELADOS,0.00),
     INVL(CBO_CAMBIO.CANTIDAD_CANCELADOS,0.00),
     DNVL(CBO_CAMBIO.SALIDA_EFECTIVO,0.00),
     INVL(CBO_CAMBIO.CANTIDAD_RETIROS,0.00)
  FROM CBO_CAMBIO(:PARAM_PYMVENT10)
  INTO
      :CANCELADOS,
      :CANTIDAD_CANCELADOS,
      :RETIROS,
      :CANTIDAD_RETIROS;

  FOR
    SELECT
        CBO_CAMBIO.EFICIENCIA_STOCK,
        CBO_CAMBIO.SOCSYST10_FILTRO_DES,
        CBO_CAMBIO.SOCSYST10_CODIGO,
        CBO_CAMBIO.PYMVENT11_IMPAPERTURA + CBO_CAMBIO.PYMVENT11_IMPSISTEMA,
        (CBO_CAMBIO.PYMVENT11_IMPAPERTURA + CBO_CAMBIO.PYMVENT11_IMPSISTEMA) - CBO_CAMBIO.PYMVENT11_IMPCIERRE
    FROM CBO_CAMBIO(:PARAM_PYMVENT10)
    INTO
        :EFICIENCIA,
        :DOCUMENTO,
        :CODIGO,
        :TOTAL_CAJA,
        :TOTAL_CIERRE
  DO
  BEGIN
     INGRESOSX = 0;

     SELECT SUM(PYMVENT35_DET_INGRESOS.PYMVENT35_IMPORTE)
     FROM PYMVENT35_DET_INGRESOS
     INNER JOIN PYMVENT11_DET_RENDICIONES ON PYMVENT35_DET_INGRESOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10
     WHERE PYMVENT35_DET_INGRESOS.RELA_PYMVENT10 = :PARAM_PYMVENT10
       AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :CODIGO
     INTO :INGRESOSX;

     IF (:INGRESOSX IS NULL) THEN
       INGRESOSX = 0;

     TOTAL_CAJA = TOTAL_CAJA + INGRESOSX;

     SUSPEND;
  END
END
REP_PYMVENT20_DEVOLUCIONES     

DECLARE VARIABLE PORCENTAJE_DESC DOUBLE PRECISION;
DECLARE VARIABLE PORCENTAJE DOUBLE PRECISION;
BEGIN
  FOR
    SELECT
        PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
        PYMVENT21_DET_TICKETS.RELA_PYMVENT20,
        PYMVENT21_DET_TICKETS.ID_PYMVENT21,
        CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD,
        PYMVENT30_MOV_DEVOLUCIONES.PYMVENT30_CANTIDAD,
        CATEGORIA.SOCSYST10_FILTRO_DES,
        FAMILIA.SOCSYST10_FILTRO_DES,
        PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
        CAST(PYMVENT30_MOV_DEVOLUCIONES.PYMVENT30_FAPL AS DATE),
        PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
        PYMVENT21_DET_TICKETS.PYMVENT21_PORCENTAJE
    FROM PYMVENT20_CAB_TICKETS
    INNER JOIN CBO_CLIENTES_EMPRESAS_ALL ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01)
    INNER JOIN PYMVENT21_DET_TICKETS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT21_DET_TICKETS.RELA_PYMVENT20)
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
    INNER JOIN PYMVENT30_MOV_DEVOLUCIONES ON (PYMVENT21_DET_TICKETS.ID_PYMVENT21 = PYMVENT30_MOV_DEVOLUCIONES.RELA_PYMVENT21)
    WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND CAST(PYMVENT30_MOV_DEVOLUCIONES.PYMVENT30_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    INTO
       :RELA_SOCSYST01,
       :RELA_PYMVENT20,
       :ID_PYMVENT21,
       :EMPRESA,
       :CANTIDAD,
       :CATEGORIA,
       :FAMILIA,
       :CODIGO,
       :DESCRIPCION,
       :FECHA,
       :IMPORTE_UNIT,
       :PORCENTAJE_DESC
  DO
  BEGIN
     DESCUENTO = 0;

     SELECT DNVL(PRD_PYMVENT20_PYMVENT01.PORCENTAJE,0)
     FROM PRD_PYMVENT20_PYMVENT01(:PARAM_EMPRESA,:RELA_PYMVENT20)
     INTO :PORCENTAJE;

     IMPORTE_UNIT = IMPORTE_UNIT / (1 + (PORCENTAJE / 100));

     SUBTOTAL = IMPORTE_UNIT * CANTIDAD;

     IF (PORCENTAJE_DESC != 0) THEN
        DESCUENTO = SUBTOTAL * (PORCENTAJE_DESC / 100);

     IMPUESTOS = ((SUBTOTAL - DESCUENTO) * PORCENTAJE) / 100;
     TOTAL = (SUBTOTAL - DESCUENTO) + IMPUESTOS;

     SUSPEND;
  END
END
PRD_SOCSYST20_SRHNOMI01        

DECLARE VARIABLE RELA_PADRE BIGINT;
BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
PRD_SRHMAIN13                  

BEGIN
    IF (PARAM_EMPLEADO = -1) THEN
        BEGIN
            FOR
              SELECT
                1 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                :PARAM_EMPLEADO,
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SICCONT72_MOV_EMPRESAS
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'INCAPA'
                AND SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
              INTO
                  :MARCA,
                  :RELA_SOCSYST01,
                  :RELA_SICCONT02,
                  :RELA_SRHMAIN10,
                  :RELA_SICCONT72,
                  :SICCONT02_DESCRI,
                  :SICCONT02_CODEXT,
                  :siccont72_codigo
            DO
            BEGIN
                DEPENDENCIA = -1;

                SELECT FIRST 1 SRHnomi05_DET_INCAPACIDADES.RELA_SRHMAIN13
                FROM SRHnomi05_DET_INCAPACIDADES
                INNER JOIN SRHMAIN13_DET_INCAPACIDADES ON (SRHnomi05_DET_INCAPACIDADES.RELA_SRHMAIN13 = SRHMAIN13_DET_INCAPACIDADES.ID_SRHMAIN13)
                WHERE SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT72 = :RELA_SICCONT72
                INTO DEPENDENCIA;

                IF (:DEPENDENCIA IS NULL) THEN
                  DEPENDENCIA = -1;

                SUSPEND;
            END
        END
    ELSE
        BEGIN
            FOR
              SELECT
                0 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                CAST(NULL AS BIGINT),
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                CAST(NULL AS BIGINT),
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SICCONT72_MOV_EMPRESAS
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'INCAPA'
                AND SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
                AND SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 NOT IN (SELECT SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT02
                                                                  FROM SRHMAIN13_DET_INCAPACIDADES
                                                                  WHERE SRHMAIN13_DET_INCAPACIDADES.RELA_SRHMAIN10 = :PARAM_EMPLEADO
                                                                    AND SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)

              UNION

              SELECT
                1 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                SRHMAIN13_DET_INCAPACIDADES.RELA_SRHMAIN10,
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                SRHMAIN13_DET_INCAPACIDADES.ID_SRHMAIN13,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SRHMAIN13_DET_INCAPACIDADES
              INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
                AND SRHMAIN13_DET_INCAPACIDADES.RELA_SRHMAIN10 = :PARAM_EMPLEADO
              INTO
                  :MARCA,
                  :RELA_SOCSYST01,
                  :RELA_SICCONT02,
                  :RELA_SRHMAIN10,
                  :RELA_SICCONT72,
                  :ID_SRHMAIN13,
                  :SICCONT02_DESCRI,
                  :SICCONT02_CODEXT,
                  :siccont72_codigo
            DO
            BEGIN
                DEPENDENCIA = -1;

                SELECT FIRST 1 SRHnomi05_DET_INCAPACIDADES.RELA_SRHMAIN13
                FROM SRHnomi05_DET_INCAPACIDADES
                INNER JOIN SRHMAIN13_DET_INCAPACIDADES ON (SRHnomi05_DET_INCAPACIDADES.RELA_SRHMAIN13 = SRHMAIN13_DET_INCAPACIDADES.ID_SRHMAIN13)
                WHERE SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT72 = :RELA_SICCONT72
                INTO DEPENDENCIA;

                IF (:DEPENDENCIA IS NULL) THEN
                    DEPENDENCIA = -1;

                IF (:RELA_SRHMAIN10 IS NULL) THEN
                    RELA_SRHMAIN10 = :PARAM_EMPLEADO;

                SUSPEND;
            END
        END
END
PRD_SRHMAIN14                  

BEGIN
    IF (PARAM_EMPLEADO = -1) THEN
        BEGIN
            FOR
              SELECT
                1 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                :PARAM_EMPLEADO,
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SICCONT72_MOV_EMPRESAS
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'HORAS'
                AND SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
              INTO
                  :MARCA,
                  :RELA_SOCSYST01,
                  :RELA_SICCONT02,
                  :RELA_SRHMAIN10,
                  :RELA_SICCONT72,
                  :SICCONT02_DESCRI,
                  :SICCONT02_CODEXT,
                  :siccont72_codigo
            DO
            BEGIN
                DEPENDENCIA = -1;

                SELECT FIRST 1 SRHnomi06_DET_HORASEXTRAS.RELA_SRHMAIN14
                FROM SRHnomi06_DET_HORASEXTRAS
                INNER JOIN SRHMAIN14_DET_HORASEXTRAS ON (SRHnomi06_DET_HORASEXTRAS.RELA_SRHMAIN14 = SRHMAIN14_DET_HORASEXTRAS.ID_SRHMAIN14)
                WHERE SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT72 = :RELA_SICCONT72
                INTO DEPENDENCIA;

                IF (:DEPENDENCIA IS NULL) THEN
                  DEPENDENCIA = -1;

                SUSPEND;
            END
        END
    ELSE
        BEGIN
            FOR
              SELECT
                0 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                CAST(NULL AS BIGINT),
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                CAST(NULL AS BIGINT),
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SICCONT72_MOV_EMPRESAS
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'HORAS'
                AND SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
                AND SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 NOT IN (SELECT SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT02
                                                                  FROM SRHMAIN14_DET_HORASEXTRAS
                                                                  WHERE SRHMAIN14_DET_HORASEXTRAS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
                                                                    AND SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)

              UNION

              SELECT
                1 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                SRHMAIN14_DET_HORASEXTRAS.RELA_SRHMAIN10,
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                SRHMAIN14_DET_HORASEXTRAS.ID_SRHMAIN14,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SRHMAIN14_DET_HORASEXTRAS
              INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
                AND SRHMAIN14_DET_HORASEXTRAS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
              INTO
                  :MARCA,
                  :RELA_SOCSYST01,
                  :RELA_SICCONT02,
                  :RELA_SRHMAIN10,
                  :RELA_SICCONT72,
                  :ID_SRHMAIN14,
                  :SICCONT02_DESCRI,
                  :SICCONT02_CODEXT,
                  :siccont72_codigo
            DO
            BEGIN
                DEPENDENCIA = -1;

                SELECT FIRST 1 SRHnomi06_DET_HORASEXTRAS.RELA_SRHMAIN14
                FROM SRHnomi06_DET_HORASEXTRAS
                INNER JOIN SRHMAIN14_DET_HORASEXTRAS ON (SRHnomi06_DET_HORASEXTRAS.RELA_SRHMAIN14 = SRHMAIN14_DET_HORASEXTRAS.ID_SRHMAIN14)
                WHERE SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT72 = :RELA_SICCONT72
                INTO DEPENDENCIA;

                IF (:DEPENDENCIA IS NULL) THEN
                  DEPENDENCIA = -1;

                IF (:RELA_SRHMAIN10 IS NULL) THEN
                    RELA_SRHMAIN10 = :PARAM_EMPLEADO;

                SUSPEND;
            END
        END
END
PRD_SRHNOMI01CFDI              

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
begin
    FOR SELECT
    SRHMAIN10_CAB_EMPLEADO.rela_socusua02,
    SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01,
    SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FINIPAGO,
    SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FFINPAGO,
    SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FPAGO,
    PERIODO.SOCSYST10_FILTRO_DES,
    SOCSYST10_TBL_LISTAESTADOS1.SOCSYST10_CODIGO,
    SOCSYST01_CAB_CLIENTES.socsyst01_regpatronal,
    SOCSYST10_TBL_LISTAESTADOS3.socsyst10_codigo,
    SOCSYST10_TBL_LISTAESTADOS2.socsyst10_filtro_des,
    SRHMAIN10_CAB_EMPLEADO.srhmain10_codext,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_numdiaspagos,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_antiguedad,
    SRHMAIN10_CAB_EMPLEADO.srhmain10_salario_nom,
    SRHMAIN10_CAB_EMPLEADO.srhmain10_salario_dia,
    SRHMAIN10_CAB_EMPLEADO.srhmain10_fingreso,
    SOCSYST10_TBL_LISTAESTADOS7.socsyst10_filtro_des,
    SOCSYST10_TBL_LISTAESTADOS8.socsyst10_filtro_des
    FROM SOCSYST10_TBL_LISTAESTADOS SOCSYST10_TBL_LISTAESTADOS3
    INNER JOIN SRHMAIN10_CAB_EMPLEADO ON (SOCSYST10_TBL_LISTAESTADOS3.ID_SOCSYST10 = SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_REG_PAGO)
    INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10)
    INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
    INNER JOIN SOCSYST01_CAB_CLIENTES ON (SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS SOCSYST10_TBL_LISTAESTADOS1 ON (SOCSYST01_CAB_CLIENTES.RELA_SOCSYST10_RIESGO = SOCSYST10_TBL_LISTAESTADOS1.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS PERIODO ON (SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST10_PERIODO = PERIODO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS SOCSYST10_TBL_LISTAESTADOS2 ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_TCONTRATO = SOCSYST10_TBL_LISTAESTADOS2.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS SOCSYST10_TBL_LISTAESTADOS7 ON (SRHMAIN10_CAB_EMPLEADO.rela_socsyst10_procesos = SOCSYST10_TBL_LISTAESTADOS7.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS SOCSYST10_TBL_LISTAESTADOS8 ON (SRHMAIN10_CAB_EMPLEADO.rela_socsyst10_puestos = SOCSYST10_TBL_LISTAESTADOS8.ID_SOCSYST10)
    WHERE SRHNOMI01_CAB_SUELDOS.id_srhnomi01 = :RELA_SRHNOMI01
    and SRHNOMI02_DET_EMPLEADOS.id_srhnomi02 = :rela_srhnomi02
    INTO :rela_socusua02,
         :ID_SRHNOMI01,
         :SRHNOMI01_FINIPAGO,
         :SRHNOMI01_FFINPAGO,
         :SRHNOMI01_FPAGO,
         :PERIODO_DESCRI,
         :RIESGO_CODIGO,
         :socsyst01_regpatronal,
         :regimen_contratacion,
         :tipo_contrato,
         :empleado_nro,
         :srhnomi02_numdiaspagos,
         :srhnomi02_antiguedad,
         :srhmain10_salario_nom,
         :srhmain10_salario_dia,
         :srhmain10_fingreso,
         :departamento,
         :puesto
    DO
    BEGIN
        VERSION = '1.1';

        SELECT FIRST 1 upper(CBO_SRHMAIN10.entidad)
        FROM CBO_SRHMAIN10
        WHERE CBO_SRHMAIN10.id_socusua02 = :rela_socusua02
        INTO :EMPLEADO;

        SELECT first 1
        PRD_DOCUMENTOS_EMPLEADO.socusua40_numero
        FROM PRD_DOCUMENTOS_EMPLEADO(:rela_socusua02, 0, NULL, NULL, NULL)
        WHERE PRD_DOCUMENTOS_EMPLEADO.SOCSYST10_CODIGO = 'RFC'
        INTO :rfc;

        SELECT first 1
        PRD_DOCUMENTOS_EMPLEADO.socusua40_numero
        FROM PRD_DOCUMENTOS_EMPLEADO(:rela_socusua02, 0, NULL, NULL, NULL)
        WHERE PRD_DOCUMENTOS_EMPLEADO.SOCSYST10_CODIGO = 'CURP'
        INTO :curp;

        SELECT first 1
        PRD_DOCUMENTOS_EMPLEADO.socusua40_numero
        FROM PRD_DOCUMENTOS_EMPLEADO(:rela_socusua02, 0, NULL, NULL, NULL)
        WHERE PRD_DOCUMENTOS_EMPLEADO.SOCSYST10_CODIGO = 'NSS'
        INTO :nss;

        select sum(SRHNOMI03_DET_RETRIBUCIONES.srhnomi03_importe)
        from SRHNOMI03_DET_RETRIBUCIONES
        where SRHNOMI03_DET_RETRIBUCIONES.rela_srhnomi02 = :rela_srhnomi02
        and SRHNOMI03_DET_RETRIBUCIONES.srhnomi03_gravado = 1
        into :TOT_PERCEPCIONES_GRAVADAS;

        select sum(SRHNOMI03_DET_RETRIBUCIONES.srhnomi03_importe)
        from SRHNOMI03_DET_RETRIBUCIONES
        where SRHNOMI03_DET_RETRIBUCIONES.rela_srhnomi02 = :rela_srhnomi02
        and SRHNOMI03_DET_RETRIBUCIONES.srhnomi03_gravado = 0
        into :TOT_PERCEPCIONES_EXENTAS;

        select sum(srhnomi04_det_retenciones.srhnomi04_importe)
        from srhnomi04_det_retenciones
        where srhnomi04_det_retenciones.rela_srhnomi02 = :rela_srhnomi02
        and srhnomi04_det_retenciones.srhnomi04_gravado = 1
        into :TOT_DEDUCCIONES_GRAVADAS;

        select sum(srhnomi04_det_retenciones.srhnomi04_importe)
        from srhnomi04_det_retenciones
        where srhnomi04_det_retenciones.rela_srhnomi02 = :rela_srhnomi02
        and srhnomi04_det_retenciones.srhnomi04_gravado = 0
        into :TOT_DEDUCCIONES_EXENTAS;

        suspend;
    END
end
PRD_CREA_CFDI_CORTE_POS        

DECLARE VARIABLE PYMVENT21_TOTAL INTEGER;
DECLARE VARIABLE PYMVENT21_DESCUENTOS DOUBLE PRECISION;
DECLARE VARIABLE PYMVENT21_IMPOSUBTOTAL DOUBLE PRECISION;
DECLARE VARIABLE PYMVENT21_IMPOUNITARIO DOUBLE PRECISION;
DECLARE VARIABLE PYMVENT21_DESCRIPCION VARCHAR(200);
DECLARE VARIABLE PYMVENT21_CANTIDAD DOUBLE PRECISION;
DECLARE VARIABLE RELA_SICINGR01_VENTAS_MOSTRADOR BIGINT;
DECLARE VARIABLE ENTIDAD_VENTAS VARCHAR(200);
DECLARE VARIABLE CORTE_CLIENTE BIGINT;
DECLARE VARIABLE SOCUTIL02_ULTID BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_ACCION BIGINT;
DECLARE VARIABLE RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_IVA BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_MONEDA BIGINT;
DECLARE VARIABLE ID_PYMINGR01 BIGINT;
DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE ID_PYMINGR18 BIGINT;
DECLARE VARIABLE ID_MSGPOLI26 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_MPAGO BIGINT;
DECLARE VARIABLE RELA_PYMINVE10 BIGINT;
begin
    CORTE_CLIENTE = -1;

    select FIRST 1
    CBO_SICINGR01.id_sicingr01,
    CBO_SICINGR01.entidad,
    CBO_SICINGR01.id_socusua02
    from CBO_SICINGR01
    where UPPER(CBO_SICINGR01.sicingr01_codigo) = 'POS-VENTAS'
    INTO :RELA_SICINGR01_VENTAS_MOSTRADOR,
         :ENTIDAD_VENTAS,
         :rela_socusua02;

    if (RELA_SICINGR01_VENTAS_MOSTRADOR is null) then
        EXCEPTION EXCEPTION_SINVENTASMOSTRADOR;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'AC40'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'AUTOFACTVENT'
    INTO :RELA_SOCSYST10_ACCION;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'SC30'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'PO-3-DIA'
    INTO :RELA_SOCSYST10;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TF10'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'IVA15'
    INTO :RELA_SOCSYST10_IVA;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'UP10'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'MXN'
    INTO :RELA_SOCSYST10_MONEDA;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'CP50'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'EFECTIVO'
    INTO :RELA_SOCSYST10_MPAGO;

    select MSGPOLI26_CAB_INTERFACES.id_msgpoli26
    from MSGPOLI26_CAB_INTERFACES
    where MSGPOLI26_CAB_INTERFACES.msgpoli26_proceso = 'JAM$_PYMINGR01'
    into :id_msgpoli26;

    SELECT
    PYMVENT01_CAB_CAJAS.RELA_SOCSYST01,
    PYMVENT01_CAB_CAJAS.RELA_SOCWFLO01
    FROM PYMVENT10_CAB_APERTURACIERRE
    INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
    where PYMVENT10_CAB_APERTURACIERRE.id_pymvent10 = :rela_pymvent10
    INTO :RELA_SOCSYST01,
         :RELA_SOCWFLO01;

    SELECT first 1 SICCONT72_MOV_EMPRESAS.RELA_SICCONT02
    FROM SICCONT72_MOV_EMPRESAS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    where SICCONT72_MOV_EMPRESAS.rela_socsyst01 = :RELA_SOCSYST01
    and SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'INGREFISCAL'
    into :RELA_SICCONT02;

    for SELECT
    VW_PYMVENT20_SINFACTURAR.rela_pymvent24,
    sum(PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL),
    dnvl(sum(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS), 0),
    sum(PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL)
    FROM VW_PYMVENT20_SINFACTURAR
    INNER JOIN PYMVENT21_DET_TICKETS ON (VW_PYMVENT20_SINFACTURAR.ID_PYMVENT20 = PYMVENT21_DET_TICKETS.RELA_PYMVENT20)
    where VW_PYMVENT20_SINFACTURAR.RELA_PYMVENT10 = :rela_pymvent10
    and VW_PYMVENT20_SINFACTURAR.pymvent20_presupuesto = 0
    and VW_PYMVENT20_SINFACTURAR.pymvent20_cancelado = 0
    group by VW_PYMVENT20_SINFACTURAR.rela_pymvent24
    INTO :rela_pymvent24,
         :TOT_SUBTOTAL,
         :TOT_DESCUENTOS,
         :TOT_TOTAL
    do
    begin
        CORTE_CLIENTE = -1;
        TOT_IMPUESTOS = TOT_TOTAL - (TOT_TOTAL / 1.16);

        for SELECT
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        sum(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD),
        min(PYMVENT21_DET_TICKETS.pymvent21_impounitario),
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
        sum(PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL),
        dnvl(sum(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS), 0),
        sum(PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL)
        FROM VW_PYMVENT20_SINFACTURAR
        INNER JOIN PYMVENT21_DET_TICKETS ON (VW_PYMVENT20_SINFACTURAR.ID_PYMVENT20 = PYMVENT21_DET_TICKETS.RELA_PYMVENT20)
        where VW_PYMVENT20_SINFACTURAR.rela_pymvent10 = :rela_pymvent10
        and VW_PYMVENT20_SINFACTURAR.rela_pymvent24 = :rela_pymvent24
        and VW_PYMVENT20_SINFACTURAR.pymvent20_presupuesto = 0
        and VW_PYMVENT20_SINFACTURAR.pymvent20_cancelado = 0
        group by
        VW_PYMVENT20_SINFACTURAR.RELA_PYMVENT10,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION
        into :RELA_PYMINVE10,
             :PYMVENT21_CANTIDAD,
             :pymvent21_impounitario,
             :PYMVENT21_DESCRIPCION,
             :PYMVENT21_IMPOSUBTOTAL,
             :PYMVENT21_DESCUENTOS,
             :PYMVENT21_TOTAL
        do
        begin
            SELECT
            pymvent24_cab_clientes.rela_sicingr01,
            pymvent24_cab_clientes.pymvent24_cliente
            FROM pymvent24_cab_clientes
            WHERE pymvent24_cab_clientes.id_pymvent24 = :rela_pymvent24
            into :rela_sicingr01,
                 :pymvent24_cliente;

            if (rela_sicingr01 IS NULL) then
            BEGIN
                rela_sicingr01 = RELA_SICINGR01_VENTAS_MOSTRADOR;
                pymvent24_cliente = ENTIDAD_VENTAS;
            END


            if (CORTE_CLIENTE <> :rela_pymvent24) then
            BEGIN
                CORTE_CLIENTE = :rela_pymvent24;

                insert into msgpoli01_cab_polizas(
                msgpoli01_cab_polizas.rela_socwflo01,
                msgpoli01_cab_polizas.rela_socsyst01,
                msgpoli01_cab_polizas.rela_socusua02_accion,
                msgpoli01_cab_polizas.rela_socsyst10_accion,
                msgpoli01_cab_polizas.rela_socsyst10,
                msgpoli01_cab_polizas.msgpoli01_descripcion,
                msgpoli01_cab_polizas.msgpoli01_fcta)
                values(:rela_socwflo01,
                       :rela_socsyst01,
                       :rela_socusua02,
                       :rela_socsyst10_accion,
                       :RELA_SOCSYST10,
                       'CIERRE DE CAJA-POS',
                       current_date);

                SELECT
                socutil02_tbl_ultids.socutil02_ultid
                FROM socutil02_tbl_ultids
                WHERE socutil02_tbl_ultids.socutil02_usuario = current_user
                AND socutil02_tbl_ultids.socutil02_ulttbl = 'MSGPOLI01'
                INTO :socutil02_ultid;

                insert into pymingr01_cab_facturas(
                pymingr01_cab_facturas.rela_socsyst01,
                pymingr01_cab_facturas.rela_socwflo01,
                pymingr01_cab_facturas.rela_msgpoli01,
                pymingr01_cab_facturas.rela_sicingr01,
                pymingr01_cab_facturas.rela_socsyst10,
                pymingr01_cab_facturas.rela_socsyst10_moneda,
                pymingr01_cab_facturas.rela_socsyst10_tipopago,
                pymingr01_cab_facturas.pymingr01_concepto,
                pymingr01_cab_facturas.pymingr01_ffac,
                pymingr01_cab_facturas.pymingr01_subtotal,
                pymingr01_cab_facturas.pymingr01_descuentos,
                pymingr01_cab_facturas.pymingr01_impuestos,
                pymingr01_cab_facturas.pymingr01_total,
                pymingr01_cab_facturas.pymingr01_tipocambio)
                values(:rela_socsyst01,
                       :rela_socwflo01,
                       :socutil02_ultid,
                       :rela_sicingr01,
                       :RELA_SOCSYST10_IVA,
                       :RELA_SOCSYST10_MONEDA,
                       :RELA_SOCSYST10_MPAGO,
                       'CORTE DE CAJA',
                       current_date,
                       :TOT_SUBTOTAL,
                       :tot_descuentos,
                       :tot_impuestos,
                       :tot_total,
                       1);

                SELECT
                socutil02_tbl_ultids.socutil02_ultid
                FROM socutil02_tbl_ultids
                WHERE socutil02_tbl_ultids.socutil02_usuario = current_user
                AND socutil02_tbl_ultids.socutil02_ulttbl = 'PYMINGR01'
                INTO :id_pymingr01;

                INSERT INTO PYMINGR18_DEP_FACTELECT(PYMINGR18_DEP_FACTELECT.RELA_SOCSYST01,
                                                  PYMINGR18_DEP_FACTELECT.RELA_SOCWFLO01,
                                                  PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01,
                                                  PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,
                                                  PYMINGR18_DEP_FACTELECT.PYMINGR18_VERSION)
                                           VALUES(:RELA_SOCSYST01,
                                                  :RELA_SOCWFLO01,
                                                  :id_pymingr01,
                                                  'xxxxx',
                                                  '3.2');

                SELECT
                socutil02_tbl_ultids.socutil02_ultid
                FROM socutil02_tbl_ultids
                WHERE socutil02_tbl_ultids.socutil02_usuario = current_user
                AND socutil02_tbl_ultids.socutil02_ulttbl = 'PYMINGR18'
                INTO :ID_PYMINGR18;

                insert into ON2CFDS15_MOV_SAT(
                ON2CFDS15_MOV_SAT.rela_pymingr18, ON2CFDS15_MOV_SAT.rela_msgpoli26)
                values(:ID_PYMINGR18, :id_msgpoli26);
            END

            insert into pymingr06_det_items(
            pymingr06_det_items.rela_pymingr01,
            pymingr06_det_items.rela_pyminve10,
            pymingr06_det_items.rela_socusua02,
            pymingr06_det_items.rela_siccont02,
            pymingr06_det_items.pymingr06_cantidad,
            pymingr06_det_items.pymingr06_importe,
            pymingr06_det_items.pymingr06_descuento,
            pymingr06_det_items.pymingr06_porcentaje,
            pymingr06_det_items.pymingr06_impuestos)
               values(:id_pymingr01,
                   :RELA_PYMINVE10,
                   :rela_socusua02,
                   :RELA_SICCONT02,
                   :PYMVENT21_CANTIDAD,
                   :pymvent21_impounitario,
                   :pymvent21_descuentos,
                   (:pymvent21_descuentos/:pymvent21_imposubtotal) * 100,
                   (:pymvent21_imposubtotal - :pymvent21_descuentos) / 1.16);

            insert into PYMINGR17_MOV_TICKETS(
            PYMINGR17_MOV_TICKETS.rela_pymingr01,
            PYMINGR17_MOV_TICKETS.rela_pymvent20)
            SELECT distinct :id_pymingr01, VW_PYMVENT20_SINFACTURAR.id_pymvent20
            FROM VW_PYMVENT20_SINFACTURAR
            where VW_PYMVENT20_SINFACTURAR.rela_pymvent10 = :rela_pymvent10
            and VW_PYMVENT20_SINFACTURAR.rela_pymvent24 = :rela_pymvent24
            and VW_PYMVENT20_SINFACTURAR.pymvent20_presupuesto = 0
            and VW_PYMVENT20_SINFACTURAR.pymvent20_cancelado = 0;

        END
        suspend;
    end
 end
PRD_PYMINGR01_PYMINGR05        

DECLARE VARIABLE MSGPOLI09_ACTIVIDAD INTEGER;
DECLARE VARIABLE MSGPOLI09_CODEXT VARCHAR(50);
BEGIN
  FOR
    SELECT
        MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_ACTIVIDAD,
        MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_CODEXT,
        MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE,
        PYMINGR05_MOV_IMPUESTOS.PYMINGR05_DEBE + PYMINGR05_MOV_IMPUESTOS.PYMINGR05_HABER
    FROM PYMINGR05_MOV_IMPUESTOS
    INNER JOIN PYMINGR02_DET_CONCEPTOS ON (PYMINGR05_MOV_IMPUESTOS.RELA_PYMINGR02 = PYMINGR02_DET_CONCEPTOS.ID_PYMINGR02)
    INNER JOIN SICCONT73_MOV_IMPUESTOS ON (PYMINGR05_MOV_IMPUESTOS.RELA_SICCONT02 = SICCONT73_MOV_IMPUESTOS.RELA_SICCONT02)
    INNER JOIN MSGPOLI09_CAB_IMPUESTOS ON (SICCONT73_MOV_IMPUESTOS.ID_SICCONT73 = MSGPOLI09_CAB_IMPUESTOS.RELA_SICCONT73)
    WHERE PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01 = :PARAM_ID
    INTO
        :MSGPOLI09_ACTIVIDAD,
        :MSGPOLI09_CODEXT,
        :TASA,
        :IMPORTE
  DO
  BEGIN
    IF (:IMPORTE < 0) THEN
      IMPORTE = IMPORTE * -1;

    APLICA = 0;
    IF (:MSGPOLI09_ACTIVIDAD = 0) THEN
      BEGIN
        TIPO = 'R';

        IF (:MSGPOLI09_CODEXT LIKE '%RETIVA%') THEN
          IMPUESTO = 'IVA';
        ELSE
          IF (:MSGPOLI09_CODEXT LIKE '%RETISR%') THEN
            IMPUESTO = 'ISR';
          ELSE
            IF (:MSGPOLI09_CODEXT LIKE '%RETLOC%') THEN
              BEGIN
                IMPUESTO = STRREPLACE(:MSGPOLI09_CODEXT, 'RETLOC','');
                APLICA = 1;
              END
      END
    ELSE
      BEGIN
        TIPO = 'I';

        IF (:MSGPOLI09_CODEXT LIKE '%IVA%') THEN
          IMPUESTO = 'IVA';
        ELSE
          IF (:MSGPOLI09_CODEXT LIKE '%IEPS%') THEN
            IMPUESTO = 'IEPS';
          ELSE
            IF (:MSGPOLI09_CODEXT LIKE '%IMPLOC%') THEN
              BEGIN
                IMPUESTO = STRREPLACE(:MSGPOLI09_CODEXT, 'IMPLOC','');
                APLICA = 1;
              END
      END

    SUSPEND;
  END

  FOR
    SELECT
        MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_ACTIVIDAD,
        MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_CODEXT,
        MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE,
        PYMINGR05_MOV_IMPUESTOS.PYMINGR05_DEBE + PYMINGR05_MOV_IMPUESTOS.PYMINGR05_HABER
    FROM PYMINGR05_MOV_IMPUESTOS
    INNER JOIN PYMINGR06_DET_ITEMS ON (PYMINGR05_MOV_IMPUESTOS.RELA_PYMINGR06 = PYMINGR06_DET_ITEMS.ID_PYMINGR06)
    INNER JOIN SICCONT73_MOV_IMPUESTOS ON (PYMINGR05_MOV_IMPUESTOS.RELA_SICCONT02 = SICCONT73_MOV_IMPUESTOS.RELA_SICCONT02)
    INNER JOIN MSGPOLI09_CAB_IMPUESTOS ON (SICCONT73_MOV_IMPUESTOS.ID_SICCONT73 = MSGPOLI09_CAB_IMPUESTOS.RELA_SICCONT73)
    WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :PARAM_ID
    INTO
        :MSGPOLI09_ACTIVIDAD,
        :MSGPOLI09_CODEXT,
        :TASA,
        :IMPORTE
    DO
    BEGIN
      IF (:IMPORTE < 0) THEN
        IMPORTE = IMPORTE * -1;

      APLICA = 0;
      IF (:MSGPOLI09_ACTIVIDAD = 0) THEN
        BEGIN
          TIPO = 'R';

          IF (:MSGPOLI09_CODEXT LIKE '%RETIVA%') THEN
            IMPUESTO = 'IVA';
          ELSE
            IF (:MSGPOLI09_CODEXT LIKE '%RETISR%') THEN
              IMPUESTO = 'ISR';
            ELSE
              IF (:MSGPOLI09_CODEXT LIKE '%RETLOC%') THEN
                BEGIN
                  IMPUESTO = STRREPLACE(:MSGPOLI09_CODEXT, 'RETLOC','');
                  APLICA = 1;
                END
        END
      ELSE
        BEGIN
          TIPO = 'I';

          IF (:MSGPOLI09_CODEXT LIKE '%IVA%') THEN
            IMPUESTO = 'IVA';
          ELSE
            IF (:MSGPOLI09_CODEXT LIKE '%IEPS%') THEN
              IMPUESTO = 'IEPS';
            ELSE
              IF (:MSGPOLI09_CODEXT LIKE '%IMPLOC%') THEN
                BEGIN
                  IMPUESTO = STRREPLACE(:MSGPOLI09_CODEXT, 'IMPLOC','');
                  APLICA = 1;
                END
        END

      SUSPEND;
    END
END
PRD_SRHNOMI02                  

DECLARE VARIABLE ENTRO SMALLINT;
begin
    if (modo = 'A') then
    BEGIN
    FOR SELECT
    SRHMAIN10_CAB_EMPLEADO.id_srhmain10 * -1,
    -1,
    SRHMAIN10_CAB_EMPLEADO.id_srhmain10,
    STRTRIM(SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_NOMBRES || ',' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_PADRE || ' ' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_MADRE),
    SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_CORREO,
    PUESTO.socsyst10_filtro_des,
    REGDEPAGO.socsyst10_filtro_des,
    TCONTRATO.socsyst10_filtro_des,
    PERIODODEPAGO.socsyst10_filtro_des,
    SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_FINGRESO,
    SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_SALARIO_NOM,
    SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_SALARIO_DIA,
    0.00,
    0.00,
    0.00,
    0.00,
    0.00
    FROM SRHMAIN10_CAB_EMPLEADO
    INNER JOIN SOCUSUA02_MAE_USUARIOS ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCUSUA02 = SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02)
    INNER JOIN SOCUSUA01_MAE_ENTIDADES ON (SOCUSUA02_MAE_USUARIOS.RELA_SOCUSUA01 = SOCUSUA01_MAE_ENTIDADES.ID_SOCUSUA01)
    INNER JOIN SOCUSUA30_MAE_ENTFISICAS ON (SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA30 = SOCUSUA30_MAE_ENTFISICAS.ID_SOCUSUA30)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PROCESOS = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS PUESTO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PUESTOS = PUESTO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS REGDEPAGO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_REG_PAGO = REGDEPAGO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TCONTRATO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_TCONTRATO = TCONTRATO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS PERIODODEPAGO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PDEPAGO = PERIODODEPAGO.ID_SOCSYST10)
    WHERE SRHMAIN10_CAB_EMPLEADO.srhmain10_fdebaja IS NULL
      AND SRHMAIN10_CAB_EMPLEADO.srhmain10_connomina = 1
      AND SRHMAIN10_CAB_EMPLEADO.rela_socsyst01 = :RELA_SOCSYST01
      AND PERIODODEPAGO.id_socsyst10 = :rela_socsyst10_periodo
    into :ID_SRHNOMI02,
         :RELA_SRHNOMI01,
         :RELA_SRHMAIN10,
         :EMPLEADO,
         :SOCUSUA30_CORREO,
         :PUESTO,
         :REGDEPAGO,
         :TCONTRATO,
         :PERIODODEPAGO,
         :SRHMAIN10_FINGRESO,
         :SRHMAIN10_SALARIO_NOM,
         :SRHMAIN10_SALARIO_DIA,
         :SRHNOMI02_TOT_PERCEP,
         :SRHNOMI02_TOT_DEDUC,
         :SRHNOMI02_TOT_ISR,
         :SRHNOMI02_TOT_INCAP,
         :SRHNOMI02_TOT_HORAS
    DO
    BEGIN
        suspend;
    END
    END
    ELSE
    BEGIN
    FOR SELECT
    SRHNOMI02_DET_EMPLEADOS.rela_socsyst10_mpago,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_ctapago,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_concepto,
    invl(SRHNOMI02_DET_EMPLEADOS.id_srhnomi02, (SRHMAIN10_CAB_EMPLEADO.id_srhmain10 * -1)),
    SRHNOMI02_DET_EMPLEADOS.rela_srhnomi01,
    SRHMAIN10_CAB_EMPLEADO.id_srhmain10,
    STRTRIM(SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_NOMBRES || ',' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_PADRE || ' ' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_MADRE),
    SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_CORREO,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_antiguedad,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_numdiaspagos,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_nom,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_dia,
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_fapl,
    PUESTO.socsyst10_filtro_des,
    REGDEPAGO.socsyst10_filtro_des,
    TCONTRATO.socsyst10_filtro_des,
    PERIODODEPAGO.socsyst10_filtro_des,
    SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_FINGRESO,
    SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_SALARIO_NOM,
    SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_SALARIO_DIA,
    DNVL(SRHNOMI02_DET_EMPLEADOS.srhnomi02_tot_percep,0),
    DNVL(SRHNOMI02_DET_EMPLEADOS.srhnomi02_tot_deduc,0),
    DNVL(SRHNOMI02_DET_EMPLEADOS.srhnomi02_tot_isr,0),
    DNVL(SRHNOMI02_DET_EMPLEADOS.srhnomi02_tot_incap,0),
    DNVL(SRHNOMI02_DET_EMPLEADOS.srhnomi02_tot_horas,0),
    SRHNOMI02_DET_EMPLEADOS.srhnomi02_notas
    FROM SRHNOMI02_DET_EMPLEADOS
    INNER JOIN SRHMAIN10_CAB_EMPLEADO ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10)
    INNER JOIN SOCUSUA02_MAE_USUARIOS ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCUSUA02 = SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02)
    INNER JOIN SOCUSUA01_MAE_ENTIDADES ON (SOCUSUA02_MAE_USUARIOS.RELA_SOCUSUA01 = SOCUSUA01_MAE_ENTIDADES.ID_SOCUSUA01)
    INNER JOIN SOCUSUA30_MAE_ENTFISICAS ON (SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA30 = SOCUSUA30_MAE_ENTFISICAS.ID_SOCUSUA30)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PROCESOS = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS PUESTO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PUESTOS = PUESTO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS REGDEPAGO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_REG_PAGO = REGDEPAGO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TCONTRATO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_TCONTRATO = TCONTRATO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS PERIODODEPAGO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PDEPAGO = PERIODODEPAGO.ID_SOCSYST10)
    WHERE SRHMAIN10_CAB_EMPLEADO.rela_socsyst01 = :RELA_SOCSYST01
      AND PERIODODEPAGO.id_socsyst10 = :rela_socsyst10_periodo
    into :rela_socsyst10_mpago,
         :srhnomi02_ctapago,
         :srhnomi02_concepto,
         :ID_SRHNOMI02,
         :RELA_SRHNOMI01,
         :RELA_SRHMAIN10,
         :EMPLEADO,
         :SOCUSUA30_CORREO,
         :SRHNOMI02_ANTIGUEDAD,
         :SRHNOMI02_NUMDIASPAGOS,
         :SRHNOMI02_SALARIO_NOM,
         :SRHNOMI02_SALARIO_DIA,
         :SRHNOMI02_FAPL,
         :PUESTO,
         :REGDEPAGO,
         :TCONTRATO,
         :PERIODODEPAGO,
         :SRHMAIN10_FINGRESO,
         :SRHMAIN10_SALARIO_NOM,
         :SRHMAIN10_SALARIO_DIA,
         :SRHNOMI02_TOT_PERCEP,
         :SRHNOMI02_TOT_DEDUC,
         :SRHNOMI02_TOT_ISR,
         :SRHNOMI02_TOT_INCAP,
         :SRHNOMI02_TOT_HORAS,
         :srhnomi02_notas
    DO
    BEGIN
        entro = 0;
        SRHNOMI18_DOCNRO = null;
        SRHNOMI18_UUID = null;
        SRHNOMI18_UUID_FECHA = null;
        CANCELADOS = 0;

        FOR SELECT
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_DOCNRO,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_FECHA,
        (SELECT COUNT(SRHNOMI18_DEP_FACTELECT.id_srhnomi18)
         FROM SRHNOMI18_DEP_FACTELECT
         WHERE SRHNOMI18_DEP_FACTELECT.rela_srhnomi02 = :ID_SRHNOMI02
         and SRHNOMI18_DEP_FACTELECT.srhnomi18_cancelado IS NOT NULL
        )
        FROM SRHNOMI18_DEP_FACTELECT
        WHERE SRHNOMI18_DEP_FACTELECT.rela_srhnomi02 = :ID_SRHNOMI02
        AND SRHNOMI18_DEP_FACTELECT.srhnomi18_cancelado is null
        INTO :SRHNOMI18_DOCNRO,
             :SRHNOMI18_UUID,
             :SRHNOMI18_UUID_FECHA,
             :CANCELADOS
        DO
        BEGIN
            entro = 1;
            suspend;
        END

        if (entro = 0) then
        begin
            suspend;
        end
    END
    END
end
SOC$_CFDIXMLS_POLIZAS_REPARA   

DECLARE VARIABLE ID_SCEXMLS20 BIGINT;
DECLARE VARIABLE RELA_SICCONT02_PROVEEDOR BIGINT;
DECLARE VARIABLE RELA_SICCONT02_PROVEEDORX BIGINT;
DECLARE VARIABLE RELA_SICCONT02_CLIENTE BIGINT;
DECLARE VARIABLE RELA_SICCONT02_CLIENTEX BIGINT;
DECLARE VARIABLE RELA_SICCONT02_EMPLEADO BIGINT;
DECLARE VARIABLE RELA_SICCONT02_CREDITOFAVOR BIGINT;
DECLARE VARIABLE RELA_SICCONT02_CREDITOFAVORX BIGINT;
DECLARE VARIABLE RELA_SICCONT02_CREDITOCONTRA BIGINT;
DECLARE VARIABLE RELA_SICCONT02_CREDITOCONTRAX BIGINT;
DECLARE VARIABLE RELA_SICCONT02_AJUSTE_INGRESO BIGINT;
DECLARE VARIABLE RELA_SICCONT02_AJUSTE_EGRESO BIGINT;
DECLARE VARIABLE RELA_SICCONT02_DESCUENTO_I BIGINT;
DECLARE VARIABLE RELA_SICCONT02_DESCUENTO_E BIGINT;
DECLARE VARIABLE SCEXMLS20_AJUSTE_MONTO DOUBLE PRECISION;
DECLARE VARIABLE RELA_SOCSYST10_COLUMNA_CARGO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_COLUMNA_ABONO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO_ENTIDAD_PROVEE BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO_ENTIDAD_CLIENTE BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO_ENTIDAD_EMPLEADO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_MONEDA BIGINT;
DECLARE VARIABLE RELA_SICCONT02_SELCCION BIGINT;
DECLARE VARIABLE STRTIPOACCION VARCHAR(100);
DECLARE VARIABLE RELA_SICINGR01_SELECCION BIGINT;
DECLARE VARIABLE RELA_SICEGRE01_SELECCION BIGINT;
DECLARE VARIABLE RELA_SRHMAIN10_SELECCION BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_ARCO_SELECCION BIGINT;
DECLARE VARIABLE RELA_SICCONT02_RELACIONADO BIGINT;
DECLARE VARIABLE TIPO CHAR(1);
DECLARE VARIABLE RELA_SICCONT02_AJUSTE_ACTIVO BIGINT;
DECLARE VARIABLE RELA_SICCONT02_DESCUENTO BIGINT;
DECLARE VARIABLE RELA_MSGPOLI02_PRINCIPAL BIGINT;
DECLARE VARIABLE RELA_UUID_TIPO_ACTIVO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO_UUID_PROVE BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO_UUID_CLIENTE BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO_UUID_EMPLEADO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO_UUID_RFC BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO_UUID_MONTO BIGINT;
DECLARE VARIABLE RELA_SICCONT02_RETENCION BIGINT;
DECLARE VARIABLE IMPORTE_RETENCION DOUBLE PRECISION;
DECLARE VARIABLE SCEXMLS14_EXCLUIR VARCHAR(1);
DECLARE VARIABLE RELA_SICCONT02_TRASLADADOS BIGINT;
DECLARE VARIABLE IMPORTE_TRASLADADOS DOUBLE PRECISION;
DECLARE VARIABLE RELA_SICCONT02_CONCEPTOS_NOMINA BIGINT;
DECLARE VARIABLE TIPO_NOMINA VARCHAR(1);
DECLARE VARIABLE IMPORTE_GRAVADO DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_EXENTO DOUBLE PRECISION;
DECLARE VARIABLE RELA_SICCONT02_CONCEPTOS BIGINT;
DECLARE VARIABLE IMPORTE_CONCEPTOS DOUBLE PRECISION;
DECLARE VARIABLE DIFERENCIA_TMP DOUBLE PRECISION;
DECLARE VARIABLE EXISTE BIGINT;
begin
    Select
    scexmls20_cab_parametrizacion.id_scexmls20,
    scexmls20_cab_parametrizacion.rela_siccont02_proveedor,
    scexmls20_cab_parametrizacion.rela_siccont02_proveedorx,
    scexmls20_cab_parametrizacion.rela_siccont02_cliente,
    scexmls20_cab_parametrizacion.rela_siccont02_clientex,
    scexmls20_cab_parametrizacion.rela_siccont02_empleado,
    scexmls20_cab_parametrizacion.rela_siccont02_creditofavor,
    scexmls20_cab_parametrizacion.rela_siccont02_creditofavorx,
    scexmls20_cab_parametrizacion.rela_siccont02_credotcontra,
    scexmls20_cab_parametrizacion.rela_siccont02_credotcontrax,
    scexmls20_cab_parametrizacion.rela_siccont02_ajustei,
    scexmls20_cab_parametrizacion.rela_siccont02_ajustee,
    scexmls20_cab_parametrizacion.rela_siccont02_descuento_i,
    scexmls20_cab_parametrizacion.rela_siccont02_descuento_e,
    scexmls20_cab_parametrizacion.scexmls20_ajuste_monto
    from scexmls20_cab_parametrizacion
    where scexmls20_cab_parametrizacion.rela_socsyst01 = :rela_socsyst01x
    into :id_scexmls20,
         :rela_siccont02_proveedor,
         :rela_siccont02_proveedorx,
         :rela_siccont02_cliente,
         :rela_siccont02_clientex,
         :rela_siccont02_empleado,
         :rela_siccont02_creditofavor,
         :rela_siccont02_creditofavorx,
         :rela_siccont02_creditocontra,
         :rela_siccont02_creditocontrax,
         :rela_siccont02_ajuste_ingreso,
         :rela_siccont02_ajuste_egreso,
         :rela_siccont02_descuento_i,
         :rela_siccont02_descuento_e,
         :scexmls20_ajuste_monto;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TA40'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = '0'
    into :rela_socsyst10_columna_cargo;

    Select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TA40'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = '1'
    into :rela_socsyst10_columna_abono;

    Select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'RP20'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'PROVEEDOR'
    into :rela_socsyst10_tipo_entidad_provee;

    Select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'RP20'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'CLIENTE'
    into :rela_socsyst10_tipo_entidad_cliente;

    Select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'RP20'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'EMPLEADO'
    into :rela_socsyst10_tipo_entidad_empleado;
    
    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TR40'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'UUID-PROVE'
    into :rela_socsyst10_tipo_uuid_prove;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TR40'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'UUID-CLIENTE'
    into :rela_socsyst10_tipo_uuid_cliente;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TR40'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'UUID-NOMI'
    into :rela_socsyst10_tipo_uuid_empleado;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TR40'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'UUID-R'
    into :rela_socsyst10_tipo_uuid_rfc;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TR40'
    AND socsyst10_tbl_listaestados.socsyst10_codigo = 'UUID-M'
    into :rela_socsyst10_tipo_uuid_monto;

    /* ------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------ */

    FOR SELECT
    socsyst10_tbl_listaestados.socsyst10_codigo,
    socsyst10_tbl_listaestados.socsyst10_filtro_des,
    scexmls11_det_migracion.rela_socsyst10,
    scexmls11_det_migracion.rela_msgpoli01,
    scexmls11_det_migracion.rela_sicingr01,
    scexmls11_det_migracion.rela_sicegre01,
    scexmls11_det_migracion.rela_srhmain10,
    scexmls11_det_migracion.id_scexmls11,
    scexmls11_det_migracion.scexmls11_pathfileold,
    scexmls11_det_migracion.scexmls11_entidad,
    scexmls11_det_migracion.scexmls11_rfc,
    scexmls11_det_migracion.scexmls11_folio,
    scexmls11_det_migracion.scexmls11_uuid,
    scexmls11_det_migracion.scexmls11_uuid_importe,
    scexmls11_det_migracion.scexmls11_uuid_fecha,
    scexmls11_det_migracion.scexmls11_tipocomprobante,
    scexmls11_det_migracion.scexmls11_moneda,
    scexmls11_det_migracion.scexmls11_cambio,
    scexmls11_det_migracion.scexmls11_subtotal,
    scexmls11_det_migracion.scexmls11_descuento,
    scexmls11_det_migracion.scexmls11_extranjero,
    scexmls11_det_migracion.scexmls11_diferencia,
    scexmls11_det_migracion.scexmls11_fapl
    FROM scexmls11_det_migracion
    INNER JOIN SCEXMLS10_CAB_MIGRACION ON (SCEXMLS11_DET_MIGRACION.RELA_SCEXMLS10 = SCEXMLS10_CAB_MIGRACION.ID_SCEXMLS10)
    INNER JOIN socsyst10_tbl_listaestados ON (socsyst10_tbl_listaestados.id_socsyst10 = scexmls11_det_migracion.rela_socsyst10)
    WHERE SCEXMLS10_CAB_MIGRACION.rela_socsyst01 = :rela_socsyst01x
    and socsyst10_codigo <> 'ERRORES'
    INTO :strTipoAccion,
         :tipo_descripcion,
         :rela_socsyst10,
         :rela_msgpoli01,
         :rela_sicingr01,
         :rela_sicegre01,
         :rela_srhmain10,
         :id_scexmls11,
         :scexmls11_pathfileold,
         :scexmls11_entidad,
         :scexmls11_rfc,
         :scexmls11_folio,
         :scexmls11_uuid,
         :scexmls11_uuid_importe,
         :scexmls11_uuid_fecha,
         :scexmls11_tipocomprobante,
         :scexmls11_moneda,
         :scexmls11_cambio,
         :scexmls11_subtotal,
         :scexmls11_descuento,
         :scexmls11_extranjero,
         :scexmls11_diferencia,
         :scexmls11_fapl
    DO
    BEGIN
        marca = 0;

        select
        msgpoli01_cab_polizas.msgpoli01_docnro,
        msgpoli01_cab_polizas.msgpoli01_fcta
        from msgpoli01_cab_polizas
        where msgpoli01_cab_polizas.id_msgpoli01 = :rela_msgpoli01
        into :msgpoli01_docnro,
             :msgpoli01_fcta;

        select
        sum(msgpoli02_det_polizas.msgpoli02_debe),
        sum(msgpoli02_det_polizas.msgpoli02_haber)
        from msgpoli02_det_polizas
        where msgpoli02_det_polizas.rela_msgpoli01 = :rela_msgpoli01
        into :msgpoli02_debe,
             :msgpoli02_haber;

        if (msgpoli02_debe is null) then
            msgpoli02_debe =0;

        if (msgpoli02_haber is null) then
            msgpoli02_haber =0;

        status = null;
        existe = null;

        SELECT first 1 SCEXMLS41_DET_XMLS.id_scexmls41
        FROM SCEXMLS41_DET_XMLS
        INNER JOIN SCEXMLS40_CAB_POLIZAS ON (SCEXMLS41_DET_XMLS.RELA_SCEXMLS40 = SCEXMLS40_CAB_POLIZAS.ID_SCEXMLS40)
        INNER JOIN MSGPOLI01_CAB_POLIZAS ON (SCEXMLS40_CAB_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
        INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01)
        where scexmls41_det_xmls.rela_scexmls11 = :id_scexmls11
        into :existe;

        if (existe is not null) then
            status = 'El Xml a Reparar Tiene Conciliacion Bancaria Asociado';

        /* ------------------------------------------------------------------------------------------------------------ */
        /* ------------------------------------------------------------------------------------------------------------ */

        diferencia_tmp = cast((msgpoli02_debe - msgpoli02_haber) as numeric(15,4));

        if (((diferencia_tmp <> 0) or (msgpoli02_debe = 0 and msgpoli02_haber = 0)) and (existe is null)) then
        begin
            delete from msgpoli02_det_polizas
            where msgpoli02_det_polizas.rela_msgpoli01 = :rela_msgpoli01;

            select socsyst10_tbl_listaestados.id_socsyst10
            from socsyst10_tbl_listaestados
            where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'UP10'
            AND socsyst10_tbl_listaestados.socsyst10_filtro_des = :scexmls11_moneda
            into :rela_socsyst10_moneda;

            /* ------------------------------------------------------------------------------------------------------------ */
            /* ------------------------------------------------------------------------------------------------------------ */

            if (strTipoAccion = 'PROVE') then
            begin
                if (:scexmls11_extranjero = 'S') then
                    rela_siccont02_selccion = rela_siccont02_proveedorx;
                else
                    rela_siccont02_selccion = rela_siccont02_proveedor;
            end

            if (strTipoAccion = 'CLIENTE') then
            begin
                if (:scexmls11_extranjero = 'S') then
                    rela_siccont02_selccion = rela_siccont02_clientex;
                else
                    rela_siccont02_selccion = rela_siccont02_cliente;
            end

            if (strTipoAccion = 'NOMI') then
            begin
                rela_siccont02_selccion = rela_siccont02_empleado;
            end

            if (strTipoAccion = 'CREDITOA') then
            begin
                if (:scexmls11_extranjero = 'S') then
                    rela_siccont02_selccion = rela_siccont02_creditofavorx;
                else
                    rela_siccont02_selccion = rela_siccont02_creditofavor;
            end

            if (strTipoAccion = 'CREDITOE') then
            begin
                if (:scexmls11_extranjero = 'S') then
                    rela_siccont02_selccion = rela_siccont02_creditocontrax;
                else
                    rela_siccont02_selccion = rela_siccont02_creditocontra;
            end

            /* ------------------------------------------------------------------------------------------------------------ */
            /* ------------------------------------------------------------------------------------------------------------ */

            if (:rela_sicingr01 is not null) then
            begin
                rela_sicingr01_seleccion = :rela_sicingr01;
                rela_socsyst10_arco_seleccion = rela_socsyst10_tipo_entidad_cliente;

                select scexmls23_det_relacionados.rela_siccont02
                from scexmls23_det_relacionados
                where scexmls23_det_relacionados.rela_scexmls20 = :id_scexmls20
                and scexmls23_det_relacionados.rela_sicingr01 = :rela_sicingr01
                into :rela_siccont02_relacionado;
            end

            if (:rela_sicegre01 is not null) then
            begin
                rela_sicegre01_seleccion = :rela_sicegre01;
                rela_socsyst10_arco_seleccion = rela_socsyst10_tipo_entidad_provee;

                select scexmls23_det_relacionados.rela_siccont02
                from scexmls23_det_relacionados
                where scexmls23_det_relacionados.rela_scexmls20 = :id_scexmls20
                and scexmls23_det_relacionados.rela_sicegre01 = :rela_sicegre01
                into :rela_siccont02_relacionado;
            end

            if (:rela_srhmain10 is not null) then
            begin
                rela_srhmain10_seleccion = :rela_srhmain10;
                rela_socsyst10_arco_seleccion = rela_socsyst10_tipo_entidad_empleado;

                select scexmls23_det_relacionados.rela_siccont02
                from scexmls23_det_relacionados
                where scexmls23_det_relacionados.rela_scexmls20 = :id_scexmls20
                and scexmls23_det_relacionados.rela_srhmain10 = :rela_srhmain10
                into :rela_siccont02_relacionado;
            end

            if (rela_siccont02_relacionado is not null) then
                rela_siccont02_selccion = rela_siccont02_relacionado;

            /* --------------------------------------------------------------------------------------------- */
            /*                      AHORA VAMOS POR LOS DETALLES DE LA POLIZA                                */
            /* --------------------------------------------------------------------------------------------- */

            if ((strTipoAccion = 'CLIENTE') or (strTipoAccion = 'CREDITOA'))  then
            begin
                tipo = 'I';
                rela_siccont02_ajuste_activo = rela_siccont02_ajuste_ingreso;
                rela_siccont02_descuento = rela_siccont02_descuento_i;
            end
            else
            begin
                tipo = 'E';
                rela_siccont02_ajuste_activo = rela_siccont02_ajuste_egreso;
                rela_siccont02_descuento = rela_siccont02_descuento_e;
            end
                
            /* --------------------------------------------------------------------------------------------- */
            /*              registro del cargo del total del xml si no es sueldo                             */
            /*              si es sueldo va en abono                                                         */
            /* --------------------------------------------------------------------------------------------- */

            if (strTipoAccion = 'NOMI') then
            begin
                EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                        :tipo,
                                        'H',
                                        :rela_socsyst10_columna_cargo,
                                        :rela_socsyst10_columna_abono,
                                        :scexmls11_uuid_importe,
                                        :rela_siccont02_selccion,

                                        :rela_msgpoli01,
                                        :rela_socsyst01x,
                                        :rela_socsyst10_arco_seleccion,
                                        :rela_socsyst10_moneda,
                                        :rela_sicegre01_seleccion,
                                        :rela_sicingr01_seleccion,
                                        :rela_srhmain10_seleccion,
                                        :scexmls11_cambio,
                                        ExtractYear(:scexmls11_uuid_fecha),
                                        ExtractYear(:scexmls11_uuid_fecha),
                                        0;
            end
            else
            begin
                EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                        :tipo,
                                        'P',
                                        :rela_socsyst10_columna_cargo,
                                        :rela_socsyst10_columna_abono,
                                        :scexmls11_uuid_importe,
                                        :rela_siccont02_selccion,

                                        :RELA_MSGPOLI01,
                                        :rela_socsyst01x,
                                        :rela_socsyst10_arco_seleccion,
                                        :rela_socsyst10_moneda,
                                        :rela_sicegre01_seleccion,
                                        :rela_sicingr01_seleccion,
                                        :rela_srhmain10_seleccion,
                                        :scexmls11_cambio,
                                        ExtractYear(:scexmls11_uuid_fecha),
                                        ExtractYear(:scexmls11_uuid_fecha),
                                        0;
            end

            /* --------------------------------------------------------------------------------------------- */
            /* --------------------------------------------------------------------------------------------- */
                
            SELECT socutil02_tbl_ultids.socutil02_ultid
            FROM socutil02_tbl_ultids
            WHERE socutil02_tbl_ultids.socutil02_usuario = current_user
            INTO :rela_msgpoli02_principal;

            if ((strTipoAccion = 'CLIENTE') or (strTipoAccion = 'CREDITOA'))  then
                rela_uuid_tipo_activo = rela_socsyst10_tipo_uuid_cliente;

            if ((strTipoAccion = 'PROVE') or (strTipoAccion = 'CREDITOE'))  then
                rela_uuid_tipo_activo = rela_socsyst10_tipo_uuid_prove;

            if (strTipoAccion = 'NOMI') THEN
                rela_uuid_tipo_activo = rela_socsyst10_tipo_uuid_empleado;

            update msgpoli02_det_polizas set msgpoli02_det_polizas.rela_socsyst10_refe = :rela_uuid_tipo_activo,
                                         msgpoli02_det_polizas.msgpoli02_referencia = :scexmls11_uuid
            where msgpoli02_det_polizas.id_msgpoli02 = :rela_msgpoli02_principal;

            insert into MSGPOLI13_DET_REFERENCIAS(MSGPOLI13_DET_REFERENCIAS.rela_msgpoli02,
                                                       MSGPOLI13_DET_REFERENCIAS.rela_socsyst10,
                                                       MSGPOLI13_DET_REFERENCIAS.msgpoli13_referencia,
                                                       MSGPOLI13_DET_REFERENCIAS.msgpoli13_origen)
            VALUES(:rela_msgpoli02_principal,
                        :rela_uuid_tipo_activo,
                        :scexmls11_uuid,
                        1);

            insert into MSGPOLI13_DET_REFERENCIAS(MSGPOLI13_DET_REFERENCIAS.rela_msgpoli02,
                                                       MSGPOLI13_DET_REFERENCIAS.rela_socsyst10,
                                                       MSGPOLI13_DET_REFERENCIAS.msgpoli13_referencia,
                                                       MSGPOLI13_DET_REFERENCIAS.msgpoli13_origen)
            VALUES(:rela_msgpoli02_principal,
                        :rela_socsyst10_tipo_uuid_rfc,
                        :scexmls11_rfc,
                        1);

            insert into MSGPOLI13_DET_REFERENCIAS(MSGPOLI13_DET_REFERENCIAS.rela_msgpoli02,
                                                       MSGPOLI13_DET_REFERENCIAS.rela_socsyst10,
                                                       MSGPOLI13_DET_REFERENCIAS.msgpoli13_referencia,
                                                       MSGPOLI13_DET_REFERENCIAS.msgpoli13_origen)
            VALUES(:rela_msgpoli02_principal,
                        :rela_socsyst10_tipo_uuid_monto,
                        CAST(:scexmls11_uuid_importe AS VARCHAR(200)),
                        1);

            if (strTipoAccion <> 'NOMI') then
            begin
                /* --------------------------------------------------------------------------------------------- */
                /*                      si hay descuento registro sobre el cargo                                 */
                /* --------------------------------------------------------------------------------------------- */

                if (:scexmls11_descuento <> 0) then
                begin
                   EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                            :tipo,
                                            'D',
                                            :rela_socsyst10_columna_cargo,
                                            :rela_socsyst10_columna_abono,
                                            :scexmls11_descuento,
                                            :rela_siccont02_descuento,

                                            :rela_msgpoli01,
                                            :rela_socsyst01x,
                                            :rela_socsyst10_arco_seleccion,
                                            :rela_socsyst10_moneda,
                                            :rela_sicegre01_seleccion,
                                            :rela_sicingr01_seleccion,
                                            :rela_srhmain10_seleccion,
                                            :scexmls11_cambio,
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            0;
                end

                /* --------------------------------------------------------------------------------------------- */
                /*              busco los impuestos retenidos sobre el cargo                                     */
                /* --------------------------------------------------------------------------------------------- */

                for select
                scexmls21_det_impuestos.rela_siccont02,
                scexmls14_det_impuestos.scexmls14_importe,
                scexmls14_det_impuestos.scexmls14_excluir
                from scexmls14_det_impuestos
                inner join scexmls21_det_impuestos on (scexmls21_det_impuestos.id_scexmls21 = scexmls14_det_impuestos.rela_scexmls21)
                where scexmls14_det_impuestos.rela_scexmls11 = :id_scexmls11
                and scexmls21_det_impuestos.scexmls21_retenido = 1
                into :rela_siccont02_retencion,
                     :importe_retencion,
                     :scexmls14_excluir
                do
                begin
                    if (scexmls14_excluir = 'N') then
                        EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                                    :tipo,
                                                    'R',
                                                    :rela_socsyst10_columna_cargo,
                                                    :rela_socsyst10_columna_abono,
                                                    :importe_retencion,
                                                    :rela_siccont02_retencion,

                                                    :rela_msgpoli01,
                                                    :rela_socsyst01x,
                                                    :rela_socsyst10_arco_seleccion,
                                                    :rela_socsyst10_moneda,
                                                    :rela_sicegre01_seleccion,
                                                    :rela_sicingr01_seleccion,
                                                    :rela_srhmain10_seleccion,
                                                    :scexmls11_cambio,
                                                    ExtractYear(:scexmls11_uuid_fecha),
                                                    ExtractYear(:scexmls11_uuid_fecha),
                                                    0;
                end

                /* --------------------------------------------------------------------------------------------- */
                /*                  busco los impuestos trasladados sobre abono                                  */
                /* --------------------------------------------------------------------------------------------- */

                for select
                scexmls21_det_impuestos.rela_siccont02,
                scexmls14_det_impuestos.scexmls14_importe,
                scexmls14_det_impuestos.scexmls14_excluir
                from scexmls14_det_impuestos
                inner join scexmls21_det_impuestos on (scexmls21_det_impuestos.id_scexmls21 = scexmls14_det_impuestos.rela_scexmls21)
                where scexmls14_det_impuestos.rela_scexmls11 = :id_scexmls11
                and scexmls21_det_impuestos.scexmls21_retenido = 0
                into :rela_siccont02_trasladados,
                     :importe_trasladados,
                     :scexmls14_excluir
                do
                begin
                    if (scexmls14_excluir = 'N') then
                        EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                                    :tipo,
                                                    'T',
                                                    :rela_socsyst10_columna_cargo,
                                                    :rela_socsyst10_columna_abono,
                                                    :importe_trasladados,
                                                    :rela_siccont02_trasladados,

                                                    :rela_msgpoli01,
                                                    :rela_socsyst01x,
                                                    :rela_socsyst10_arco_seleccion,
                                                    :rela_socsyst10_moneda,
                                                    :rela_sicegre01_seleccion,
                                                    :rela_sicingr01_seleccion,
                                                    :rela_srhmain10_seleccion,
                                                    :scexmls11_cambio,
                                                    ExtractYear(:scexmls11_uuid_fecha),
                                                    ExtractYear(:scexmls11_uuid_fecha),
                                                    0;
                end
            end

            /* --------------------------------------------------------------------------------------------- */
            /*                      busco los conceptos para registrar en abono                              */
            /* --------------------------------------------------------------------------------------------- */

            if (strTipoAccion = 'NOMI') then
            begin
                for select
                scexmls25_det_nominas.rela_siccont02,
                scexmls25_det_nominas.scexmls25_tipo,
                scexmls15_det_nominas.scexmls15_importe_gravado,
                scexmls15_det_nominas.scexmls15_importe_exento
                from scexmls15_det_nominas
                inner join scexmls25_det_nominas on (scexmls25_det_nominas.id_scexmls25 = scexmls15_det_nominas.rela_scexmls25)
                where scexmls15_det_nominas.rela_scexmls11 = :id_scexmls11
                into :rela_siccont02_conceptos_nomina,
                     :tipo_nomina,
                     :importe_gravado,
                     :importe_exento
                do
                begin
                    EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                            :tipo_nomina,
                                            'S',
                                            :rela_socsyst10_columna_cargo,
                                            :rela_socsyst10_columna_abono,
                                            :importe_gravado,
                                            :rela_siccont02_conceptos_nomina,

                                            :rela_msgpoli01,
                                            :rela_socsyst01x,
                                            :rela_socsyst10_arco_seleccion,
                                            :rela_socsyst10_moneda,
                                            :rela_sicegre01_seleccion,
                                            :rela_sicingr01_seleccion,
                                            :rela_srhmain10_seleccion,
                                            :importe_exento,
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            0;
                end
            end
            else
            begin
                for select
                scexmls22_det_conceptos.rela_siccont02,
                scexmls13_det_conceptos.scexmls13_importe
                from scexmls13_det_conceptos
                inner join scexmls22_det_conceptos on (scexmls22_det_conceptos.id_scexmls22 = scexmls13_det_conceptos.rela_scexmls22)
                where scexmls13_det_conceptos.rela_scexmls11 = :id_scexmls11
                into :rela_siccont02_conceptos,
                     :importe_conceptos
                do
                begin
                    EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                            :tipo,
                                            'C',
                                            :rela_socsyst10_columna_cargo,
                                            :rela_socsyst10_columna_abono,
                                            :importe_conceptos,
                                            :rela_siccont02_conceptos,

                                            :rela_msgpoli01,
                                            :rela_socsyst01x,
                                            :rela_socsyst10_arco_seleccion,
                                            :rela_socsyst10_moneda,
                                            :rela_sicegre01_seleccion,
                                            :rela_sicingr01_seleccion,
                                            :rela_srhmain10_seleccion,
                                            :scexmls11_cambio,
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            0;
                end
            end
                
            /* --------------------------------------------------------------------------------------------- */
            /*                      verifico que el cargo y abono sean iguales                               */
            /*      si es mas/menos Variable Parametros peso hago un asiento con cuenta de aguste si         */
            /*                                  el abono > cargo                                             */
            /*      cuenta de ajuste de egresos. Si el cargo > abono va en ajuste de ingresos                */
            /* --------------------------------------------------------------------------------------------- */

            if (:scexmls11_diferencia <> 0) then
            begin
                EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                            :tipo,
                                            'E',
                                            :rela_socsyst10_columna_cargo,
                                            :rela_socsyst10_columna_abono,
                                            :scexmls11_diferencia,
                                            :rela_siccont02_ajuste_activo,

                                            :rela_msgpoli01,
                                            :rela_socsyst01x,
                                            :rela_socsyst10_arco_seleccion,
                                            :rela_socsyst10_moneda,
                                            :rela_sicegre01_seleccion,
                                            :rela_sicingr01_seleccion,
                                            :rela_srhmain10_seleccion,
                                            :scexmls11_cambio,
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            :scexmls20_ajuste_monto;
            end

            status = 'Corregido sin diferencia';

            select
            sum(msgpoli02_det_polizas.msgpoli02_debe),
            sum(msgpoli02_det_polizas.msgpoli02_haber)
            from msgpoli02_det_polizas
            where msgpoli02_det_polizas.rela_msgpoli01 = :rela_msgpoli01
            into :msgpoli02_debe,
                 :msgpoli02_haber;

            scexmls11_diferencia = cast((msgpoli02_debe - msgpoli02_haber) as numeric(15,4));

            if (scexmls11_diferencia <> 0) then
            begin
                diferencia_tmp = scexmls11_diferencia;

                if (diferencia_tmp < 0) then
                    diferencia_tmp = scexmls11_diferencia * -1;

                if (diferencia_tmp < scexmls20_ajuste_monto) then
                begin
                    status = 'Corregido con ajuste en la Poliza diferente al XML';
                    EXECUTE PROCEDURE PRD_SCEXMLS11_MSGPOLI02
                                            :tipo,
                                            'E',
                                            :rela_socsyst10_columna_cargo,
                                            :rela_socsyst10_columna_abono,
                                            :scexmls11_diferencia,
                                            :rela_siccont02_ajuste_activo,

                                            :rela_msgpoli01,
                                            :rela_socsyst01x,
                                            :rela_socsyst10_arco_seleccion,
                                            :rela_socsyst10_moneda,
                                            :rela_sicegre01_seleccion,
                                            :rela_sicingr01_seleccion,
                                            :rela_srhmain10_seleccion,
                                            :scexmls11_cambio,
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            ExtractYear(:scexmls11_uuid_fecha),
                                            :scexmls20_ajuste_monto;
                end
                else
                    status = 'El Ajuste Supera el Monto asociado en Parametros';

            end

            /* ------------------------------------------------------------------------------------------------------------ */
            /* ------------------------------------------------------------------------------------------------------------ */

            SUSPEND;
        end

        if (((diferencia_tmp <> 0) or (msgpoli02_debe = 0 and msgpoli02_haber = 0)) and (existe is not null)) then
        begin
            scexmls11_diferencia = diferencia_tmp;
            suspend;
        end
    end
end
SOC$DB_TRIGGERS                

DECLARE VARIABLE SQLACTIVE VARCHAR(500);
begin
  FOR SELECT RDB$TRIGGERS.rdb$trigger_name
  FROM RDB$TRIGGERS
  WHERE RDB$TRIGGERS.rdb$trigger_inactive = 1
  INTO :trigger_name
  DO
  BEGIN
        SQLACTIVE = 'ALTER TRIGGER ' || trigger_name || 'ACTIVE';
        EXECUTE STATEMENT :SQLACTIVE;
        suspend;
  END
end
VW_SCEXMLS10_FIND_UUID         

DECLARE VARIABLE RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE RELA_SOCWFLO01 BIGINT;
begin
    select first 1
    scexmls10_cab_migracion.rela_socwflo01,
    scexmls11_det_migracion.rela_socsyst10,
    scexmls11_det_migracion.scexmls11_fapl
    from scexmls11_det_migracion
    inner join scexmls10_cab_migracion ON (scexmls10_cab_migracion.id_scexmls10 = scexmls11_det_migracion.rela_scexmls10)
    INNER JOIN socsyst10_tbl_listaestados on (socsyst10_tbl_listaestados.id_socsyst10 = scexmls11_det_migracion.rela_socsyst10)
    where scexmls11_det_migracion.scexmls11_uuid = :uuid
    and socsyst10_tbl_listaestados.socsyst10_codigo <> 'ERRORES'
    into :rela_socwflo01,
         :rela_socsyst10,
         :SCEXMLS11_FAPL;

    if (SCEXMLS11_FAPL is not null) then
    begin
        Select socsyst10_tbl_listaestados.socsyst10_filtro_des
        from socsyst10_tbl_listaestados
        where socsyst10_tbl_listaestados.id_socsyst10 = :rela_socsyst10
        into :socsyst10_filtro_des;

        Select socwflo01_arb_organigrama.socwflo01_descri
        from socwflo01_arb_organigrama
        where socwflo01_arb_organigrama.id_socwflo01 = :rela_socwflo01
        into :UNIDAD_ORGANIZA;
        suspend;
    end
end
PRD_SRHNOMI03CFDI              

DECLARE VARIABLE A TIMESTAMP;
begin
    if (modo = 'A') then
    BEGIN
        FOR SELECT
        SRHMAIN11_DET_INGRESOS.RELA_SICCONT02,
        SRHMAIN11_DET_INGRESOS.ID_SRHMAIN11,
        SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI
        FROM SICCONT02_ARB_PLANCTA_EMP SICCONT02_ARB_PLANCTA_EMP1
        INNER JOIN SRHMAIN11_DET_INGRESOS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = SRHMAIN11_DET_INGRESOS.RELA_SICCONT02)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN11_DET_INGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        where SICCONT72_MOV_EMPRESAS.rela_socsyst01 = :RELA_SOCSYST01
        AND SRHMAIN11_DET_INGRESOS.rela_srhmain10 = :id_srhmain10
        AND TRIM(SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO) <> ''
        INTO :RELA_SICCONT02,
             :RELA_SRHMAIN11,
             :SICCONT72_CODIGO,
             :siccont02_codext,
             :SICCONT02_DESCRI
        do
        BEGIN
            select
            max(SRHNOMI03_DET_RETRIBUCIONES.id_srhnomi03),
            max(SRHNOMI03_DET_RETRIBUCIONES.srhnomi03_fapl)
            from SRHNOMI03_DET_RETRIBUCIONES
            where SRHNOMI03_DET_RETRIBUCIONES.rela_srhmain11 = :RELA_SRHMAIN11
            into :id_srhnomi03,
                 :a;

            srhnomi03_importe = 0;
            select
            srhnomi03_det_retribuciones.srhnomi03_importe
            from srhnomi03_det_retribuciones
            where srhnomi03_det_retribuciones.id_srhnomi03 = :id_srhnomi03
            into :srhnomi03_importe;

            if (srhnomi03_importe is null) then srhnomi03_importe = 0.00;

            SELECT srhmain11_det_ingresos.rela_srhmain10 * (-1)
            FROM srhmain11_det_ingresos
            WHERE srhmain11_det_ingresos.id_srhmain11 = :RELA_SRHMAIN11
            into :rela_srhnomi02;

            SRHNOMI03_FAPL = current_timestamp;
            SRHNOMI03_GRAVADO = 1;

            if (upper(SICCONT02_DESCRI) = 'exento') then
                SRHNOMI03_GRAVADO = 0;

            suspend;
        END
    END
    else
    begin
        for select
        SICCONT72_MOV_EMPRESAS.rela_socsyst01,
        SRHMAIN11_DET_INGRESOS.RELA_SICCONT02,
        SRHMAIN11_DET_INGRESOS.ID_SRHMAIN11,
        SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
        SRHNOMI03_DET_RETRIBUCIONES.id_srhnomi03,
        SRHNOMI03_DET_RETRIBUCIONES.rela_srhnomi02,
        SRHNOMI03_DET_RETRIBUCIONES.srhnomi03_gravado,
        SRHNOMI03_DET_RETRIBUCIONES.srhnomi03_importe,
        SRHNOMI03_DET_RETRIBUCIONES.srhnomi03_fapl
        FROM SRHMAIN11_DET_INGRESOS
        INNER JOIN SRHNOMI03_DET_RETRIBUCIONES ON (SRHMAIN11_DET_INGRESOS.ID_SRHMAIN11 = SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHMAIN11)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN11_DET_INGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SRHMAIN11_DET_INGRESOS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
        where SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHNOMI02 = :id_srhnomi02
        into :rela_socsyst01,
             :RELA_SICCONT02,
             :RELA_SRHMAIN11,
             :SICCONT72_CODIGO,
             :siccont02_codext,
             :SICCONT02_DESCRI,
             :id_srhnomi03,
             :rela_srhnomi02,
             :srhnomi03_gravado,
             :srhnomi03_importe,
             :srhnomi03_fapl
        do
        begin
            suspend;
        end
    end
end
PRD_SRHNOMI04CFDI              

DECLARE VARIABLE A TIMESTAMP;
begin
    if (modo = 'A') then
    BEGIN
        FOR SELECT
        SRHMAIN12_DET_EGRESOS.RELA_SICCONT02,
        SRHMAIN12_DET_EGRESOS.ID_SRHMAIN12,
        SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI
        FROM SICCONT02_ARB_PLANCTA_EMP SICCONT02_ARB_PLANCTA_EMP1
        INNER JOIN SRHMAIN12_DET_EGRESOS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = SRHMAIN12_DET_EGRESOS.RELA_SICCONT02)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN12_DET_EGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        where SICCONT72_MOV_EMPRESAS.rela_socsyst01 = :rela_socsyst01
        and SRHMAIN12_DET_EGRESOS.rela_srhmain10 = :id_srhmain10
        AND TRIM(SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO) <> ''
        INTO :RELA_SICCONT02,
             :RELA_SRHMAIN12,
             :SICCONT72_CODIGO,
             :siccont02_codext,
             :SICCONT02_DESCRI
        do
        BEGIN
            select
            max(SRHNOMI04_DET_RETENCIONES.id_srhnomi04),
            max(SRHNOMI04_DET_RETENCIONES.srhnomi04_fapl)
            from SRHNOMI04_DET_RETENCIONES
            where SRHNOMI04_DET_RETENCIONES.rela_srhmain12 = :RELA_SRHMAIN12
            into :id_srhnomi04,
                 :a;

            srhnomi04_importe = 0;
            select
            SRHNOMI04_DET_RETENCIONES.srhnomi04_importe
            from SRHNOMI04_DET_RETENCIONES
            where SRHNOMI04_DET_RETENCIONES.id_srhnomi04 = :id_srhnomi04
            into :srhnomi04_importe;

            if (srhnomi04_importe is null) then srhnomi04_importe = 0.00;

            SELECT srhmain12_det_egresos.rela_srhmain10 * (-1)
            FROM srhmain12_det_egresos
            WHERE srhmain12_det_egresos.id_srhmain12 = :RELA_SRHMAIN12
            into :rela_srhnomi02;

            SRHNOMI04_FAPL = current_timestamp;
            SRHNOMI04_GRAVADO = 1;

            if (upper(SICCONT02_DESCRI) = 'exento') then
                SRHNOMI04_GRAVADO = 0;
            suspend;
        END
    END
    else
    begin
        for select
        SICCONT72_MOV_EMPRESAS.rela_socsyst01,
        SRHMAIN12_DET_EGRESOS.RELA_SICCONT02,
        SRHMAIN12_DET_EGRESOS.ID_SRHMAIN12,
        SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
        SRHNOMI04_DET_RETENCIONES.id_srhnomi04,
        SRHNOMI04_DET_RETENCIONES.rela_srhnomi02,
        SRHNOMI04_DET_RETENCIONES.srhnomi04_gravado,
        SRHNOMI04_DET_RETENCIONES.srhnomi04_importe,
        SRHNOMI04_DET_RETENCIONES.srhnomi04_fapl
        FROM SRHMAIN12_DET_EGRESOS
        INNER JOIN SRHNOMI04_DET_RETENCIONES ON (SRHMAIN12_DET_EGRESOS.ID_SRHMAIN12 = SRHNOMI04_DET_RETENCIONES.RELA_SRHMAIN12)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN12_DET_EGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SRHMAIN12_DET_EGRESOS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
        where SRHNOMI04_DET_RETENCIONES.RELA_SRHNOMI02 = :id_srhnomi02
        into :rela_socsyst01,
             :RELA_SICCONT02,
             :RELA_SRHMAIN12,
             :SICCONT72_CODIGO,
             :siccont02_codext,
             :SICCONT02_DESCRI,
             :id_srhnomi04,
             :rela_srhnomi02,
             :SRHNOMI04_GRAVADO,
             :srhnomi04_importe,
             :srhnomi04_fapl
        do
        begin
            suspend;
        end
    end
end
PRD_SRHNOMI05CFDI              

DECLARE VARIABLE A TIMESTAMP;
begin
    if (modo = 'A') then
    BEGIN
        FOR SELECT
        SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT02,
        SRHMAIN13_DET_INCAPACIDADES.ID_SRHMAIN13,
        SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI
        FROM SICCONT02_ARB_PLANCTA_EMP SICCONT02_ARB_PLANCTA_EMP1
        INNER JOIN SRHMAIN13_DET_INCAPACIDADES ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT02)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        where SICCONT72_MOV_EMPRESAS.rela_socsyst01 = :rela_socsyst01
        and SRHMAIN13_DET_INCAPACIDADES.rela_srhmain10 = :id_srhmain10
        AND TRIM(SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO) <> ''
        INTO :RELA_SICCONT02,
             :RELA_SRHMAIN13,
             :SICCONT72_CODIGO,
             :siccont02_codext,
             :SICCONT02_DESCRI
        do
        BEGIN
            select
            max(SRHNOMI05_DET_INCAPACIDADES.id_srhnomi05),
            max(SRHNOMI05_DET_INCAPACIDADES.srhnomi05_fapl)
            from SRHNOMI05_DET_INCAPACIDADES
            where SRHNOMI05_DET_INCAPACIDADES.rela_SRHMAIN13 = :RELA_SRHMAIN13
            into :id_srhnomi05,
                 :a;

            srhnomi05_importe = 0;
            SRHNOMI05_DIAS = 0;

            select
            SRHNOMI05_DET_INCAPACIDADES.srhnomi05_importe,
            SRHNOMI05_DET_INCAPACIDADES.srhnomi05_dias
            from SRHNOMI05_DET_INCAPACIDADES
            where SRHNOMI05_DET_INCAPACIDADES.id_srhnomi05 = :id_srhnomi05
            into :srhnomi05_importe,
                 :SRHNOMI05_DIAS;

            if (srhnomi05_importe is null) then srhnomi05_importe = 0.00;

            SELECT srhmain13_det_incapacidades.rela_srhmain10 * (-1)
            FROM srhmain13_det_incapacidades
            WHERE srhmain13_det_incapacidades.id_srhmain13 = :RELA_SRHMAIN13
            into :rela_srhnomi02;


            SRHNOMI05_FAPL = current_timestamp;

            suspend;
        END
    END
    else
    begin
        for select
        SICCONT72_MOV_EMPRESAS.rela_socsyst01,
        SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT02,
        SRHMAIN13_DET_INCAPACIDADES.ID_SRHMAIN13,
        SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
        SRHNOMI05_DET_INCAPACIDADES.id_srhnomi05,
        SRHNOMI05_DET_INCAPACIDADES.rela_srhnomi02,
        SRHNOMI05_DET_INCAPACIDADES.srhnomi05_dias,
        SRHNOMI05_DET_INCAPACIDADES.srhnomi05_importe,
        SRHNOMI05_DET_INCAPACIDADES.srhnomi05_fapl
        FROM SRHMAIN13_DET_INCAPACIDADES
        INNER JOIN SRHNOMI05_DET_INCAPACIDADES ON (SRHMAIN13_DET_INCAPACIDADES.ID_SRHMAIN13 = SRHNOMI05_DET_INCAPACIDADES.RELA_SRHMAIN13)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SRHMAIN13_DET_INCAPACIDADES.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
        where SRHNOMI05_DET_INCAPACIDADES.RELA_SRHNOMI02 = :id_srhnomi02
        into :rela_socsyst01,
             :RELA_SICCONT02,
             :RELA_SRHMAIN13,
             :SICCONT72_CODIGO,
             :siccont02_codext,
             :SICCONT02_DESCRI,
             :id_srhnomi05,
             :rela_srhnomi02,
             :SRHNOMI05_DIAS,
             :srhnomi05_importe,
             :srhnomi05_fapl
        do
        begin
            suspend;
        end
    end
end
PRD_SRHNOMI06CFDI              

DECLARE VARIABLE A TIMESTAMP;
begin
    if (modo = 'A') then
    BEGIN
        FOR SELECT
        SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT02,
        SRHMAIN14_DET_HORASEXTRAS.ID_SRHMAIN14,
        SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI
        FROM SICCONT02_ARB_PLANCTA_EMP SICCONT02_ARB_PLANCTA_EMP1
        INNER JOIN SRHMAIN14_DET_HORASEXTRAS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT02)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        where SICCONT72_MOV_EMPRESAS.rela_socsyst01 = :rela_socsyst01
        and SRHMAIN14_DET_HORASEXTRAS.rela_srhmain10 = :id_srhmain10
        AND TRIM(SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO) <> ''
        INTO :RELA_SICCONT02,
             :RELA_SRHMAIN14,
             :SICCONT72_CODIGO,
             :SICCONT02_CODEXT,
             :SICCONT02_DESCRI
        do
        BEGIN
            select
            max(SRHNOMI06_DET_HORASEXTRAS.id_srhnomi06),
            max(SRHNOMI06_DET_HORASEXTRAS.srhnomi06_fapl)
            from SRHNOMI06_DET_HORASEXTRAS
            where SRHNOMI06_DET_HORASEXTRAS.rela_SRHMAIN14 = :RELA_SRHMAIN14
            into :id_srhnomi06,
                 :a;

            srhnomi06_importe = 0;
            srhnomi06_dias = 0;
            srhnomi06_horas = 0;

            select
            SRHNOMI06_DET_HORASEXTRAS.srhnomi06_importe,
            SRHNOMI06_DET_HORASEXTRAS.srhnomi06_dias,
            SRHNOMI06_DET_HORASEXTRAS.srhnomi06_horas
            from SRHNOMI06_DET_HORASEXTRAS
            where SRHNOMI06_DET_HORASEXTRAS.id_srhnomi06 = :id_srhnomi06
            into :srhnomi06_importe,
                 :srhnomi06_dias,
                 :srhnomi06_horas;

            if (srhnomi06_importe is null) then srhnomi06_importe = 0.00;

            SELECT srhmain14_det_horasextras.rela_srhmain10 * (-1)
            FROM srhmain14_det_horasextras
            WHERE srhmain14_det_horasextras.id_srhmain14 = :RELA_SRHMAIN14
            into :rela_srhnomi02;

            SRHNOMI06_FAPL = current_timestamp;
            suspend;
        END
    END
    else
    begin
        for select
        SICCONT72_MOV_EMPRESAS.rela_socsyst01,
        SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT02,
        SRHMAIN14_DET_HORASEXTRAS.ID_SRHMAIN14,
        SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
        SRHNOMI06_DET_HORASEXTRAS.id_srhnomi06,
        SRHNOMI06_DET_HORASEXTRAS.rela_srhnomi02,
        SRHNOMI06_DET_HORASEXTRAS.srhnomi06_dias,
        SRHNOMI06_DET_HORASEXTRAS.srhnomi06_horas,
        SRHNOMI06_DET_HORASEXTRAS.srhnomi06_importe,
        SRHNOMI06_DET_HORASEXTRAS.srhnomi06_fapl
        FROM SRHMAIN14_DET_HORASEXTRAS
        INNER JOIN SRHNOMI06_DET_HORASEXTRAS ON (SRHMAIN14_DET_HORASEXTRAS.ID_SRHMAIN14 = SRHNOMI06_DET_HORASEXTRAS.RELA_SRHMAIN14)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SRHMAIN14_DET_HORASEXTRAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
        where SRHNOMI06_DET_HORASEXTRAS.RELA_SRHNOMI02 = :id_srhnomi02
        into :rela_socsyst01,
             :RELA_SICCONT02,
             :RELA_SRHMAIN14,
             :SICCONT72_CODIGO,
             :SICCONT02_CODEXT,
             :SICCONT02_DESCRI,
             :id_srhnomi06,
             :rela_srhnomi02,
             :srhnomi06_dias,
             :srhnomi06_horas,
             :srhnomi06_importe,
             :srhnomi06_fapl
        do
        begin
            suspend;
        end
    end
end
REP_PYMINGR01_FACTURA          

DECLARE VARIABLE CODIGO VARCHAR(10);
DECLARE VARIABLE RELA_SOCUSUA42 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
DECLARE VARIABLE SOCUSUA50_DESCRI VARCHAR(200);
DECLARE VARIABLE SOCSYST06_NIVEL INTEGER;
DECLARE VARIABLE EMISOR_PAIS VARCHAR(200);
DECLARE VARIABLE EMISOR_ESTADO VARCHAR(200);
DECLARE VARIABLE EMISOR_MUNICIPIO VARCHAR(200);
BEGIN
   /*********** DATOS DE LA EMPRESA ***********/

   SELECT
      CBO_CLIENTES_EMPRESAS_PYMES.SOCSYST01_DESCRI,
      CBO_CLIENTES_EMPRESAS_PYMES.RELA_SOCUSUA02
   FROM CBO_CLIENTES_EMPRESAS_PYMES
   WHERE CBO_CLIENTES_EMPRESAS_PYMES.ID_SOCSYST01 = :PARAM_EMPRESA
   INTO
      :EMPRESA,
      :RELA_SOCUSUA02;

   SELECT SNVL(SOCSYST08_DET_REGFISCALES.SOCSYST08_REGFISCAL, '')
   FROM SOCSYST08_DET_REGFISCALES
   WHERE SOCSYST08_DET_REGFISCALES.RELA_SOCSYST01 = :PARAM_EMPRESA
   INTO :REGFISCAL;

   /*********** DATOS DEL CLIENTE ***********/

   SELECT B_SUBSTR(SICINGR01_CAB_CLIENTES.SICINGR01_NOTAS,6,10)
   FROM SICINGR01_CAB_CLIENTES
   WHERE SICINGR01_CAB_CLIENTES.ID_SICINGR01 = :PARAM_CLIENTE
   INTO :CLIENTE_REF;

   SELECT
       PRD_SICINGR01.SOCUSUA02_ENTIDAD,
       PRD_SICINGR01.SOCUSUA02_USUARIO,
       PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC,
       PRD_SICINGR01.SOCUSUA41_DOMICILIO,
       PRD_SICINGR01.SOCUSUA41_CALLE,
       PRD_SICINGR01.SOCUSUA41_NRODOMICILIO,
       PRD_SICINGR01.SOCUSUA41_COLONIA,
       PRD_SICINGR01.SOCUSUA41_DEPTO,
       PRD_SICINGR01.SOCUSUA41_PISO,
       PRD_SICINGR01.SOCUSUA41_TELEFONO,
       PRD_SICINGR01.SOCUSUA41_CP,
       PRD_SICINGR01.SOCUSUA50_CIUDAD
   FROM PRD_SICINGR01(:PARAM_CLIENTE)
   INTO
       :CLIENTE,
       :USUARIO,
       :RFC,
       :DIRECCION,
       :CALLE,
       :NRODOMICILIO,
       :COLONIA,
       :DEPTO,
       :PISO,
       :TELEFONO,
       :CP,
       :CIUDAD;

   /*********** DATOS ORIGEN ***********/

   SELECT
        PRD_PYMINGR01_ORIGENDESTINO.ENTIDAD,
        PRD_PYMINGR01_ORIGENDESTINO.RFC,
        PRD_PYMINGR01_ORIGENDESTINO.DIRECCION,
        PRD_PYMINGR01_ORIGENDESTINO.COLONIA,
        PRD_PYMINGR01_ORIGENDESTINO.TELEFONO,
        PRD_PYMINGR01_ORIGENDESTINO.CP,
        PRD_PYMINGR01_ORIGENDESTINO.CIUDAD
   FROM PRD_PYMINGR01_ORIGENDESTINO(:PARAM_FACTURA,'ORIGEN')
   INTO
       :ORIGEN,
       :RFC_ORIGEN,
       :DIRECCION_ORIGEN,
       :COLONIA_ORIGEN,
       :TELEFONO_ORIGEN,
       :CP_ORIGEN,
       :CIUDAD_ORIGEN;

   /*********** DATOS DESTINO ***********/

   SELECT
        PRD_PYMINGR01_ORIGENDESTINO.ENTIDAD,
        PRD_PYMINGR01_ORIGENDESTINO.RFC,
        PRD_PYMINGR01_ORIGENDESTINO.DIRECCION,
        PRD_PYMINGR01_ORIGENDESTINO.COLONIA,
        PRD_PYMINGR01_ORIGENDESTINO.TELEFONO,
        PRD_PYMINGR01_ORIGENDESTINO.CP,
        PRD_PYMINGR01_ORIGENDESTINO.CIUDAD
   FROM PRD_PYMINGR01_ORIGENDESTINO(:PARAM_FACTURA,'DESTINO')
   INTO
       :DESTINO,
       :RFC_DESTINO,
       :DIRECCION_DESTINO,
       :COLONIA_DESTINO,
       :TELEFONO_DESTINO,
       :CP_DESTINO,
       :CIUDAD_DESTINO;

   /*********** DATOS DE LA FACTURA ***********/

   SELECT
       PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
       PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_CONCEPTO,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
       PYMINGR01_cAB_FACTURAS.PYMINGR01_FVTO,
       EXTRACTDAY(PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC),
       EXTRACTMONTH(PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC),
       EXTRACTYEAR(PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC),
       DAYSBETWEEN(PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,PYMINGR01_cAB_FACTURAS.PYMINGR01_FVTO),
       PYMINGR01_CAB_FACTURAS.PYMINGR01_NOTAS,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_DESCUENTOS,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
       PYMINGR01_CAB_FACTURAS.PYMINGR01_EXTEMPORANEO,
       CODIGO.SOCSYST10_CODIGO,
       MONEDA.SOCSYST10_CODIGO,
       SICINGR01_CAB_CLIENTES.SICINGR01_DIAS_CREDITO,
       (SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
        FROM SOCSYST10_TBL_LISTAESTADOS
        WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_TIPOPAGO),
       (SELECT SICINGR03_DET_CUENTAS.SICINGR03_NROCTA
        FROM SICINGR03_DET_CUENTAS
        WHERE SICINGR03_DET_CUENTAS.ID_SICINGR03 = PYMINGR01_CAB_FACTURAS.RELA_SICINGR03_NROCTA),
       (SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
        FROM SICINGR03_DET_CUENTAS
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICINGR03_DET_CUENTAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        WHERE SICINGR03_DET_CUENTAS.ID_SICINGR03 = PYMINGR01_CAB_FACTURAS.RELA_SICINGR03_NROCTA),
       (SELECT CBO_FORMADEPAGO.SOCSYST10_FILTRO_DES
        FROM CBO_FORMADEPAGO
        WHERE CBO_FORMADEPAGO.ID_SOCSYST10 = PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_FORMAPAGO),
       (SELECT CBO_CONDICIONESDEPAGO.SOCSYST10_FILTRO_DES
        FROM CBO_CONDICIONESDEPAGO
        WHERE CBO_CONDICIONESDEPAGO.ID_SOCSYST10 = PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_CONDICIONES)
   FROM PYMINGR01_CAB_FACTURAS
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS CODIGO ON (CODIGO.ID_SOCSYST10 = PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10)
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
   INNER JOIN SICINGR01_CAB_CLIENTES ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = SICINGR01_CAB_CLIENTES.ID_SICINGR01)
   WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :PARAM_FACTURA
   INTO
       :RELA_MSGPOLI01,
       :RELA_SOCWFLO01,
       :CONCEPTO,
       :DOCNRO,
       :FECHA,
       :FECHA_VTO,
       :DIA,
       :MES,
       :ANO,
       :DIAS_VENCIMIENTO,
       :NOTAS,
       :SUBTOTAL,
       :DESCUENTOS,
       :IMPUESTOS,
       :TOTAL,
       :TIPOCAMBIO,
       :PAGO_EXT,
       :CODIGO,
       :CODIGO_MONEDA,
       :DIAS_CREDITO,
       :TIPOPAGO,
       :NROCTA,
       :BANCO,
       :FORMAPAGO,
       :CONDICIONES;

   SELECT SICCONT04_DET_COTIZACION.SICCONT04_VENTA
   FROM SICCONT03_CAB_COTIZACION
   INNER JOIN SICCONT04_DET_COTIZACION ON (SICCONT03_CAB_COTIZACION.ID_SICCONT03 = SICCONT04_DET_COTIZACION.RELA_SICCONT03)
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT04_DET_COTIZACION.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
   WHERE SICCONT03_CAB_COTIZACION.RELA_SOCSYST01 = :PARAM_EMPRESA
     AND SICCONT03_CAB_COTIZACION.SICCONT03_FECHA = :FECHA
     AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'USD'
   INTO :TIPOCAMBIOFIJO;

   IF (:TIPOCAMBIOFIJO IS NULL) THEN
     TIPOCAMBIOFIJO = 1;

   IF (:DIAS_CREDITO != 0) THEN
     BEGIN
       DIAS_VENCIMIENTO = DAYSBETWEEN(FECHA, FECHA + DIAS_CREDITO);
       FECHA_VTO = FECHA + DIAS_CREDITO;
     END

   IF (:CODIGO = 'IVA10') THEN
     PORCENTAJE = 11;
   ELSE
     IF (:CODIGO = 'IVA15') THEN
       PORCENTAJE = 16;
     ELSE
        IF (:CODIGO = 'NODEDU') THEN
          PORCENTAJE = 0;

   /* DATOS PRINCIPALES DE LA MATRIZ Y SUCURSAL */

   SELECT
       PRD_DATOS_ENTIDADES.CALLE,
       PRD_DATOS_ENTIDADES.NRO,
       PRD_DATOS_ENTIDADES.PISO,
       PRD_DATOS_ENTIDADES.NROINT,
       PRD_DATOS_ENTIDADES.CP,
       PRD_DATOS_ENTIDADES.TELEFONOS,
       PRD_DATOS_ENTIDADES.CELULAR,
       PRD_DATOS_ENTIDADES.FAX,
       PRD_DATOS_ENTIDADES.EMAIL,
       PRD_DATOS_ENTIDADES.LOCALIDAD,
       PRD_DATOS_ENTIDADES.ESTADO,
       PRD_DATOS_ENTIDADES.CIUDAD,
       PRD_DATOS_ENTIDADES.PAIS,
       PRD_DATOS_ENTIDADES.DIRECCION,
       PRD_DATOS_ENTIDADES.LUGAR
   FROM PRD_DATOS_ENTIDADES(:RELA_SOCUSUA02, -1)
   INTO
       :CALLE_MATRIZ,
       :NRO_MATRIZ,
       :PISO_MATRIZ,
       :NROINT_MATRIZ,
       :CP_MATRIZ,
       :TELEFONOS_MATRIZ,
       :CELULAR_MATRIZ,
       :FAX_MATRIZ,
       :EMAIL_MATRIZ,
       :LOCALIDAD_MATRIZ,
       :ESTADO_MATRIZ,
       :CIUDAD_MATRIZ,
       :PAIS_MATRIZ,
       :DIRECCION_MATRIZ,
       :LUGAR_MATRIZ;

   SELECT
       PRD_DATOS_ENTIDADES.CALLE,
       PRD_DATOS_ENTIDADES.NRO,
       PRD_DATOS_ENTIDADES.PISO,
       PRD_DATOS_ENTIDADES.NROINT,
       PRD_DATOS_ENTIDADES.CP,
       PRD_DATOS_ENTIDADES.TELEFONOS,
       PRD_DATOS_ENTIDADES.CELULAR,
       PRD_DATOS_ENTIDADES.FAX,
       PRD_DATOS_ENTIDADES.EMAIL,
       PRD_DATOS_ENTIDADES.LOCALIDAD,
       PRD_DATOS_ENTIDADES.ESTADO,
       PRD_DATOS_ENTIDADES.CIUDAD,
       PRD_DATOS_ENTIDADES.PAIS,
       PRD_DATOS_ENTIDADES.DIRECCION,
       PRD_DATOS_ENTIDADES.LUGAR
   FROM PRD_DATOS_ENTIDADES(:RELA_SOCUSUA02, :RELA_SOCWFLO01)
   INTO
       :CALLE_SUCURSAL,
       :NRO_SUCURSAL,
       :PISO_SUCURSAL,
       :NROINT_SUCURSAL,
       :CP_SUCURSAL,
       :TELEFONOS_SUCURSAL,
       :CELULAR_SUCURSAL,
       :FAX_SUCURSAL,
       :EMAIL_SUCURSAL,
       :LOCALIDAD_SUCURSAL,
       :ESTADO_SUCURSAL,
       :CIUDAD_SUCURSAL,
       :PAIS_SUCURSAL,
       :DIRECCION_SUCURSAL,
       :LUGAR_SUCURSAL;

   SELECT
       SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
       STRREPEAT('0', 8 - STRLEN(INTTOSTR(:PARAM_EMPRESA,:PARAM_EMPRESA))),
       STRREPEAT('$', 12 - (SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD + STRLEN(SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'')))),
       SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO,''),
       SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_FONDO,''),
       EXTRACTDAY(SOCSYST20_DET_FACTELECT.SOCSYST20_FECHA_APROBA) || '/' || EXTRACTMONTH(SOCSYST20_DET_FACTELECT.SOCSYST20_FECHA_APROBA) || '/' || EXTRACTYEAR(SOCSYST20_DET_FACTELECT.SOCSYST20_FECHA_APROBA)
   FROM SOCSYST21_MOV_CONTADORES_EMP
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
   INNER JOIN SOCSYST20_DET_FACTELECT ON (SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21 = SOCSYST20_DET_FACTELECT.RELA_SOCSYST21)
   INNER JOIN SOCSYST01_CAB_CLIENTES ON (SOCSYST21_MOV_CONTADORES_EMP.rela_socsyst01 = SOCSYST01_CAB_CLIENTES.id_socsyst01)
   WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :PARAM_EMPRESA
     AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :RELA_SOCWFLO01
     AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'CFD'
   INTO :ID_SOCSYST21,
        :FORMATO_EMPRESA,
        :FORMATO,
        :LOGO,
        :FONDO,
        :FECHA_APROBA;

   /*********** DATOS DE LA FACTURA ELECTRONICA ***********/

   IF (:ID_SOCSYST21 IS NOT NULL AND :PARAM_PREVIEW = 0) THEN
     BEGIN
       SELECT
           PRD_CFD.ULTID_FOLIO,
           INTTOSTR(PRD_CFD.SOCSYST20_ANO_APROBA,PRD_CFD.SOCSYST20_ANO_APROBA) || INTTOSTR(PRD_CFD.SOCSYST20_NRO_APROBA,PRD_CFD.SOCSYST20_NRO_APROBA),
           PRD_CFD.SOCSYST01_NROCERTIFICADO,
           PRD_CFD.SOCSYST20_FOLIO_SERIE,
           PRD_CFD.SOCSYST20_FOLIO_DESDE,
           PRD_CFD.SOCSYST20_FOLIO_HASTA,
           PRD_CFD.FOLIO_FECHA,
           PRD_CFD.EMISOR_RFC,
           PRD_CFD.EMISOR_CURP,
           PRD_CFD.EMISOR_TIPO,
           PRD_CFD.EMISOR_CALLE || ' No. ' || SNVL(PRD_CFD.EMISOR_NRO_EXTERIOR,''),
           SNVL(PRD_CFD.EMISOR_NRO_INTERIOR,''),
           SNVL(PRD_CFD.EMISOR_PISO,''),
           SNVL(PRD_CFD.EMISOR_COLONIA,''),
           PRD_CFD.EMISOR_TELEFONOS,
           PRD_CFD.EMISOR_CELULAR,
           PRD_CFD.EMISOR_FAX,
           PRD_CFD.EMISOR_CORREO,
           PRD_CFD.EMISOR_CP,
           PRD_CFD.EMISOR_MUNICIPIO || ', ' || PRD_CFD.EMISOR_ESTADO || ', ' || PRD_CFD.EMISOR_PAIS
       FROM PRD_CFD(0,:PARAM_FACTURA,:RELA_MSGPOLI01)
       INTO
           :ULTID_FOLIO,
           :ANOYNUMERO,
           :NROCERTIFICADO,
           :FOLIO_SERIE,
           :FOLIO_DESDE,
           :FOLIO_HASTA,
           :FOLIO_FECHA,
           :EMISOR_RFC,
           :EMISOR_CURP,
           :EMISOR_TIPO,
           :EMISOR_CALLE,
           :EMISOR_NROINT,
           :EMISOR_PISO,
           :EMISOR_LOCALIDAD,
           :EMISOR_TELEFONOS,
           :EMISOR_CELULAR,
           :EMISOR_FAX,
           :EMISOR_CORREO,
           :EMISOR_CP,
           :EMISOR_CIUDAD;

       EMISOR_DIRECCION = EMISOR_CALLE;

       IF (:EMISOR_NROINT != '') THEN
         EMISOR_DIRECCION = EMISOR_DIRECCION || ' Int. ' || :EMISOR_NROINT;

       IF (:EMISOR_PISO != '') THEN
         EMISOR_DIRECCION = EMISOR_DIRECCION || ' Piso ' || :EMISOR_PISO;

       IF (:EMISOR_LOCALIDAD != '') THEN
         EMISOR_DIRECCION = EMISOR_DIRECCION || ' ' || :EMISOR_LOCALIDAD;

       IF (:EMISOR_TELEFONOS != '') THEN
         EMISOR_TELEFONOS = 'Tel. ' || EMISOR_TELEFONOS;

       IF (:EMISOR_FAX != '') THEN
         EMISOR_FAX = 'Fax ' || EMISOR_FAX;

       IF (:EMISOR_CELULAR != '') THEN
         EMISOR_CELULAR = 'Celular ' || EMISOR_CELULAR;

       EXECUTE PROCEDURE API_FECHA_CADENA :FOLIO_FECHA, 1 RETURNING_VALUES FOLIO_FECHA_CADENA;

       SELECT
           PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_CADENAORIGINAL,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_SELLO,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID_CANCELA,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID_FECHA,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_UUID_VER,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_SELLOSAT,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_NOCERTSAT
       FROM PYMINGR18_DEP_FACTELECT
       WHERE PYMINGR18_DEP_FACTELECT.ID_PYMINGR18 = :ULTID_FOLIO
       INTO
          :DOCNRO,
          :CADENA,
          :SELLO,
          :UUID,
          :UUID_CANCELA,
          :UUID_FECHA,
          :UUID_VER,
          :SELLOSAT,
          :NOCERTSAT;

     END

   /*********** DATOS DEL EMISOR EN CASO DE QUE SEA CBB ***********/

  IF (:ULTID_FOLIO IS NULL) THEN
    BEGIN
      SELECT
          REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,
          REP_SOCUSUA40_SOCUSUA02.ENTIDAD_TIPO
      FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
      WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
      INTO
          :EMISOR_RFC,
          :EMISOR_TIPO;

      SELECT SNVL(REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,'')
      FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
      WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'CURP'
      INTO
          :EMISOR_CURP;

      SELECT
          REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA42,
          REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA50,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CALLE || ' No. ' || REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_NRO,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_DEPTO,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PISO,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CP,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_LINEA,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_CELU,
          REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_FAX
      FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
      WHERE REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 1
      INTO
          :RELA_SOCUSUA42,
          :RELA_SOCUSUA50,
          :EMISOR_CALLE,
          :EMISOR_NROINT,
          :EMISOR_PISO,
          :EMISOR_CP,
          :EMISOR_TELEFONOS,
          :EMISOR_CELULAR,
          :EMISOR_FAX;

      IF (:RELA_SOCUSUA42 IS NOT NULL) THEN
        SELECT
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CIUDAD || ', ' ||
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA || ', ' ||
            SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO
        FROM SOCUSUA42_TBL_CODPOSTALES
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :RELA_SOCUSUA42
        INTO
            :EMISOR_CIUDAD,
            :EMISOR_LOCALIDAD;
      ELSE
        BEGIN
          FOR
            SELECT
                REP_SOCUSUA50.SOCUSUA50_DESCRI,
                REP_SOCUSUA50.SOCSYST06_NIVEL
            FROM REP_SOCUSUA50(:RELA_SOCUSUA50)
            INTO :SOCUSUA50_DESCRI,
                 :SOCSYST06_NIVEL
          DO
          BEGIN
             IF (:SOCSYST06_NIVEL = 1) THEN
               EMISOR_PAIS = :SOCUSUA50_DESCRI;
             ELSE
               IF (:SOCSYST06_NIVEL = 2) THEN
                 EMISOR_ESTADO = :SOCUSUA50_DESCRI;
               ELSE
                 IF (:SOCSYST06_NIVEL = 3) THEN
                   EMISOR_MUNICIPIO = :SOCUSUA50_DESCRI;
                 ELSE
                   IF (:SOCSYST06_NIVEL = 4) THEN
                     EMISOR_LOCALIDAD = :SOCUSUA50_DESCRI;
          END

          EMISOR_CIUDAD = EMISOR_MUNICIPIO || ', ' || EMISOR_ESTADO || ', ' || EMISOR_PAIS;
        END

      EMISOR_DIRECCION = EMISOR_CALLE;

      IF (:EMISOR_NROINT != '') THEN
        EMISOR_DIRECCION = EMISOR_DIRECCION || ' Int. ' || :EMISOR_NROINT;

      IF (:EMISOR_PISO != '') THEN
        EMISOR_DIRECCION = EMISOR_DIRECCION || ' Piso ' || :EMISOR_PISO;

      IF (:EMISOR_LOCALIDAD != '') THEN
        EMISOR_DIRECCION = EMISOR_DIRECCION || ' ' || :EMISOR_LOCALIDAD;

      IF (:EMISOR_TELEFONOS != '') THEN
        EMISOR_TELEFONOS = 'Tel. ' || EMISOR_TELEFONOS;

      IF (:EMISOR_FAX != '') THEN
        EMISOR_FAX = 'Fax ' || EMISOR_FAX;

      IF (:EMISOR_CELULAR != '') THEN
        EMISOR_CELULAR = 'Celular ' || EMISOR_CELULAR;

    END

   /*********** DATOS DE LA MERCANCIA ***********/

   SELECT FIRST 1
       GRID_PYMINGR07_DOCUMENTOS.RELA_SOCUSUA50_MERCANCIA,
       GRID_PYMINGR07_DOCUMENTOS.RELA_SOCUSUA50_REEXPEDICION,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_CONTENIDO,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_FACTURA,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_VALOR,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_BULTOS,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_PESO,
       GRID_PYMINGR07_DOCUMENTOS.UNIDAD,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_REMITENTE,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_REFERENCIA,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_PEDIMENTO,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_FECHAPED,
       GRID_PYMINGR07_DOCUMENTOS.TIPO_PEDIMENTO,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_EMBARCADO,
       GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_CONOCIMIENTO,
       GRID_PYMINGR07_DOCUMENTOS.TIPO_FLETE
   FROM GRID_PYMINGR07_DOCUMENTOS
   WHERE GRID_PYMINGR07_DOCUMENTOS.RELA_PYMINGR01 = :PARAM_FACTURA
   INTO
       :RELA_SOCUSUA50_MERCANCIA,
       :RELA_SOCUSUA50_REEXPEDICION,
       :CONTENIDO,
       :FACTURA,
       :VALOR,
       :BULTOS,
       :PESO,
       :UNIDAD,
       :REMITENTE,
       :REFERENCIA,
       :PEDIMENTO,
       :FECHAPED,
       :TIPOPED,
       :EMBARCADO,
       :CONOCIMIENTO,
       :TIPOFLETE;

   IF (:RELA_SOCUSUA50_MERCANCIA IS NOT NULL) THEN
      SELECT FIRST 1 SNVL(VW_SOCUSUA50_CONCAT.CONCAT,'')
      FROM VW_SOCUSUA50_CONCAT(:RELA_SOCUSUA50_MERCANCIA)
      ORDER BY VW_SOCUSUA50_CONCAT.CONCAT DESC
      INTO :CIUDAD_MERCANCIA;

   IF (:RELA_SOCUSUA50_REEXPEDICION IS NOT NULL) THEN
      SELECT FIRST 1 SNVL(VW_SOCUSUA50_CONCAT.CONCAT,'')
      FROM VW_SOCUSUA50_CONCAT(:RELA_SOCUSUA50_REEXPEDICION)
      ORDER BY VW_SOCUSUA50_CONCAT.CONCAT DESC
      INTO :CIUDAD_REEXPEDICION;

   /*********** HONORARIOS ***********/

   SELECT
       GRID_PYMINGR08_HONORARIOS.PYMINGR08_PORC,
       GRID_PYMINGR08_HONORARIOS.PYMINGR08_HONORARIOS,
       GRID_PYMINGR08_HONORARIOS.PYMINGR08_PORCIVA,
       GRID_PYMINGR08_HONORARIOS.PYMINGR08_IVA,
       GRID_PYMINGR08_HONORARIOS.PYMINGR08_VALORNORMAL,
       GRID_PYMINGR08_HONORARIOS.PYMINGR08_GASTOS,
       GRID_PYMINGR08_HONORARIOS.PYMINGR08_SUBSIDIADOS,
       GRID_PYMINGR08_HONORARIOS.PYMINGR08_BASE
   FROM GRID_PYMINGR08_HONORARIOS
   WHERE GRID_PYMINGR08_HONORARIOS.RELA_PYMINGR01 = :PARAM_FACTURA
   INTO
       :PORC_HON,
       :HONORARIOS,
       :PORC_IVA,
       :IVA,
       :VALORNORMAL,
       :GASTOS,
       :SUBSIDIADOS,
       :BASE;

   IF (:HONORARIOS IS NULL) THEN
    HONORARIOS = 0;

   IF (:GASTOS IS NULL) THEN
      SELECT SUM(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL)
      FROM PYMINGR15_MOV_GASTOS
      INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
      WHERE PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = :PARAM_FACTURA
      INTO :GASTOS;

   /*********** ANTICIPOS ***********/

   SELECT SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE)
   FROM PYMINGR16_MOV_ANTICIPOS
   WHERE PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = :PARAM_FACTURA
   INTO :ANTICIPO;

   IF (:GASTOS IS NULL) THEN
      GASTOS = 0;

   IF (:ANTICIPO IS NULL) THEN
      ANTICIPO = 0;

   SALDO = (TOTAL + GASTOS) - ANTICIPO;

   IF (:SALDO < 0) THEN
     SALDO = SALDO * -1;

   SELECT API_NUM_MEXICO.CNUMERO
   FROM API_NUM_MEXICO(:SALDO,:CODIGO_MONEDA)
   INTO :TOTAL_LETRA;

   SUSPEND;
END
GRID_MSGPOLI02                 

DECLARE VARIABLE SOCSYST10_CODIGO VARCHAR(100);
begin
    FOR SELECT
    MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
    MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
    MSGPOLI02_DET_POLIZAS.rela_socsyst10_colum,
    MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_ARCO,
    MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_REFE,
    MSGPOLI02_DET_POLIZAS.rela_socsyst10_moneda,
    MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01,
    MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
    MSGPOLI02_DET_POLIZAS.RELA_SOCUSUA02,
    MSGPOLI02_DET_POLIZAS.rela_srhmain10,
    SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODIGO,
    SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
    SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
    MSGPOLI02_DET_POLIZAS.ID_MSGPOLI02,
    MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE,
    MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER,
    MSGPOLI02_DET_POLIZAS.msgpoli02_referencia,
    MSGPOLI02_DET_POLIZAS.MSGPOLI02_COTIZA
    FROM MSGPOLI02_DET_POLIZAS
    INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
    where MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = :RELA_MSGPOLI01X
    INTO :RELA_MSGPOLI01,
         :RELA_SICCONT02,
         :rela_socsyst10_colum,
         :RELA_SOCSYST10_ARCO,
         :RELA_SOCSYST10_REFE,
         :rela_socsyst10_moneda,
         :RELA_SICEGRE01,
         :RELA_SICINGR01,
         :RELA_SOCUSUA02,
         :rela_srhmain10,
         :SICCONT02_CODIGO,
         :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :ID_MSGPOLI02,
         :MSGPOLI02_DEBE,
         :MSGPOLI02_HABER,
         :MSGPOLI02_REFERENCIA,
         :MSGPOLI02_COTIZA
    DO
    BEGIN
        TIPO_REFERENCIA = null;
        select CBO_TIPOREFERENCIASPOLIZAS.socsyst10_filtro_des
        from CBO_TIPOREFERENCIASPOLIZAS
        where CBO_TIPOREFERENCIASPOLIZAS.id_socsyst10 = :rela_socsyst10_refe
        into :TIPO_REFERENCIA;

        if (MSGPOLI02_REFERENCIA is null) then
            MSGPOLI02_REFERENCIA = 'Sin Asignar';

        TIPO_ENTIDAD = null;
        select
        CBO_REFERENCIASPOLIZAS.socsyst10_filtro_des,
        CBO_REFERENCIASPOLIZAS.socsyst10_codigo
        from CBO_REFERENCIASPOLIZAS
        where CBO_REFERENCIASPOLIZAS.id_socsyst10 = :rela_socsyst10_arco
        into :TIPO_ENTIDAD,
             :SOCSYST10_CODIGO;

        if (TIPO_ENTIDAD is null) then
            entidad = 'Sin Asignar';
        else
        begin
           if (SOCSYST10_CODIGO = 'EMPLEADO') then
                select cbo_srhmain10.entidad
                from cbo_srhmain10
                where cbo_srhmain10.id_srhmain10 = :rela_srhmain10
                into :ENTIDAD;
           else if (SOCSYST10_CODIGO = 'CLIENTE') then
                select CBO_SICINGR01.entidad
                from CBO_SICINGR01
                where CBO_SICINGR01.id_sicingr01 = :rela_sicingr01
                into :ENTIDAD;
          else if (SOCSYST10_CODIGO = 'PROVEEDOR') then
                select cbo_sicegre01.entidad
                from cbo_sicegre01
                where cbo_sicegre01.id_sicegre01 = :rela_sicegre01
                into :ENTIDAD;
          else if (SOCSYST10_CODIGO = 'OTROS') then
                select VR_ENTIDADES_ALL.entidad
                from VR_ENTIDADES_ALL
                where VR_ENTIDADES_ALL.id_socusua02 = :rela_socusua02
                into :ENTIDAD;
        end

        suspend;
    END
end
REP_PYMVENT20_ACREDITO         

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :ID_SOCSYST01,
     :EMPRESA;

  IF (:PARAM_CLIENTE != -1) THEN
    FOR
      SELECT
          PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
          PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
          PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMVENT01_CAB_CAJAS.PYMVENT01_DESCRIPCION,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
          PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL,
          CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE)
      FROM PYMVENT20_CAB_TICKETS
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
      INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
      INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
      INNER JOIN PYMVENT22_MOV_CAMBIOS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20)
      INNER JOIN PYMVENT11_DET_RENDICIONES ON (PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = :PARAM_CLIENTE
        AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1 = 'CREDITO'
        AND PYMVENT20_CAB_TICKETS.PYMVENT20_CANCELADO = 0
      INTO
         :RELA_SOCWFLO01,
         :RELA_PYMVENT24,
         :ID_PYMVENT20,
         :SUCURSAL,
         :CAJA,
         :CLIENTE,
         :TICKET,
         :TOTAL,
         :FECHA
    DO
    BEGIN
      PAGOS_CLIENTE = 0;
      TOTAL_TICKETS = 0;
      TOTAL_RETIROS = 0;

      SELECT SUM(PYMVENT35_DET_INGRESOS.PYMVENT35_IMPORTE)
      FROM PYMVENT35_DET_INGRESOS
      WHERE PYMVENT35_DET_INGRESOS.RELA_PYMVENT24 = :RELA_PYMVENT24
        AND CAST(PYMVENT35_DET_INGRESOS.PYMVENT35_FAPL AS DATE) <= :PARAM_FECHAHASTA
      INTO :PAGOS_CLIENTE;

      IF (:PAGOS_CLIENTE IS NULL) THEN
        PAGOS_CLIENTE = 0;

      SELECT SUM(PYMVENT31_DET_RETIROS.PYMVENT31_IMPORTE)
      FROM PYMVENT31_DET_RETIROS
      WHERE PYMVENT31_DET_RETIROS.RELA_PYMVENT24 = :RELA_PYMVENT24
        AND CAST(PYMVENT31_DET_RETIROS.PYMVENT31_FAPL AS DATE) <= :PARAM_FECHAHASTA
      INTO :TOTAL_RETIROS;

      IF (:TOTAL_RETIROS IS NULL) THEN
        TOTAL_RETIROS = 0;

      SELECT SUM(PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL)
      FROM PYMVENT20_CAB_TICKETS
      INNER JOIN PYMVENT22_MOV_CAMBIOS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20)
      INNER JOIN PYMVENT11_DET_RENDICIONES ON (PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = :RELA_PYMVENT24
        AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1 = 'CREDITO'
        AND PYMVENT20_CAB_TICKETS.PYMVENT20_CANCELADO = 0
      INTO :TOTAL_TICKETS;

      IF (:TOTAL_TICKETS IS NULL) THEN
        TOTAL_TICKETS = 0;

      SUSPEND;
    END
  ELSE
    FOR
      SELECT
          PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
          PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
          PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMVENT01_CAB_CAJAS.PYMVENT01_DESCRIPCION,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
          PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL,
          CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE)
      FROM PYMVENT20_CAB_TICKETS
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
      INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
      INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
      INNER JOIN PYMVENT22_MOV_CAMBIOS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20)
      INNER JOIN PYMVENT11_DET_RENDICIONES ON (PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1 = 'CREDITO'
        AND PYMVENT20_CAB_TICKETS.PYMVENT20_CANCELADO = 0
      INTO
         :RELA_SOCWFLO01,
         :RELA_PYMVENT24,
         :ID_PYMVENT20,
         :SUCURSAL,
         :CAJA,
         :CLIENTE,
         :TICKET,
         :TOTAL,
         :FECHA
    DO
    BEGIN
      PAGOS_CLIENTE = 0;
      TOTAL_TICKETS = 0;
      TOTAL_RETIROS = 0;

      SELECT SUM(PYMVENT35_DET_INGRESOS.PYMVENT35_IMPORTE)
      FROM PYMVENT35_DET_INGRESOS
      WHERE PYMVENT35_DET_INGRESOS.RELA_PYMVENT24 = :RELA_PYMVENT24
        AND CAST(PYMVENT35_DET_INGRESOS.PYMVENT35_FAPL AS DATE) <= :PARAM_FECHAHASTA
      INTO :PAGOS_CLIENTE;

      IF (:PAGOS_CLIENTE IS NULL) THEN
        PAGOS_CLIENTE = 0;

      SELECT SUM(PYMVENT31_DET_RETIROS.PYMVENT31_IMPORTE)
      FROM PYMVENT31_DET_RETIROS
      WHERE PYMVENT31_DET_RETIROS.RELA_PYMVENT24 = :RELA_PYMVENT24
        AND CAST(PYMVENT31_DET_RETIROS.PYMVENT31_FAPL AS DATE) <= :PARAM_FECHAHASTA
      INTO :TOTAL_RETIROS;

      IF (:TOTAL_RETIROS IS NULL) THEN
        TOTAL_RETIROS = 0;

      SELECT SUM(PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL)
      FROM PYMVENT20_CAB_TICKETS
      INNER JOIN PYMVENT22_MOV_CAMBIOS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20)
      INNER JOIN PYMVENT11_DET_RENDICIONES ON (PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = :RELA_PYMVENT24
        AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1 = 'CREDITO'
        AND PYMVENT20_CAB_TICKETS.PYMVENT20_CANCELADO = 0
      INTO :TOTAL_TICKETS;

      IF (:TOTAL_TICKETS IS NULL) THEN
        TOTAL_TICKETS = 0;

      SUSPEND;
    END
END
REP_PYMINGR01_COBRADAS         

DECLARE VARIABLE CODIGO VARCHAR(50);
DECLARE VARIABLE RELA_MSGPOLI07 BIGINT;
DECLARE VARIABLE TOTAL_PAGOS DOUBLE PRECISION;
BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :CODIGO;

  FOR
    SELECT
        PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
        PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
        PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO,
        MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07,
        PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
        SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
        TIPO.SOCSYST10_FILTRO_DES,
        MONEDA.SOCSYST10_CODIGO,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_CONCEPTO,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
        (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
         FROM PYMINGR18_DEP_FACTELECT
         WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
        PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO
    FROM PYMINGR01_CAB_FACTURAS
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = TIPO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
    INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
    INNER JOIN PYMINGR31_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07)
    INNER JOIN PYMINGR30_CAB_DEPOSITOS ON (PYMINGR31_DET_FACTURAS.RELA_PYMINGR30 = PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30)
    WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
      AND PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = :PARAM_MONEDA
      AND PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    INTO
        :RELA_SICINGR01,
        :RELA_MSGPOLI01,
        :RELA_MSGPOLI01_CANCELADO,
        :RELA_MSGPOLI07,
        :ID_PYMINGR01,
        :SUCURSAL,
        :TIPO,
        :MONEDA,
        :CLIENTE,
        :CONCEPTO,
        :FOLIO,
        :FOLIO_ELECT,
        :FECHA,
        :SUBTOTAL,
        :TOTAL,
        :TIPOCAMBIO
  DO
  BEGIN
     TOTAL_PAGOS = 0;

     SELECT SUM(PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE)
     FROM PYMINGR31_DET_FACTURAS
     WHERE PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07 = :RELA_MSGPOLI07
     INTO :TOTAL_PAGOS;

     IF (:TOTAL_PAGOS = :TOTAL) THEN
       BEGIN
         SELECT
             SUM(REP_PYMINGR02_PYMINGR06.IVA),
             SUM(REP_PYMINGR02_PYMINGR06.IEPS),
             SUM(REP_PYMINGR02_PYMINGR06.RETISR),
             SUM(REP_PYMINGR02_PYMINGR06.RETIVA)
         FROM REP_PYMINGR02_PYMINGR06(:ID_PYMINGR01)
         WHERE REP_PYMINGR02_PYMINGR06.CODIGO != 'GASTOS'
         INTO
            :IVA,
            :IEPS,
            :RETISR,
            :RETIVA;

         SUSPEND;
       END
  END
END
PRD_PYMINGR01_MAPFRE           

DECLARE VARIABLE SOCSYST10_CODIGO VARCHAR(50);
DECLARE VARIABLE PYMINGR03_DOCUMENTO VARCHAR(50);
DECLARE VARIABLE PYMVENT38_DOCUMENTO VARCHAR(50);
begin
    if (modo = 0) then
    begin
        FOR SELECT
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
        PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
        FROM SOCSYST10_TBL_LISTAESTADOS
        INNER JOIN PYMINGR03_DET_REFERENCIAS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10)
        INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
        WHERE PYMINGR01_CAB_FACTURAS.id_pymingr01 = :ID
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO like 'MAPFRE%'
        INTO :SOCSYST10_CODIGO,
             :PYMINGR03_DOCUMENTO
        DO
        BEGIN
            if (socsyst10_codigo = 'MAPFRE-SINIESTRO') then
                SINIESTRO = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'MAPFRE-POLIZA') then
                POLIZA = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'MAPFRE-VEHICULO') then
                vehiculo = :PYMINGR03_DOCUMENTO;
        END

        suspend;
    end
    else if (modo = 1) then
    begin
        FOR SELECT
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
        pymvent38_det_documentos.pymvent38_documento
        FROM SOCSYST10_TBL_LISTAESTADOS
        INNER JOIN pymvent38_det_documentos ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = pymvent38_det_documentos.RELA_SOCSYST10)
        INNER JOIN pymvent20_cab_tickets ON (pymvent38_det_documentos.rela_pymvent20 = pymvent20_cab_tickets.id_pymvent20)
        WHERE pymvent20_cab_tickets.id_pymvent20 = :ID
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO like 'MAPFRE%'
        INTO :SOCSYST10_CODIGO,
             :pymvent38_documento
        DO
        BEGIN
            if (socsyst10_codigo = 'MAPFRE-SINIESTRO') then
                SINIESTRO = :pymvent38_documento;
            else if (socsyst10_codigo = 'MAPFRE-POLIZA') then
                POLIZA = :pymvent38_documento;
            else if (socsyst10_codigo = 'MAPFRE-VEHICULO') then
                vehiculo = :pymvent38_documento;
        END

        suspend;
    end
    else if (modo = 2) then
    begin
        SELECT FIRST 1
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_VEHICULO,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_POLIZA,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_SINIESTRO
        FROM ON2CFDS14_DEP_ADDENDAS
        INNER JOIN ON2CFDS10_CAB_FACTURAS ON (ON2CFDS14_DEP_ADDENDAS.RELA_ON2CFDS10 = ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10)
        WHERE ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = :ID
        INTO :vehiculo,
             :poliza,
             :siniestro;
        suspend;
    end
end
GRID_PYMVENT24                 

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA01 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
begin
    for SELECT
    PYMVENT24_CAB_CLIENTES.rela_socwflo01,
    SNVL(PYMVENT24_CAB_CLIENTES.pymvent24_codext, ''),
    PYMVENT24_CAB_CLIENTES.pymvent24_usuario,
    PYMVENT24_CAB_CLIENTES.rela_socsyst10,
    PYMVENT24_CAB_CLIENTES.rela_socsyst10_sociedad,
    PYMVENT24_CAB_CLIENTES.rela_socusua42,
    PYMVENT24_CAB_CLIENTES.RELA_SICINGR01,
    PYMVENT24_CAB_CLIENTES.ID_PYMVENT24,
    PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
    PYMVENT24_CAB_CLIENTES.PYMVENT24_DIRECCION,
    PYMVENT24_CAB_CLIENTES.pymvent24_nroext,
    PYMVENT24_CAB_CLIENTES.pymvent24_nroint,
    PYMVENT24_CAB_CLIENTES.pymvent24_piso,
    PYMVENT24_CAB_CLIENTES.PYMVENT24_CORRERO,
    PYMVENT24_CAB_CLIENTES.PYMVENT24_CODPOSTAL,
    PYMVENT24_CAB_CLIENTES.PYMVENT24_TELEFONOS,
    PYMVENT24_CAB_CLIENTES.PYMVENT24_CUMPLEANOS,
    PYMVENT24_CAB_CLIENTES.pymvent24_documentos,
    PYMVENT24_CAB_CLIENTES.pymvent24_descuento,
    PYMVENT24_CAB_CLIENTES.pymvent24_credito,
    PYMVENT24_CAB_CLIENTES.pymvent24_credito_dias,
    (PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE ||
    PYMVENT24_CAB_CLIENTES.PYMVENT24_DIRECCION ||
    PYMVENT24_CAB_CLIENTES.PYMVENT24_CORRERO ||
    PYMVENT24_CAB_CLIENTES.PYMVENT24_CODPOSTAL ||
    PYMVENT24_CAB_CLIENTES.PYMVENT24_TELEFONOS ||
    PYMVENT24_CAB_CLIENTES.PYMVENT24_CUMPLEANOS ||
    SNVL(PYMVENT24_CAB_CLIENTES.pymvent24_codext, '') ||
    PYMVENT24_CAB_CLIENTES.pymvent24_documentos),

    INVL((SELECT FIRST 1 pymvent20_cab_tickets.id_pymvent20
     FROM pymvent20_cab_tickets
     WHERE pymvent20_cab_tickets.rela_pymvent24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24
    ),0),
    INVL((SELECT FIRST 1 PYMVENT29_MOV_UPLOADS.ID_PYMVENT29
          FROM PYMVENT29_MOV_UPLOADS
          WHERE PYMVENT29_MOV_UPLOADS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24), 0)
    FROM PYMVENT24_CAB_CLIENTES
    into :RELA_SOCWFLO01,
         :PYMVENT24_CODEXT,
         :PYMVENT24_USUARIO,
         :RELA_SOCSYST10,
         :RELA_SOCSYST10_SOCIEDAD,
         :RELA_SOCUSUA42,
         :RELA_SICINGR01,
         :ID_PYMVENT24,
         :PYMVENT24_CLIENTE,
         :PYMVENT24_DIRECCION,
         :PYMVENT24_NROEXT,
         :PYMVENT24_NROINT,
         :PYMVENT24_PISO,
         :PYMVENT24_CORRERO,
         :PYMVENT24_CODPOSTAL,
         :PYMVENT24_TELEFONOS,
         :PYMVENT24_CUMPLEANOS,
         :PYMVENT24_DOCUMENTOS,
         :PYMVENT24_DESCUENTO,
         :PYMVENT24_CREDITO,
         :PYMVENT24_CREDITO_DIAS,
         :BUSQUEDA,
         :CONTICKETS,
         :CONIMAGENES
    do
    begin
        docufind = TRIM(PYMVENT24_CODEXT) || TRIM(PYMVENT24_DOCUMENTOS);

        if (:rela_sicingr01 is not null) then
        begin
            Select
            sicingr01_cab_clientes.sicingr01_credito_gral,
            sicingr01_cab_clientes.sicingr01_descuento,
            sicingr01_cab_clientes.rela_socusua02
            from sicingr01_cab_clientes
            where sicingr01_cab_clientes.id_sicingr01 = :rela_sicingr01
            into :PYMVENT24_CREDITO,
                 :PYMVENT24_DESCUENTO,
                 :rela_socusua02;
            
            select
            socusua02_mae_usuarios.rela_socusua01
            from socusua02_mae_usuarios
            where socusua02_mae_usuarios.id_socusua02 = :rela_socusua02
            into :rela_socusua01;

            select
            socusua01_mae_entidades.rela_socusua20,
            socusua01_mae_entidades.rela_socusua30
            from socusua01_mae_entidades
            where socusua01_mae_entidades.id_socusua01 = :rela_socusua01
            into :rela_socusua20,
                 :rela_socusua30;

            if (rela_socusua20 is not null) then
            begin
                select
                socusua20_mae_entmorales.refe_socsyst10_sociedad,
                socusua20_mae_entmorales.socusua20_denominacion
                from socusua20_mae_entmorales
                where socusua20_mae_entmorales.id_socusua20 = :rela_socusua20
                into :rela_socsyst10_sociedad,
                     :pymvent24_cliente;

                select distinct
                max(GRID_SOCUSUA40.socusua40_numero)
                from GRID_SOCUSUA40
                where GRID_SOCUSUA40.socsyst10_codigo = 'RFC'
                and GRID_SOCUSUA40.rela_socusua20 = :rela_socusua20
                into :pymvent24_documentos;

                select
                socusua41_det_localidades.socusua41_calle,
                socusua41_det_localidades.socusua41_nro,
                socusua41_det_localidades.socusua41_piso,
                socusua41_det_localidades.socusua41_depto,
                socusua41_det_localidades.socusua41_tele_linea,
                socusua41_det_localidades.socusua41_cp,
                socusua41_det_localidades.socusua41_mail_perso
                from socusua41_det_localidades
                where socusua41_det_localidades.rela_socusua20 = :rela_socusua20
                  AND socusua41_det_localidades.SOCUSUA41_PRINCIPAL = 1
                into :pymvent24_direccion,
                     :pymvent24_nroext,
                     :pymvent24_nroint,
                     :pymvent24_piso,
                     :pymvent24_telefonos,
                     :pymvent24_codpostal,
                     :PYMVENT24_CORRERO;
            end
            else
            begin
                select
                snvl(socusua30_mae_entfisicas.socusua30_nombres,'') || ', ' ||
                snvl(socusua30_mae_entfisicas.socusua30_ape_padre,'') || ' ' ||
                snvl(socusua30_mae_entfisicas.socusua30_ape_madre,'')
                from socusua30_mae_entfisicas
                where socusua30_mae_entfisicas.id_socusua30 = :rela_socusua30
                into :pymvent24_cliente;

                select distinct
                max(GRID_SOCUSUA40.socusua40_numero)
                from GRID_SOCUSUA40
                where GRID_SOCUSUA40.socsyst10_codigo = 'RFC'
                and GRID_SOCUSUA40.rela_socusua30 = :rela_socusua30
                into :pymvent24_documentos;

                select
                socusua41_det_localidades.socusua41_calle,
                socusua41_det_localidades.socusua41_nro,
                socusua41_det_localidades.socusua41_piso,
                socusua41_det_localidades.socusua41_depto,
                socusua41_det_localidades.socusua41_tele_linea,
                socusua41_det_localidades.socusua41_cp,
                socusua41_det_localidades.socusua41_mail_perso
                from socusua41_det_localidades
                where socusua41_det_localidades.rela_socusua30 = :rela_socusua30
                  AND socusua41_det_localidades.SOCUSUA41_PRINCIPAL = 1
                into :pymvent24_direccion,
                     :pymvent24_nroext,
                     :pymvent24_nroint,
                     :pymvent24_piso,
                     :pymvent24_telefonos,
                     :pymvent24_codpostal,
                     :pymvent24_correro;

            end

            suspend;
        end
        else
        begin
            suspend;
        end
    end
end
PRD_SOCSYST20_PYMVENT45        

DECLARE VARIABLE RELA_PADRE BIGINT;
BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
GRID_PYMINGR36                 

DECLARE VARIABLE INT_MSGPOLI07 BIGINT;
DECLARE VARIABLE DBL_ANTICIPOS DOUBLE PRECISION;
DECLARE VARIABLE DBL_SALDO DOUBLE PRECISION;

BEGIN
  SELECT FIRST 1 PYMINGR35_CAB_SALDOS.PYMINGR35_SALDO
  FROM PYMINGR35_CAB_SALDOS
  WHERE PYMINGR35_CAB_SALDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
    AND PYMINGR35_CAB_SALDOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
    AND PYMINGR35_CAB_SALDOS.RELA_SICINGR01 = :PARAM_CLIENTE
  ORDER BY PYMINGR35_CAB_SALDOS.ID_PYMINGR35 DESC
  INTO :ULTSALDO;

  IF (:PARAM_PYMINGR35 IS NULL) THEN
    FOR
      SELECT
          CAST(0 AS INTEGER),
          CAST(-1 AS BIGINT),
          MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07,
          PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
          CAST(-1 AS BIGINT),
          PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
          (SELECT FIRST 1 PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO
           FROM PYMINGR36_DET_FACTURAS
           WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07
             AND PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO != 0
           ORDER BY PYMINGR36_DET_FACTURAS.ID_PYMINGR36 DESC),
          (SELECT FIRST 1 PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO
           FROM PYMINGR36_DET_FACTURAS
           WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07
            AND PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO != 0
           ORDER BY PYMINGR36_DET_FACTURAS.ID_PYMINGR36 DESC),
          (SELECT SUM(MSGPOLI10_MOV_CONCILIADAS.MSGPOLI10_IMPORTE)
           FROM MSGPOLI10_MOV_CONCILIADAS
           WHERE MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
      FROM PYMINGR01_CAB_FACTURAS
      INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
      WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
        AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
        AND MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 NOT IN (SELECT PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07
                                                       FROM PYMEGRE11_DET_FACTURASNOTAS
                                                       INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36))
      INTO
         :MARCA,
         :RELA_PYMINGR35,
         :RELA_MSGPOLI07,
         :RELA_PYMINGR01,
         :ID_PYMINGR36,
         :DOCNRO,
         :FECHA,
         :IMPUESTOS,
         :TOTAL,
         :SALDO,
         :VALORANTERIOR,
         :CONCILIADO
    DO
    BEGIN
      IF (SALDO IS NULL) THEN
        SALDO = 0;

      IF (VALORANTERIOR IS NULL) THEN
        VALORANTERIOR = 0;

      IF (CONCILIADO IS NULL) THEN
        CONCILIADO = 0;

      DBL_CONCILIADO = 0;

      SELECT SUM(MSGPOLI10_MOV_CONCILIADAS.MSGPOLI10_IMPORTE)
      FROM MSGPOLI10_MOV_CONCILIADAS
      WHERE MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07 = :RELA_MSGPOLI07
      INTO :DBL_CONCILIADO;

      IF (:DBL_CONCILIADO IS NULL) THEN
        DBL_CONCILIADO = 0;

      IF (:DBL_CONCILIADO != :TOTAL) THEN
        BEGIN
           SELECT SNVL(MAX(PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO), '')
           FROM PYMINGR18_DEP_FACTELECT
           WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = :RELA_PYMINGR01
           INTO :DOCNROELECT;

           SELECT SUM(PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD * PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE)
           FROM PYMINGR02_DET_CONCEPTOS
           WHERE PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01 = :RELA_PYMINGR01
           INTO :EROGACIONES;

           IF (EROGACIONES IS NULL) THEN
             EROGACIONES = 0;

           SELECT PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS
           FROM PYMINGR08_DEP_HONORARIOS
           WHERE PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01 = :RELA_PYMINGR01
           INTO :HONORARIOS;

           IF (HONORARIOS IS NULL) THEN
             HONORARIOS = 0;

           SELECT SUM(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL)
           FROM PYMEGRE02_CAB_FACTURAS
           INNER JOIN PYMINGR15_MOV_GASTOS ON (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 = PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02)
           WHERE PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = :RELA_PYMINGR01
           INTO :GASTOS;

           IF (GASTOS IS NULL) THEN
             GASTOS = 0;

           SELECT SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE)
           FROM PYMINGR16_MOV_ANTICIPOS
           WHERE PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = :RELA_PYMINGR01
           INTO :ANTICIPOS;

           IF (ANTICIPOS IS NULL) THEN
             ANTICIPOS = 0;

           TOTAL = TOTAL + GASTOS;

           INT_MSGPOLI07 = NULL;
           DBL_ANTICIPOS = 0;

           SELECT SUM(PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE)
           FROM PYMINGR37_MOV_ANTICIPOS
           INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36)
           WHERE PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR30 IS NOT NULL
             AND PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :RELA_MSGPOLI07
           INTO :DBL_ANTICIPOS;

           IF (:DBL_ANTICIPOS IS NULL) THEN
             DBL_ANTICIPOS = 0;

           ANTICIPOS = ANTICIPOS + DBL_ANTICIPOS;
           SALDO = TOTAL - ANTICIPOS;

           SELECT FIRST 1 PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07
           FROM PYMINGR36_DET_FACTURAS
           WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :RELA_MSGPOLI07
           INTO :INT_MSGPOLI07;

           IF (:INT_MSGPOLI07 IS NULL) THEN
             SUSPEND;
           ELSE
             BEGIN
               INT_MSGPOLI07 = NULL;
               DBL_SALDO = 0;
    
               SELECT FIRST 1 PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07, PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO
               FROM PYMINGR36_DET_FACTURAS
               WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :RELA_MSGPOLI07
               ORDER BY PYMINGR36_DET_FACTURAS.ID_PYMINGR36 DESC
               INTO :INT_MSGPOLI07, :DBL_SALDO;

               IF (:INT_MSGPOLI07 IS NOT NULL AND DBL_SALDO > 0) THEN
                 SUSPEND;
             END
        END
    END
  ELSE
    FOR
      SELECT
          CAST(1 AS INTEGER),
          PYMINGR36_DET_FACTURAS.RELA_PYMINGR35,
          PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07,
          PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
          PYMINGR36_DET_FACTURAS.ID_PYMINGR36,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS,
          PYMINGR36_DET_FACTURAS.PYMINGR36_IMPORTE,
          PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO,
          PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO
      FROM PYMINGR36_DET_FACTURAS
      INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
      INNER JOIN PYMINGR01_CAB_FACTURAS ON (MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01)
      WHERE PYMINGR36_DET_FACTURAS.RELA_PYMINGR35 = :PARAM_PYMINGR35
      INTO
         :MARCA,
         :RELA_PYMINGR35,
         :RELA_MSGPOLI07,
         :RELA_PYMINGR01,
         :ID_PYMINGR36,
         :DOCNRO,
         :FECHA,
         :IMPUESTOS,
         :TOTAL,
         :SALDO,
         :VALORANTERIOR
    DO
    BEGIN

      SELECT SNVL(MAX(PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO), '')
      FROM PYMINGR18_DEP_FACTELECT
      WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = :RELA_PYMINGR01
      INTO :DOCNROELECT;

      SELECT SUM(PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD * PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE)
      FROM PYMINGR02_DET_CONCEPTOS
      WHERE PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01 = :RELA_PYMINGR01
      INTO :EROGACIONES;

      IF (:EROGACIONES IS NULL) THEN
        EROGACIONES = 0;

      SELECT PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS
      FROM PYMINGR08_DEP_HONORARIOS
      WHERE PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01 = :RELA_PYMINGR01
      INTO :HONORARIOS;

      IF (:HONORARIOS IS NULL) THEN
        HONORARIOS = 0;

      SELECT SUM(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL)
      FROM PYMEGRE02_CAB_FACTURAS
      INNER JOIN PYMINGR15_MOV_GASTOS ON (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 = PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02)
      WHERE PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = :RELA_PYMINGR01
      INTO :GASTOS;

      IF (:GASTOS IS NULL) THEN
        GASTOS = 0;

      ANTICIPOS = 0;
      DBL_ANTICIPOS = 0;

      SELECT SUM(PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE)
      FROM PYMINGR37_MOV_ANTICIPOS
      INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36)
      WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :RELA_MSGPOLI07
        AND PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36 <= :ID_PYMINGR36
      INTO :ANTICIPOS;

      IF (:ANTICIPOS IS NULL) THEN
        ANTICIPOS = 0;

      IF (:SALDO = 0) THEN
        BEGIN
          SELECT SUM(PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE)
          FROM PYMINGR37_MOV_ANTICIPOS
          INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36)
          WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :RELA_MSGPOLI07
          INTO :DBL_ANTICIPOS;

          IF (:DBL_ANTICIPOS IS NOT NULL) THEN
            ANTICIPOS = DBL_ANTICIPOS;
        END

      SUSPEND;
    END
END
JAM$_STRINGTOKENIZER           

DECLARE VARIABLE DIGITO CHAR(1);
DECLARE VARIABLE NDESDE BIGINT;
DECLARE VARIABLE LENCADE BIGINT;
DECLARE VARIABLE CADETMP VARCHAR(50);
begin
    ORDEN = 0;
    NDESDE = 0;
    cadena = trim(cadena);
    lencade = strlen(cadena);

    while (NDESDE < lencade) do
    begin
        DIGITO = '@';
        CADETMP = '';

        while ((DIGITO <> DELIMITADOR) and (NDESDE < lencade))  DO
        begin
            NDESDE = NDESDE + 1;
            DIGITO = CAST(TRIM(LONGSUBSTR(:CADENA,NDESDE,1)) AS CHAR(1));
            CADETMP = CADETMP || DIGITO;
        end

        if (STRPOS(DELIMITADOR, CADETMP) <> 0) then
            PALABRA =  trim(LONGSUBSTR(CADETMP, 0, STRLEN(CADETMP)));
        else
            PALABRA = trim(CADETMP);

        if (PALABRA <> '') then
        BEGIN
            ORDEN = ORDEN + 1;
            suspend;
        END
    end
end
PRD_SGPINGR04_IMPORTE          

begin

  if (:FLAG = 1) then
    BEGIN
      select sum(GRID_SGPINGR05_PYMINGR10.sgpingr05_importe)
      from GRID_SGPINGR05_PYMINGR10
      where GRID_SGPINGR05_PYMINGR10.rela_sgpingr04 = :ID_SGPINGR04
      into
        :IMPORTE;
    end

  if (:FLAG = 2) then
    BEGIN
      select sum(grid_sgpingr05_pyminve10.sgpingr05_importe)
      from grid_sgpingr05_pyminve10
      where grid_sgpingr05_pyminve10.rela_sgpingr04 = :ID_SGPINGR04
      into
        :IMPORTE;
    END

  if (:flag = 3) then
    begin
      select sum(grid_sgpingr05_srhmain10.sgpingr05_importe)
      from grid_sgpingr05_srhmain10
      where grid_sgpingr05_srhmain10.rela_sgpingr04 = :ID_SGPINGR04
      INTO
        :IMPORTE;
    END

  if (:importe is null) then
    begin
      importe= 0;
    end

  suspend;
end
GRID_PYMINGR37                 

DECLARE VARIABLE DBL_SALDO DOUBLE PRECISION;
BEGIN
  IF (:PARAM_PYMINGR36 != -1) THEN
    FOR
      SELECT
          PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR35,
          PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36,
          PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR16,
          PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR30,
          PYMINGR37_MOV_ANTICIPOS.ID_PYMINGR37,
          PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE,
          PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE - (PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE - PYMINGR37_MOV_ANTICIPOS.PYMINGR37_SALDO)
      FROM PYMINGR37_MOV_ANTICIPOS
      INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36)
      WHERE PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36 <= :PARAM_PYMINGR36
        AND PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :PARAM_MSGPOLI07
      INTO
          :RELA_PYMINGR35,
          :RELA_PYMINGR36,
          :RELA_PYMINGR16,
          :RELA_PYMINGR30,
          :ID_PYMINGR37,
          :ANTICIPO,
          :SALDO
    DO
    BEGIN
      SUSPEND;
    END
  ELSE
    BEGIN
      DBL_SALDO = 0;

      FOR
        SELECT
            CAST(-1 AS BIGINT),
            CAST(-1 AS BIGINT),
            PYMINGR16_MOV_ANTICIPOS.ID_PYMINGR16,
            CAST(-1 AS BIGINT),
            CAST(-1 AS BIGINT),
            DNVL(SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER),0.00),
            CAST(0.00 AS DOUBLE PRECISION)
        FROM PYMINGR16_MOV_ANTICIPOS
        INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
        INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
        INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
        INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
        WHERE MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = :PARAM_MSGPOLI07
          AND PYMINGR16_MOV_ANTICIPOS.ID_PYMINGR16 NOT IN (SELECT PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR16
                                                           FROM PYMINGR37_MOV_ANTICIPOS)
        GROUP BY PYMINGR16_MOV_ANTICIPOS.ID_PYMINGR16

        UNION

        SELECT
            CAST(-1 AS BIGINT),
            CAST(-1 AS BIGINT),
            PYMINGR16_MOV_ANTICIPOS.ID_PYMINGR16,
            CAST(-1 AS BIGINT),
            CAST(-1 AS BIGINT),
            PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE,
            CAST(0.00 AS DOUBLE PRECISION)
        FROM PYMINGR16_MOV_ANTICIPOS
        INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
        INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
        WHERE MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = :PARAM_MSGPOLI07
          AND PYMINGR16_MOV_ANTICIPOS.ID_PYMINGR16 NOT IN (SELECT PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR16
                                                           FROM PYMINGR37_MOV_ANTICIPOS)
        INTO
            :RELA_PYMINGR35,
            :RELA_PYMINGR36,
            :RELA_PYMINGR16,
            :RELA_PYMINGR30,
            :ID_PYMINGR37,
            :ANTICIPO,
            :SALDO
      DO
      BEGIN
        DBL_SALDO = DBL_SALDO + ANTICIPO;

        IF (:DBL_SALDO <= :PARAM_TOTAL) THEN
          SALDO = 0;
        ELSE
          SALDO = DBL_SALDO - PARAM_TOTAL;

        SUSPEND;
      END

      FOR
        SELECT
            PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR35,
            PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36,
            PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR16,
            PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR30,
            PYMINGR37_MOV_ANTICIPOS.ID_PYMINGR37,
            PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE,
            PYMINGR37_MOV_ANTICIPOS.PYMINGR37_SALDO
        FROM PYMINGR37_MOV_ANTICIPOS
        INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.ID_PYMINGR36 = PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36)
        WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :PARAM_MSGPOLI07
        INTO
            :RELA_PYMINGR35,
            :RELA_PYMINGR36,
            :RELA_PYMINGR16,
            :RELA_PYMINGR30,
            :ID_PYMINGR37,
            :ANTICIPO,
            :SALDO
      DO
      BEGIN
        SUSPEND;
      END
    END
END
PRD_ON2CFDS10                  

BEGIN
  SELECT
      ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST01,
      ON2CFDS10_CAB_FACTURAS.RELA_PYMVENT24,
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      ON2CFDS10_CAB_FACTURAS.ON2CFDS10_DOCNRO,
      ON2CFDS18_DEP_FACTELECT.ON2CFDS18_VERSION,
      ON2CFDS18_DEP_FACTELECT.ON2CFDS18_DOCNRO,
      COMPROBANTE.SOCSYST10_FILTRO_DES,
      COMPROBANTE.SOCSYST10_CODIGO_EXT1,
      ON2CFDS10_CAB_FACTURAS.ON2CFDS10_FDOCU,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_CODEXT,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_DIRECCION,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_NROEXT,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_NROINT,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_PISO,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_CORRERO,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_CODPOSTAL,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_TELEFONOS,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_DOCUMENTOS,
      ON2CFDS10_CAB_FACTURAS.ON2CFDS10_SUBTOTAL,
      ON2CFDS10_CAB_FACTURAS.ON2CFDS10_DESCUENTO,
      ON2CFDS10_CAB_FACTURAS.ON2CFDS10_TOTAL,
      ON2CFDS10_CAB_FACTURAS.ON2CFDS10_TOTAL_IRETENIDOS,
      ON2CFDS10_CAB_FACTURAS.ON2CFDS10_TOTAL_ITRASLADADOS
  FROM ON2CFDS10_CAB_FACTURAS
  INNER JOIN SOCSYST01_CAB_CLIENTES ON (ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
  INNER JOIN PYMVENT24_CAB_CLIENTES ON (ON2CFDS10_CAB_FACTURAS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS COMPROBANTE ON (ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST10 = COMPROBANTE.ID_SOCSYST10)
  INNER JOIN ON2CFDS18_DEP_FACTELECT ON (ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = ON2CFDS18_DEP_FACTELECT.RELA_ON2CFDS10)
  WHERE ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = :PARAM_ID
  INTO
      :RELA_SOCSYST01,
      :RELA_PYMVENT24,
      :RELA_SOCUSUA02,
      :FOLIO,
      :VERSION,
      :FOLIO_ELECT,
      :DOCUMENTO,
      :TIPO,
      :FECHA,
      :CLIENTE,
      :CLIENTE_COD,
      :CLIENTE_DIRECCION,
      :CLIENTE_NROEXT,
      :CLIENTE_NROINT,
      :CLIENTE_PISO,
      :CLIENTE_CORREO,
      :CLIENTE_CODPOSTAL,
      :CLIENTE_TELEFONOS,
      :CLIENTE_RFC,
      :SUBTOTAL,
      :DESCUENTO,
      :TOTAL,
      :TOTAL_IRETENIDOS,
      :TOTAL_ITRASLADADOS;

  SELECT FIRST 1 REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_CODEXT
  FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
  WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
  INTO :CODIGO_EMISOR;

  SELECT
      ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_FCTA,
      ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_NROCTA,
      ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_ORDENCOMPRAS,
      ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_FVTO,
      ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_CONDICIONPAGO,
      MONEDA.SOCSYST10_FILTRO_DES,
      MONEDA.SOCSYST10_CODIGO_EXT1,
      ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_COTIZACION,
      ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_NOTAS
  FROM ON2CFDS14_DEP_ADDENDAS
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (ON2CFDS14_DEP_ADDENDAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
  WHERE ON2CFDS14_DEP_ADDENDAS.RELA_ON2CFDS10 = :PARAM_ID
  INTO
      :FECHAPOLIZA,
      :NROCUENTA,
      :ORDENCOMPRA,
      :FECHAVTO,
      :CONDICIONPAGO,
      :MONEDA,
      :CODIGO_MONEDA,
      :COTIZACION,
      :NOTAS;

  FOR
    SELECT
        ON2CFDS11_DET_FACTURAS.RELA_SOCSYST10_UNIDAD,
        ON2CFDS11_DET_FACTURAS.ON2CFDS11_CANTIDAD,
        ON2CFDS11_DET_FACTURAS.ON2CFDS11_CODIGO,
        ON2CFDS11_DET_FACTURAS.ON2CFDS11_CONCEPTO,
        ON2CFDS11_DET_FACTURAS.ON2CFDS11_PRECIO,
        ON2CFDS11_DET_FACTURAS.ON2CFDS11_IMPORTE
    FROM ON2CFDS11_DET_FACTURAS
    WHERE ON2CFDS11_DET_FACTURAS.RELA_ON2CFDS10 = :PARAM_ID
    INTO
        :RELA_SOCSYST10_UNIDAD,
        :CANTIDAD,
        :CODIGO,
        :CONCEPTO,
        :PRECIO,
        :IMPORTE
  DO
  BEGIN
    IF (:RELA_SOCSYST10_UNIDAD IS NOT NULL) THEN
      SELECT
          CBO_UNIDADBIENES.SOCSYST10_FILTRO_DES,
          CBO_UNIDADBIENES.SOCSYST10_CODIGO
      FROM CBO_UNIDADBIENES
      WHERE CBO_UNIDADBIENES.ID_SOCSYST10 = :RELA_SOCSYST10_UNIDAD
      INTO
          :UNIDAD,
          :CODIGO_UNIDAD;

      SUSPEND;
  END
END
PR_PYMVENT24_SICINGR01         

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA01 BIGINT;
begin
    if (usuario is not null and strlen(trim(usuario)) = 10) then
    begin
        select
        socusua02_mae_usuarios.id_socusua02,
        socusua02_mae_usuarios.rela_socusua01
        from socusua02_mae_usuarios
        where socusua02_mae_usuarios.socusua02_usuario = :usuario
        into :RELA_SOCUSUA02,
             :RELA_SOCUSUA01;

        Select sicingr01_cab_clientes.id_sicingr01
        from sicingr01_cab_clientes
        where sicingr01_cab_clientes.rela_socusua02 = :RELA_SOCUSUA02
        into :RELA_SICINGR01;
    end

    select
    socsyst10_tbl_listaestados.socsyst10_codigo
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.id_socsyst10 = :rela_socsyst10
    into :socsyst10_codigo_persona;

    select
    socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'SG10'
    and socsyst10_tbl_listaestados.socsyst10_codigo = 'ON2'
    into :id_socsyst10_girosocial;

    select min(socusua50_arb_localidades.id_socusua50)
    from socusua50_arb_localidades
    where socusua50_arb_localidades.socusua50_codaduana = 'MEX'
    into :id_socusua50;

    select
    socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'ES20'
    and socsyst10_tbl_listaestados.socsyst10_codigo = 'SOL'
    into :id_socsyst10_ESTADOCIVIL;

    select
    socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'SX10'
    and socsyst10_tbl_listaestados.socsyst10_codigo = 'H'
    into :id_socsyst10_SEXO;

    select
    socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TD10'
    and socsyst10_tbl_listaestados.socsyst10_codigo = 'RFC'
    into :id_socsyst10_RFC;

    select
    socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'ES10'
    and socsyst10_tbl_listaestados.socsyst10_codigo = 'SI'
    into :RELA_SOCSYST10_ACTIVO;

    select
    socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'US10'
    and socsyst10_tbl_listaestados.socsyst10_codigo = 'UC'
    into :RELA_SOCSYST10_TIPO;

    select
    socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'CL10'
    and socsyst10_tbl_listaestados.socsyst10_codigo = 'VAR'
    into :RELA_SOCSYST10_TIPOCLIENTE;

    select
    socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TA30'
    and socsyst10_tbl_listaestados.socsyst10_codigo = 'INGREFISCAL'
    into :RELA_SOCSYST10_TIPOCTA;

    select
    max(SICCONT74_MOV_SICINGR01.rela_siccont02)
    from SICCONT74_MOV_SICINGR01
    where SICCONT74_MOV_SICINGR01.rela_socsyst01 = :rela_socsyst01
    and SICCONT74_MOV_SICINGR01.rela_socsyst10 = :RELA_SOCSYST10_TIPOCTA
    into :rela_siccont02;

    suspend;
end
REP_PYMINGR30_DEPOSITOSALL     

DECLARE VARIABLE CODIGO VARCHAR(50);
BEGIN
   SELECT CBO_CLIENTES_EMPRESAS_PYMES.SOCSYST01_DESCRI
   FROM CBO_CLIENTES_EMPRESAS_PYMES
   WHERE CBO_CLIENTES_EMPRESAS_PYMES.ID_SOCSYST01 = :PARAM_EMPRESA
   INTO :EMPRESA;

   SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO
   FROM SOCWFLO01_ARB_ORGANIGRAMA
   WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
   INTO :CODIGO;

   FOR
     SELECT
         PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01,
         PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01,
         PYMINGR30_CAB_DEPOSITOS.RELA_SICINGR01,
         PYMINGR30_CAB_DEPOSITOS.RELA_SICCONT02_BANCO,
         PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01,
         PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30,
         SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
         (SNVL((SELECT FIRST 1 MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE
                FROM MSGPOLI07_DET_FACTURAS
                INNER JOIN PYMINGR31_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07)
                WHERE PYMINGR31_DET_FACTURAS.RELA_PYMINGR30 = PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30), (SELECT CBO_SICINGR01.ENTIDAD
                                                                                                      FROM CBO_SICINGR01
                                                                                                      WHERE CBO_SICINGR01.ID_SICINGR01 = PYMINGR30_CAB_DEPOSITOS.RELA_SICINGR01))),
         SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
         MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
         PYMINGR30_CAB_DEPOSITOS.PYMINGR30_IMPORTE,
         PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP
     FROM PYMINGR30_CAB_DEPOSITOS
     INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
     INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
     INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (PYMINGR30_CAB_DEPOSITOS.RELA_SICCONT02_BANCO = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
     WHERE PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01 = :PARAM_EMPRESA
       AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
       AND PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
       AND PYMINGR30_CAB_DEPOSITOS.PYMINGR30_ANTICIPO = :PARAM_ANTICIPO
     INTO
         :RELA_SOCSYST01,
         :RELA_SOCWFLO01,
         :RELA_SICINGR01,
         :RELA_SICCONT02_BANCO,
         :RELA_MSGPOLI01,
         :ID_PYMINGR30,
         :SUCURSAL,
         :CLIENTE,
         :BANCO,
         :CONCEPTO,
         :TOTAL,
         :FECHA
   DO
   BEGIN
       IF (:PARAM_ANTICIPO = 1) THEN
         FOR
           SELECT
               PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
               (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
                FROM PYMINGR18_DEP_FACTELECT
                WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
               PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
               PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE
           FROM PYMINGR16_MOV_ANTICIPOS
           INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
           WHERE PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = :RELA_MSGPOLI01
           INTO
               :DOCNRO,
               :FOLIOELECT,
               :FECHA_FACT,
               :IMPORTE
         DO
         BEGIN
           SUSPEND;
         END
       ELSE
         FOR
           SELECT
               PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
               (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
                FROM PYMINGR18_DEP_FACTELECT
                WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
               PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
               PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE
           FROM PYMINGR31_DET_FACTURAS
           INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
           INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
           WHERE PYMINGR31_DET_FACTURAS.RELA_PYMINGR30 = :ID_PYMINGR30
           INTO
               :DOCNRO,
               :FOLIOELECT,
               :FECHA_FACT,
               :IMPORTE
         DO
         BEGIN
           SUSPEND;
         END
   END
END
REP_SICINGR01_CARTERA          

DECLARE VARIABLE IMPORTE_PARCIAL DOUBLE PRECISION;
DECLARE VARIABLE SQLUSER VARCHAR(2000);
BEGIN
  DELETE FROM ZTMPINGR30_DEPOSITOS
  WHERE ZTMPINGR30_DEPOSITOS.USUARIO = CURRENT_USER;

  IF (:PARAM_FLAG = 0) THEN
    INSERT INTO ZTMPINGR30_DEPOSITOS
      SELECT
        CURRENT_USER,
        PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07,
        NULL,
        SUM(PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE)
      FROM PYMINGR30_CAB_DEPOSITOS
      INNER JOIN PYMINGR31_DET_FACTURAS ON (PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 = PYMINGR31_DET_FACTURAS.RELA_PYMINGR30)
      WHERE PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      GROUP BY PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07;
  ELSE
    INSERT INTO ZTMPINGR30_DEPOSITOS
      SELECT
        CURRENT_USER,
        PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07,
        PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP,
        PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE
      FROM PYMINGR30_CAB_DEPOSITOS
      INNER JOIN PYMINGR31_DET_FACTURAS ON (PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 = PYMINGR31_DET_FACTURAS.RELA_PYMINGR30)
      WHERE PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA;

  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :ENTIDAD;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :SUCURSAL;

  SQLUSER = 'SELECT
                 MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07,
                 MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
                 (SELECT FIRST 1 PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
                  FROM PYMINGR18_DEP_FACTELECT
                  WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01
                    AND PYMINGR18_DEP_FACTELECT.PYMINGR18_CANCELADO IS NULL),
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
                 MONEDA.SOCSYST10_CODIGO,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
                 INVL(SICINGR01_CAB_CLIENTES.SICINGR01_DIAS_CREDITO,0),
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC + INVL(SICINGR01_CAB_CLIENTES.SICINGR01_DIAS_CREDITO,0),
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL
             FROM PYMINGR01_CAB_FACTURAS
             INNER JOIN SICINGR01_CAB_CLIENTES ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = SICINGR01_CAB_CLIENTES.ID_SICINGR01)
             INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_fACTURAS.RELA_MSGPOLI01)
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPODOC ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_TIPO = TIPODOC.ID_SOCSYST10)
             WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             ' AND PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = ' || :PARAM_MONEDA ||
             ' AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA ||
             ' AND TIPODOC.SOCSYST10_CODIGO = ''F''' ||
             ' AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL';

  IF (:PARAM_ID != -1) THEN
    SQLUSER = SQLUSER || ' AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = ' || :PARAM_ID;

  FOR EXECUTE STATEMENT :SQLUSER
  INTO
       :RELA_MSGPOLI07,
       :CLIENTE,
       :FOLIO,
       :FOLIO_ELECT,
       :FECHA,
       :MONEDA,
       :TIPOCAMBIO,
       :DIASCREDITO,
       :FECHAPAGO,
       :IMPORTE_REAL
  DO
  BEGIN
    FECHADEPOSITO = NULL;
    IMPORTE_DEPOSITO = 0;
    IMPORTE_PARCIAL = 0;
    ALCORRIENTE = 0;
    MENOS30 = 0;
    MENOS60 = 0;
    MENOS90 = 0;
    MAS90 = 0;

    IF (:PARAM_FLAG = 0) THEN
      BEGIN
        SELECT ZTMPINGR30_DEPOSITOS.IMPORTE
        FROM ZTMPINGR30_DEPOSITOS
        WHERE ZTMPINGR30_DEPOSITOS.ID_MSGPOLI07 = :RELA_MSGPOLI07
          AND ZTMPINGR30_DEPOSITOS.USUARIO = CURRENT_USER
        INTO :IMPORTE_DEPOSITO;

        IF (:IMPORTE_DEPOSITO IS NULL) THEN
          IMPORTE_DEPOSITO = 0;

        IF (:IMPORTE_REAL != IMPORTE_DEPOSITO) THEN
          BEGIN
            DIAS = DAYSBETWEEN(:FECHA, 'NOW') - DIASCREDITO;

            IF (:DIAS <= 0) THEN
              ALCORRIENTE = IMPORTE_REAL;
            ELSE
              IF (:DIAS < 30) THEN
                MENOS30 = IMPORTE_REAL;
              ELSE
                IF (:DIAS >= 30 AND :DIAS < 60) THEN
                  MENOS60 = IMPORTE_REAL;
                ELSE
                  IF (:DIAS >= 60 AND :DIAS < 90) THEN
                    MENOS90 = IMPORTE_REAL;
                  ELSE
                    MAS90 = IMPORTE_REAL;

            SUSPEND;
          END
      END
    ELSE
      BEGIN
        FOR
          SELECT
              ZTMPINGR30_DEPOSITOS.FECHA,
              ZTMPINGR30_DEPOSITOS.IMPORTE
          FROM ZTMPINGR30_DEPOSITOS
          WHERE ZTMPINGR30_DEPOSITOS.ID_MSGPOLI07 = :RELA_MSGPOLI07
            AND ZTMPINGR30_DEPOSITOS.USUARIO = CURRENT_USER
          INTO
              :FECHADEPOSITO,
              :IMPORTE_PARCIAL
        DO
        BEGIN
          IMPORTE_DEPOSITO = IMPORTE_DEPOSITO + IMPORTE_PARCIAL;
          DIAS = DAYSBETWEEN(:FECHA,:FECHADEPOSITO) - DIASCREDITO;

          IF (:DIAS <= 0) THEN
            ALCORRIENTE = IMPORTE_PARCIAL;
          ELSE
            IF (:DIAS < 30) THEN
              MENOS30 = IMPORTE_PARCIAL;
            ELSE
              IF (:DIAS >= 30 AND :DIAS < 60) THEN
                MENOS60 = IMPORTE_PARCIAL;
              ELSE
                IF (:DIAS >= 60 AND :DIAS < 90) THEN
                  MENOS90 = IMPORTE_PARCIAL;
                ELSE
                  MAS90 = IMPORTE_PARCIAL;
        END

        IF (:IMPORTE_REAL != IMPORTE_DEPOSITO) THEN
          BEGIN
            DIAS = DAYSBETWEEN(:FECHA, 'NOW') - DIASCREDITO;

            IF (:DIAS <= 0) THEN
              ALCORRIENTE = IMPORTE_REAL;
            ELSE
              IF (:DIAS < 30) THEN
                MENOS30 = IMPORTE_REAL;
              ELSE
                IF (:DIAS >= 30 AND :DIAS < 60) THEN
                  MENOS60 = IMPORTE_REAL;
                ELSE
                  IF (:DIAS >= 60 AND :DIAS < 90) THEN
                    MENOS90 = IMPORTE_REAL;
                  ELSE
                    MAS90 = IMPORTE_REAL;

            SUSPEND;
          END
      END
  END
END
CBO_BANCOS_FILTRO              

begin   
    if (upper(tipo) = 'C') then /* CLIENTE */
    BEGIN
        FOR SELECT
        GRID_SICINGR03_CUENTAS.id_sicingr03,
        GRID_SICINGR03_CUENTAS.rela_socsyst10_moneda,
        GRID_SICINGR03_CUENTAS.rela_socsyst10,
        GRID_SICINGR03_CUENTAS.banco,
        GRID_SICINGR03_CUENTAS.banco_sat,
        GRID_SICINGR03_CUENTAS.sicingr03_nrocta,
        GRID_SICINGR03_CUENTAS.sicingr03_default,
        GRID_SICINGR03_CUENTAS.moneda,
        GRID_SICINGR03_CUENTAS.moneda_sat
        FROM GRID_SICINGR03_CUENTAS
        WHERE GRID_SICINGR03_CUENTAS.rela_sicingr01 = :RELA
        INTO :id, 
             :RELA_SOCSYST10_MONEDA,
             :ID_SOCSYST10,
             :BANCO,
             :banco_sat,
             :CUENTA,
             :CUENTA_DF,
             :moneda,
             :moneda_sat
        DO
        BEGIN
            SELECT
            cbo_monedas_cotizacion.siccont04_compra,
            cbo_monedas_cotizacion.siccont04_venta
            FROM cbo_monedas_cotizacion
            WHERE cbo_monedas_cotizacion.rela_socsyst01 = :empresa
            and cbo_monedas_cotizacion.id_socsyst10 = :RELA_SOCSYST10_MONEDA
            INTO :compra, 
                 :venta;

            descripcion = BANCO || ' - ' || CUENTA || ' (' || moneda || ')';

            suspend;
        END
    END
    else if (upper(tipo) = 'P') then /* PROVEEDOR */
    BEGIN
        FOR SELECT
        GRID_SICEGRE03_CUENTAS.id_sicegre03,
        GRID_SICEGRE03_CUENTAS.rela_socsyst10_moneda,
        GRID_SICEGRE03_CUENTAS.rela_socsyst10,
        GRID_SICEGRE03_CUENTAS.banco,
        GRID_SICEGRE03_CUENTAS.banco_sat,
        GRID_SICEGRE03_CUENTAS.SICEGRE03_nrocta,
        GRID_SICEGRE03_CUENTAS.SICEGRE03_default,
        GRID_SICEGRE03_CUENTAS.moneda,
        GRID_SICEGRE03_CUENTAS.moneda_sat
        FROM GRID_SICEGRE03_CUENTAS
        WHERE GRID_SICEGRE03_CUENTAS.rela_sicegre01 = :RELA
        INTO :ID,
             :RELA_SOCSYST10_MONEDA,
             :ID_SOCSYST10,
             :BANCO,
             :banco_sat,
             :CUENTA,
             :CUENTA_DF,
             :moneda,
             :moneda_sat
        DO
        BEGIN
            SELECT
            cbo_monedas_cotizacion.siccont04_compra,
            cbo_monedas_cotizacion.siccont04_venta
            FROM cbo_monedas_cotizacion
            WHERE cbo_monedas_cotizacion.rela_socsyst01 = :empresa
            and cbo_monedas_cotizacion.id_socsyst10 = :RELA_SOCSYST10_MONEDA
            INTO :compra, 
                 :venta;

            descripcion = BANCO || ' - ' || CUENTA || ' (' || moneda || ')';

            suspend;
        END
    END
    else if (upper(tipo) = 'E') then /* EMPLEADO */
    BEGIN
        FOR SELECT
        GRID_SRHMAIN15_CUENTAS.id_srhmain15,
        GRID_SRHMAIN15_CUENTAS.rela_socsyst10_moneda,
        GRID_SRHMAIN15_CUENTAS.rela_socsyst10,
        GRID_SRHMAIN15_CUENTAS.banco,
        GRID_SRHMAIN15_CUENTAS.banco_sat,
        GRID_SRHMAIN15_CUENTAS.SRHMAIN15_nrocta,
        GRID_SRHMAIN15_CUENTAS.SRHMAIN15_default,
        GRID_SRHMAIN15_CUENTAS.moneda,
        GRID_SRHMAIN15_CUENTAS.moneda_sat
        FROM GRID_SRHMAIN15_CUENTAS
        WHERE GRID_SRHMAIN15_CUENTAS.rela_srhmain10 = :RELA
        INTO :id, 
             :RELA_SOCSYST10_MONEDA,
             :ID_SOCSYST10,
             :BANCO,
             :banco_sat,
             :CUENTA,
             :CUENTA_DF,
             :moneda,
             :moneda_sat
        DO
        BEGIN
            SELECT
            cbo_monedas_cotizacion.siccont04_compra,
            cbo_monedas_cotizacion.siccont04_venta
            FROM cbo_monedas_cotizacion
            WHERE cbo_monedas_cotizacion.rela_socsyst01 = :empresa
            and cbo_monedas_cotizacion.id_socsyst10 = :RELA_SOCSYST10_MONEDA
            INTO :compra, 
                 :venta;

            descripcion = BANCO || ' - ' || CUENTA || ' (' || moneda || ')';

            suspend;
        END
    END
end
REP_PYMINVE25_ORDENCOMPRA      

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :RELA_SOCUSUA02,
     :EMPRESA,
     :LOGO;

  SELECT
      PRD_DATOS_ENTIDADES.CALLE,
      PRD_DATOS_ENTIDADES.NRO,
      PRD_DATOS_ENTIDADES.PISO,
      PRD_DATOS_ENTIDADES.NROINT,
      PRD_DATOS_ENTIDADES.CP,
      PRD_DATOS_ENTIDADES.TELEFONOS,
      PRD_DATOS_ENTIDADES.CELULAR,
      PRD_DATOS_ENTIDADES.FAX,
      PRD_DATOS_ENTIDADES.EMAIL,
      PRD_DATOS_ENTIDADES.LOCALIDAD,
      PRD_DATOS_ENTIDADES.ESTADO,
      PRD_DATOS_ENTIDADES.CIUDAD,
      PRD_DATOS_ENTIDADES.PAIS,
      PRD_DATOS_ENTIDADES.DIRECCION,
      PRD_DATOS_ENTIDADES.LUGAR
  FROM PRD_DATOS_ENTIDADES(:RELA_SOCUSUA02, -1)
  INTO
      :CALLE_EMPRESA,
      :NRO_EMPRESA,
      :PISO_EMPRESA,
      :NROINT_EMPRESA,
      :CP_EMPRESA,
      :TELEFONOS_EMPRESA,
      :CELULAR_EMPRESA,
      :FAX_EMPRESA,
      :EMAIL_EMPRESA,
      :LOCALIDAD_EMPRESA,
      :ESTADO_EMPRESA,
      :CIUDAD_EMPRESA,
      :PAIS_EMPRESA,
      :DIRECCION_EMPRESA,
      :LUGAR_EMPRESA;

  SELECT REP_SOCUSUA40_ALL.SOCUSUA40_NUMERO
  FROM REP_SOCUSUA40_ALL(:PARAM_EMPRESA)
  WHERE REP_SOCUSUA40_ALL.SOCSYST10_CODIGO = 'RFC'
  INTO :RFC_EMPRESA;

  SELECT
      PRD_SICEGRE01.SOCUSUA02_ENTIDAD,
      PRD_SICEGRE01.SOCUSUA20_SOCUSUA30_RFC,
      PRD_SICEGRE01.SOCUSUA41_DOMICILIO,
      PRD_SICEGRE01.SOCUSUA41_CALLE,
      PRD_SICEGRE01.SOCUSUA41_NRODOMICILIO,
      PRD_SICEGRE01.SOCUSUA41_COLONIA,
      PRD_SICEGRE01.SOCUSUA41_DEPTO,
      PRD_SICEGRE01.SOCUSUA41_PISO,
      PRD_SICEGRE01.SOCUSUA41_TELEFONO,
      PRD_SICEGRE01.SOCUSUA41_CORREO,
      PRD_SICEGRE01.SOCUSUA41_CP,
      PRD_SICEGRE01.SOCUSUA50_CIUDAD
  FROM PRD_SICEGRE01(:PARAM_PROVEEDOR)
  INTO
      :PROVEEDOR,
      :RFC,
      :DIRECCION,
      :CALLE,
      :NRODOMICILIO,
      :COLONIA,
      :DEPTO,
      :PISO,
      :TELEFONO,
      :CORREO,
      :CP,
      :CIUDAD;

  SELECT
      PYMINVE25_CAB_PEDIDOS.RELA_SOCSYST01,
      PYMINVE25_CAB_PEDIDOS.RELA_SICEGRE01,
      PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25,
      SNVL(PYMINVE25_CAB_PEDIDOS.PYMINVE25_DOCNRO, ''),
      PYMINVE25_CAB_PEDIDOS.PYMINVE25_FENTREGA,
      PYMINVE25_CAB_PEDIDOS.PYMINVE25_NOTAS,
      SGPINGR01_CAB_PROSPECTOS.SGPINGR01_RESUMEN,
      VR_ENTIDADES_ALL.ENTIDAD,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_DOCNRO,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_RESUMEN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_ORDCOMPRA,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FFIN,
      SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
  FROM PYMINVE25_CAB_PEDIDOS
  INNER JOIN SGPINTE01_DET_INTERFACEPYME ON (PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25 = SGPINTE01_DET_INTERFACEPYME.RELA_PYMINVE25)
  INNER JOIN SGPINGR01_CAB_PROSPECTOS ON (SGPINTE01_DET_INTERFACEPYME.RELA_SGPINGR01 = SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01)
  INNER JOIN VR_ENTIDADES_ALL ON (SGPINGR01_CAB_PROSPECTOS.RELA_SOCUSUA02 = VR_ENTIDADES_ALL.ID_SOCUSUA02)
  INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SGPINGR04_CAB_COTIZACION.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
  WHERE PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25 = :PARAM_PYMINVE25
  INTO
     :RELA_SOCSYST01,
     :RELA_SICEGRE01,
     :ID_PYMINVE25,
     :PYMINVE25_DOCNRO,
     :PYMINVE25_FENTREGA,
     :PYMINVE25_NOTAS,
     :PROYECTO,
     :REFERENCIA,
     :SGPINGR04_DOCNRO,
     :SGPINGR04_RESUMEN,
     :SGPINGR04_ORDCOMPRA,
     :SGPINGR04_FFIN,
     :MONEDA;

  SUSPEND;
END
JAM$_CREAINSTANCIANEW          

DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02MODELO BIGINT;
DECLARE VARIABLE IDSOCSYST01 BIGINT;
DECLARE VARIABLE REGFISCALDESC VARCHAR(200);
begin
    select socsyst01_cab_clientes.rela_socusua02
    from socsyst01_cab_clientes
    where socsyst01_cab_clientes.socsyst01_notas = 'ON2'
    into :rela_socusua02Modelo;

    select socsyst01_cab_clientes.id_socsyst01, socsyst01_cab_clientes.socsyst01_descri
    from socsyst01_cab_clientes
    where socsyst01_cab_clientes.socsyst01_notas = :REGFISCAL
    into :idsocsyst01, :regfiscaldesc;

    select socusua02_mae_usuarios.id_socusua02
    from socusua02_mae_usuarios
    where socusua02_mae_usuarios.socusua02_usuario = :USUARIO_DEFAULT
    into :id_socusua02;

    update SOCWFLO01_ARB_ORGANIGRAMA set SOCWFLO01_ARB_ORGANIGRAMA.socwflo01_descri = :CLIENTE_NOMBRE
    where SOCWFLO01_ARB_ORGANIGRAMA.socwflo01_codigo = '1';
            
    update socusua02_mae_usuarios SET socusua02_mae_usuarios.SOCUSUA02_USUARIO = :USUARIO,
                                      socusua02_mae_usuarios.socusua02_password = :CLAVE
    where socusua02_mae_usuarios.id_socusua02 = :id_socusua02;
        
    select JAM$_USER_ADD.ok
    from JAM$_USER_ADD(:USUARIO,
                       :CLAVE,
                       :INSTANCIA || '=1964',
                       'ON2-Usuario Titular',
                       'ON2-Creado en la Instancia')
    into OK;

    update SOCSYST01_CAB_CLIENTES set SOCSYST01_CAB_CLIENTES.socsyst01_modelo = 1,
                                      SOCSYST01_CAB_CLIENTES.socsyst01_propietario = 0;

    update SOCSYST01_CAB_CLIENTES set SOCSYST01_CAB_CLIENTES.socsyst01_modelo = 0,
                                      SOCSYST01_CAB_CLIENTES.socsyst01_propietario = 1,
                                      SOCSYST01_CAB_CLIENTES.socsyst01_descri = :CLIENTE_NOMBRE,
                                      SOCSYST01_CAB_CLIENTES.rela_socusua02 = :id_socusua02
    where SOCSYST01_CAB_CLIENTES.id_socsyst01 = :IDSOCSYST01;

    update socwflo01_arb_organigrama set socwflo01_arb_organigrama.rela_socsyst01 = :IDSOCSYST01;

    update SOCSYST14_DET_PARAMETROS set SOCSYST14_DET_PARAMETROS.socsyst14_param_int = :id_socusua02
    where SOCSYST14_DET_PARAMETROS.socsyst14_param_int = :rela_socusua02Modelo;

     insert into socsyst08_det_regfiscales(socsyst08_det_regfiscales.rela_socsyst01,
                                           socsyst08_det_regfiscales.rela_socsyst01_regi,
                                           socsyst08_det_regfiscales.socsyst08_regfiscal)
            values (:IDSOCSYST01, :IDSOCSYST01, :regfiscaldesc);
    suspend;
end
REP_MSGPOLI23_ISR_IETU         

BEGIN
  SELECT
      CBO_CLIENTES_EMPRESAS.ID_SOCSYST01,
      CBO_CLIENTES_EMPRESAS.SOCSYST01_DESCRI
  FROM CBO_CLIENTES_EMPRESAS
  WHERE CBO_CLIENTES_EMPRESAS.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :RELA_SOCSYST01,
     :EMPRESA;

  FOR
    SELECT
        CBO_MESES.SOCSYST10_FILTRO_DES,
        CBO_MESES.SOCSYST10_CODIGO,
        CBO_MESES.ID_SOCSYST10
    FROM CBO_MESES
    INTO
       :MES,
       :CODIGO,
       :ID_SOCSYST10
  DO
  BEGIN
     SELECT SUM(MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE)
     FROM MSGPOLI23_DET_BITACORA
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
     WHERE MSGPOLI23_DET_BITACORA.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :PARAM_ANIO
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :CODIGO
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
        AND (MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-ISR1'
            OR (MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-ISR2')
            OR (MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-ISR3'))
     INTO :IMPORTE_ISR;

     IF (IMPORTE_ISR IS NULL) THEN
        IMPORTE_ISR = 0;

     SELECT SUM(MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE)
     FROM MSGPOLI23_DET_BITACORA
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
     WHERE MSGPOLI23_DET_BITACORA.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :PARAM_ANIO
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :CODIGO
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
        AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-IETU'
     INTO :IMPORTE_IETU;

     IF (IMPORTE_IETU IS NULL) THEN
        IMPORTE_IETU = 0;

     SUSPEND;
  END
END
PRD_ON2REGI04_CORRIJE_CORREOS  

DECLARE VARIABLE INTPOS INTEGER;
begin
    FOR SELECT
    ON2REGI04_CAP_MARKETING.on2regi04_correo, ON2REGI04_CAP_MARKETING.id_on2regi04
    FROM ON2REGI04_CAP_MARKETING
    INTO :CORREO, :ID_ON2REGI04
    DO
    BEGIN
        
        usuario = null;
        servidor = null;
        correo = rlower(trim(correo));
        intpos = strpos('@', CORREO);

        if (intpos <> 0) then
        begin
            usuario = rlower(trim(substr(CORREO,1, intpos-1)));
            servidor = rlower(trim(substr(CORREO, intpos+1,strlen(CORREO))));
        end

        if ((strpos('@', servidor) <> 0) or
            (strpos('`', correo) <> 0) or
            (strpos(',', correo) <> 0) or
            (strpos(';', correo) <> 0) or
            (strpos('<', correo) <> 0) or
            (strpos('>', correo) <> 0) or
            (strpos('?', correo) <> 0) or
            (strpos('¿', correo) <> 0) or
            (strpos('!', correo) <> 0) or
            (strpos('¡', correo) <> 0) or
            (strpos('(', correo) <> 0) or
            (strpos(')', correo) <> 0)) then
        begin
            usuario = null;
            servidor = null;            
        end

        if ((strpos('.com', correo) = 0) and
            (strpos('.net', correo) = 0) and
            (strpos('.gov', correo) = 0) and
            (strpos('.org', correo) = 0) and
            (strpos('.edu', correo) = 0) and
            (strpos('.es', correo) = 0) and
            (strpos('.fr', correo) = 0) and
            (strpos('.it', correo) = 0) and
            (strpos('.gob', correo) = 0)) then
         begin
            usuario = null;
            servidor = null;            
         end

        if (validos = 1 and servidor is not null and usuario is not null) then
            suspend;
        else if (validos = 0 and servidor is null and usuario is null) then
            suspend;

    END
end
REP_PYMINVE10_INVENTARIOFIS    

BEGIN
    FOR
      SELECT
          PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01,
          PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10,
          SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO
      FROM PYMINVE10_CAB_PRODUCTOS
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
      INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
      INTO
          :RELA_SOCSYST01,
          :ID_PYMINVE10,
          :EMPRESA,
          :CATEGORIA,
          :FAMILIA,
          :PRODUCTO,
          :PRODUCTO_CODIGO
    DO
    BEGIN
        SUSPEND;
    END
END
PRD_PYMINGR01_JDV              

DECLARE VARIABLE SOCSYST10_CODIGO VARCHAR(50);
DECLARE VARIABLE PYMINGR03_DOCUMENTO VARCHAR(50);
DECLARE VARIABLE PYMVENT38_DOCUMENTO VARCHAR(50);
DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_CLIENTE BIGINT;
BEGIN
  IF (:MODO = 0) THEN
    BEGIN
      FOR
        SELECT
            SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
            SICINGR01_CAB_CLIENTES.RELA_SOCUSUA02,
            SOCSYST19_DET_ADDENDAS.SOCSYST19_VERSION,
            SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
        FROM PYMINGR01_CAB_FACTURAS
        INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
        INNER JOIN SOCSYST19_DET_ADDENDAS ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST19_DET_ADDENDAS.RELA_SOCSYST01)
        INNER JOIN SICINGR01_CAB_CLIENTES ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = SICINGR01_CAB_CLIENTES.ID_SICINGR01)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :ID
          AND SOCSYST19_DET_ADDENDAS.RELA_SICINGR01 = PYMINGR01_CAB_FACTURAS.RELA_SICINGR01
        INTO
            :RELA_SOCUSUA02,
            :RELA_SOCUSUA02_CLIENTE,
            :VERSION,
            :MONEDA
      DO
      BEGIN
        SELECT FIRST 1 REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO
        FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'IDPROVE'
        INTO :NOPROVEEDOR;

        SELECT FIRST 1 REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_CODEXT
        FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02_CLIENTE)
        WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
        INTO :SOCIEDAD;

        SELECT FIRST 1 REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_MAIL_PERSO
        FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02_CLIENTE)
        INTO :EMAIL;

        FOR
          SELECT
              SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
              PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
          FROM PYMINGR03_DET_REFERENCIAS
          INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
          WHERE PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = :ID
            AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO LIKE 'JDV%'
          INTO
              :SOCSYST10_CODIGO,
              :PYMINGR03_DOCUMENTO
        DO
        BEGIN
          IF (:SOCSYST10_CODIGO = 'JDV-NOPEDIDO') THEN
            NOPEDIDO = :PYMINGR03_DOCUMENTO;
          ELSE IF (:SOCSYST10_CODIGO = 'JDV-NOENTRADA') THEN
            NOENTRADA = :PYMINGR03_DOCUMENTO;
          ELSE IF (:SOCSYST10_CODIGO = 'JDV-NOREMISION') THEN
            NOREMISION = :PYMINGR03_DOCUMENTO;
        END

        SUSPEND;
      END
    END
  ELSE IF (:MODO = 1) THEN
    BEGIN
      FOR
        SELECT
            SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
            SOCSYST19_DET_ADDENDAS.SOCSYST19_VERSION,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CODEXT,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CORRERO,
            'MXN'
        FROM PYMVENT20_CAB_TICKETS
        INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
        INNER JOIN SOCSYST19_DET_ADDENDAS ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = SOCSYST19_DET_ADDENDAS.RELA_SOCSYST01)
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :ID
          AND SOCSYST19_DET_ADDENDAS.RELA_SICINGR01 = PYMVENT20_CAB_TICKETS.RELA_PYMVENT24
        INTO
            :RELA_SOCUSUA02,
            :VERSION,
            :SOCIEDAD,
            :EMAIL,
            :MONEDA
      DO
      BEGIN
        SELECT FIRST 1 REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO
        FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'IDPROVE'
        INTO :NOPROVEEDOR;

        FOR
          SELECT
              SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
              PYMVENT38_DET_DOCUMENTOS.PYMVENT38_DOCUMENTO
          FROM SOCSYST10_TBL_LISTAESTADOS
          INNER JOIN PYMVENT38_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = PYMVENT38_DET_DOCUMENTOS.RELA_SOCSYST10)
          INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT38_DET_DOCUMENTOS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
          WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :ID
            AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO LIKE 'JDV%'
          INTO
              :SOCSYST10_CODIGO,
              :PYMVENT38_DOCUMENTO
        DO
        BEGIN
          IF (:SOCSYST10_CODIGO = 'JDV-NOPEDIDO') THEN
            NOPEDIDO = :PYMVENT38_DOCUMENTO;
          ELSE IF (:SOCSYST10_CODIGO = 'JDV-NOENTRADA') THEN
            NOENTRADA = :PYMVENT38_DOCUMENTO;
          ELSE IF (:SOCSYST10_CODIGO = 'JDV-NOREMISION') THEN
            NOREMISION = :PYMVENT38_DOCUMENTO;
        END

        SUSPEND;
      END
    END
  ELSE IF (:MODO = 2) THEN
    BEGIN
      FOR
        SELECT
            SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
            SOCSYST19_DET_ADDENDAS.SOCSYST19_VERSION,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CODEXT,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CORRERO,
            ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_VEHICULO,
            ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_POLIZA,
            ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_SINIESTRO,
            SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
        FROM ON2CFDS10_CAB_FACTURAS
        INNER JOIN SOCSYST01_CAB_CLIENTES ON (ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
        INNER JOIN SOCSYST19_DET_ADDENDAS ON (ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST19_DET_ADDENDAS.RELA_SOCSYST01)
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (ON2CFDS10_CAB_FACTURAS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        INNER JOIN ON2CFDS14_DEP_ADDENDAS ON (ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = ON2CFDS14_DEP_ADDENDAS.RELA_ON2CFDS10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (ON2CFDS14_DEP_ADDENDAS.RELA_SOCSYST10_MONEDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        WHERE ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = :ID
          AND SOCSYST19_DET_ADDENDAS.RELA_SICINGR01 = ON2CFDS10_CAB_FACTURAS.RELA_PYMVENT24
        INTO
            :RELA_SOCUSUA02,
            :VERSION,
            :SOCIEDAD,
            :EMAIL,
            :NOPEDIDO,
            :NOENTRADA,
            :NOREMISION,
            :MONEDA
      DO
      BEGIN
        SELECT FIRST 1 REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO
        FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'IDPROVE'
        INTO :NOPROVEEDOR;

        SUSPEND;
      END
    END
END
PRD_PYMINVE10_ACTUALIZA        

DECLARE VARIABLE ID_PYMINVE10 BIGINT;
DECLARE VARIABLE PYMINVE10_PCOSTO DOUBLE PRECISION;
DECLARE VARIABLE PYMINVE10_UTILIDAD DOUBLE PRECISION;
DECLARE VARIABLE PYMINVE10_PVENTA DOUBLE PRECISION;
DECLARE VARIABLE ID_PYMINVE15 BIGINT;
DECLARE VARIABLE PYMINVE15_PORCENTAJE DOUBLE PRECISION;
DECLARE VARIABLE PYMINVE15_PRECIO DOUBLE PRECISION;
BEGIN
  FOR
    SELECT
        PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO + ((PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD) / 100)
    FROM PYMINVE10_CAB_PRODUCTOS
    WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
    INTO
        :ID_PYMINVE10,
        :PYMINVE10_PCOSTO,
        :PYMINVE10_UTILIDAD,
        :PYMINVE10_PVENTA
  DO
  BEGIN
    PYMINVE10_PVENTA = :PYMINVE10_PVENTA + (:PYMINVE10_PVENTA * (:PARAM_PORCENTAJE / 100));
    PYMINVE10_UTILIDAD = :PYMINVE10_PVENTA - :PYMINVE10_PCOSTO;
    PYMINVE10_UTILIDAD = (:PYMINVE10_UTILIDAD / :PYMINVE10_PCOSTO) * 100;

    UPDATE PYMINVE10_CAB_PRODUCTOS SET PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD = :PYMINVE10_UTILIDAD
    WHERE PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = :ID_PYMINVE10;

    IF (:PARAM_TIPO = 1) THEN
      BEGIN
        FOR
          SELECT
              PYMINVE15_DET_PRECIOS.ID_PYMINVE15,
              PYMINVE15_DET_PRECIOS.PYMINVE15_PORCENTAJE,
              PYMINVE15_DET_PRECIOS.PYMINVE15_PRECIO
          FROM PYMINVE15_DET_PRECIOS
          WHERE PYMINVE15_DET_PRECIOS.RELA_PYMINVE10 = :ID_PYMINVE10
          INTO
              :ID_PYMINVE15,
              :PYMINVE15_PORCENTAJE,
              :PYMINVE15_PRECIO
        DO
        BEGIN
          PYMINVE15_PRECIO = :PYMINVE15_PRECIO + (:PYMINVE15_PRECIO * (:PARAM_PORCENTAJE / 100));
          PYMINVE15_PORCENTAJE = (((:PYMINVE15_PRECIO * 100) / :PYMINVE10_PCOSTO) - 100);

          UPDATE PYMINVE15_DET_PRECIOS SET PYMINVE15_DET_PRECIOS.PYMINVE15_PORCENTAJE = :PYMINVE15_PORCENTAJE, PYMINVE15_DET_PRECIOS.PYMINVE15_PRECIO = :PYMINVE15_PRECIO
          WHERE PYMINVE15_DET_PRECIOS.ID_PYMINVE15 = :ID_PYMINVE15;
        END
      END
  END

  OK = 1;

  SUSPEND;
END
REP_MSGPOLI01_AUXILIAR         

DECLARE VARIABLE ID_EXISTE BIGINT;
DECLARE VARIABLE EXT VARCHAR(1);
BEGIN
  IF (:PARAM_TIPO = 1) THEN
    BEGIN
      DELETE FROM ZTMPCONT02_SALDOACUMULADO
      WHERE ZTMPCONT02_SALDOACUMULADO.USUARIO = CURRENT_USER;

      INSERT INTO ZTMPCONT02_SALDOACUMULADO
        SELECT
            CURRENT_USER,
            MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
            MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
            DNVL(SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE + (MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER * -1)), 0)
        FROM MSGPOLI01_CAB_POLIZAS
        INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPOPOLIZA ON (MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION = TIPOPOLIZA.ID_SOCSYST10)
        WHERE MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA < ENCODEDATE(:PARAM_MES, 1, :PARAM_ANO)
          AND TIPOPOLIZA.SOCSYST10_CODIGO_EXT1 = 'XMLS'
        GROUP BY
            MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
            MSGPOLI02_DET_POLIZAS.RELA_SICCONT02;
    END

  SELECT
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_NROCERTIFICADO
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCUSUA02,
      :RELA_SOCSYST01,
      :EMPRESA,
      :NROCERTIFICADO;

  SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO
  FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
  WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
  INTO :RFC;

  FOR
    SELECT
        MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
        MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
        MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
        MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01,
        MSGPOLI02_DET_POLIZAS.RELA_SRHMAIN10,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
        SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE),
        SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER),
        MONEDA.SOCSYST10_FILTRO_DES,
        MSGPOLI02_DET_POLIZAS.MSGPOLI02_COTIZA
    FROM MSGPOLI01_CAB_POLIZAS
    INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
    INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPOPOLIZA ON (MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION = TIPOPOLIZA.ID_SOCSYST10)
    WHERE MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND MSGPOLI02_DET_POLIZAS.MSGPOLI02_MES = :PARAM_MES
      AND MSGPOLI02_DET_POLIZAS.MSGPOLI02_ANO = :PARAM_ANO
      AND TIPOPOLIZA.SOCSYST10_CODIGO_EXT1 = 'XMLS'
    GROUP BY
        MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
        MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
        MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
        MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01,
        MSGPOLI02_DET_POLIZAS.RELA_SRHMAIN10,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
        MONEDA.SOCSYST10_FILTRO_DES,
        MSGPOLI02_DET_POLIZAS.MSGPOLI02_COTIZA
    INTO
        :RELA_MSGPOLI01,
        :RELA_SICCONT02,
        :RELA_SICINGR01,
        :RELA_SICEGRE01,
        :RELA_SRHMAIN10,
        :CONCEPTO,
        :DOCNRO,
        :FECHA,
        :CODIGO_CTA,
        :CUENTA,
        :DEBE,
        :HABER,
        :MONEDA,
        :COTIZA
  DO
  BEGIN
    UUID = '';
    RFC_CLI = '';
    MONTO = 0;
    SALDOANTERIOR = 0;
    SALDOFIN = 0;
    TIPO = 'Nacional';
    ID_EXISTE = NULL;
    EXT = NULL;

    SELECT FIRST 1 SCEXMLS11_DET_MIGRACION.RELA_MSGPOLI01
    FROM SCEXMLS11_DET_MIGRACION
    WHERE SCEXMLS11_DET_MIGRACION.RELA_MSGPOLI01 = :RELA_MSGPOLI01
    INTO :ID_EXISTE;

    IF (:ID_EXISTE IS NULL) THEN
      BEGIN
        IF (:RELA_SICINGR01 IS NOT NULL) THEN
          SELECT SNVL(MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA, '')
          FROM MSGPOLI13_DET_REFERENCIAS
          INNER JOIN SOCSYST10_TBL_LISTAESTADOS UUID ON (MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10 = UUID.ID_SOCSYST10)
          WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :RELA_SICCONT02
            AND UUID.SOCSYST10_FILTRO_COD = 'UUID-CLIENTE'
          INTO :UUID;

        IF (:RELA_SICEGRE01 IS NOT NULL) THEN
          SELECT SNVL(MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA, '')
          FROM MSGPOLI13_DET_REFERENCIAS
          INNER JOIN SOCSYST10_TBL_LISTAESTADOS UUID ON (MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10 = UUID.ID_SOCSYST10)
          WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :RELA_SICCONT02
            AND UUID.SOCSYST10_FILTRO_COD = 'UUID-PROVE'
          INTO :UUID;

        IF (:RELA_SRHMAIN10 IS NOT NULL) THEN
          SELECT SNVL(MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA, '')
          FROM MSGPOLI13_DET_REFERENCIAS
          INNER JOIN SOCSYST10_TBL_LISTAESTADOS UUID ON (MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10 = UUID.ID_SOCSYST10)
          WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :RELA_SICCONT02
            AND UUID.SOCSYST10_FILTRO_COD = 'UUID-NOMI'
          INTO :UUID;

        SELECT SNVL(MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA, '')
        FROM MSGPOLI13_DET_REFERENCIAS
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS RFC ON (MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10 = RFC.ID_SOCSYST10)
        WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :RELA_SICCONT02
          AND RFC.SOCSYST10_FILTRO_COD = 'UUID-R'
        INTO :RFC_CLI;

        SELECT CAST(MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA AS DOUBLE PRECISION)
        FROM MSGPOLI13_DET_REFERENCIAS
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONTO ON (MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10 = MONTO.ID_SOCSYST10)
        WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :RELA_SICCONT02
          AND MONTO.SOCSYST10_FILTRO_COD = 'UUID-M'
        INTO :MONTO;
      END
    ELSE
      BEGIN
        SELECT
            SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID,
            SCEXMLS11_DET_MIGRACION.SCEXMLS11_RFC,
            SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID_IMPORTE,
            SCEXMLS11_DET_MIGRACION.SCEXMLS11_EXTRANJERO
        FROM SCEXMLS11_DET_MIGRACION
        WHERE SCEXMLS11_DET_MIGRACION.RELA_MSGPOLI01 = :RELA_MSGPOLI01
        INTO
            :UUID,
            :RFC_CLI,
            :MONTO,
            :EXT;

        IF (:EXT = 'S') THEN
          TIPO = 'Extranjero';
      END

    IF (:PARAM_TIPO = 1) THEN
      BEGIN
        SELECT ZTMPCONT02_SALDOACUMULADO.ACUMULADO
        FROM ZTMPCONT02_SALDOACUMULADO
        WHERE ZTMPCONT02_SALDOACUMULADO.USUARIO = CURRENT_USER
          AND ZTMPCONT02_SALDOACUMULADO.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND ZTMPCONT02_SALDOACUMULADO.ID_SICCONT02 = :RELA_SICCONT02
        INTO :SALDOANTERIOR;

        IF (:SALDOANTERIOR IS NULL) THEN
          SALDOANTERIOR = 0;

        SALDOFIN = :SALDOANTERIOR + (:DEBE + :HABER);
      END

    SUSPEND;
  END
END
VW_PYMEGRE11_FACTURASNOTAS     

DECLARE VARIABLE IMPORTE_PARCIAL DOUBLE PRECISION;
DECLARE VARIABLE CANCELADO BIGINT;
DECLARE VARIABLE RELA_PYMREFE01 BIGINT;
BEGIN
   IF (:PARAM_TIPO = 1) THEN /* Detalle para las Facturas */
     BEGIN
        FOR
          SELECT /* Devuelve todas las facturas que no esten canceladas */
             PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01,
             PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01,
             PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01,
             PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
             CAST(0 AS INTEGER),
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_CONCEPTO,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL,
             CAST(0.00 AS DOUBLE PRECISION),
             CAST(0.00 AS DOUBLE PRECISION),
             PYMEGRE02_CAB_FACTURAS.RELA_PYMREFE01
          FROM PYMEGRE02_CAB_FACTURAS
          WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
            AND PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = :PARAM_ENTIDAD

          UNION

          SELECT /* Devuelve todas las facturas que correspondan a la cabecera */
             PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01,
             PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01,
             PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01,
             PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
             CAST(1 AS INTEGER),
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_CONCEPTO,
             PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE,
             PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL,
             PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE - PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL,
             PYMEGRE02_CAB_FACTURAS.RELA_PYMREFE01
          FROM PYMEGRE02_CAB_FACTURAS
          INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10
          INTO
              :RELA_SOCSYST01,
              :RELA_SOCWFLO01,
              :RELA_ENTIDAD,
              :ID_DETALLE,
              :MARCA,
              :PYMEGRE11_NRO,
              :PYMEGRE11_FFAC,
              :PYMEGRE11_CONCEPTO,
              :PYMEGRE11_TOTAL,
              :PYMEGRE11_PARCIAL,
              :PYMEGRE11_SALDO,
              :RELA_PYMREFE01
          DO
          BEGIN
            IF (MARCA = 0) THEN
              BEGIN
                IMPORTE_PARCIAL = 0;

                SELECT PYMREFE01_CAB_REFERENCIAS.PYMREFE01_DOCNRO
                FROM PYMREFE01_CAB_REFERENCIAS
                WHERE PYMREFE01_CAB_REFERENCIAS.ID_PYMREFE01 = :RELA_PYMREFE01
                INTO :REFERENCIA;

                FOR
                  SELECT
                    PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
                    DNVL(SUM(PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL),0.00)
                  FROM PYMEGRE11_DET_FACTURASNOTAS
                  INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02)
                  INNER JOIN PYMEGRE10_CAB_CHEQUES ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10)
                  WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = :ID_DETALLE
                  GROUP BY
                    PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO
                  INTO
                      :CANCELADO,
                      :IMPORTE_PARCIAL
                DO

                IF (IMPORTE_PARCIAL IS NULL) THEN
                    IMPORTE_PARCIAL = 0;

                IF (CANCELADO IS NULL) THEN
                    PYMEGRE11_TOTAL = PYMEGRE11_TOTAL - IMPORTE_PARCIAL;

              END

            IF (PYMEGRE11_TOTAL != 0) THEN
                SUSPEND;
          END

     END
   ELSE
     IF (:PARAM_TIPO = 0) THEN /* Detalle para las Notas de Gasto */
       BEGIN
          FOR
            SELECT /* Devuelve todas las notas de gasto que no esten canceladas */
                PYMEGRE06_CAB_NOTASGASTOS.RELA_SOCSYST01,
                PYMEGRE06_CAB_NOTASGASTOS.RELA_SOCWFLO01,
                PYMEGRE06_CAB_NOTASGASTOS.RELA_SRHMAIN10,
                PYMEGRE06_CAB_NOTASGASTOS.ID_PYMEGRE06,
                CAST(0 AS INTEGER),
                PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_DOCNRO,
                PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_FECHA,
                PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_DESCRI,
                PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_IMPORTE,
                CAST(0.00 AS DOUBLE PRECISION),
                CAST(0.00 AS DOUBLE PRECISION)
            FROM PYMEGRE06_CAB_NOTASGASTOS
            WHERE PYMEGRE06_CAB_NOTASGASTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
              AND PYMEGRE06_CAB_NOTASGASTOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
              AND PYMEGRE06_CAB_NOTASGASTOS.RELA_SRHMAIN10 = :PARAM_ENTIDAD

            UNION

            SELECT /* Devuelve todas las notas de gasto que correspondan a la cabecera */
                PYMEGRE06_CAB_NOTASGASTOS.RELA_SOCSYST01,
                PYMEGRE06_CAB_NOTASGASTOS.RELA_SOCWFLO01,
                PYMEGRE06_CAB_NOTASGASTOS.RELA_SRHMAIN10,
                PYMEGRE06_CAB_NOTASGASTOS.ID_PYMEGRE06,
                CAST(1 AS INTEGER),
                PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_DOCNRO,
                PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_FECHA,
                PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_DESCRI,
                PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE,
                PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL,
                PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE - PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
            FROM PYMEGRE06_CAB_NOTASGASTOS
            INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE06_CAB_NOTASGASTOS.ID_PYMEGRE06 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE06)
            WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10
            INTO
                :RELA_SOCSYST01,
                :RELA_SOCWFLO01,
                :RELA_ENTIDAD,
                :ID_DETALLE,
                :MARCA,
                :PYMEGRE11_NRO,
                :PYMEGRE11_FFAC,
                :PYMEGRE11_CONCEPTO,
                :PYMEGRE11_TOTAL,
                :PYMEGRE11_PARCIAL,
                :PYMEGRE11_SALDO
            DO
            BEGIN
              IF (MARCA = 0) THEN
                BEGIN
                  IMPORTE_PARCIAL = 0;

                  FOR
                    SELECT
                        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
                        DNVL(SUM(PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL),0.00)
                    FROM PYMEGRE11_DET_FACTURASNOTAS
                    INNER JOIN PYMEGRE06_CAB_NOTASGASTOS ON (PYMEGRE06_CAB_NOTASGASTOS.ID_PYMEGRE06 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE06)
                    INNER JOIN PYMEGRE10_CAB_CHEQUES ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10)
                    WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE06 = :ID_DETALLE
                    GROUP BY
                        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO
                    INTO
                       :CANCELADO,
                       :IMPORTE_PARCIAL
                  DO

                  IF (IMPORTE_PARCIAL IS NULL) THEN
                    IMPORTE_PARCIAL = 0;

                  IF (CANCELADO IS NULL) THEN
                    PYMEGRE11_TOTAL = PYMEGRE11_TOTAL - IMPORTE_PARCIAL;
                END
            
              IF (PYMEGRE11_TOTAL != 0) THEN
                SUSPEND;
            END
       END
     ELSE  /* Detalle para los Saldos de Clientes */
       BEGIN
          FOR
            SELECT /* Devuelve los Saldos de los Clientes */
                PYMINGR35_CAB_SALDOS.RELA_SOCSYST01,
                PYMINGR35_CAB_SALDOS.RELA_SOCWFLO01,
                PYMINGR35_CAB_SALDOS.RELA_SICINGR01,
                PYMINGR36_DET_FACTURAS.ID_PYMINGR36,
                CAST(0 AS INTEGER),
                MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
                MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
                'Saldo por Anticipos de Clientes',
                PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO * -1,
                CAST(0.00 AS DOUBLE PRECISION),
                CAST(0.00 AS DOUBLE PRECISION)
            FROM PYMINGR35_CAB_SALDOS
            INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR35_CAB_SALDOS.ID_PYMINGR35 = PYMINGR36_DET_FACTURAS.RELA_PYMINGR35)
            INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
            WHERE PYMINGR35_CAB_SALDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
              AND PYMINGR35_CAB_SALDOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
              AND PYMINGR35_CAB_SALDOS.RELA_SICINGR01 = :PARAM_ENTIDAD
              AND PYMINGR36_DET_FACTURAS.ID_PYMINGR36 != :ID_PYMEGRE10
              AND PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO < 0

            UNION

            SELECT /* Devuelve todos los Saldos de Clientes que correspondan a la cabecera */
                PYMINGR35_CAB_SALDOS.RELA_SOCSYST01,
                PYMINGR35_CAB_SALDOS.RELA_SOCWFLO01,
                PYMINGR35_CAB_SALDOS.RELA_SICINGR01,
                PYMINGR36_DET_FACTURAS.ID_PYMINGR36,
                CAST(1 AS INTEGER),
                MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
                MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
                'Saldo por Anticipos de Clientes',
                PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE,
                PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL,
                PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE - PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
            FROM PYMINGR35_CAB_SALDOS
            INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR35_CAB_SALDOS.ID_PYMINGR35 = PYMINGR36_DET_FACTURAS.RELA_PYMINGR35)
            INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
            INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMINGR36_DET_FACTURAS.ID_PYMINGR36 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMINGR36)
            WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10
            INTO
                :RELA_SOCSYST01,
                :RELA_SOCWFLO01,
                :RELA_ENTIDAD,
                :ID_DETALLE,
                :MARCA,
                :PYMEGRE11_NRO,
                :PYMEGRE11_FFAC,
                :PYMEGRE11_CONCEPTO,
                :PYMEGRE11_TOTAL,
                :PYMEGRE11_PARCIAL,
                :PYMEGRE11_SALDO
            DO
            BEGIN
              IF (MARCA = 0) THEN
                BEGIN
                  IMPORTE_PARCIAL = 0;

                  FOR
                    SELECT
                        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
                        DNVL(SUM(PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL),0.00)
                    FROM PYMEGRE11_DET_FACTURASNOTAS
                    INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.ID_PYMINGR36 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMINGR36)
                    INNER JOIN PYMEGRE10_CAB_CHEQUES ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10)
                    WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMINGR36 = :ID_DETALLE
                    GROUP BY
                        PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO
                    INTO
                       :CANCELADO,
                       :IMPORTE_PARCIAL
                  DO

                  IF (IMPORTE_PARCIAL IS NULL) THEN
                    IMPORTE_PARCIAL = 0;

                  IF (CANCELADO IS NULL) THEN
                    PYMEGRE11_TOTAL = PYMEGRE11_TOTAL - IMPORTE_PARCIAL;
                END
            
              IF (PYMEGRE11_TOTAL != 0) THEN
                SUSPEND;
            END
       END
END
JAM$_COPYARBOL_MSGPOLI25       

DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RELA_MSGPOLI24 BIGINT;
DECLARE VARIABLE MSGPOLI25_DESCRI VARCHAR(200);
DECLARE VARIABLE MSGPOLI25_ACTIVIDAD SMALLINT;
DECLARE VARIABLE MSGPOLI25_TIPO SMALLINT;
DECLARE VARIABLE MSGPOLI25_NOTAS BLOB SUB_TYPE 1 SEGMENT SIZE 80;
DECLARE VARIABLE RELA_SICCONT02_TARJET BIGINT;
begin
    NOK = 0;
    FOR SELECT
    msgpoli25_det_conceptos.rela_siccont02,
    msgpoli25_det_conceptos.rela_msgpoli24,
    msgpoli25_det_conceptos.msgpoli25_descri,
    msgpoli25_det_conceptos.msgpoli25_actividad,
    msgpoli25_det_conceptos.msgpoli25_tipo,
    msgpoli25_det_conceptos.msgpoli25_notas
    FROM msgpoli25_det_conceptos
    WHERE msgpoli25_det_conceptos.rela_socsyst01 = :source
    INTO :rela_siccont02,
         :rela_msgpoli24,
         :msgpoli25_descri,
         :msgpoli25_actividad,
         :msgpoli25_tipo,
         :msgpoli25_notas
    DO
    BEGIN
        NOK = NOK + 1;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :rela_siccont02)
        into :rela_siccont02_tarjet;

        insert into msgpoli25_det_conceptos (msgpoli25_det_conceptos.rela_socsyst01,
                                             msgpoli25_det_conceptos.rela_siccont02,
                                             msgpoli25_det_conceptos.rela_msgpoli24,
                                             msgpoli25_det_conceptos.msgpoli25_descri,
                                             msgpoli25_det_conceptos.msgpoli25_actividad,
                                             msgpoli25_det_conceptos.msgpoli25_tipo,
                                             msgpoli25_det_conceptos.msgpoli25_notas)
        values(:target,
               :rela_siccont02_tarjet,
               :rela_msgpoli24,
               :msgpoli25_descri,
               :msgpoli25_actividad,
               :msgpoli25_tipo,
               :msgpoli25_notas);

    END

    suspend;
end
PRD_MSGPOLI23_DETALLES         

DECLARE VARIABLE RELA_MSGPOLI23 BIGINT;
DECLARE VARIABLE RELA_MSGPOLI20 BIGINT;
DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE MSGPOLI23_ANO INTEGER;
DECLARE VARIABLE MSGPOLI23_MES INTEGER;
begin
    select
    max(socutil01_mov_logs.socutil01_ultid)
    from socutil01_mov_logs
    where socutil01_mov_logs.socutil01_usuario = current_user
    and socutil01_mov_logs.socutil01_tabla = 'MSGPOLI23'
    and socutil01_mov_logs.socutil01_accion <> 'B'
    into :rela_msgpoli23;

    select
    msgpoli23_det_bitacora.rela_msgpoli20,
    msgpoli23_det_bitacora.msgpoli23_ano,
    msgpoli23_det_bitacora.msgpoli23_mes
    from msgpoli23_det_bitacora
    where msgpoli23_det_bitacora.id_msgpoli23 = :rela_msgpoli23
    into :rela_msgpoli20,
         :msgpoli23_ano,
         :msgpoli23_mes;

    select msgpoli20_cab_impuestos.rela_socsyst01
    from msgpoli20_cab_impuestos
    where msgpoli20_cab_impuestos.id_msgpoli20 = :rela_msgpoli20
    into :rela_socsyst01;

    EXECUTE PROCEDURE prd_msgpoli23_detalles_write
            :rela_msgpoli23,
            :rela_msgpoli20,
            :rela_socsyst01,
            :msgpoli23_ano,
            :msgpoli23_mes,
            'IMP',
            'MSGPOLI21';

    EXECUTE PROCEDURE prd_msgpoli23_detalles_write
            :rela_msgpoli23,
            :rela_msgpoli20,
            :rela_socsyst01,
            :msgpoli23_ano,
            :msgpoli23_mes,
            'IMP',
            'MSGPOLI22';

    EXECUTE PROCEDURE prd_msgpoli23_detalles_write
            :rela_msgpoli23,
            :rela_msgpoli20,
            :rela_socsyst01,
            :msgpoli23_ano,
            :msgpoli23_mes,
            'RET',
            'MSGPOLI21';

    EXECUTE PROCEDURE prd_msgpoli23_detalles_write
            :rela_msgpoli23,
            :rela_msgpoli20,
            :rela_socsyst01,
            :msgpoli23_ano,
            :msgpoli23_mes,
            'RET',
            'MSGPOLI22';

    EXECUTE PROCEDURE prd_msgpoli23_detalles_write
            :rela_msgpoli23,
            :rela_msgpoli20,
            :rela_socsyst01,
            :msgpoli23_ano,
            :msgpoli23_mes,
            'IE',
            'MSGPOLI21';

    EXECUTE PROCEDURE prd_msgpoli23_detalles_write
            :rela_msgpoli23,
            :rela_msgpoli20,
            :rela_socsyst01,
            :msgpoli23_ano,
            :msgpoli23_mes,
            'IE',
            'MSGPOLI22';
    OK = 1;
    suspend;
end
REP_MSGPOLI23_IETU_ACUM        

BEGIN
    IF (PARAM_MES = 1) THEN
        IMPORTE_ACUMULADO = 0;
    ELSE
        BEGIN
            SELECT MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_ACUMU
            FROM MSGPOLI23_DET_BITACORA
            INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
            INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
            INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI20_CAB_IMPUESTOS.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
            WHERE MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01 = :PARAM_SOCSYST01
                AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :PARAM_ANO
                AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :PARAM_MES-1
                AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
                AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-IETU'
            INTO
                :IMPORTE_ACUMULADO;

        END
    SUSPEND;
END
PRD_SRHMAIN10_ALL              

BEGIN
    FOR
      SELECT
          SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01,
          GRID_SRHMAIN10.RELA_SOCUSUA02,
          GRID_SRHMAIN10.ID_SRHMAIN10,
          CAST('Capturado' AS VARCHAR(12)),
          GRID_SRHMAIN10.SRHMAIN10_CODEXT,
          GRID_SRHMAIN10.ENTIDAD,
          GRID_SRHMAIN10.SOCSYST10_PROCESOS,
          GRID_SRHMAIN10.SOCSYST10_PUESTOS,
          RUPPER(GRID_SRHMAIN10.SRHMAIN10_CODEXT) || ' ' || RUPPER(GRID_SRHMAIN10.ENTIDAD) || ' ' || RUPPER(CAST('Capturado' AS VARCHAR(12)))
      FROM SICCONT70_MOV_EMPLEADOS
      INNER JOIN GRID_SRHMAIN10 ON (SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = GRID_SRHMAIN10.ID_SRHMAIN10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
        AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_SOCSYST01

      UNION

      SELECT
          CAST(NULL AS BIGINT),
          GRID_SRHMAIN10.RELA_SOCUSUA02,
          GRID_SRHMAIN10.ID_SRHMAIN10,
          CAST('Sin Capturar' AS VARCHAR(12)),
          GRID_SRHMAIN10.SRHMAIN10_CODEXT,
          GRID_SRHMAIN10.ENTIDAD,
          GRID_SRHMAIN10.SOCSYST10_PROCESOS,
          GRID_SRHMAIN10.SOCSYST10_PUESTOS,
          RUPPER(GRID_SRHMAIN10.SRHMAIN10_CODEXT) || ' ' || RUPPER(GRID_SRHMAIN10.ENTIDAD) || ' ' || RUPPER(CAST('Sin Capturar' AS VARCHAR(12)))
      FROM GRID_SRHMAIN10
      WHERE GRID_SRHMAIN10.ID_SRHMAIN10 NOT IN (SELECT SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10
                                                FROM SICCONT70_MOV_EMPLEADOS
                                                INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                                                WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
                                                   AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_SOCSYST01)
    INTO
        :RELA_SOCSYST01,
        :RELA_SOCUSUA02,
        :ID_SRHMAIN10,
        :TIPO,
        :SRHMAIN10_CODEXT,
        :ENTIDAD,
        :SOCSYST10_PROCESOS,
        :SOCSYST10_PUESTOS,
        :BUSQUEDA
    DO
    BEGIN
        SUSPEND;
    END
END
PRD_MSGPOLI23_DETALLES_WRITE   

DECLARE VARIABLE ID_MSGPOLI21 BIGINT;
DECLARE VARIABLE ID_MSGPOLI22 BIGINT;
DECLARE VARIABLE MSGPOLI21_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI22_IMPORTE DOUBLE PRECISION;
begin
    if (columna = 'MSGPOLI21') then
    BEGIN
        for select
        PRD_MSGPOLI21.id_msgpoli21,
        PRD_MSGPOLI21.msgpoli21_importe
        from PRD_MSGPOLI21(:rela_msgpoli20, :rela_socsyst01, :msgpoli23_ano, :msgpoli23_mes, :FILTRO)
        into :id_msgpoli21,
             :msgpoli21_importe
        do
        begin
            delete from msgpoli41_det_ingresos
            where msgpoli41_det_ingresos.rela_msgpoli23 =  :rela_msgpoli23
              and msgpoli41_det_ingresos.rela_msgpoli21 =  :id_msgpoli21;
            
            insert into msgpoli41_det_ingresos (msgpoli41_det_ingresos.rela_msgpoli23,
                                                msgpoli41_det_ingresos.rela_msgpoli21,
                                                msgpoli41_det_ingresos.msgpoli41_importe)
            values(:rela_msgpoli23,
                   :id_msgpoli21,
                   :msgpoli21_importe);
        end            
    END
    else if (columna = 'MSGPOLI22') then
    BEGIN
        for select
        PRD_MSGPOLI22.id_msgpoli22,
        PRD_MSGPOLI22.msgpoli22_importe
        from PRD_MSGPOLI22(:rela_msgpoli20, :rela_socsyst01, :msgpoli23_ano, :msgpoli23_mes, :FILTRO)
        into :id_msgpoli22,
             :msgpoli22_importe
        do
        begin
            delete from msgpoli42_det_egresos
            where msgpoli42_det_egresos.rela_msgpoli23 =  :rela_msgpoli23
              and msgpoli42_det_egresos.rela_msgpoli22 =  :id_msgpoli22;

            insert into msgpoli42_det_egresos (msgpoli42_det_egresos.rela_msgpoli23,
                                               msgpoli42_det_egresos.rela_msgpoli22,
                                               msgpoli42_det_egresos.msgpoli42_importe)
            values(:rela_msgpoli23,
                   :id_msgpoli22,
                   :msgpoli22_importe);
        end
    END

end
PRD_SRHMAIN11                  

BEGIN
    IF (PARAM_EMPLEADO = -1) THEN
        BEGIN
            FOR
              SELECT
                1 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                :PARAM_EMPLEADO,
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SICCONT72_MOV_EMPRESAS
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'RETRI'
                AND SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
              INTO
                  :MARCA,
                  :RELA_SOCSYST01,
                  :RELA_SICCONT02,
                  :RELA_SRHMAIN10,
                  :RELA_SICCONT72,
                  :SICCONT02_DESCRI,
                  :SICCONT02_CODEXT,
                  :siccont72_codigo
            DO
            BEGIN
                DEPENDENCIA = -1;

                SELECT FIRST 1 SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHMAIN11
                FROM SRHNOMI03_DET_RETRIBUCIONES
                INNER JOIN SRHMAIN11_DET_INGRESOS ON (SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHMAIN11 = SRHMAIN11_DET_INGRESOS.ID_SRHMAIN11)
                WHERE SRHMAIN11_DET_INGRESOS.RELA_SICCONT72 = :RELA_SICCONT72
                INTO DEPENDENCIA;

                IF (:DEPENDENCIA IS NULL) THEN
                  DEPENDENCIA = -1;

                SUSPEND;
            END
        END
    ELSE
        BEGIN
            FOR
              SELECT
                0 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                CAST(NULL AS BIGINT),
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                CAST(NULL AS BIGINT),
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SICCONT72_MOV_EMPRESAS
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'RETRI'
                AND SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
                AND SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 NOT IN (SELECT SRHMAIN11_DET_INGRESOS.RELA_SICCONT02
                                                                  FROM SRHMAIN11_DET_INGRESOS
                                                                  WHERE SRHMAIN11_DET_INGRESOS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
                                                                    AND SRHMAIN11_DET_INGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)

              UNION

              SELECT
                1 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                SRHMAIN11_DET_INGRESOS.RELA_SRHMAIN10,
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                SRHMAIN11_DET_INGRESOS.ID_SRHMAIN11,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SRHMAIN11_DET_INGRESOS
              INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN11_DET_INGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
                AND SRHMAIN11_DET_INGRESOS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
              INTO
                  :MARCA,
                  :RELA_SOCSYST01,
                  :RELA_SICCONT02,
                  :RELA_SRHMAIN10,
                  :RELA_SICCONT72,
                  :ID_SRHMAIN11,
                  :SICCONT02_DESCRI,
                  :SICCONT02_CODEXT,
                  :siccont72_codigo
            DO
            BEGIN
                DEPENDENCIA = -1;

                SELECT FIRST 1 SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHMAIN11
                FROM SRHNOMI03_DET_RETRIBUCIONES
                INNER JOIN SRHMAIN11_DET_INGRESOS ON (SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHMAIN11 = SRHMAIN11_DET_INGRESOS.ID_SRHMAIN11)
                WHERE SRHMAIN11_DET_INGRESOS.RELA_SICCONT72 = :RELA_SICCONT72
                INTO DEPENDENCIA;

                IF (:DEPENDENCIA IS NULL) THEN
                  DEPENDENCIA = -1;

                IF (:RELA_SRHMAIN10 IS NULL) THEN
                    RELA_SRHMAIN10 = :PARAM_EMPLEADO;
                SUSPEND;
            END
        END
END
JAM$_COPYARBOL_MSGPOLI20_FILTRO

begin
    if (areafiscal is null) then
        begin
            for select
            MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24,
            MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20,
            MSGPOLI20_CAB_IMPUESTOS.rela_socsyst10_tabla,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_cargo,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_abono,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_apagar,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_afavor,
            MSGPOLI20_CAB_IMPUESTOS.id_msgpoli20,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_descri,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_coeficiente,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_porcentual,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_parametros
            from MSGPOLI20_CAB_IMPUESTOS
            INNER JOIN msgpoli24_arb_organizador ON (msgpoli24_arb_organizador.id_msgpoli24 = MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24)
            where MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :source
            into :rela_msgpoli24,
                 :rela_msgpoli20,
                 :rela_socsyst10_tabla,
                 :rela_siccont02_cargo,
                 :rela_siccont02_abono,
                 :rela_siccont02_apagar,
                 :rela_siccont02_afavor,
                 :id_msgpoli20,
                 :msgpoli20_descri,
                 :msgpoli20_coeficiente,
                 :msgpoli20_porcentual,
                 :msgpoli20_parametros
            do
            begin
                suspend;
            end
        end
    else
        begin
            for select
            MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24,
            MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20,
            MSGPOLI20_CAB_IMPUESTOS.rela_socsyst10_tabla,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_cargo,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_abono,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_apagar,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_afavor,
            MSGPOLI20_CAB_IMPUESTOS.id_msgpoli20,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_descri,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_coeficiente,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_porcentual,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_parametros
            from MSGPOLI20_CAB_IMPUESTOS
            INNER JOIN msgpoli24_arb_organizador ON (msgpoli24_arb_organizador.id_msgpoli24 = MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24)
            where MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :source
              and msgpoli24_arb_organizador.rela_socusua50 = :areafiscal
            into :rela_msgpoli24,
                 :rela_msgpoli20,
                 :rela_socsyst10_tabla,
                 :rela_siccont02_cargo,
                 :rela_siccont02_abono,
                 :rela_siccont02_apagar,
                 :rela_siccont02_afavor,
                 :id_msgpoli20,
                 :msgpoli20_descri,
                 :msgpoli20_coeficiente,
                 :msgpoli20_porcentual,
                 :msgpoli20_parametros
            do
            begin
              suspend;
            end

            for select
            MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24,
            MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20,
            MSGPOLI20_CAB_IMPUESTOS.rela_socsyst10_tabla,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_cargo,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_abono,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_apagar,
            MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_afavor,
            MSGPOLI20_CAB_IMPUESTOS.id_msgpoli20,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_descri,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_coeficiente,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_porcentual,
            MSGPOLI20_CAB_IMPUESTOS.msgpoli20_parametros
            from MSGPOLI20_CAB_IMPUESTOS
            INNER JOIN msgpoli24_arb_organizador ON (msgpoli24_arb_organizador.id_msgpoli24 = MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24)
            where MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :source
              and msgpoli24_arb_organizador.rela_socusua50 is null
            into :rela_msgpoli24,
                 :rela_msgpoli20,
                 :rela_socsyst10_tabla,
                 :rela_siccont02_cargo,
                 :rela_siccont02_abono,
                 :rela_siccont02_apagar,
                 :rela_siccont02_afavor,
                 :id_msgpoli20,
                 :msgpoli20_descri,
                 :msgpoli20_coeficiente,
                 :msgpoli20_porcentual,
                 :msgpoli20_parametros
            do
            begin
              suspend;
            end
        end
end
GRID_PYMINGR15_GASTOS          

BEGIN
   FOR
     SELECT
         CAST(0 AS INTEGER),
         PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
         CAST(-1 AS BIGINT),
         PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
         PYMEGRE02_CAB_FACTURAS.PYMEGRE02_PROVEEDOR,
         PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
         PYMEGRE02_CAB_FACTURAS.PYMEGRE02_CONCEPTO,
         PYMEGRE02_CAB_FACTURAS.PYMEGRE02_SUBTOTAL,
         PYMEGRE02_CAB_FACTURAS.PYMEGRE02_DESCUENTOS,
         PYMEGRE02_CAB_FACTURAS.PYMEGRE02_IMPUESTOS,
         PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL
     FROM PYMEGRE02_CAB_FACTURAS
     WHERE PYMEGRE02_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_SICINGR01
       AND PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_SOCSYST01
       AND PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
       AND (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 NOT IN (SELECT PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02
                                                       FROM PYMINGR15_MOV_GASTOS)

            OR PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 IN (SELECT PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02
                                                        FROM PYMINGR15_MOV_GASTOS
                                                        INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
                                                        WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 != :PARAM_PYMINGR01
                                                          AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NOT NULL))
     UNION

     SELECT
          CAST(1 AS INTEGER),
          PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02,
          PYMINGR15_MOV_GASTOS.RELA_PYMINGR01,
          PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
          PYMEGRE02_CAB_FACTURAS.PYMEGRE02_PROVEEDOR,
          PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
          PYMEGRE02_CAB_FACTURAS.PYMEGRE02_CONCEPTO,
          PYMEGRE02_CAB_FACTURAS.PYMEGRE02_SUBTOTAL,
          PYMEGRE02_CAB_FACTURAS.PYMEGRE02_DESCUENTOS,
          PYMEGRE02_CAB_FACTURAS.PYMEGRE02_IMPUESTOS,
          PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL
       FROM PYMINGR15_MOV_GASTOS
       INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 = PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02)
       WHERE PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = :PARAM_PYMINGR01
     INTO
         :MARCA,
         :RELA_PYMEGRE02,
         :RELA_PYMINGR01,
         :PYMEGRE02_NRO,
         :PROVEEDOR,
         :PYMEGRE02_FFAC,
         :PYMEGRE02_CONCEPTO,
         :PYMEGRE02_SUBTOTAL,
         :PYMEGRE02_DESCUENTOS,
         :PYMEGRE02_IMPUESTOS,
         :PYMEGRE02_TOTAL
   DO
   BEGIN
      SUSPEND;
   END
END
GRID_PYMINVE30_TRANSFERENCIAS  

DECLARE VARIABLE SQLBUSQUEDA VARCHAR(2000);
begin
    ROWS = 0;
    SQLBUSQUEDA = 'SELECT RELA_PYMINVE10, ' ||
                  'ID_PYMINVE30, ' ||
                  'pyminve10_codigo, ' ||
                  'pyminve10_descripcion, ' ||
                  'pyminve31_nrolote, ' ||
                  'PYMINVE30_CANTIDAD, ' ||
                  'modelo, ' ||
                  'talla, ' ||
                  'color, ' ||
                  'ID_PYMINVE46, ' ||
                  'FECHA from ';

    if (modo = 0 and RELA_PYMINVE45 <= 0) then
    begin
        marca = 1;
        SQLBUSQUEDA = SQLBUSQUEDA || 'GRID_PYMINVE45_CON_PYMINVE30 WHERE RELA_SOCWFLO01 = ' ||
                      :rela_socwflo01 || ' and ' || 'RELA_PYMINVE40 = ' || :rela_pyminve40;
    end
    else if (modo = 1 and RELA_PYMINVE45 <= 0) then
    begin
        marca = 0;
        SQLBUSQUEDA = SQLBUSQUEDA || 'PRD_PYMINVE45_SIN_PYMINVE30(' || :rela_socwflo01 || ',' || :rela_pyminve40 || ')';
    end 
    else
    begin
        marca = marcax;
        SQLBUSQUEDA = SQLBUSQUEDA || 'GRID_PYMINVE46 WHERE ID_PYMINVE45 = ' || RELA_PYMINVE45;
    end

    FOR EXECUTE STATEMENT :SQLBUSQUEDA
    INTO :RELA_PYMINVE10,
         :ID_PYMINVE30,
         :pyminve10_codigo,
         :pyminve10_descripcion,
         :pyminve31_nrolote,
         :PYMINVE30_CANTIDAD,
         :modelo,
         :talla,
         :color,
         :ID_PYMINVE46,
         :fecha
    DO
    begin
        ROWS = ROWS + 1;
        if (modo = 0) then
        begin
            SELECT socusua02_mae_usuarios.socusua02_usuario
            from pyminve30_mov_stock
            INNER JOIN socusua02_mae_usuarios on (socusua02_mae_usuarios.id_socusua02 = pyminve30_mov_stock.rela_socusua02)
            WHERE pyminve30_mov_stock.id_pyminve30 = :id_pyminve30
            INTO :socusua02_usuario;
        end
        
        BUSQUEDA = pyminve10_codigo || pyminve31_nrolote || pyminve10_descripcion;

        CANTIORIG = PYMINVE30_CANTIDAD;
        suspend;
    end
end
PRD_MSGPOLI34_CARGOS           

DECLARE VARIABLE INPC_ANTERIOR DECIMAL(15,4);
DECLARE VARIABLE INPC_ACTUAL DECIMAL(15,4);
DECLARE VARIABLE PORCENTAJE DECIMAL(15,4);
DECLARE VARIABLE TASA_RECARGO DECIMAL(15,4);
DECLARE VARIABLE FACTOR_ACT DECIMAL(15,4);
DECLARE VARIABLE CANT_ACT DECIMAL(15,4);
DECLARE VARIABLE MES_APAGAR INTEGER;
DECLARE VARIABLE ANIO_APAGAR INTEGER;
DECLARE VARIABLE MES_PAGO INTEGER;
DECLARE VARIABLE ANIO_PAGO INTEGER;
BEGIN

  /* Verifico que se hayan dado de alta los cargos en la Tabla de Conceptos  */

  SELECT MSGPOLI25_DET_CONCEPTOS.RELA_SICCONT02
  FROM MSGPOLI25_DET_CONCEPTOS
  WHERE MSGPOLI25_DET_CONCEPTOS.RELA_SOCSYST01 = :PARAM_SOCSYST01
    AND MSGPOLI25_DET_CONCEPTOS.RELA_MSGPOLI24 = :PARAM_MSGPOLI24
    AND MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_TIPO = 1
  INTO :SICCONT02_RECARGO;

  SELECT MSGPOLI25_DET_CONCEPTOS.RELA_SICCONT02
  FROM MSGPOLI25_DET_CONCEPTOS
  WHERE MSGPOLI25_DET_CONCEPTOS.RELA_SOCSYST01 = :PARAM_SOCSYST01
    AND MSGPOLI25_DET_CONCEPTOS.RELA_MSGPOLI24 = :PARAM_MSGPOLI24
    AND MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_TIPO = 2
  INTO :SICCONT02_ACTUALIZACION;

  IF ((SICCONT02_RECARGO IS NULL) OR (SICCONT02_ACTUALIZACION IS NULL)) THEN
    EXCEPTION EXCEPTION_MSGPOLI34_MSGPOLI25;

  /* Continuo con el Procedimiento para calcular los cargos */

  MES_APAGAR = EXTRACTMONTH(FECHA_APAGAR);
  ANIO_APAGAR = EXTRACTYEAR(FECHA_APAGAR);

  MES_PAGO = EXTRACTMONTH(FECHA_PAGO);
  ANIO_PAGO = EXTRACTYEAR(FECHA_PAGO);

  TASA_RECARGO = 0;
  FACTOR_ACT = 0;
  CANT_ACT = 0;

  /* Devuelve el INPC del mes a pagar */

  SELECT SICEMPR02_DET_IMPUESTOS.SICEMPR02_CFIJA
  FROM SICEMPR01_CAB_IMPUESTOS
  INNER JOIN SICEMPR02_DET_IMPUESTOS ON (SICEMPR01_CAB_IMPUESTOS.ID_SICEMPR01 = SICEMPR02_DET_IMPUESTOS.RELA_SICEMPR01)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICEMPR01_CAB_IMPUESTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
  WHERE SICEMPR01_CAB_IMPUESTOS.SICEMPR01_ANO = :ANIO_PAGO
    AND SICEMPR01_CAB_IMPUESTOS.SICEMPR01_MES = :MES_PAGO
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'IM03'
  INTO :INPC_ACTUAL;

  IF (:INPC_ACTUAL IS NULL) THEN
      IF (:MES_PAGO = 1) THEN
        BEGIN

            ANIO_PAGO = ANIO_PAGO - 1;
            MES_PAGO = 12;

            SELECT SICEMPR02_DET_IMPUESTOS.SICEMPR02_CFIJA
            FROM SICEMPR01_CAB_IMPUESTOS
            INNER JOIN SICEMPR02_DET_IMPUESTOS ON (SICEMPR01_CAB_IMPUESTOS.ID_SICEMPR01 = SICEMPR02_DET_IMPUESTOS.RELA_SICEMPR01)
            INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICEMPR01_CAB_IMPUESTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
            WHERE SICEMPR01_CAB_IMPUESTOS.SICEMPR01_ANO = :ANIO_PAGO
                AND SICEMPR01_CAB_IMPUESTOS.SICEMPR01_MES = :MES_PAGO
                AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'IM03'
            INTO :INPC_ACTUAL;
        END
      ELSE
        BEGIN

            MES_PAGO = MES_PAGO - 1;

            SELECT SICEMPR02_DET_IMPUESTOS.SICEMPR02_CFIJA
            FROM SICEMPR01_CAB_IMPUESTOS
            INNER JOIN SICEMPR02_DET_IMPUESTOS ON (SICEMPR01_CAB_IMPUESTOS.ID_SICEMPR01 = SICEMPR02_DET_IMPUESTOS.RELA_SICEMPR01)
            INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICEMPR01_CAB_IMPUESTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
            WHERE SICEMPR01_CAB_IMPUESTOS.SICEMPR01_ANO = :ANIO_PAGO
                AND SICEMPR01_CAB_IMPUESTOS.SICEMPR01_MES = :MES_PAGO
                AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'IM03'
            INTO :INPC_ACTUAL;
        END                                     

    /* Devuelve el INPC del mes en el que se debio pagar el impuesto */
    
    SELECT SICEMPR02_DET_IMPUESTOS.SICEMPR02_CFIJA
    FROM SICEMPR01_CAB_IMPUESTOS
    INNER JOIN SICEMPR02_DET_IMPUESTOS ON (SICEMPR01_CAB_IMPUESTOS.ID_SICEMPR01 = SICEMPR02_DET_IMPUESTOS.RELA_SICEMPR01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICEMPR01_CAB_IMPUESTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE SICEMPR01_CAB_IMPUESTOS.SICEMPR01_ANO = :ANIO_APAGAR
        AND SICEMPR01_CAB_IMPUESTOS.SICEMPR01_MES = :MES_APAGAR
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'IM03'
    INTO :INPC_ANTERIOR;

    /* Devuelve la Tasa de Recargo */

    MES_APAGAR = MES_APAGAR + 1;

    IF (MES_APAGAR = 13) THEN
        BEGIN
            MES_APAGAR = 1;
            ANIO_APAGAR = ANIO_APAGAR + 1;
        END

    WHILE ((:ANIO_APAGAR <= :ANIO_PAGO) OR (:MES_APAGAR <= :MES_PAGO)) DO
    BEGIN
        SELECT SICEMPR02_DET_IMPUESTOS.SICEMPR02_PORCENTAJE
        FROM SICEMPR01_CAB_IMPUESTOS
        INNER JOIN SICEMPR02_DET_IMPUESTOS ON (SICEMPR01_CAB_IMPUESTOS.ID_SICEMPR01 = SICEMPR02_DET_IMPUESTOS.RELA_SICEMPR01)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICEMPR01_CAB_IMPUESTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        WHERE SICEMPR01_CAB_IMPUESTOS.SICEMPR01_ANO = :ANIO_APAGAR
            AND SICEMPR01_CAB_IMPUESTOS.SICEMPR01_MES = :MES_APAGAR
            AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'IM03'
        INTO :PORCENTAJE;

        IF ((:MES_APAGAR = :MES_PAGO) AND (:ANIO_APAGAR = :ANIO_PAGO)) THEN
            BEGIN
                MES_APAGAR = MES_APAGAR + 1;
                ANIO_APAGAR = ANIO_APAGAR + 1;
            END
        ELSE
            IF (:MES_APAGAR = 12) THEN
                BEGIN
                    MES_APAGAR = 1;
                    ANIO_APAGAR = ANIO_APAGAR + 1;
                END
            ELSE
                MES_APAGAR = MES_APAGAR + 1;

        TASA_RECARGO = TASA_RECARGO + PORCENTAJE;
    END

    IF ((:INPC_ACTUAL IS NOT NULL) AND (:INPC_ANTERIOR IS NOT NULL) AND (:TASA_RECARGO IS NOT NULL)) THEN
        BEGIN

            /* Calcula el total por actualización */

            FACTOR_ACT = INPC_ACTUAL / INPC_ANTERIOR;
            CANT_ACT = IMPORTE * FACTOR_ACT;
            ACTUALIZACION = CANT_ACT - IMPORTE;

            /* Calcula el total por recargos */

            RECARGOS = CANT_ACT * (TASA_RECARGO / 100);
        END
    ELSE
        EXCEPTION EXCEPTION_MSGPOLI34_SICEMPR02;

    SUSPEND;
END
CBO_ORDEN                      

begin
  ID = 0;
  ORDEN = 0;
  WHILE(ORDEN <= 100) DO
  BEGIN
    ID = ID + 1;
    ORDEN = ID;
    suspend;
  END
end
GRID_PYMINGR16_ANTICIPOS       

BEGIN
  FOR
    SELECT
        CAST(0 AS INTEGER),
        MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
        CAST(-1 AS BIGINT),
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
        (SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
         FROM MSGPOLI02_DET_POLIZAS
         WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01),
        DNVL(((SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
               FROM MSGPOLI02_DET_POLIZAS
               WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01) - (SELECT SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE)
                                                                                                   FROM PYMINGR16_MOV_ANTICIPOS
                                                                                                   INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
                                                                                                   WHERE PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01
                                                                                                     AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL)), (SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
                                                                                                                                                                     FROM MSGPOLI02_DET_POLIZAS
                                                                                                                                                                     WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)),
        CAST(0.00 AS DOUBLE PRECISION),
        CAST(0.00 AS DOUBLE PRECISION)
    FROM MSGPOLI01_CAB_POLIZAS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO_POLIZA ON (MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10 = TIPO_POLIZA.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO_ACCION ON (MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION = TIPO_ACCION.ID_SOCSYST10)
    WHERE TIPO_POLIZA.SOCSYST10_CODIGO = 'PO-1-ING'
      AND TIPO_ACCION.SOCSYST10_CODIGO = 'MANUAL'
      AND MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01 = :PARAM_SOCSYST01
      AND MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      AND MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 IN (SELECT FIRST 1 MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01
                                                  FROM MSGPOLI02_DET_POLIZAS
                                                  INNER JOIN SOCSYST10_TBL_LISTAESTADOS POLIZA_REFE ON (MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_REFE = POLIZA_REFE.ID_SOCSYST10)
                                                  WHERE MSGPOLI02_DET_POLIZAS.RELA_SICINGR01 = :PARAM_SICINGR01
                                                      AND POLIZA_REFE.SOCSYST10_CODIGO = 'DEPOSITOS')
      AND MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 NOT IN (SELECT PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                     FROM PYMINGR16_MOV_ANTICIPOS
                                                     WHERE PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = :PARAM_PYMINGR01
                                                       AND PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01)
      AND (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 NOT IN (SELECT PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                      FROM PYMINGR16_MOV_ANTICIPOS)
           OR (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 IN (SELECT PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                      FROM PYMINGR16_MOV_ANTICIPOS
                                                      INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
                                                      WHERE PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
                                                      GROUP BY PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                      HAVING SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE) < (SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
                                                                                                               FROM MSGPOLI02_DET_POLIZAS
                                                                                                               WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01))))

    UNION

    SELECT
        CAST(0 AS INTEGER),
        MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
        CAST(-1 AS BIGINT),
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
        (SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
         FROM MSGPOLI02_DET_POLIZAS
         WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01),
        DNVL(((SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
               FROM MSGPOLI02_DET_POLIZAS
               WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01) - (SELECT SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE)
                                                                                                   FROM PYMINGR16_MOV_ANTICIPOS
                                                                                                   INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
                                                                                                   WHERE PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01
                                                                                                     AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL)), (SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
                                                                                                                                                                     FROM MSGPOLI02_DET_POLIZAS
                                                                                                                                                                     WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)),
        CAST(0.00 AS DOUBLE PRECISION),
        CAST(0.00 AS DOUBLE PRECISION)
    FROM MSGPOLI01_CAB_POLIZAS
    INNER JOIN PYMINGR30_CAB_DEPOSITOS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01)
    WHERE PYMINGR30_CAB_DEPOSITOS.PYMINGR30_ANTICIPO = 1
      AND PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01 = :PARAM_SOCSYST01
      AND PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      AND PYMINGR30_CAB_DEPOSITOS.RELA_SICINGR01 = :PARAM_SICINGR01
      AND MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 NOT IN (SELECT PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                     FROM PYMINGR16_MOV_ANTICIPOS
                                                     WHERE PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = :PARAM_PYMINGR01
                                                       AND PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01)
      AND (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 NOT IN (SELECT PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                      FROM PYMINGR16_MOV_ANTICIPOS)
           OR (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 IN (SELECT PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                      FROM PYMINGR16_MOV_ANTICIPOS
                                                      INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
                                                      WHERE PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
                                                      GROUP BY PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01
                                                      HAVING SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE) < (SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
                                                                                                               FROM MSGPOLI02_DET_POLIZAS
                                                                                                               WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01))))

    UNION

    SELECT
        CAST(1 AS INTEGER),
        PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01,
        PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
        (SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
         FROM MSGPOLI02_DET_POLIZAS
         WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01),
        DNVL(((SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
               FROM MSGPOLI02_DET_POLIZAS
               WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01) - (SELECT SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE)
                                                                                                       FROM PYMINGR16_MOV_ANTICIPOS
                                                                                                       INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
                                                                                                       WHERE PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01
                                                                                                         AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL)), 0.00),
        DNVL(((SELECT SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE)
               FROM MSGPOLI02_DET_POLIZAS
               WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01) - (SELECT SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE)
                                                                                                       FROM PYMINGR16_MOV_ANTICIPOS
                                                                                                       INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
                                                                                                       WHERE PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01
                                                                                                         AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL)), 0.00),
        PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE
    FROM PYMINGR16_MOV_ANTICIPOS
    INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMINGR16_MOV_ANTICIPOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
    WHERE PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = :PARAM_PYMINGR01
    INTO
       :MARCA,
       :RELA_MSGPOLI01,
       :RELA_PYMINGR01,
       :MSGPOLI01_DOCNRO,
       :MSGPOLI01_FCTA,
       :MSGPOLI01_DESCRIPCION,
       :DEPOSITO,
       :PENDIENTE,
       :VALORANTERIOR,
       :IMPORTE
  DO
  BEGIN
      SUSPEND;
  END
END
PRD_PYMEGRE02_PAGOS            

DECLARE VARIABLE DBL_SALDO DOUBLE PRECISION;
BEGIN
  DBL_SALDO = 0.00;

  FOR
    SELECT
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
        PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
    FROM PYMEGRE11_DET_FACTURASNOTAS
    INNER JOIN PYMEGRE10_CAB_CHEQUES ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10)
    WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = :RELA_PYMEGRE02
    INTO
        :FECHA_PAGO,
        :IMPORTE
  DO
  BEGIN
     DBL_SALDO = DBL_SALDO + IMPORTE;
     SALDO = TOTAL - DBL_SALDO;

     SUSPEND;
  END
END
REP_ON2CFDS12                  

BEGIN
    FOR
      SELECT
          ON2CFDS12_DET_IMPUESTOS.ID_ON2CFDS12,
          ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TIPO,
          ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_IMPUESTO,
          ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TASA,
          ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_IMPORTE
      FROM ON2CFDS12_DET_IMPUESTOS
      INNER JOIN ON2CFDS10_CAB_FACTURAS ON (ON2CFDS12_DET_IMPUESTOS.RELA_ON2CFDS10 = ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10)
      INNER JOIN ON2CFDS18_DEP_FACTELECT ON (ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = ON2CFDS18_DEP_FACTELECT.RELA_ON2CFDS10)
      WHERE ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = :ID_ON2CFDS10
        AND ON2CFDS18_DEP_FACTELECT.ON2CFDS18_CANCELADO IS NULL
      ORDER BY ON2CFDS12_DET_IMPUESTOS.ON2CFDS12_TIPO
      INTO
          :ID_ON2CFDS12,
          :ON2CFDS12_TIPO,
          :ON2CFDS12_IMPUESTO,
          :ON2CFDS12_TASA,
          :IMPORTE
    DO
    BEGIN
       IF (:ON2CFDS12_TIPO = 'I') THEN
         DESCRIPCION = ON2CFDS12_IMPUESTO || ' ' || CAST(ON2CFDS12_TASA AS NUMERIC(10)) || '% : ';
       ELSE
         DESCRIPCION = 'Retención ' || ON2CFDS12_IMPUESTO || ' : ';

       SUSPEND;
    END
END
PRD_SOCSYST04                  

DECLARE VARIABLE ID BIGINT;
DECLARE VARIABLE DESCRI VARCHAR(200);
DECLARE VARIABLE CONTADOR BIGINT;
DECLARE VARIABLE RELA_XSYST01 BIGINT;
DECLARE VARIABLE RELA_XSYST02 BIGINT;
DECLARE VARIABLE RELA_XSYST03 BIGINT;
DECLARE VARIABLE RELA_XSYST04 BIGINT;
DECLARE VARIABLE ID_TEMP BIGINT;
DECLARE VARIABLE ID_TEMP2 BIGINT;
DECLARE VARIABLE ID_TEMP3 BIGINT;
BEGIN

    /* CLIENTE */

    CONTADOR = 1000000;
    FOR SELECT DISTINCT
    SOCSYST01_CAB_CLIENTES.id_socsyst01,
    VR_ENTIDADES_ALL.ENTIDAD
    FROM SOCSYST02_DET_PROYECTOS
    INNER JOIN SOCSYST01_CAB_CLIENTES ON (SOCSYST02_DET_PROYECTOS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
    INNER JOIN VR_ENTIDADES_ALL ON (SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02 = VR_ENTIDADES_ALL.ID_SOCUSUA02)
    ORDER BY ENTIDAD
    INTO :ID,
         :DESCRI
    DO
    BEGIN
        nivel = 1;
        RELA_SOCSYST04 = NULL;
        CONTADOR = CONTADOR + 1;
        RELA_XSYST01 = CONTADOR;
        ID_SOCSYST04 = CONTADOR;
        SOCSYST04_DESCRI = :DESCRI;
        ID_TEMP = ID;
        suspend;

        /* PROYECTO */

        FOR SELECT
        socsyst02_det_proyectos.id_socsyst02,
        socsyst02_det_proyectos.socsyst02_descri
        FROM socsyst02_det_proyectos
        WHERE socsyst02_det_proyectos.rela_socsyst01 = :ID_TEMP
        ORDER BY socsyst02_det_proyectos.socsyst02_descri
        INTO :ID,
             :DESCRI
        DO
        BEGIN
            nivel = 2;
            RELA_SOCSYST04 = :RELA_XSYST01;
            CONTADOR = CONTADOR + 1;
            RELA_XSYST02 = CONTADOR;
            ID_SOCSYST04 = CONTADOR;
            SOCSYST04_DESCRI = :DESCRI;
            ID_TEMP2 = ID;
            suspend;

            /* SISTEMA */

            FOR SELECT
            socsyst03_det_sistemas.id_socsyst03,
            socsyst03_det_sistemas.socsyst03_descri
            FROM socsyst03_det_sistemas
            WHERE socsyst03_det_sistemas.rela_socsyst02 = :ID_TEMP2
            ORDER BY socsyst03_det_sistemas.socsyst03_descri
            INTO :ID,
                 :DESCRI
            DO
            BEGIN
                nivel = 3;
                RELA_SOCSYST04 = RELA_XSYST02;
                CONTADOR = CONTADOR + 1;
                RELA_XSYST03 = CONTADOR;
                ID_SOCSYST04 = CONTADOR;
                SOCSYST04_DESCRI = :DESCRI;
                ID_TEMP3 = ID;
                suspend;

                /* FUNCION */

                FOR SELECT
                socsyst04_det_funciones.id_socsyst04,
                socsyst04_det_funciones.socsyst04_descri,
                socsyst04_det_funciones.socsyst04_funcion
                FROM socsyst04_det_funciones
                WHERE socsyst04_det_funciones.rela_socsyst03 = :ID_TEMP3
                ORDER BY socsyst04_det_funciones.socsyst04_descri
                INTO :ID,
                     :DESCRI,
                     :classpath
                DO
                BEGIN
                    nivel = 4;
                    RELA_SOCSYST04 = RELA_XSYST03;
                    CONTADOR = CONTADOR + 1;
                    RELA_XSYST04 = CONTADOR;
                    ID_SOCSYST04 = ID; /*CONTADOR; */
                    SOCSYST04_DESCRI = :DESCRI;
                    suspend;
                END

                classpath = null;
            END
        END
    END
end
GRID_PYMEGRE12                 

BEGIN
  IF (IDENTIDAD != -1) THEN
    BEGIN
      FOR
        SELECT
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_CONCEPTO,
             MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_SUBTOTAL,
             PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL,
             PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
             PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01
        FROM PYMEGRE02_CAB_FACTURAS
        INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
        INNER JOIN PYMEGRE12_MOV_RENDICIONES ON (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 = PYMEGRE12_MOV_RENDICIONES.RELA_PYMEGRE02)
        WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = :EMPRESA
          AND PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = :ORGANIGRAMA
          AND PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = :IDENTIDAD
          AND PYMEGRE12_MOV_RENDICIONES.RELA_PYMEGRE10 = :IDRENDICION
        INTO
           :FOLIO,
           :CONCEPTO,
           :POLIZA,
           :FECHA,
           :SUBTOTAL,
           :TOTAL,
           :ID_GRAL,
           :RELA_MSGPOLI01
      DO
      BEGIN
          SELECT FIRST 1
              VW_PYMEGRE10_PYMEGRE11.PYMEGRE10_DOCNRO,
              VW_PYMEGRE10_PYMEGRE11.PYMEGRE10_FCHE
          FROM VW_PYMEGRE10_PYMEGRE11
          WHERE VW_PYMEGRE10_PYMEGRE11.RELA_PYMEGRE02 = :ID_GRAL
          INTO :CHEQUE, :FCHEQUE;

          SUSPEND;
      END
    END
  ELSE
    BEGIN
      FOR
        SELECT
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_PROVEEDOR,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_CONCEPTO,
            MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_SUBTOTAL,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL,
            PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
            PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01
       FROM PYMEGRE02_CAB_FACTURAS
       INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
       INNER JOIN PYMEGRE12_MOV_RENDICIONES ON (PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02 = PYMEGRE12_MOV_RENDICIONES.RELA_PYMEGRE02)
       WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = :EMPRESA
         AND PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = :ORGANIGRAMA
         AND PYMEGRE12_MOV_RENDICIONES.RELA_PYMEGRE10 = :IDRENDICION
       INTO
           :ENTIDAD,
           :FOLIO,
           :CONCEPTO,
           :POLIZA,
           :FECHA,
           :SUBTOTAL,
           :TOTAL,
           :ID_GRAL,
           :RELA_MSGPOLI01
      DO
      BEGIN
          SELECT FIRST 1
              VW_PYMEGRE10_PYMEGRE11.PYMEGRE10_DOCNRO,
              VW_PYMEGRE10_PYMEGRE11.PYMEGRE10_FCHE
          FROM VW_PYMEGRE10_PYMEGRE11
          WHERE VW_PYMEGRE10_PYMEGRE11.RELA_PYMEGRE02 = :ID_GRAL
          INTO :CHEQUE, :FCHEQUE;

          SUSPEND;
      END
    END
END
VW_PYMINVE30_STOCK             

DECLARE VARIABLE CODIGO VARCHAR(50);
DECLARE VARIABLE ID_PYMINVE30 BIGINT;
BEGIN
  IF (ALMACEN IS NOT NULL) THEN
   BEGIN
     SELECT
        SNVL(PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO,'Null')
     FROM PYMINVE40_ARB_LOCACIONES
     WHERE PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40 = :ALMACEN
     INTO
        :CODIGO;

     FOR
       SELECT
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
          PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10,
          PYMINVE30_MOV_STOCK.ID_PYMINVE30,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_REORDER,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
          CONCEPTO.SOCSYST10_FILTRO_DES,
          PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO,
          SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD),
          CAST(PYMINVE30_MOV_STOCK.PYMINVE30_FAPL AS DATE)
      FROM PYMINVE30_MOV_STOCK
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMINVE50_CAB_CONCEPTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS CONCEPTO ON (PYMINVE50_CAB_CONCEPTOS.RELA_SOCSYST10 = CONCEPTO.ID_SOCSYST10)
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
      INNER JOIN PYMINVE40_ARB_LOCACIONES ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
      WHERE PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO LIKE TRIM(:CODIGO) || '%'
        AND PYMINVE40_ARB_LOCACIONES.RELA_SOCSYST01 = :EMPRESA
      GROUP BY
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,  
          PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
          PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10,
          PYMINVE30_MOV_STOCK.ID_PYMINVE30,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_REORDER,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
          CONCEPTO.SOCSYST10_FILTRO_DES,
          PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO,
          PYMINVE30_MOV_STOCK.PYMINVE30_FAPL
      INTO
          :RELA_SOCWFLO01,
          :RELA_PYMINVE50,
          :ID_PYMINVE10,
          :ID_PYMINVE30,
          :SUCURSAL,
          :CATEGORIA,
          :FAMILIA,
          :PRODUCTO,
          :PRODUCTO_CODIGO,
          :STOCKMIN,
          :STOCKMAX,
          :STOCKREORDER,
          :PRECIO_COSTO,
          :UTILIDAD,
          :TIPO,
          :CONCEPTO,
          :LOCACION,
          :LOCACION_CODIGO,
          :CANTIDAD,
          :FECHA
     DO
     BEGIN
        SELECT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
        FROM PYMINVE31_DEP_PROVEEDORES
        WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :ID_PYMINVE30
        INTO :NROLOTE;

        SUSPEND;
     END
   END
END
PRD_SOCSYST20_PYMVENT20        

BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
        AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :ARG_USER
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
REP_PYMINVE30_INVENTARIO       

BEGIN
  FOR
    SELECT FIRST 1
        PYMVENT01_CAB_CAJAS.RELA_SOCSYST01,
        PYMVENT01_CAB_CAJAS.RELA_SOCSYST10_IMPUESTOS,
        PYMVENT01_CAB_CAJAS.ID_PYMVENT01,
        SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
    FROM PYMVENT01_CAB_CAJAS
    INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT01_CAB_CAJAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT01_CAB_CAJAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
    WHERE PYMVENT01_CAB_CAJAS.RELA_SOCSYST01 = :ID_SOCSYST01
    INTO
        :RELA_SOCSYST01,
        :RELA_SOCSYST10_IMPUESTOS,
        :ID_PYMVENT01,
        :EMPRESA
  DO
  BEGIN
    SELECT CBO_TIPOFACTURASVENTAS.PORCENTAJE
    FROM CBO_TIPOFACTURASVENTAS(:ID_SOCSYST01)
    WHERE CBO_TIPOFACTURASVENTAS.ID_SOCSYST10 = :RELA_SOCSYST10_IMPUESTOS
    INTO :PORCENTAJE;

    FOR
      SELECT
        VW_PYMINVE30_STOCK.RELA_SOCWFLO01,
        VW_PYMINVE30_STOCK.RELA_PYMINVE50,
        VW_PYMINVE30_STOCK.ID_PYMINVE10,
        VW_PYMINVE30_STOCK.SUCURSAL,
        VW_PYMINVE30_STOCK.CATEGORIA,
        VW_PYMINVE30_STOCK.FAMILIA,
        VW_PYMINVE30_STOCK.PRODUCTO,
        VW_PYMINVE30_STOCK.PRODUCTO_CODIGO,
        VW_PYMINVE30_STOCK.STOCKMIN,
        VW_PYMINVE30_STOCK.STOCKMAX,
        VW_PYMINVE30_STOCK.STOCKREORDER,
        VW_PYMINVE30_STOCK.PRECIO_COSTO,
        VW_PYMINVE30_STOCK.PRECIO_COSTO + ((VW_PYMINVE30_STOCK.PRECIO_COSTO * VW_PYMINVE30_STOCK.UTILIDAD) / 100),
        VW_PYMINVE30_STOCK.LOCACION,
        VW_PYMINVE30_STOCK.LOCACION_CODIGO,
        VW_PYMINVE30_STOCK.TIPO,
        VW_PYMINVE30_STOCK.CONCEPTO,
        VW_PYMINVE30_STOCK.CANTIDAD,
        VW_PYMINVE30_STOCK.FECHA,
        SNVL(VW_PYMINVE30_STOCK.NROLOTE,'')
      FROM VW_PYMINVE30_STOCK(:ID_SOCSYST01, :RELA_PYMINVE40)
      INTO
        :RELA_SOCWFLO01,
        :RELA_PYMINVE50,
        :RELA_PYMINVE10,
        :SUCURSAL,
        :CATEGORIA,
        :FAMILIA,
        :PRODUCTO,
        :PRODUCTO_CODIGO,
        :STOCKMIN,
        :STOCKMAX,
        :STOCKREORDER,
        :PRECIO_COSTO,
        :PRECIO_VENTA,
        :LOCACION,
        :LOCACION_CODIGO,
        :TIPO,
        :CONCEPTO,
        :CANTIDAD,
        :FECHA,
        :NROLOTE
    DO
    BEGIN
        SUSPEND;
    END
  END
END
REP_MSGPOLI02_SINCONCILIAR     

DECLARE VARIABLE LOGENTRA INTEGER;
BEGIN
    LOGENTRA = 0;

    SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
    FROM CBO_CLIENTES_EMPRESAS_ALL
    WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :EMPRESA
    INTO :ENTIDAD;

    SELECT CBO_MESES.SOCSYST10_FILTRO_DES
    FROM CBO_MESES
    WHERE CBO_MESES.SOCSYST10_CODIGO = :MES
    INTO :MESES;
    
    MSGPOLI02_ANO = ANO;
    MSGPOLI02_MES = MES;
    IMPORTE_BANCOS = 0.00;
    RELA_SOCSYST01 = EMPRESA;

    SELECT MSGPOLI04_CAB_BANCOS.MSGPOLI04_IMPORTE
    FROM MSGPOLI04_CAB_BANCOS
    WHERE MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = :MSGPOLI04
    INTO :IMPORTE_BANCOS;

  FOR
    SELECT
        GRID_MSGPOLI02_SICONCILIAR.MSGPOLI01_DOCNRO,
        GRID_MSGPOLI02_SICONCILIAR.MSGPOLI01_DESCRIPCION,
        GRID_MSGPOLI02_SICONCILIAR.RELA_MSGPOLI01,
        GRID_MSGPOLI02_SICONCILIAR.MSGPOLI01_FCTA,
        GRID_MSGPOLI02_SICONCILIAR.RELA_SICCONT02,
        GRID_MSGPOLI02_SICONCILIAR.ID_MSGPOLI02,
        GRID_MSGPOLI02_SICONCILIAR.MSGPOLI02_DEBE,
        GRID_MSGPOLI02_SICONCILIAR.MSGPOLI02_HABER,
        GRID_MSGPOLI02_SICONCILIAR.SOCSYST10_FILTRO_DES,
        GRID_MSGPOLI02_SICONCILIAR.socsyst10_codigo
        FROM GRID_MSGPOLI02_SICONCILIAR
    WHERE (RELA_SOCSYST01 = :EMPRESA AND RELA_SICCONT02 = :SICCONT02
        AND MSGPOLI02_ANO = :ANO AND MSGPOLI02_MES <= :MES)
        OR (RELA_SOCSYST01 = :EMPRESA AND RELA_SICCONT02 = :SICCONT02
        AND MSGPOLI02_ANO <= (:ANO - 1))
    order by  GRID_MSGPOLI02_SICONCILIAR.socsyst10_codigo asc, GRID_MSGPOLI02_SICONCILIAR.msgpoli01_docnro
    INTO :MSGPOLI01_DOCNRO,
         :MSGPOLI01_DESCRIPCION,
         :RELA_MSGPOLI01,
         :MSGPOLI01_FCTA,
         :RELA_SICCONT02,
         :ID_MSGPOLI02,
         :MSGPOLI02_DEBE,
         :MSGPOLI02_HABER,
         :SOCSYST10_FILTRO_DES,
         socsyst10_codigo
  DO
  BEGIN
        LOGENTRA = 1;

        SELECT GRID_MSGPOLI04_ULTSALDO.MSGPOLI03_SALDOFIN
        FROM GRID_MSGPOLI04_ULTSALDO(:RELA_SOCSYST01, :MSGPOLI04, :SICCONT02, :ANO, :MES)
        INTO :SALDOFIN;

        SUSPEND;
  END

  IF (LOGENTRA = 0) THEN
    SUSPEND;
END
PRD_SRHNOMI01                  

BEGIN
  FOR
    SELECT
        :PARAM_MARCA,
        CAST(NULL AS BIGINT),
        GRID_SRHMAIN10.ID_SRHMAIN10,
        CAST(NULL AS BIGINT),
        CAST('Nuevo' AS VARCHAR(12)),
        GRID_SRHMAIN10.ENTIDAD
    FROM GRID_SRHMAIN10
    WHERE GRID_SRHMAIN10.SRHMAIN10_SALARIO_NOM != 0
      AND GRID_SRHMAIN10.SRHMAIN10_FDEBAJA IS NULL
      AND GRID_SRHMAIN10.ID_SRHMAIN10 NOT IN (SELECT SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10
                                              FROM SRHNOMI02_DET_EMPLEADOS
                                              INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
                                              WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = :PARAM_EMPRESA)

    UNION

    SELECT
        :PARAM_MARCA,
        SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01,
        SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10,
        MAX(SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01),
        CAST('Anterior' AS VARCHAR(12)),
        GRID_SRHMAIN10.ENTIDAD
    FROM SRHNOMI01_CAB_SUELDOS
    INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01)
    INNER JOIN GRID_SRHMAIN10 ON (GRID_SRHMAIN10.ID_SRHMAIN10 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10)
    WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND GRID_SRHMAIN10.SRHMAIN10_FDEBAJA IS NULL
      AND SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM <= :PARAM_FECHAHASTA
      AND SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_nom != 0
    GROUP BY
        SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01,
        SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10,
        GRID_SRHMAIN10.ENTIDAD
    INTO
        :MARCA,
        :RELA_SOCSYST01,
        :RELA_SRHMAIN10,
        :ID_SRHNOMI01,
        :TIPO,
        :EMPLEADO
    DO
    BEGIN
       IF (ID_SRHNOMI01 IS NULL) THEN
          SALARIO = 0.00;
       ELSE
         BEGIN
            SELECT SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_SALARIO_NOM
            FROM SRHNOMI02_DET_EMPLEADOS
            WHERE SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = :ID_SRHNOMI01
                AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
            INTO :SALARIO;
         END
       SUSPEND;
    END
END
PRD_ARB_PYMINVE40              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from socwflo01_arb_organigrama WHERE RELA_SOCWFLO01 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT PYMINVE40_CODIGO, RELA_SOCSYST06 FROM PYMINVE40_ARB_LOCACIONES WHERE ID_PYMINVE40 = :RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
PRD_PROXIMO_FOLIO_CHEQUES      

DECLARE VARIABLE NID21 BIGINT;
DECLARE VARIABLE NCONTADOR INTEGER;
DECLARE VARIABLE CMASCARA VARCHAR(50);
DECLARE VARIABLE CPREFIJO VARCHAR(50);
DECLARE VARIABLE CPOSFIJO VARCHAR(50);
DECLARE VARIABLE NLONGITUD INTEGER;
DECLARE VARIABLE CCONTADOR VARCHAR(50);
DECLARE VARIABLE CNRODOCUM VARCHAR(50);
BEGIN
    SELECT
        PRD_SOCSYST20_PYMEGRE10.XID_SOCSYST20,
        PRD_SOCSYST20_PYMEGRE10.XSOCSYST20_CONTADOR,
        PRD_SOCSYST20_PYMEGRE10.XSOCSYST20_MASCARA,
        PRD_SOCSYST20_PYMEGRE10.XSOCSYST20_PREFIJO,
        PRD_SOCSYST20_PYMEGRE10.XSOCSYST20_POSFIJO,
        PRD_SOCSYST20_PYMEGRE10.XSOCSYST20_LONGITUD
    FROM PRD_SOCSYST20_PYMEGRE10(:EMPRESA,
                                 'CHEQ',
                                 :RELA_SICCONT02,
                                 :ORGANIGRAMA)
    INTO NID21, NCONTADOR, CMASCARA, CPREFIJO, CPOSFIJO, NLONGITUD;

    NCONTADOR = NCONTADOR + 1;
    CCONTADOR = NCONTADOR;
    NLONGITUD = NLONGITUD - STRLEN(CCONTADOR);

    IF (CPREFIJO IS NOT NULL) THEN
        CNRODOCUM = cPREFIJO;

    CNRODOCUM = CNRODOCUM || STRREPEAT(CMASCARA, NLONGITUD) || NCONTADOR;

    IF (cPOSFIJO IS NOT NULL) THEN
        CNRODOCUM = CNRODOCUM || cPOSFIJO;

    FOLIO = CNRODOCUM;
    SUSPEND;
END
PRD_SRHMAIN10                  

DECLARE VARIABLE SOCUSUA02_USUARIO VARCHAR(20);
DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
DECLARE VARIABLE SOCUSUA01_TIPO CHAR(1);
DECLARE VARIABLE VAR_SOCUSUA SMALLINT;
DECLARE VARIABLE VAR_ID_SOCUSUA BIGINT;
BEGIN
  FOR
    SELECT
        SOCUSUA02_MAE_USUARIOS.SOCUSUA02_USUARIO,
        SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA20,
        SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA30,
        SOCUSUA01_MAE_ENTIDADES.SOCUSUA01_TIPO
    FROM SRHMAIN10_CAB_EMPLEADO
    INNER JOIN SOCUSUA02_MAE_USUARIOS ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCUSUA02 = SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02)
    INNER JOIN SOCUSUA01_MAE_ENTIDADES ON (SOCUSUA02_MAE_USUARIOS.RELA_SOCUSUA01 = SOCUSUA01_MAE_ENTIDADES.ID_SOCUSUA01)
    WHERE SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10 = :PARAM_ID_SRHMAIN10
    INTO
        :SOCUSUA02_USUARIO,
        :RELA_SOCUSUA20,
        :RELA_SOCUSUA30,
        :SOCUSUA01_TIPO
  DO
  BEGIN
    IF (:SOCUSUA01_TIPO = 'M' ) THEN
        BEGIN
            VAR_SOCUSUA = 20;
            VAR_ID_SOCUSUA = :RELA_SOCUSUA20;

            SELECT
                SOCUSUA20_MAE_ENTMORALES.SOCUSUA20_DENOMINACION || ' ' || SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES AS SOCUSUA02_ENTIDAD,
                SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI
            FROM SOCUSUA20_MAE_ENTMORALES
            INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA20_MAE_ENTMORALES.REFE_SOCSYST10_SOCIEDAD = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
            INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA20_MAE_ENTMORALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
            WHERE SOCUSUA20_MAE_ENTMORALES.ID_SOCUSUA20 = :RELA_SOCUSUA20
            INTO :SOCUSUA02_ENTIDAD,
                 :NACIONALIDAD;
        END
    ELSE
        BEGIN
            VAR_SOCUSUA = 30;
            VAR_ID_SOCUSUA = :RELA_SOCUSUA30;

            SELECT
                SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_NOMBRES || ' ' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_PADRE || ' ' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_MADRE AS SOCUSUA02_ENTIDAD,
                SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI
            FROM SOCUSUA30_MAE_ENTFISICAS
            INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA30_MAE_ENTFISICAS.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
            WHERE SOCUSUA30_MAE_ENTFISICAS.ID_SOCUSUA30 = :RELA_SOCUSUA30
            INTO :SOCUSUA02_ENTIDAD,
                 :NACIONALIDAD;
        END

    SELECT SOCUSUA40_NUMERO
    FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'RFC')
    INTO :SOCUSUA20_SOCUSUA30_RFC;

    IF (:SOCUSUA20_SOCUSUA30_RFC = '') THEN
        SELECT SOCUSUA40_NUMERO
        FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'TXID')
        INTO :SOCUSUA20_SOCUSUA30_RFC;

    IF (:SOCUSUA20_SOCUSUA30_RFC IS NULL) THEN
        SOCUSUA20_SOCUSUA30_RFC = '';

    CURP = NULL;

    SELECT SNVL(PRD_SOCUSUA40.SOCUSUA40_NUMERO,'')
    FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'CURP')
    INTO :CURP;

    NSS = NULL;

    SELECT SNVL(PRD_SOCUSUA40.SOCUSUA40_NUMERO,'')
    FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'NSS')
    INTO :NSS;

    GIRO = NULL;

    IF (:VAR_SOCUSUA = 20) THEN
        SELECT SNVL(SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,'')
        FROM SOCUSUA20_MAE_ENTMORALES
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA20_MAE_ENTMORALES.REFE_SOCSYST10_GIROSOC = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        WHERE SOCUSUA20_MAE_ENTMORALES.ID_SOCUSUA20 = :RELA_SOCUSUA20
        INTO :GIRO;

    SELECT
        SNVL(PRD_SOCUSUA41.SOCUSUA41_PAIS,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA50_CODADUANA,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA50_CIUDAD,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_DOMICILIO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_TELEFONO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_CP,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_DEPTO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_PISO,'')
    FROM PRD_SOCUSUA41(:VAR_SOCUSUA, :VAR_ID_SOCUSUA)
    INTO
        :SOCUSUA41_PAIS,
        :COD_PAIS,
        :SOCUSUA50_CIUDAD,
        :SOCUSUA41_DOMICILIO,
        :SOCUSUA41_TELEFONO,
        :SOCUSUA41_CP,
        :SOCUSUA41_DEPTO,
        :SOCUSUA41_PISO;

    SUSPEND;
  END
END
PRD_MSGPOLI07_PYMINGR35        

DECLARE VARIABLE SQLUSER VARCHAR(1000);
BEGIN
  IF (RELA_SICINGR01X IS NULL) THEN
    sqluser = 'SELECT RELA_MSGPOLI01, ' ||
              'RELA_SICINGR01, ' ||
              'ID_MSGPOLI07, ' ||
              'ENTIDAD, ' ||
              'MSGPOLI07_NROFACTURA, ' ||
              'MSGPOLI07_FFACT, ' ||
              'MSGPOLI07_IMPORTE_NETO, ' ||
              'MSGPOLI07_FAPL, ' ||
              'MSGPOLI10_IMPORTE, ' ||
              'SALDO_CONCILIADO, ' ||
              'RELA_MSGPOLI05 ' ||
              'FROM PRD_MSGPOLI07_SINCONCILIAR(' || :RELA_SOCSYST01 || ')';
  ELSE
    IF (RELA_SICINGR01X IS NOT NULL) THEN
      sqluser = 'SELECT RELA_MSGPOLI01, ' ||
                'RELA_SICINGR01, ' ||
                'ID_MSGPOLI07, ' ||
                'ENTIDAD, ' ||
                'MSGPOLI07_NROFACTURA, ' ||
                'MSGPOLI07_FFACT, ' ||
                'MSGPOLI07_IMPORTE_NETO, ' ||
                'MSGPOLI07_FAPL, ' ||
                'MSGPOLI10_IMPORTE, ' ||
                'SALDO_CONCILIADO, ' ||
                'RELA_MSGPOLI05 ' ||
                'FROM PRD_MSGPOLI07_SINCONCILIAR(' || :RELA_SOCSYST01 || ') ' ||
                'WHERE RELA_SICINGR01 = ' || :RELA_SICINGR01X;

  FOR EXECUTE STATEMENT :sqluser
  INTO
       :RELA_MSGPOLI01,
       :RELA_SICINGR01,
       :ID_MSGPOLI07,
       :ENTIDAD,
       :MSGPOLI07_NROFACTURA,
       :MSGPOLI07_FFACT,
       :MSGPOLI07_IMPORTE_NETO,
       :MSGPOLI07_FAPL,
       :MSGPOLI10_IMPORTE,
       :SALDO_CONCILIADO,
       :RELA_MSGPOLI05
  DO
  BEGIN
    MARCA = 0;
    DEPOSITADO = 0;
    SALDO = 0;
    EXISTESALDO = NULL;
    VALORANTERIOR = 0;

    SUSPEND;

    IF (ID_PYMINGR35 IS NOT NULL) THEN
      BEGIN
        MARCA = 1;

        SELECT
            PYMINGR35_CAB_SALDOS.ID_PYMINGR35,
            PYMINGR38_MOV_CONCILIADAS.PYMINGR38_IMPORTE
        FROM PYMINGR35_CAB_SALDOS
        INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.RELA_PYMINGR35 = PYMINGR35_CAB_SALDOS.ID_PYMINGR35)
        INNER JOIN PYMINGR38_MOV_CONCILIADAS ON (PYMINGR38_MOV_CONCILIADAS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36)
        WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :ID_MSGPOLI07
          AND PYMINGR35_CAB_SALDOS.ID_PYMINGR35 = :ID_PYMINGR35
        INTO :EXISTESALDO,
             :DEPOSITADO;

        IF (:EXISTESALDO IS NOT NULL) THEN
          BEGIN
            SALDO = (MSGPOLI10_IMPORTE + SALDO_CONCILIADO) - DEPOSITADO;
            SUSPEND;
          END
      END
    ELSE
      BEGIN
        SELECT FIRST 1
            PYMINGR38_MOV_CONCILIADAS.RELA_MSGPOLI07,
            PYMINGR38_MOV_CONCILIADAS.PYMINGR38_IMPORTE
        FROM PYMINGR38_MOV_CONCILIADAS
        WHERE PYMINGR38_MOV_CONCILIADAS.RELA_MSGPOLI07 = :ID_MSGPOLI07
        ORDER BY PYMINGR38_MOV_CONCILIADAS.ID_PYMINGR38 DESC
        INTO :EXISTESALDO,
             :DEPOSITADO;

        IF ((:EXISTESALDO IS NULL) OR (:DEPOSITADO <> 0) ) THEN
          BEGIN
            --SALDO = SALDO_CONCILIADO - DEPOSITADO;
            SALDO = MSGPOLI07_IMPORTE_NETO - DEPOSITADO;
            SUSPEND;
          END
      END
  END
END
REP_PYMINVE10_INVENTARIO       

DECLARE VARIABLE ID_PYMINVE30 BIGINT;
BEGIN
    SELECT PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO
    FROM PYMINVE40_ARB_LOCACIONES
    WHERE PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40 = :PARAM_ALMACEN
    INTO :CODIGO;

    SELECT SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
    FROM SOCSYST01_CAB_CLIENTES
    WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
    INTO :EMPRESA;

    FOR
      SELECT
          PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01,
          PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10,
          PYMINVE30_MOV_STOCK.ID_PYMINVE30,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD)
      FROM PYMINVE30_MOV_STOCK
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
      INNER JOIN PYMINVE40_ARB_LOCACIONES ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
      WHERE PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO LIKE TRIM(:CODIGO) || '%'
        AND PYMINVE40_ARB_LOCACIONES.RELA_SOCSYST01 = :PARAM_EMPRESA
      GROUP BY
          PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01,
          PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10,
          PYMINVE30_MOV_STOCK.ID_PYMINVE30,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
          PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO
      INTO
          :RELA_SOCSYST01,
          :ID_PYMINVE10,
          :ID_PYMINVE30,
          :SUCURSAL,
          :SUCURSAL_CODIGO,
          :LOCACION,
          :LOCACION_CODIGO,
          :CATEGORIA,
          :FAMILIA,
          :PRODUCTO,
          :PRODUCTO_CODIGO,
          :CANTIDAD
    DO
    BEGIN
        SELECT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
        FROM PYMINVE31_DEP_PROVEEDORES
        WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :ID_PYMINVE30
        INTO :NROLOTE;

        SUSPEND;
    END
END
REP_MSGPOLI23_REGINTERMEDIO    

BEGIN
  SELECT
      CBO_CLIENTES_EMPRESAS.ID_SOCSYST01,
      CBO_CLIENTES_EMPRESAS.SOCSYST01_DESCRI
  FROM CBO_CLIENTES_EMPRESAS
  WHERE CBO_CLIENTES_EMPRESAS.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :RELA_SOCSYST01,
     :EMPRESA;

  FOR
    SELECT
        CBO_MESES.SOCSYST10_FILTRO_DES,
        CBO_MESES.SOCSYST10_CODIGO,
        CBO_MESES.ID_SOCSYST10
    FROM CBO_MESES
    INTO
       :MES,
       :CODIGO,
       :ID_SOCSYST10
  DO
  BEGIN
     SELECT SUM(MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE)
     FROM MSGPOLI23_DET_BITACORA
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
     WHERE MSGPOLI23_DET_BITACORA.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :PARAM_ANIO
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :CODIGO
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
        AND (MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-ISR1'
            OR (MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-ISR2')
            OR (MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-ISR3'))
     INTO :IMPORTE_ISR;

     IF (IMPORTE_ISR IS NULL) THEN
        IMPORTE_ISR = 0;

     SELECT
        SUM(MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE)
     FROM MSGPOLI23_DET_BITACORA
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
     WHERE MSGPOLI23_DET_BITACORA.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :PARAM_ANIO
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :CODIGO
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
        AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-E-ITN'
     INTO
        :IMPORTE_INTERMEDIO;

     IF (IMPORTE_INTERMEDIO IS NULL) THEN
        IMPORTE_INTERMEDIO = 0;

     SELECT
        SUM(MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_INGRESOS - MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_EGRESOS)
     FROM MSGPOLI23_DET_BITACORA
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
     WHERE MSGPOLI23_DET_BITACORA.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :PARAM_ANIO
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES <= :CODIGO
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
        AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-E-ITN'
     INTO
        :BASE_MENSUAL_ACUM;

     IF (BASE_MENSUAL_ACUM IS NULL) THEN
        BASE_MENSUAL_ACUM = 0;

     SUSPEND;
  END
END
PRD_SICINGR01_SALDOS           
BEGIN
  SELECT SUM(PYMINGR30_CAB_DEPOSITOS.PYMINGR30_IMPORTE)
  FROM PYMINGR30_CAB_DEPOSITOS
  WHERE PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01 = :PARAM_SOCSYST01
    AND PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
    AND PYMINGR30_CAB_DEPOSITOS.RELA_SICINGR01 = :PARAM_CLIENTE
    AND PYMINGR30_CAB_DEPOSITOS.PYMINGR30_ANTICIPO = 1
  INTO :DEPOSITOS_AUTO;

  IF (:DEPOSITOS_AUTO IS NULL) THEN
    DEPOSITOS_AUTO = 0;

  SELECT DNVL(SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER),0.00)
  FROM MSGPOLI02_DET_POLIZAS
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS REFERENCIA ON (MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_REFE = REFERENCIA.ID_SOCSYST10)
  INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPOACCION ON (MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION = TIPOACCION.ID_SOCSYST10)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPOPOLIZA ON (MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10 = TIPOPOLIZA.ID_SOCSYST10)
  WHERE MSGPOLI02_DET_POLIZAS.RELA_SOCSYST01 = :PARAM_SOCSYST01
    AND MSGPOLI02_DET_POLIZAS.RELA_SICINGR01 = :PARAM_CLIENTE
    AND REFERENCIA.SOCSYST10_CODIGO = 'DEPOSITOS'
    AND TIPOACCION.SOCSYST10_CODIGO = 'MANUAL'
    AND TIPOPOLIZA.SOCSYST10_CODIGO = 'PO-1-ING'
  INTO :DEPOSITOS_MAN;

  IF (:DEPOSITOS_MAN IS NULL) THEN
    DEPOSITOS_MAN = 0;

  TOTAL_DEPOSITOS = DEPOSITOS_MAN + DEPOSITOS_AUTO;

  SELECT SUM(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL)
  FROM PYMEGRE02_CAB_FACTURAS
  WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_SOCSYST01
    AND PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
    AND PYMEGRE02_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
  INTO :TOTAL_GASTOS;

  IF (:TOTAL_GASTOS IS NULL) THEN
    TOTAL_GASTOS = 0;

  SELECT SUM(PYMINGR36_DET_FACTURAS.PYMINGR36_IMPORTE)
  FROM PYMINGR36_DET_FACTURAS
  INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
  WHERE MSGPOLI07_DET_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
  INTO :TOTAL_FACTURAS;

  IF (:TOTAL_FACTURAS IS NULL) THEN
    TOTAL_FACTURAS = 0;

  SELECT
      SUM(PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS)
  FROM PYMINGR08_DEP_HONORARIOS
  INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
  WHERE PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
    AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
  INTO :TOTAL_HONORARIOS;

  IF (:TOTAL_HONORARIOS IS NULL) THEN
    TOTAL_HONORARIOS = 0;

  SELECT
      SUM(PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD * PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE)
  FROM PYMINGR02_DET_CONCEPTOS
  INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
  WHERE PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
    AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
  INTO :TOTAL_SERVCOMP;

  IF (:TOTAL_SERVCOMP IS NULL) THEN
    TOTAL_SERVCOMP = 0;

  SELECT
      SUM(PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS)
  FROM PYMINGR01_CAB_FACTURAS
  WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_SOCSYST01
    AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
    AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
    AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
  INTO :TOTAL_IVA;

  IF (:TOTAL_IVA IS NULL) THEN
    TOTAL_IVA = 0;

  SALDO = TOTAL_DEPOSITOS - TOTAL_GASTOS - TOTAL_FACTURAS;

  SUSPEND;
END
REP_PYMINGR04_VENTAS           

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO :RELA_SOCSYST01,
       :EMPRESA;

  FOR
    SELECT
        TIPOENTIDAD.SOCSYST10_FILTRO_DES,
        CATEGORIA.SOCSYST10_FILTRO_DES,
        PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
        PYMINGR04_DET_ENTIDADES.PYMINGR04_ENTIDAD,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
        (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
         FROM PYMINGR18_DEP_FACTELECT
         WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE_NETO,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE_BRUTO,
        (SELECT CAST(MSGPOLI10_MOV_CONCILIADAS.MSGPOLI10_FAPL AS DATE)
         FROM MSGPOLI10_MOV_CONCILIADAS
         WHERE MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
    FROM MSGPOLI07_DET_FACTURAS
    INNER JOIN PYMINGR01_CAB_FACTURAS ON (MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01)
    INNER JOIN PYMINGR04_DET_ENTIDADES ON (PYMINGR04_DET_ENTIDADES.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINGR04_DET_ENTIDADES.RELA_SOCSYST10_CATEGORIA = CATEGORIA.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPOENTIDAD ON (PYMINGR04_DET_ENTIDADES.RELA_SOCSYST10 = TIPOENTIDAD.ID_SOCSYST10)
    WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND PYMINGR01_CAB_fACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_DESDE AND :PARAM_HASTA
    INTO
        :TIPOENTIDAD,
        :CATEGORIA,
        :ID_PYMINGR01,
        :ENTIDAD,
        :CLIENTE,
        :NROFACTURA,
        :FOLIOELECT,
        :FFACT,
        :IMPORTE,
        :IMPORTE_NETO,
        :IMPORTE_BRUTO,
        :FECHA_CONCILIACION
  DO
  BEGIN
     SUSPEND;
  END
END
GRID_PYMVENT51                 

begin
    for select
    PYMVENT51_DET_RENDICIONES.rela_pymvent50,
    PYMVENT51_DET_RENDICIONES.rela_pymvent01,
    PYMVENT51_DET_RENDICIONES.rela_socsyst10_docu,
    PYMVENT51_DET_RENDICIONES.id_pymvent51,
    PYMVENT51_DET_RENDICIONES.pymvent51_saldohist,
    PYMVENT51_DET_RENDICIONES.pymvent51_importe,
    PYMVENT51_DET_RENDICIONES.pymvent51_fapl
    from PYMVENT51_DET_RENDICIONES
    into :rela_pymvent50,
         :rela_pymvent01,
         :rela_socsyst10_docu,
         :id_pymvent51,
         :pymvent51_saldohist,
         :pymvent51_importe,
         :pymvent51_fapl
    do
    begin
        if (rela_pymvent01 is not null) then
        BEGIN
            TIPO = 'POR CAJA';
            select PYMVENT01_CAB_CAJAS.pymvent01_descripcion
            from PYMVENT01_CAB_CAJAS
            where PYMVENT01_CAB_CAJAS.id_pymvent01 = :rela_pymvent01
            into :DESCRIPCION;
        END
        else if (rela_socsyst10_docu is not null) then
        BEGIN
            TIPO = 'POR DOCUMENTO';
            select SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
            from SOCSYST10_TBL_LISTAESTADOS
            where SOCSYST10_TBL_LISTAESTADOS.id_socsyst10 = :rela_socsyst10_docu
            into :DESCRIPCION;
        END

        suspend;
    end
end
SOC$DB_ACTIVA_ALL              

DECLARE VARIABLE CONSTRAINCTS VARCHAR(1000);
DECLARE VARIABLE POSI_DESDE INTEGER;
DECLARE VARIABLE POSI_HASTA INTEGER;
DECLARE VARIABLE EXISTE INTEGER;
begin
  FOR SELECT ZTMPSOC$DB_MIGRACION.soc$db_foreigns
  FROM ZTMPSOC$DB_MIGRACION
  INTO :SOC$DB_FOREIGNSX
  DO
  begin
    POSI_DESDE = StrPos('add constraint ', SOC$DB_FOREIGNSX) + 15;
    POSI_HASTA = StrPos('foreign key', SOC$DB_FOREIGNSX) - 1;
    CONSTRAINCTS = trim(SubStr(SOC$DB_FOREIGNSX, POSI_DESDE, POSI_HASTA));

    select count(*)
    from SOC$DB_FOREIGNS
    where SOC$DB_FOREIGNS.constraint_name = :CONSTRAINCTS
    into :existe;

    if (existe = 0) then
    begin

            EXECUTE STATEMENT :SOC$DB_FOREIGNSX;
            suspend;

    end
  END
end
REP_ON2CFDS30_NOTARIOS         

BEGIN
  FOR
    SELECT
        SOCUSUA51_TBL_FEDERATIVAS.SOCUSUA51_ENTIDAD,
        ON2CFDS30_DEP_NOTARIAS.ON2CFDS30_CURP,
        ON2CFDS30_DEP_NOTARIAS.ON2CFDS30_NOTARIA,
        ON2CFDS30_DEP_NOTARIAS.ON2CFDS30_PLAZA,
        ON2CFDS30_DEP_NOTARIAS.ON2CFDS30_NONOTARIAL,
        ON2CFDS30_DEP_NOTARIAS.ON2CFDS30_FECHANOT,
        ON2CFDS30_DEP_NOTARIAS.ON2CFDS30_IMPORTE,
        ON2CFDS30_DEP_NOTARIAS.ON2CFDS30_SUBTOTAL,
        ON2CFDS30_DEP_NOTARIAS.ON2CFDS30_IVA,
        TIPO_TERRENO.SOCSYST10_FILTRO_DES,
        ON2CFDS31_DET_INMUEBLES.ON2CFDS31_CALLE,
        ON2CFDS31_DET_INMUEBLES.ON2CFDS31_EXTERIOR,
        ON2CFDS31_DET_INMUEBLES.ON2CFDS31_INTERIOR,
        ON2CFDS31_DET_INMUEBLES.ON2CFDS31_REFERENCIA,
        SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO_TIPO,
        SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO,
        SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CODPOSTAL,
        SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA,
        SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO,
        SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
        TIPO.SOCSYST10_FILTRO_DES,
        ON2CFDS32_DET_COMPRAVENTA.ON2CFDS32_NOMBRES || ' ' || ON2CFDS32_DET_COMPRAVENTA.ON2CFDS32_APELLIDO_PAT || ' ' || ON2CFDS32_DET_COMPRAVENTA.ON2CFDS32_APELLIDO_MAT,
        ON2CFDS32_DET_COMPRAVENTA.ON2CFDS32_RFC,
        ON2CFDS32_DET_COMPRAVENTA.ON2CFDS32_CURP,
        ON2CFDS32_DET_COMPRAVENTA.ON2CFDS32_PORCENTAJE
    FROM ON2CFDS30_DEP_NOTARIAS
    INNER JOIN SOCUSUA51_TBL_FEDERATIVAS ON (ON2CFDS30_DEP_NOTARIAS.RELA_SOCUSUA51 = SOCUSUA51_TBL_FEDERATIVAS.ID_SOCUSUA51)
    INNER JOIN ON2CFDS31_DET_INMUEBLES ON (ON2CFDS30_DEP_NOTARIAS.ID_ON2CFDS30 = ON2CFDS31_DET_INMUEBLES.RELA_ON2CFDS30)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO_TERRENO ON (ON2CFDS31_DET_INMUEBLES.RELA_SOCSYST10 = TIPO_TERRENO.ID_SOCSYST10)
    INNER JOIN SOCUSUA42_TBL_CODPOSTALES ON (ON2CFDS31_DET_INMUEBLES.RELA_SOCUSUA42 = SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42)
    INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
    INNER JOIN ON2CFDS32_DET_COMPRAVENTA ON (ON2CFDS30_DEP_NOTARIAS.ID_ON2CFDS30 = ON2CFDS32_DET_COMPRAVENTA.RELA_ON2CFDS30)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO ON (ON2CFDS32_DET_COMPRAVENTA.RELA_SOCSYST10 = TIPO.ID_SOCSYST10)
    WHERE ON2CFDS30_DEP_NOTARIAS.RELA_ON2CFDS10 = :PARAM_ID
    INTO
        :SOCUSUA51_ENTIDAD,
        :ON2CFDS30_CURP,
        :ON2CFDS30_NOTARIA,
        :ON2CFDS30_PLAZA,
        :ON2CFDS30_NONOTARIAL,
        :ON2CFDS30_FECHANOT,
        :ON2CFDS30_IMPORTE,
        :ON2CFDS30_SUBTOTAL,
        :ON2CFDS30_IVA,
        :TIPO_TERRENO,
        :ON2CFDS31_CALLE,
        :ON2CFDS31_EXTERIOR,
        :ON2CFDS31_INTERIOR,
        :ON2CFDS31_REFERENCIA,
        :SOCUSUA42_ASENTAMIENTO_TIPO,
        :SOCUSUA42_ASENTAMIENTO,
        :SOCUSUA42_CODPOSTAL,
        :SOCUSUA42_ESTADOPROVINCIA,
        :SOCUSUA42_MUNICIPIO,
        :SOCUSUA50_DESCRI,
        :TIPO,
        :ON2CFDS32_NOMBRES,
        :ON2CFDS32_RFC,
        :ON2CFDS32_CURP,
        :ON2CFDS32_PORCENTAJE
  DO
  BEGIN
    SUSPEND;
  END
END
PRD_SICCONT02_XML              

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
begin
    select COUNT(*)
    from REP_SICCONT02_XML
    WHERE RELA_SOCSYST01 = :EMPRESA
    INTO :TOTALCTAS;

    Select socsyst01_cab_clientes.rela_socusua02
    from socsyst01_cab_clientes
    where socsyst01_cab_clientes.id_socsyst01 = :empresa
    into :rela_socusua02;

    select REP_SOCUSUA40_SOCUSUA02.socusua40_numero
    from REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
    WHERE REP_SOCUSUA40_SOCUSUA02.socsyst10_codigo = 'RFC'
    into :RFC;

    ano = extractyear(current_date);
    mes = extractmonth(current_date);

    suspend;
end
PRD_MSGPOLI03_XML              

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
begin
    select COUNT(*)
    from REP_MSGPOLI03_BALANZA(:EMPRESA, :ANOX, :mesX,  :sinmovi)
    where nivel <= :NIVEL
    INTO :TOTALCTAS;

    Select socsyst01_cab_clientes.rela_socusua02
    from socsyst01_cab_clientes
    where socsyst01_cab_clientes.id_socsyst01 = :empresa
    into :rela_socusua02;

    select REP_SOCUSUA40_SOCUSUA02.socusua40_numero
    from REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
    into :RFC;

    ano = anox;
    mes = mesx;

    suspend;
end
REP_PYMINGR02_PYMINGR06        

DECLARE VARIABLE APLICATOTAL INTEGER;
DECLARE VARIABLE APLICA SMALLINT;
DECLARE VARIABLE RELA_PYMVENT21 BIGINT;
DECLARE VARIABLE CADUCIDAD INTEGER;
DECLARE VARIABLE PORSERIE INTEGER;
BEGIN
  SELECT PYMINGR01_CAB_FACTURAS.PYMINGR01_APLICATOTAL
  FROM PYMINGR01_CAB_FACTURAS
  WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :ID_FACTURA
  INTO :APLICATOTAL;

  APLICA = 0;

  FOR
    SELECT
        GRID_PYMEGRE03.ID_PYMEGRE03,
        CAST('GASTOS' AS VARCHAR(10)),
        GRID_PYMEGRE03.RELA_SICCONT02,
        SUM(GRID_PYMEGRE03.PYMEGRE03_CANTIDAD),
        SUM(GRID_PYMEGRE03.PYMEGRE03_CANTIDAD * GRID_PYMEGRE03.PYMEGRE03_IMPORTE),
        GRID_PYMEGRE03.PYMEGRE03_IMPORTE,
        GRID_PYMEGRE03.PYMEGRE03_DESCUENTO,
        GRID_PYMEGRE03.SICCONT02_DESCRI
    FROM PYMINGR15_MOV_GASTOS
    INNER JOIN GRID_PYMEGRE03 ON (PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02 = GRID_PYMEGRE03.RELA_PYMEGRE02)
    WHERE PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = :ID_FACTURA
    GROUP BY
        GRID_PYMEGRE03.ID_PYMEGRE03,
        GRID_PYMEGRE03.RELA_SICCONT02,
        GRID_PYMEGRE03.PYMEGRE03_IMPORTE,
        GRID_PYMEGRE03.PYMEGRE03_DESCUENTO,
        GRID_PYMEGRE03.SICCONT02_DESCRI
    INTO
        :ID_PYMINGR02,
        :CODIGO,
        :RELA_PYMINGR10,
        :CANTIDAD,
        :IMPORTE,
        :IMPORTE_UNITARIO,
        :DESCUENTO,
        :CONCEPTO
  DO
  BEGIN
      SELECT
          PRD_PYMINGR01_IMPUESTOS.IVA,
          PRD_PYMINGR01_IMPUESTOS.PIVA,
          PRD_PYMINGR01_IMPUESTOS.IEPS,
          PRD_PYMINGR01_IMPUESTOS.PIEPS,
          PRD_PYMINGR01_IMPUESTOS.RETISR,
          PRD_PYMINGR01_IMPUESTOS.PRETISR,
          PRD_PYMINGR01_IMPUESTOS.RETIVA,
          PRD_PYMINGR01_IMPUESTOS.PRETIVA
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_PYMINGR02,:CODIGO)
      INTO
          :IVA,
          :PIVA,
          :IEPS,
          :PIEPS,
          :RETISR,
          :PRETISR,
          :RETIVA,
          :PRETIVA;

      SUSPEND;
  END

  FOR
    SELECT
        PYMINGR02_DET_CONCEPTOS.ID_PYMINGR02,
        CAST('CONCEPTOS' AS VARCHAR(10)),
        PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR10,
        PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD,
        PYMINGR10_CAB_CONCEPTOS.PYMINGR10_CODIGO,
        (SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
         FROM SOCSYST10_TBL_LISTAESTADOS
         WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD),
        PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD,
        PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD * PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE,
        PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE,
        PYMINGR02_DET_CONCEPTOS.PYMINGR02_DESCUENTO,
        SNVL(PYMINGR02_DET_CONCEPTOS.PYMINGR02_CONCEPTO,PYMINGR10_CAB_CONCEPTOS.PYMINGR10_DESCRIPCION),
        PYMINGR02_DET_CONCEPTOS.PYMINGR02_NOTAS
    FROM PYMINGR02_DET_CONCEPTOS
    INNER JOIN PYMINGR10_CAB_CONCEPTOS ON (PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR10 = PYMINGR10_CAB_CONCEPTOS.ID_PYMINGR10)
    WHERE PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01 = :ID_FACTURA
    INTO
        :ID_PYMINGR02,
        :CODIGO,
        :RELA_PYMINGR10,
        :RELA_SOCSYST10_UNIDAD,
        :CODIGO_PRODUCTO,
        :MEDIDA,
        :CANTIDAD,
        :IMPORTE,
        :IMPORTE_UNITARIO,
        :DESCUENTO,
        :CONCEPTO,
        :NOTAS
  DO
  BEGIN
    IF (:MEDIDA IS NULL) THEN
      MEDIDA = 'No Aplica';

    IF (:APLICA != 1) THEN
      SELECT
          PRD_PYMINGR01_IMPUESTOS.IVA,
          PRD_PYMINGR01_IMPUESTOS.PIVA,
          PRD_PYMINGR01_IMPUESTOS.IEPS,
          PRD_PYMINGR01_IMPUESTOS.HOSP,
          PRD_PYMINGR01_IMPUESTOS.PIEPS,
          PRD_PYMINGR01_IMPUESTOS.RETISR,
          PRD_PYMINGR01_IMPUESTOS.PRETISR,
          PRD_PYMINGR01_IMPUESTOS.RETIVA,
          PRD_PYMINGR01_IMPUESTOS.PRETIVA,
          PRD_PYMINGR01_IMPUESTOS.PHOSP
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_PYMINGR02,:CODIGO)
      INTO
          :IVA,
          :PIVA,
          :IEPS,
          :HOSP,
          :PIEPS,
          :RETISR,
          :PRETISR,
          :RETIVA,
          :PRETIVA,
          :PHOSP;

      SUSPEND;

      IF (:APLICATOTAL = 1 AND :IVA != 0) THEN
        BEGIN
          APLICA = 1;
          IVA = 0;
          IEPS = 0;
          HOSP = 0;
          RETISR = 0;
          RETIVA = 0;
        END
  END

  FOR
    SELECT
        PYMINGR06_DET_ITEMS.ID_PYMINGR06,
        CAST('ITEMS' AS VARCHAR(10)),
        PYMINGR06_DET_ITEMS.RELA_PYMINVE30_NOSERIE,
        PYMINGR06_DET_ITEMS.RELA_PYMINVE10,
        PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_MEDIDA,
        PYMINGR06_DET_ITEMS.RELA_PYMVENT21,
        PYMINGR06_DET_ITEMS.RELA_PYMINVE30,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        PYMINGR06_DET_ITEMS.PYMINGR06_CANTIDAD,
        PYMINGR06_DET_ITEMS.PYMINGR06_CANTIDAD * PYMINGR06_DET_ITEMS.PYMINGR06_IMPORTE,
        PYMINGR06_DET_ITEMS.PYMINGR06_IMPORTE,
        PYMINGR06_DET_ITEMS.PYMINGR06_DESCUENTO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        PYMINGR06_DET_ITEMS.PYMINGR06_NOTAS,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UNISIZE,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PORSERIE,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CADUCIDAD
    FROM PYMINGR06_DET_ITEMS
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINGR06_DET_ITEMS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_MEDIDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :ID_FACTURA
    INTO    
        :ID_PYMINGR02,
        :CODIGO,
        :RELA_PYMINVE30_NOSERIE,
        :RELA_PYMINGR10,
        :RELA_SOCSYST10_UNIDAD,
        :RELA_PYMVENT21,
        :RELA_PYMINVE30,
        :CODIGO_PRODUCTO,
        :MEDIDA,
        :CANTIDAD,
        :IMPORTE,
        :IMPORTE_UNITARIO,
        :DESCUENTO,
        :CONCEPTO,
        :NOTAS,
        :PIEZAS,
        :PORSERIE,
        :CADUCIDAD
  DO
  BEGIN
    LOTE = '';
    FECHA_VENCIMIENTO = NULL;

    IF (:RELA_PYMINVE30_NOSERIE IS NOT NULL) THEN
      SELECT FIRST 1
          PYMINVE30_MOV_STOCK.PYMINVE30_FVENCIMIENTO,
          PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
      FROM PYMINVE31_DEP_PROVEEDORES
      INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
      WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :RELA_PYMINVE30_NOSERIE
      INTO
          :FECHA_VENCIMIENTO,
          :LOTE;

    IF (:APLICA != 1) THEN
      SELECT
          PRD_PYMINGR01_IMPUESTOS.IVA,
          PRD_PYMINGR01_IMPUESTOS.PIVA,
          PRD_PYMINGR01_IMPUESTOS.IEPS,
          PRD_PYMINGR01_IMPUESTOS.PIEPS,
          PRD_PYMINGR01_IMPUESTOS.RETISR,
          PRD_PYMINGR01_IMPUESTOS.PRETISR,
          PRD_PYMINGR01_IMPUESTOS.RETIVA,
          PRD_PYMINGR01_IMPUESTOS.PRETIVA
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_PYMINGR02,:CODIGO)
      INTO
          :IVA,
          :PIVA,
          :IEPS,
          :PIEPS,
          :RETISR,
          :PRETISR,
          :RETIVA,
          :PRETIVA;

      SUSPEND;
  END

  ID_PYMINGR02 = NULL;

  SELECT
      PYMINGR08_DEP_HONORARIOS.ID_PYMINGR08,
      'HONORARIOS',
      NULL,
      CAST('Honorarios' AS VARCHAR(50)),
      Cast('No Aplica' AS VARCHAR(10)),
      1,
      PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS,
      PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS,
      'Honorarios',
      PYMINGR08_DEP_HONORARIOS.PYMINGR08_IVA,
      PYMINGR08_DEP_HONORARIOS.PYMINGR08_PORCIVA
  FROM PYMINGR08_DEP_HONORARIOS
  WHERE PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01 = :ID_FACTURA
  INTO
      :ID_PYMINGR02,
      :CODIGO,
      :RELA_PYMINGR10,
      :CODIGO_PRODUCTO,
      :MEDIDA,
      :CANTIDAD,
      :IMPORTE,
      :IMPORTE_UNITARIO,
      :CONCEPTO,
      :IVA,
      :PIVA;

  IF (:ID_PYMINGR02 IS NOT NULL) THEN
      SUSPEND;
END
VW_PYMVENT10_CORTEZ            

BEGIN
  FOR
    SELECT
        PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
        PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
        PYMVENT20_CAB_TICKETS.RELA_PYMVENT10,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
        PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
        SUM(PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL),
        SUM(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS),
        SUM(PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL),
        SUM(PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO),
        SUM(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD)
    FROM PYMVENT20_CAB_TICKETS
    INNER JOIN PYMVENT21_DET_TICKETS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT21_DET_TICKETS.RELA_PYMVENT20)
    WHERE PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = :PARAM_PYMVENT10
      AND PYMVENT20_CAB_TICKETS.PYMVENT20_CANCELADO = 0
      AND PYMVENT20_CAB_TICKETS.PYMVENT20_PRESUPUESTO = 0
   GROUP BY
        PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
        PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
        PYMVENT20_CAB_TICKETS.RELA_PYMVENT10,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
        PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO
   INTO
       :RELA_SOCSYST01,
       :RELA_SOCWFLO01,
       :RELA_PYMVENT10,
       :RELA_PYMINVE10,
       :PYMVENT21_CODIGO,
       :PYMVENT21_DESCRIPCION,
       :PYMVENT21_IMPOUNITARIO,
       :SUBTOTAL,
       :DESCUENTOS,
       :TOTAL,
       :ADEUDO,
       :CANTIDAD
   DO
   BEGIN
     SUSPEND;
   END
END
REP_PYMVENT10_PRODUCTOS        

BEGIN
    DELETE FROM ZTMPYMVENT21_ULTFECHA
    WHERE ZTMPYMVENT21_ULTFECHA.usuario = current_user;

    INSERT INTO ZTMPYMVENT21_ULTFECHA
    select
    current_user,
    vw_pymvent10_productos_maxfecha.rela_socwflo01,
    vw_pymvent10_productos_maxfecha.rela_pyminve10,
    vw_pymvent10_productos_maxfecha.maxfecha
    from vw_pymvent10_productos_maxfecha;

    SELECT SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
    FROM SOCSYST01_CAB_CLIENTES
    WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
    INTO :EMPRESA;

    IF (:PARAM_ORGANIGRAMA != -1) THEN
        FOR SELECT
        RELA_SOCWFLO01,
        RELA_SOCSYST01,
        RELA_PYMVENT01,
        RELA_PYMINVE10,
        RELA_PYMINVE30_NOSERIE,
        ID_PYMVENT10,
        SUCURSAL,
        CATEGORIA,
        FAMILIA,
        CODIGO_PRODUCTO,
        PRODUCTO,
        PCOSTO,
        PVENTA,
        UTILIDAD,
        CANTIDAD,
        TOTAL,
        FECHA,
        PRECIOLISTA
        FROM VW_PYMVENT10_PRODUCTOS
        WHERE VW_PYMVENT10_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND VW_PYMVENT10_PRODUCTOS.rela_socwflo01_20 = :PARAM_ORGANIGRAMA
        AND VW_PYMVENT10_PRODUCTOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
        AND VW_PYMVENT10_PRODUCTOS.fecha BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
            :RELA_SOCWFLO01,
            :RELA_SOCSYST01,
            :RELA_PYMVENT01,
            :RELA_PYMINVE10,
            :RELA_PYMINVE30_NOSERIE,
            :ID_PYMVENT10,
            :SUCURSAL,
            :CATEGORIA,
            :FAMILIA,
            :CODIGO_PRODUCTO,
            :PRODUCTO,
            :PCOSTO,
            :PVENTA,
            :UTILIDAD,
            :CANTIDAD,
            :TOTAL,
            :FECHA,
            :PRECIOLISTA
        DO
        BEGIN
            select ZTMPYMVENT21_ULTFECHA.maxfecha
            from ZTMPYMVENT21_ULTFECHA
            where ZTMPYMVENT21_ULTFECHA.usuario = current_user
            AND ZTMPYMVENT21_ULTFECHA.rela_socwflo01 = :RELA_SOCWFLO01
            and ZTMPYMVENT21_ULTFECHA.rela_pyminve10 = :RELA_PYMINVE10
            INTO :ULTFECHA;

            PYMINVE12_CODIGO = NULL;
            PYMINVE12_PROVEEDOR = NULL;
            NRO_SERIE = NULL;
            PYMINVE12_IMPORTE = PCOSTO * CANTIDAD;

            IF (:RELA_PYMINVE30_NOSERIE IS NOT NULL) THEN
                SELECT
                PYMINVE12_DET_PROVEEDORES.PYMINVE12_CODIGO,
                PYMINVE12_DET_PROVEEDORES.PYMINVE12_PROVEEDOR,
                PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
                PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
                FROM PYMINVE30_MOV_STOCK
                INNER JOIN PYMINVE31_DEP_PROVEEDORES ON (PYMINVE30_MOV_STOCK.ID_PYMINVE30 = PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30)
                INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
                WHERE PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :RELA_SOCWFLO01
                AND PYMINVE30_MOV_STOCK.ID_PYMINVE30 = :RELA_PYMINVE30_NOSERIE
                INTO
                    :PYMINVE12_CODIGO,
                    :PYMINVE12_PROVEEDOR,
                    :PYMINVE12_IMPORTE,
                    :NRO_SERIE;

            SUSPEND;
     END
   ELSE
        FOR SELECT
        RELA_SOCWFLO01,
        RELA_SOCSYST01,
        RELA_PYMVENT01,
        RELA_PYMINVE10,
        RELA_PYMINVE30_NOSERIE,
        ID_PYMVENT10,
        SUCURSAL,
        CATEGORIA,
        FAMILIA,
        CODIGO_PRODUCTO,
        PRODUCTO,
        PCOSTO,
        PVENTA,
        UTILIDAD,
        CANTIDAD,
        TOTAL,
        FECHA,
        PRECIOLISTA
        FROM VW_PYMVENT10_PRODUCTOS
        WHERE VW_PYMVENT10_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND VW_PYMVENT10_PRODUCTOS.FECHA BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
            :RELA_SOCWFLO01,
            :RELA_SOCSYST01,
            :RELA_PYMVENT01,
            :RELA_PYMINVE10,
            :RELA_PYMINVE30_NOSERIE,
            :ID_PYMVENT10,
            :SUCURSAL,
            :CATEGORIA,
            :FAMILIA,
            :CODIGO_PRODUCTO,
            :PRODUCTO,
            :PCOSTO,
            :PVENTA,
            :UTILIDAD,
            :CANTIDAD,
            :TOTAL,
            :FECHA,
            :PRECIOLISTA
        DO
        BEGIN
            select ZTMPYMVENT21_ULTFECHA.maxfecha
            from ZTMPYMVENT21_ULTFECHA
            where ZTMPYMVENT21_ULTFECHA.usuario = current_user
            AND ZTMPYMVENT21_ULTFECHA.rela_socwflo01 = :RELA_SOCWFLO01
            and ZTMPYMVENT21_ULTFECHA.rela_pyminve10 = :RELA_PYMINVE10
            INTO :ULTFECHA;

            PYMINVE12_CODIGO = NULL;
            PYMINVE12_PROVEEDOR = NULL;
            NRO_SERIE = NULL;
            PYMINVE12_IMPORTE = PCOSTO * CANTIDAD;

            IF (:RELA_PYMINVE30_NOSERIE IS NOT NULL) THEN
                SELECT
                PYMINVE12_DET_PROVEEDORES.PYMINVE12_CODIGO,
                PYMINVE12_DET_PROVEEDORES.PYMINVE12_PROVEEDOR,
                PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
                PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
                FROM PYMINVE30_MOV_STOCK
                INNER JOIN PYMINVE31_DEP_PROVEEDORES ON (PYMINVE30_MOV_STOCK.ID_PYMINVE30 = PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30)
                INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
                WHERE PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :RELA_SOCWFLO01
                AND PYMINVE30_MOV_STOCK.ID_PYMINVE30 = :RELA_PYMINVE30_NOSERIE
                INTO
                    :PYMINVE12_CODIGO,
                    :PYMINVE12_PROVEEDOR,
                    :PYMINVE12_IMPORTE,
                    :NRO_SERIE;

            SUSPEND;
     END
END
GRID_PYMINVE15                 

DECLARE VARIABLE CANTI BIGINT;
DECLARE VARIABLE SUMA DOUBLE PRECISION;
DECLARE VARIABLE PYMINVE10_UTILIDAD DOUBLE PRECISION;
DECLARE VARIABLE PYMINVE10_PCOSTO DOUBLE PRECISION;
begin
    FOR SELECT
    PYMINVE15_DET_PRECIOS.rela_socsyst10,
    PYMINVE15_DET_PRECIOS.rela_pyminve10,
    PYMINVE15_DET_PRECIOS.rela_socwflo01,
    PYMINVE15_DET_PRECIOS.id_pyminve15,
    socsyst10_tbl_listaestados.socsyst10_filtro_des,
    PYMINVE15_DET_PRECIOS.pyminve15_porcentaje,
    CAST(PYMINVE15_DET_PRECIOS.pyminve15_fapl AS DATE),
    PYMINVE10_CAB_PRODUCTOS.pyminve10_pcosto,
    PYMINVE10_CAB_PRODUCTOS.pyminve10_utilidad,
    socsyst10_tbl_listaestados.socsyst10_codigo,
    PYMINVE15_DET_PRECIOS.pyminve15_espreciolista,
    PYMINVE15_DET_PRECIOS.pyminve15_precio,
    PYMINVE15_DET_PRECIOS.PYMINVE15_SINPROVE
    FROM PYMINVE10_CAB_PRODUCTOS
    INNER JOIN PYMINVE15_DET_PRECIOS ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMINVE15_DET_PRECIOS.RELA_PYMINVE10)
    INNER JOIN socsyst10_tbl_listaestados ON (socsyst10_tbl_listaestados.id_socsyst10 = PYMINVE15_DET_PRECIOS.rela_socsyst10)
    WHERE rela_pyminve10 = :ID_PYMINVE10
    into :rela_socsyst10,
         :rela_pyminve10,
         :rela_socwflo01,
         :id_pyminve15,
         :pyminve15_descripcion,
         :pyminve15_porcentaje,
         :pyminve15_fapl,
         :pyminve10_pcosto,
         :pyminve10_utilidad,
         :socsyst10_codigo,
         :PYMINVE15_ESPRECIOLISTA,
         :pyminve15_precio,
         :PYMINVE15_SINPROVE
    DO
    BEGIN
        if ((PYMINVE15_SINPROVE IS NULL) or (PYMINVE15_SINPROVE = 0)) then
        begin
            SELECT
            COUNT(pyminve12_det_proveedores.id_pyminve12),
            SUM(pyminve12_det_proveedores.pyminve12_importe)
            FROM pyminve12_det_proveedores
            WHERE pyminve12_det_proveedores.rela_pyminve10 = :ID_PYMINVE10
            INTO :CANTI,
                 :SUMA;

            if (CANTI <> 0) then
                pyminve10_pcosto = (SUMA / CANTI);

            PYMINVE15_PRECIO = pyminve10_pcosto + ((pyminve10_pcosto * pyminve15_porcentaje) / 100);
        end

        if (pyminve15_porcentaje = 0) then
            PYMINVE15_INDICADOR = 'AL COSTO';
        else if (pyminve15_porcentaje < 0) then
            PYMINVE15_INDICADOR = 'BAJO EL COSTO';
        else if (pyminve15_porcentaje = pyminve10_utilidad) then
            PYMINVE15_INDICADOR = 'DE LISTA';
        else if (pyminve15_porcentaje > pyminve10_utilidad) then
            PYMINVE15_INDICADOR = 'SOBRE UTILIDAD';
        else
            PYMINVE15_INDICADOR = 'BAJO UTILIDAD';

        if (PYMINVE15_ESPRECIOLISTA = 0) then
            ESLISTA = 'No';
        else
            ESLISTA = 'Si';
        suspend;
    END
end
GRID_PYMVENT15_APARTADOS       

DECLARE VARIABLE VAR_ADEUDO DECIMAL(15,2);
DECLARE VARIABLE VAR_ID BIGINT;
BEGIN
    FOR
      SELECT
          CAST('En proceso' AS VARCHAR(10)),
          PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
          PYMVENT15_CAB_APARTADOS.RELA_PYMVENT20,
          PYMVENT15_CAB_APARTADOS.RELA_PYMVENT21,
          PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
          CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE),
          PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
          PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
          CAST(0 AS DOUBLE PRECISION),
          PYMVENT01_CAB_CAJAS.PYMVENT01_MAXDIASAPART,
          CAST(0 AS INTEGER)
      FROM PYMVENT20_CAB_TICKETS
      INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
      INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
      INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
      INNER JOIN PYMVENT21_DET_TICKETS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT21_DET_TICKETS.RELA_PYMVENT20)
      INNER JOIN PYMVENT15_CAB_APARTADOS ON (PYMVENT21_DET_TICKETS.ID_PYMVENT21 = PYMVENT15_CAB_APARTADOS.RELA_PYMVENT21)
      WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT15_CAB_APARTADOS.ID_PYMVENT15 NOT IN (SELECT PYMVENT16_CAB_ENTREGA.RELA_PYMVENT15
                                                          FROM PYMVENT16_CAB_ENTREGA)
        AND PYMVENT15_CAB_APARTADOS.RELA_PYMVENT21 NOT IN (SELECT PYMINVE38_DEP_CANCELADOS.RELA_PYMVENT21
                                                          FROM PYMINVE38_DEP_CANCELADOS)
      INTO
          :TIPO,
          :RELA_SOCWFLO01,
          :ID_PYMVENT20,
          :ID_PYMVENT21,
          :RELA_PYMVENT24,
          :CLIENTE,
          :TICKET,
          :FECHA,
          :CODIGO_PRODUCTO,
          :DESCRIPCION,
          :CANTIDAD,
          :ADEUDO,
          :DIAS_APARTADO,
          :DIAS_RESTANTES
    DO
    BEGIN
        SUSPEND;
    END

    FOR
      SELECT
          PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
          PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
          PYMVENT21_DET_TICKETS.ID_PYMVENT21,
          PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
          SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
          CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE),
          PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
          PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
          PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO,
          PYMVENT01_CAB_CAJAS.PYMVENT01_MAXDIASAPART,
          INVL((PYMVENT01_CAB_CAJAS.PYMVENT01_MAXDIASAPART - DAYSBETWEEN(CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE), CAST('NOW' AS DATE))),0)
      FROM PYMVENT20_CAB_TICKETS
      INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
      INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
      INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
      INNER JOIN PYMVENT21_DET_TICKETS ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT21_DET_TICKETS.RELA_PYMVENT20)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT21_DET_TICKETS.RELA_SOCSYST10_RESERVA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 IS NOT NULL
          AND PYMVENT21_DET_TICKETS.RELA_PYMVENT21 IS NULL
          AND PYMVENT21_DET_TICKETS.ID_PYMVENT21 NOT IN (SELECT PYMVENT15_CAB_APARTADOS.RELA_PYMVENT21
                                                         FROM PYMVENT15_CAB_APARTADOS)
          AND PYMVENT21_DET_TICKETS.ID_PYMVENT21 NOT IN (SELECT PYMINVE38_DEP_CANCELADOS.RELA_PYMVENT21
                                                         FROM PYMINVE38_DEP_CANCELADOS)

      INTO
          :RELA_SOCWFLO01,
          :ID_PYMVENT20,
          :ID_PYMVENT21,
          :RELA_PYMVENT24,
          :CODIGO_RESERVA,
          :CLIENTE,
          :TICKET,
          :FECHA,
          :CODIGO_PRODUCTO,
          :DESCRIPCION,
          :CANTIDAD,
          :ADEUDO,
          :DIAS_APARTADO,
          :DIAS_RESTANTES
    DO
    BEGIN
        TIPO = '';
        VAR_ADEUDO = NULL;

        IF (:CODIGO_RESERVA = 'PAGO') THEN
         BEGIN
           TIPO = 'Disponible';
           DIAS_RESTANTES = 0;
         END
        ELSE
         IF (:DIAS_RESTANTES < 0) THEN
           BEGIN
             TIPO = 'Cancelado';
             DIAS_RESTANTES = DIAS_RESTANTES * -1;

             SELECT FIRST 1
                   MAX(PYMVENT21_DET_TICKETS.ID_PYMVENT21),
                   PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO
             FROM PYMVENT21_DET_TICKETS
             WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT21 = :ID_PYMVENT21
             GROUP BY PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO
             INTO
                 :VAR_ID,
                 :VAR_ADEUDO;

             IF (VAR_ADEUDO IS NOT NULL) THEN
                ADEUDO = VAR_ADEUDO;
           END
         ELSE
          IF (:DIAS_RESTANTES <= DIAS_APARTADO) THEN
           BEGIN
              TIPO = 'Pendiente';

              SELECT FIRST 1
                  MAX(PYMVENT21_DET_TICKETS.ID_PYMVENT21),
                  PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO
              FROM PYMVENT21_DET_TICKETS
              WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT21 = :ID_PYMVENT21
              GROUP BY PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO
              INTO
                  :VAR_ID,
                  :VAR_ADEUDO;

              IF (VAR_ADEUDO IS NOT NULL) THEN
                BEGIN
                  ADEUDO = VAR_ADEUDO;

                  IF (ADEUDO = 0) THEN
                   BEGIN
                      TIPO = 'Disponible';
                      DIAS_RESTANTES = 0;
                   END
                END
           END

        SUSPEND;
    END
END
PRD_PYMINGR01_AXXA             

DECLARE VARIABLE SOCSYST10_CODIGO VARCHAR(50);
DECLARE VARIABLE PYMINGR03_DOCUMENTO VARCHAR(50);
DECLARE VARIABLE PYMVENT38_DOCUMENTO VARCHAR(50);
begin
    if (modo = 0) then
    begin
        FOR SELECT
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
        PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
        FROM SOCSYST10_TBL_LISTAESTADOS
        INNER JOIN PYMINGR03_DET_REFERENCIAS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10)
        INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01)
        WHERE PYMINGR01_CAB_FACTURAS.id_pymingr01 = :ID
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO like 'AXXA%'
        INTO :SOCSYST10_CODIGO,
             :PYMINGR03_DOCUMENTO
        DO
        BEGIN
            if (socsyst10_codigo = 'AXXA-SINIESTRO') then
                SINIESTRO = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-RIESGO') then
                RIESGO = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-LESIONADO') then
                LESIONADO = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-MODELO') then
                MODELO = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-PLACAS') then
                PLACAS = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-MARCA') then
                MARCA = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-TIPO') then
                TIPO = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-ANO') then
                ANO = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-POLIZA') then
                POLIZA = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-AUTORIZACION') then
                AUTORIZACION = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-COMPROBANTE') then
                COMPROBANTE = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-FOLIOPREFACTURA') then
                folioprefactura = :PYMINGR03_DOCUMENTO;
            else if (socsyst10_codigo = 'AXXA-FECHAPREFACTURA') then
                fechaprefactura = :PYMINGR03_DOCUMENTO;
        END

        suspend;
    end
    else if (modo = 1) then
    begin
        FOR SELECT
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
        pymvent38_det_documentos.pymvent38_documento
        FROM SOCSYST10_TBL_LISTAESTADOS
        INNER JOIN pymvent38_det_documentos ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = pymvent38_det_documentos.RELA_SOCSYST10)
        INNER JOIN pymvent20_cab_tickets ON (pymvent38_det_documentos.rela_pymvent20 = pymvent20_cab_tickets.id_pymvent20)
        WHERE pymvent20_cab_tickets.id_pymvent20 = :ID
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO like 'MAPFRE%'
        INTO :SOCSYST10_CODIGO,
             :pymvent38_documento
        DO
        BEGIN
            if (socsyst10_codigo = 'AXXA-SINIESTRO') then
                SINIESTRO = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-RIESGO') then
                RIESGO = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-LESIONADO') then
                LESIONADO = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-MODELO') then
                MODELO = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-PLACAS') then
                PLACAS = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-MARCA') then
                MARCA = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-TIPO') then
                TIPO = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-ANO') then
                ANO = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-POLIZA') then
                POLIZA = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-AUTORIZACION') then
                AUTORIZACION = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-COMPROBANTE') then
                COMPROBANTE = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-FOLIOPREFACTURA') then
                folioprefactura = :pymvent38_documento;
            else if (socsyst10_codigo = 'AXXA-FECHAPREFACTURA') then
                fechaprefactura = :pymvent38_documento;
        END

        suspend;
    end
    else if (modo = 2) then
    begin
        SELECT FIRST 1
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_VEHICULO,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_POLIZA,
        ON2CFDS14_DEP_ADDENDAS.ON2CFDS14_SINIESTRO
        FROM ON2CFDS14_DEP_ADDENDAS
        INNER JOIN ON2CFDS10_CAB_FACTURAS ON (ON2CFDS14_DEP_ADDENDAS.RELA_ON2CFDS10 = ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10)
        WHERE ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = :ID
        INTO :modelo,
             :poliza,
             :siniestro;
        suspend;
    end
end
PRD_PYMVENT15_CANCELADOS       

DECLARE VARIABLE RELA_PYMINVE50_SALIDA BIGINT;
DECLARE VARIABLE RELA_PYMINVE50_ENTRADA BIGINT;
DECLARE VARIABLE RELA_PYMINVE10 BIGINT;
DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE RELA_SOCWFLO01 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_PYMINVE40_GENERAL BIGINT;
DECLARE VARIABLE RELA_PYMINVE40_TRASPASO BIGINT;
DECLARE VARIABLE RELA_PYMINVE30 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_MODELO BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TALLA BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_COLOR BIGINT;
DECLARE VARIABLE PYMINVE21_CANTIDAD DOUBLE PRECISION;
BEGIN
  SELECT CBO_PYMINVE50_AUTOMATICOS.ID_PYMINVE50
  FROM CBO_PYMINVE50_AUTOMATICOS
  WHERE CBO_PYMINVE50_AUTOMATICOS.PYMINVE50_CODIGO = 'AP-SA-CAN'
  INTO :RELA_PYMINVE50_SALIDA;

  SELECT CBO_PYMINVE50_AUTOMATICOS.ID_PYMINVE50
  FROM CBO_PYMINVE50_AUTOMATICOS
  WHERE CBO_PYMINVE50_AUTOMATICOS.PYMINVE50_CODIGO = 'AP-EN-CAN'
  INTO :RELA_PYMINVE50_ENTRADA;

  SELECT FIRST 1 PYMVENT15_CAB_APARTADOS.RELA_SOCUSUA02
  FROM PYMVENT15_CAB_APARTADOS
  WHERE PYMVENT15_CAB_APARTADOS.RELA_PYMVENT21 = :PARAM_PYMVENT21
  INTO :RELA_SOCUSUA02;

  IF (:RELA_SOCUSUA02 IS NULL) THEN
    SELECT PYMVENT21_DET_TICKETS.RELA_SOCUSUA02
    FROM PYMVENT21_DET_TICKETS
    WHERE PYMVENT21_DET_TICKETS.ID_PYMVENT21 = :PARAM_PYMVENT21
    INTO :RELA_SOCUSUA02;

  /* Se hace la transferencia del producto cancelado al almacen general */

  IF (:PARAM_PYMVENT21 IS NOT NULL) THEN
    BEGIN
        SELECT
            PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
            PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
            PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
            PYMVENT01_CAB_CAJAS.RELA_PYMINVE40,
            PYMVENT21_DET_TICKETS.RELA_PYMINVE40_TRASPASO,
            PYMVENT21_DET_TICKETS.RELA_SOCSYST10_MODELO,
            PYMVENT21_DET_TICKETS.RELA_SOCSYST10_TALLA,
            PYMVENT21_DET_TICKETS.RELA_SOCSYST10_COLOR,
            PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD
        FROM PYMVENT21_DET_TICKETS
        INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
        INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
        INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
        WHERE PYMVENT21_DET_TICKETS.ID_PYMVENT21 = :PARAM_PYMVENT21
        INTO
            :RELA_SOCSYST01,
            :RELA_SOCWFLO01,
            :RELA_PYMINVE10,
            :RELA_PYMINVE40_GENERAL,
            :RELA_PYMINVE40_TRASPASO,
            :RELA_SOCSYST10_MODELO,
            :RELA_SOCSYST10_TALLA,
            :RELA_SOCSYST10_COLOR,
            :PYMINVE21_CANTIDAD;

        /* Se realiza la salida del producto del almacen de Reserva */

        INSERT INTO PYMINVE30_MOV_STOCK (PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
                                         PYMINVE30_MOV_STOCK.RELA_SOCUSUA02,
                                         PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
                                         PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
                                         PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
                                         PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
                                         PYMINVE30_MOV_STOCK.PYMINVE30_EXISTENCIA)
                                 VALUES (:RELA_PYMINVE50_SALIDA,
                                         :RELA_SOCUSUA02,
                                         :RELA_SOCWFLO01,
                                         :RELA_PYMINVE10,
                                         :RELA_PYMINVE40_TRASPASO,
                                         :PYMINVE21_CANTIDAD * -1,
                                         0);

        SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
        FROM SOCUTIL02_TBL_ULTIDS
        WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
        INTO :RELA_PYMINVE30;

        IF (:RELA_SOCSYST10_MODELO IS NOT NULL) THEN
            BEGIN
                 INSERT INTO PYMINVE35_DEP_MTC (PYMINVE35_DEP_MTC.RELA_PYMINVE30,
                                                PYMINVE35_DEP_MTC.RELA_SOCSYST10_MODELO,
                                                PYMINVE35_DEP_MTC.RELA_SOCSYST10_TALLA,
                                                PYMINVE35_DEP_MTC.RELA_SOCSYST10_COLOR)
                                        VALUES (:RELA_PYMINVE30,
                                                :RELA_SOCSYST10_MODELO,
                                                :RELA_SOCSYST10_TALLA,
                                                :RELA_SOCSYST10_COLOR);
            END

        /* Se realiza la entrada del producto al Almacen General */

        INSERT INTO PYMINVE30_MOV_STOCK (PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
                                         PYMINVE30_MOV_STOCK.RELA_SOCUSUA02,
                                         PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
                                         PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
                                         PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
                                         PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
                                         PYMINVE30_MOV_STOCK.PYMINVE30_EXISTENCIA)
                                  VALUES (:RELA_PYMINVE50_ENTRADA,
                                          :RELA_SOCUSUA02,
                                          :RELA_SOCWFLO01,
                                          :RELA_PYMINVE10,
                                          :RELA_PYMINVE40_GENERAL,
                                          :PYMINVE21_CANTIDAD,
                                          :PYMINVE21_CANTIDAD);

        SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
        FROM SOCUTIL02_TBL_ULTIDS
        WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
        INTO :RELA_PYMINVE30;

        IF (:RELA_SOCSYST10_MODELO IS NOT NULL) THEN
            BEGIN
                INSERT INTO PYMINVE35_DEP_MTC (PYMINVE35_DEP_MTC.RELA_PYMINVE30,
                                               PYMINVE35_DEP_MTC.RELA_SOCSYST10_MODELO,
                                               PYMINVE35_DEP_MTC.RELA_SOCSYST10_TALLA,
                                               PYMINVE35_DEP_MTC.RELA_SOCSYST10_COLOR)
                                       VALUES (:RELA_PYMINVE30,
                                               :RELA_SOCSYST10_MODELO,
                                               :RELA_SOCSYST10_TALLA,
                                               :RELA_SOCSYST10_COLOR);
            END

        INSERT INTO PYMINVE38_DEP_CANCELADOS (PYMINVE38_DEP_cANCELADOS.RELA_PYMINVE30,
                                              PYMINVE38_DEP_CANCELADOS.RELA_PYMVENT21)
                                      VALUES (:RELA_PYMINVE30,
                                              :PARAM_PYMVENT21);

        OK = 1;
        SUSPEND;
    END
END
PRD_SOCSYST20_PYMVENT15        

BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
        AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :ARG_SOCWFLO01
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
PRD_SOCSYST20_PYMVENT16        

BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
        AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :ARG_USER
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
PRD_ULTTICKET                  

BEGIN
  SELECT MAX(SOCUTIL01_MOV_LOGS.SOCUTIL01_ULTID)
  FROM SOCUTIL01_MOV_LOGS
  WHERE SOCUTIL01_MOV_LOGS.SOCUTIL01_USUARIO = CURRENT_USER
    AND SOCUTIL01_MOV_LOGS.SOCUTIL01_TABLA = :TABLA
    AND SOCUTIL01_MOV_LOGS.SOCUTIL01_ACCION = 'A'
  INTO :ID;

  IF(:TABLA = 'PYMVENT15') THEN
    SELECT PYMVENT15_CAB_APARTADOS.PYMVENT15_DOCNRO
    FROM PYMVENT15_CAB_APARTADOS
    WHERE PYMVENT15_CAB_APARTADOS.ID_PYMVENT15 = :ID
    INTO :DOCNRO;
  ELSE
    IF(:TABLA = 'PYMVENT16') THEN
        SELECT PYMVENT16_CAB_ENTREGA.PYMVENT16_DOCNRO
        FROM PYMVENT16_CAB_ENTREGA
        WHERE PYMVENT16_CAB_ENTREGA.ID_PYMVENT16 = :ID
        INTO :DOCNRO;

  SUSPEND;
END
VW_PYMVENT15_APARTADOS         

BEGIN
   SELECT
       PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
       PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01
   FROM PYMVENT20_CAB_TICKETS
   WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :PARAM_IDTICKET
   INTO
       :RELA_SOCSYST01,
       :RELA_SOCWFLO01;

   SELECT SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_FORMATEADO
   FROM SOCSYST21_MOV_CONTADORES_EMP
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
   WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :RELA_SOCSYST01
     AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :RELA_SOCWFLO01
     AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'APART'
   INTO :CONTADOR_APART;

   SELECT SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_FORMATEADO
   FROM SOCSYST21_MOV_CONTADORES_EMP
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
   WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :RELA_SOCSYST01
     AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :RELA_SOCWFLO01
     AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'ENTREGA'
   INTO :CONTADOR_ENTRE;


   IF (:PARAM_ID IS NOT NULL) THEN
     BEGIN
       SELECT
           PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
           PYMVENT21_DET_TICKETS.ID_PYMVENT21,
           PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
           CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE),
           PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
           PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
           PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
           PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
           PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL,
           PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
           PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL,
           PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO
       FROM PYMVENT21_DET_TICKETS
       INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
       WHERE PYMVENT21_DET_TICKETS.ID_PYMVENT21 = :PARAM_ID
       INTO
           :ID_PYMVENT20,
           :ID_PYMVENT21,
           :PYMVENT20_DOCNRO,
           :PYMVENT20_FECHA,
           :PYMVENT21_CODIGO,
           :PYMVENT21_DESCRIPCION,
           :PYMVENT21_CANTIDAD,
           :PYMVENT21_IMPOUNITARIO,
           :PYMVENT21_IMPOSUBTOTAL,
           :PYMVENT21_DESCUENTOS,
           :PYMVENT21_TOTAL,
           :PYMVENT21_ADEUDO;

       SUSPEND;
     END
   ELSE
     FOR
       SELECT
           PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
           PYMVENT21_DET_TICKETS.ID_PYMVENT21,
           PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
           CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE),
           PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
           PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
           PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
           PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
           PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL,
           PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
           PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL,
           PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO
       FROM PYMVENT21_DET_TICKETS
       INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
       WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT21 = :PARAM_ID
       INTO
          :ID_PYMVENT20,
          :ID_PYMVENT21,
          :PYMVENT20_DOCNRO,
          :PYMVENT20_FECHA,
          :PYMVENT21_CODIGO,
          :PYMVENT21_DESCRIPCION,
          :PYMVENT21_CANTIDAD,
          :PYMVENT21_IMPOUNITARIO,
          :PYMVENT21_IMPOSUBTOTAL,
          :PYMVENT21_DESCUENTOS,
          :PYMVENT21_TOTAL,
          :PYMVENT21_ADEUDO
     DO
     BEGIN
        SUSPEND;
     END
END
VW_PYMVENT15_TICKET            

BEGIN
  SELECT
      SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
      PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_IMPGRAFICA,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_LOGOPATH,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_LEYENDA,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_DATOSSUC,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_PRINTER,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_ANCHO,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_LARGO,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_FSCAB,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_FSDET,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_FSLEY,
      PYMVENT01_CAB_CAJAS.PYMVENT01_TICKET_FSGRA
  FROM PYMVENT20_CAB_TICKETS
  INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
  INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
  INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
  INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
  WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :ID_TICKET
  INTO
      :SUCURSAL,
      :CLIENTE,
      :PYMVENT01_TICKET_IMPGRAFICA,
      :PYMVENT01_TICKET_LOGOPATH,
      :PYMVENT01_TICKET_LEYENDA,
      :PYMVENT01_TICKET_DATOSSUC,
      :PYMVENT01_TICKET_PRINTER,
      :PYMVENT01_TICKET_ANCHO,
      :PYMVENT01_TICKET_LARGO,
      :PYMVENT01_TICKET_FSCAB,
      :PYMVENT01_TICKET_FSDET,
      :PYMVENT01_TICKET_FSLEY,
      :PYMVENT01_TICKET_FSGRA;

  IF (:ID_APARTADO IS NOT NULL) THEN
    BEGIN
       SELECT
           PYMVENT15_CAB_APARTADOS.RELA_PYMVENT21,
           PYMVENT15_cAB_APARTADOS.RELA_SOCUSUA02,
           PYMVENT15_CAB_APARTADOS.ID_PYMVENT15,
           CAST(PYMVENT15_CAB_APARTADOS.PYMVENT15_FAPL AS DATE),
           VR_ENTIDADES_ALL.ENTIDAD,
           PYMVENT15_CAB_APARTADOS.PYMVENT15_DOCNRO
       FROM PYMVENT15_CAB_APARTADOS
       INNER JOIN VR_ENTIDADES_ALL ON (PYMVENT15_CAB_APARTADOS.RELA_SOCUSUA02 = VR_ENTIDADES_ALL.ID_SOCUSUA02)
       WHERE PYMVENT15_CAB_APARTADOS.ID_PYMVENT15 = :ID_APARTADO
       INTO
          :RELA_PYMVENT21,
          :RELA_SOCUSUA02,
          :ID_PYMVENT15,
          :FECHA,
          :USUARIO,
          :FOLIO;

       FOR
         SELECT
            VW_PYMVENT15_APARTADOS.ID_PYMVENT20,
            VW_PYMVENT15_APARTADOS.PYMVENT20_DOCNRO,
            VW_PYMVENT15_APARTADOS.PYMVENT20_FECHA,
            VW_PYMVENT15_APARTADOS.PYMVENT21_CODIGO,
            VW_PYMVENT15_APARTADOS.PYMVENT21_DESCRIPCION,
            VW_PYMVENT15_APARTADOS.PYMVENT21_CANTIDAD,
            VW_PYMVENT15_APARTADOS.PYMVENT21_IMPOUNITARIO,
            VW_PYMVENT15_APARTADOS.PYMVENT21_IMPOSUBTOTAL,
            VW_PYMVENT15_APARTADOS.PYMVENT21_DESCUENTOS,
            VW_PYMVENT15_APARTADOS.PYMVENT21_TOTAL,
            VW_PYMVENT15_APARTADOS.PYMVENT21_ADEUDO
         FROM VW_PYMVENT15_APARTADOS(:RELA_PYMVENT21,:ID_TICKET)
         INTO
            :RELA_PYMVENT20,
            :PYMVENT20_DOCNRO,
            :PYMVENT20_FAPL,
            :PYMVENT21_CODIGO,
            :PYMVENT21_DESCRIPCION,
            :PYMVENT21_CANTIDAD,
            :PYMVENT21_IMPOUNITARIO,
            :PYMVENT21_IMPOSUBTOTAL,
            :PYMVENT21_DESCUENTOS,
            :PYMVENT21_TOTAL,
            :PYMVENT21_ADEUDO
       DO
       BEGIN
          SUSPEND;
       END

       FOR
         SELECT
            VW_PYMVENT21_PAGOS.TICKET,
            VW_PYMVENT21_PAGOS.FECHA,
            VW_PYMVENT21_PAGOS.TOTAL,
            VW_PYMVENT21_PAGOS.ADEUDO
         FROM VW_PYMVENT21_PAGOS
         WHERE VW_PYMVENT21_PAGOS.RELA_PYMVENT21 = :RELA_PYMVENT21
         INTO
            :PYMVENT20_DOCNRO,
            :PYMVENT20_FAPL,
            :PYMVENT21_TOTAL,
            :PYMVENT21_ADEUDO
       DO
       BEGIN
          SUSPEND;
       END
    END
END
VW_SOCUSUA50_CONCAT            

BEGIN
   CONCAT = '';
   WHILE (RELA_PADRE IS NOT NULL) DO
     BEGIN
        FOR
          SELECT
               SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50,
               SOCUSUA50_ARB_LOCALIDADES.RELA_SOCUSUA50,
               SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
               SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_CODIGO,
               SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_CODADUANA,
               SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL,
               SOCSYST06_DET_ARBNIVELES.SOCSYST06_ACCION,
               SOCSYST06_DET_ARBNIVELES.SOCSYST06_DESCRI
          FROM SOCSYST06_DET_ARBNIVELES
          INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCUSUA50_ARB_LOCALIDADES.RELA_SOCSYST06)
          WHERE ID_SOCUSUA50 = :RELA_PADRE
          INTO
               :ID_SOCUSUA50,
               :RELA_SOCUSUA50,
               :SOCUSUA50_DESCRI,
               :SOCUSUA50_CODIGO,
               :SOCUSUA50_CODADUANA,
               :SOCSYST06_NIVEL,
               :SOCSYST06_ACCION,
               :SOCSYST06_DESCRI
          DO
          BEGIN
            CONCAT = CONCAT || SOCUSUA50_DESCRI || ', ';
          END

          SUSPEND;
          RELA_PADRE = :RELA_SOCUSUA50;
     END
END
GRID_PYMINVE10_PYMVENT10_POS   

DECLARE VARIABLE PYMINVE10_PCOSTO_PROVE DOUBLE PRECISION;
DECLARE VARIABLE PYMINVE10_UTILIDAD_X_EMPQ SMALLINT;
DECLARE VARIABLE PYMINVE10_LOTESIZE DOUBLE PRECISION;
begin
    if (catalogogral = 1) then
        select socsyst01_cab_clientes.id_socsyst01
        from socsyst01_cab_clientes
        where socsyst01_cab_clientes.socsyst01_propietario = 1
        into :id_socsyst01;

    FOR SELECT
    T00.PYMINVE10_CODIGO,
    T00.PYMINVE10_DESCRIPCION,
    T00.CATEGORIA,
    T00.FAMILIA,
    T00.pyminve10_maxdesc,
    T00.pyminve10_autdesc,
    T00.pyminve10_candesc,
    T00.ID_PYMINVE10,
    T00.PYMINVE10_UTILIDAD,
    T00.BUSQUEDA,
    T00.pyminve10_mtc,
    T00.pyminve10_pcosto,
    T00.pyminve10_kit,
    T00.pyminve10_utilidad_x_empq,
    T00.pyminve10_lotesize,
    T00.pyminve10_puntos,
    T00.pyminve10_topregalo,
    T00.pyminve10_porserie,
    T00.pyminve10_tarjetaregalo

    FROM VW_PYMINVE10_PYMVENT10_POS T00

    WHERE T00.rela_socsyst01 = :ID_SOCSYST01

    ORDER BY T00.PYMINVE10_CODIGO

    into :PYMINVE10_CODIGO,
         :PYMINVE10_DESCRIPCION,
         :CATEGORIA,
         :FAMILIA,
         :PYMINVE10_MAXDESC,
         :PYMINVE10_AUTDESC,
         :PYMINVE10_CANDESC,
         :ID_PYMINVE10,
         :PYMINVE10_UTILIDAD,
         :BUSQUEDA,
         :MTC,
         :pyminve10_pcosto,
         :KIT,
         :pyminve10_utilidad_x_empq,
         :pyminve10_lotesize,
         :pyminve10_puntos,
         :pyminve10_topregalo,
         :pyminve10_porserie,
         :pyminve10_tarjetaregalo
    do
    begin
        /* ---------------------------------------------------------------------------------- */
        /* Recupera el Stock por Sucursal y Almacen
        /* ---------------------------------------------------------------------------------- */
        STOCK = null;
        SELECT PYMINVE36_MOV_CANTIDADES.pyminve36_cantidad
        FROM PYMINVE36_MOV_CANTIDADES
        WHERE PYMINVE36_MOV_CANTIDADES.rela_pyminve10 = :ID_PYMINVE10
        AND PYMINVE36_MOV_CANTIDADES.rela_socwflo01 = :id_socwflo01
        AND PYMINVE36_MOV_CANTIDADES.rela_pyminve40 = :id_pyminve40
        into :STOCK;

        if (STOCK is null) then
            stock = 0;

        /* ---------------------------------------------------------------------------------- */
        /* Recupera el costo de Proveedor sino tiene toma el default
        /* ---------------------------------------------------------------------------------- */
        pyminve10_pcosto_prove = null;
        select max(PYMINVE12_DET_PROVEEDORES.pyminve12_importe)
        from PYMINVE12_DET_PROVEEDORES
        where PYMINVE12_DET_PROVEEDORES.rela_pyminve10 = :ID_PYMINVE10
        into :pyminve10_pcosto_prove;

        if (pyminve10_pcosto_prove is not null) then
            PYMINVE10_PCOSTO = pyminve10_pcosto_prove;

        /* ---------------------------------------------------------------------------------- */
        /* Recupero si tiene una imagen asociada al prdocuto
        /* ---------------------------------------------------------------------------------- */
        CONIMAGENES = null;
        select first 1 PYMINVE20_MOV_UPLOADS.pyminve20_upload
        from PYMINVE20_MOV_UPLOADS
        where PYMINVE20_MOV_UPLOADS.rela_pyminve10 = :ID_PYMINVE10
        and PYMINVE20_MOV_UPLOADS.pyminve20_upload = 1
        into :CONIMAGENES;

        if (CONIMAGENES is null) then
            CONIMAGENES = 0;

        /* ---------------------------------------------------------------------------------- */
        /* Aqui calculo el Precio de Venta
        /* ---------------------------------------------------------------------------------- */
        PYMINVE10_PVENTA = PYMINVE10_PCOSTO + ((PYMINVE10_PCOSTO * PYMINVE10_UTILIDAD) / 100);

        if (PYMINVE10_UTILIDAD_X_EMPQ = 1) then
            PYMINVE10_PVENTA = PYMINVE10_PVENTA * PYMINVE10_LOTESIZE;

        /* ---------------------------------------------------------------------------------- */
        /* Aqui consulto si tiene lista de precio para llamar la grilla de los precios
        /* ---------------------------------------------------------------------------------- */
        CONLISTAPRECIO = NULL;
        Select first 1 grid_pyminve15.id_pyminve15
        from grid_pyminve15(:ID_PYMINVE10)
        into :CONLISTAPRECIO;

        if (CONLISTAPRECIO is null) then
           CONLISTAPRECIO = 0;
        ELSE
           CONLISTAPRECIO = 1;
        suspend;
    end
end
PRD_ON2NIME20                  

DECLARE VARIABLE RELA_ON2REGI10_DISTRIBUIDOR BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_EJECUTIVO BIGINT;
DECLARE VARIABLE RELA_SRHMAIN10_VENDEDOR BIGINT;
DECLARE VARIABLE ON2NIME21_INSTANCIA VARCHAR(100);
DECLARE VARIABLE RELA_SRHMAIN10 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_DOCU BIGINT;
DECLARE VARIABLE ON2REGI10_APELLIDOP VARCHAR(200);
DECLARE VARIABLE ON2REGI10_APELLIDOM VARCHAR(200);
DECLARE VARIABLE ON2REGI10_NOMBRES1 VARCHAR(200);
DECLARE VARIABLE ON2REGI10_NOMBRES2 VARCHAR(200);
DECLARE VARIABLE ON2REGI10_DENOMINACION VARCHAR(200);
DECLARE VARIABLE ON2REGI10_ESTADO VARCHAR(200);
DECLARE VARIABLE ON2REGI10_MUNICIPIO VARCHAR(200);
DECLARE VARIABLE ON2REGI10_CIUDAD VARCHAR(200);
DECLARE VARIABLE ON2REGI10_CALLE VARCHAR(200);
DECLARE VARIABLE ON2REGI10_NRO VARCHAR(200);
DECLARE VARIABLE ON2REGI10_CP VARCHAR(200);
DECLARE VARIABLE RELA_SICINGR01 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_PRODUCTOS BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_MODODEACCESO BIGINT;
begin
    FOR SELECT
    ON2NIME20_CAB_INSTANCIAS.id_on2nime20,
    ON2NIME21_DET_INSTANCIAS.id_on2nime21,
    ON2REGI10_CAB_CLIENTES.id_on2regi10,
    ON2NIME20_CAB_INSTANCIAS.rela_on2regi10,
    ON2NIME20_CAB_INSTANCIAS.rela_socusua02_ejecutivo,
    ON2NIME20_CAB_INSTANCIAS.rela_srhmain10,
    ON2NIME21_DET_INSTANCIAS.on2nime21_instancia,
    ON2REGI10_CAB_CLIENTES.rela_srhmain10,
    ON2REGI10_CAB_CLIENTES.rela_socsyst10,
    snvl(ON2REGI10_CAB_CLIENTES.on2regi10_apellidop,''),
    snvl(ON2REGI10_CAB_CLIENTES.on2regi10_apellidom,''),
    snvl(ON2REGI10_CAB_CLIENTES.on2regi10_nombres1,''),
    snvl(ON2REGI10_CAB_CLIENTES.on2regi10_nombres2,''),
    ON2REGI10_CAB_CLIENTES.on2regi10_denominacion,
    CAST(ON2REGI20_DEP_ACTIVADO.on2regi20_alta AS DATE),
    ON2REGI10_CAB_CLIENTES.on2regi10_documento,
    ON2REGI10_CAB_CLIENTES.on2regi10_estado,
    ON2REGI10_CAB_CLIENTES.on2regi10_municipio,
    ON2REGI10_CAB_CLIENTES.on2regi10_ciudad,
    ON2REGI10_CAB_CLIENTES.on2regi10_calle,
    ON2REGI10_CAB_CLIENTES.on2regi10_nro,
    ON2REGI10_CAB_CLIENTES.on2regi10_cp,
    ON2REGI20_DEP_ACTIVADO.rela_sicingr01,
    ON2REGI20_DEP_ACTIVADO.rela_socsyst10,
    ON2REGI20_DEP_ACTIVADO.rela_socsyst01,
    ON2REGI20_DEP_ACTIVADO.rela_socsyst10_productos,
    ON2REGI20_DEP_ACTIVADO.rela_socsyst10_mododeacceso,
    ON2NIME20_CAB_INSTANCIAS.on2nime20_boni_usuarios,
    ON2NIME20_CAB_INSTANCIAS.on2nime20_boni_empresas,
    ON2NIME20_CAB_INSTANCIAS.on2nime20_impo_usuarios,
    ON2NIME20_CAB_INSTANCIAS.on2nime20_impo_empresas,
    ON2NIME20_CAB_INSTANCIAS.on2nime20_fecha_pago,
    cast(ON2NIME20_CAB_INSTANCIAS.on2nime20_fapl as date),
    ON2NIME20_CAB_INSTANCIAS.on2nime20_periodo
    FROM ON2REGI20_DEP_ACTIVADO
    INNER JOIN ON2REGI10_CAB_CLIENTES ON (ON2REGI20_DEP_ACTIVADO.RELA_ON2REGI10 = ON2REGI10_CAB_CLIENTES.ID_ON2REGI10)
    INNER JOIN ON2NIME21_DET_INSTANCIAS ON (ON2REGI10_CAB_CLIENTES.ID_ON2REGI10 = ON2NIME21_DET_INSTANCIAS.RELA_ON2REGI10)
    INNER JOIN ON2NIME20_CAB_INSTANCIAS ON (ON2NIME21_DET_INSTANCIAS.RELA_ON2NIME20 = ON2NIME20_CAB_INSTANCIAS.ID_ON2NIME20)
    WHERE ON2NIME20_CAB_INSTANCIAS.id_on2nime20 = :id_on2nime20X
    AND ON2NIME21_DET_INSTANCIAS.id_on2nime21 = :id_on2nime21X
    INTO :id_on2nime20,
         :id_on2nime21,
         :id_on2regi10,
         :rela_on2regi10_distribuidor,
         :rela_socusua02_ejecutivo,
         :rela_srhmain10_vendedor,
         :on2nime21_instancia,
         :RELA_SRHMAIN10,
         :RELA_SOCSYST10_DOCU,
         :on2regi10_apellidop,
         :on2regi10_apellidom,
         :on2regi10_nombres1,
         :on2regi10_nombres2,
         :on2regi10_denominacion,
         :fecha_creacion,
         :documento,
         :on2regi10_estado,
         :on2regi10_municipio,
         :on2regi10_ciudad,
         :on2regi10_calle,
         :on2regi10_nro,
         :on2regi10_cp,
         :rela_sicingr01,
         :rela_socsyst10,
         :rela_socsyst01,
         :rela_socsyst10_productos,
         :rela_socsyst10_mododeacceso,
         :BONI_USUARIOS,
         :BONI_EMPRESAS,
         :valor_usuario,
         :valor_empresa,
         :fecha_pago,
         :fecha_emision,
         :TIPO_COBRO
    do
    begin
        INSTANCIA = on2nime21_instancia;
        RAZONSOCIAL = on2regi10_denominacion;
        REPORTEXTIPO = null;
        REPORTEXPERS = null;
        if (rela_on2regi10_distribuidor is not null) then
            begin
                REPORTEXTIPO = 'Distribuidor :';
                select on2regi10_cab_clientes.on2regi10_denominacion
                from on2regi10_cab_clientes
                where on2regi10_cab_clientes.id_on2regi10 = :rela_on2regi10_distribuidor
                into :REPORTEXPERS;
            end
        else if (rela_socusua02_ejecutivo is not null) then
            begin
                REPORTEXTIPO = 'Ejecutivo :';
                select cbo_usuarios_empleados.entidad
                from cbo_usuarios_empleados
                where cbo_usuarios_empleados.id_socusua02 = :rela_socusua02_ejecutivo
                into :REPORTEXPERS;
            end
        else if (rela_srhmain10_vendedor is not null) then
            begin
                REPORTEXTIPO = 'Vendedor :';
                select cbo_srhmain10.entidad
                from cbo_srhmain10
                where cbo_srhmain10.id_srhmain10 = :rela_srhmain10_vendedor
                into :REPORTEXPERS;
            end

        REPRESENTANTE = trim(trim(on2regi10_apellidop) || ' ' || trim(on2regi10_apellidom)) || ',' ||
                        trim(trim(on2regi10_nombres1) || ' ' ||  trim(on2regi10_nombres2));
        
        select socsyst10_tbl_listaestados.socsyst10_filtro_des
        from socsyst10_tbl_listaestados
        where socsyst10_tbl_listaestados.id_socsyst10 = :rela_socsyst10_docu
        into :tipodocu;

        select socsyst10_tbl_listaestados.socsyst10_filtro_des
        from socsyst10_tbl_listaestados
        where socsyst10_tbl_listaestados.id_socsyst10 = :rela_socsyst10_mododeacceso
        into :mododeacceso;

        select socsyst10_tbl_listaestados.socsyst10_filtro_des
        from socsyst10_tbl_listaestados
        where socsyst10_tbl_listaestados.id_socsyst10 = :rela_socsyst10_productos
        into :producto;

        DIRECCION01 = on2regi10_estado || ', ' || on2regi10_municipio;
        DIRECCION02 = on2regi10_ciudad || ' CP ' || on2regi10_cp;
        DIRECCION03 = on2regi10_calle || ' ' || on2regi10_nro;

        select COUNT(*)
        FROM PRD_ON2NIME23(:id_on2nime21X)
        INTO :MAXUSUARIOS;

        select count(*)
        from on2nime24_det_empresas
        where on2nime24_det_empresas.rela_on2nime21 = :id_on2nime21X
        INTO :MAXEMPRESAS;


        if (TIPO_COBRO = 'Anual') then
            CANT_COBRO = 12;
        else if (TIPO_COBRO = 'Sexmestral') then
            CANT_COBRO = 6;
        else if (TIPO_COBRO = 'Cuatrimestral') then
            CANT_COBRO = 4;
        else if (TIPO_COBRO = 'Trimestral') then
            CANT_COBRO = 3;
        else if (TIPO_COBRO = 'Bimestral') then
            CANT_COBRO = 2;
        else if (TIPO_COBRO = 'Mensual') then
            CANT_COBRO = 1;


        imp_sub_usuarios = (MAXUSUARIOS * valor_usuario) * CANT_COBRO;
        imp_sub_empresas = (maxempresas * valor_empresa) * CANT_COBRO;

        imp_tot_usuarios = imp_sub_usuarios - (imp_sub_usuarios * boni_usuarios / 100);
        imp_tot_empresas = imp_sub_empresas - (imp_sub_empresas * boni_empresas / 100);

        UPDATE ON2NIME21_DET_INSTANCIAS
        SET ON2NIME21_DET_INSTANCIAS.ON2NIME21_TOT_IMPO_USERS = :imp_tot_usuarios,
        ON2NIME21_DET_INSTANCIAS.ON2NIME21_TOT_IMPO_EMPRS = :imp_tot_empresas,
        ON2NIME21_DET_INSTANCIAS.on2nime21_tot_cant_users = :MAXUSUARIOS,
        ON2NIME21_DET_INSTANCIAS.on2nime21_tot_cant_emprs = :maxempresas
        WHERE ON2NIME21_DET_INSTANCIAS.ID_ON2NIME21 = :ID_ON2NIME21X;

        suspend;
    end
end
PRD_ON2NIME23                  

begin
    FOR SELECT
    on2nime23_det_estadisticas.rela_on2nime21,
    on2nime23_det_estadisticas.id_on2nime23,
    on2nime23_det_estadisticas.on2nime23_usuario,
    on2nime23_det_estadisticas.on2nime23_logones,
    on2nime23_det_estadisticas.on2nime23_altas,
    on2nime23_det_estadisticas.on2nime23_modificaciones,
    on2nime23_det_estadisticas.on2nime23_bajas,
    on2nime23_det_estadisticas.on2nime23_impresiones,
    on2nime23_det_estadisticas.on2nime23_total,
    on2nime23_det_estadisticas.on2nime23_ult_fecha
    FROM on2nime23_det_estadisticas
    WHERE on2nime23_det_estadisticas.rela_on2nime21 = :RELA_ON2NIME21X
    AND on2nime23_det_estadisticas.on2nime23_total > 300
/*    and on2nime23_det_estadisticas.on2nime23_logones > 29   */
    and extractyear(on2nime23_det_estadisticas.on2nime23_ult_fecha) = extractyear(current_date)
    order by on2nime23_det_estadisticas.on2nime23_total
    INTO :rela_on2nime21,
         :id_on2nime23,
         :on2nime23_usuario,
         :on2nime23_logones,
         :on2nime23_altas,
         :on2nime23_modificaciones,
         :on2nime23_bajas,
         :on2nime23_impresiones,
         :on2nime23_total,
         :on2nime23_ult_fecha
    DO
    BEGIN
        if (UPPER(SUBSTR(on2nime23_usuario,1,5)) = 'JAM$_') then
            on2nime23_usuario = SUBSTR(on2nime23_usuario,6,strlen(on2nime23_usuario));

        if (on2nime23_usuario <> 'ADMIN' AND
            on2nime23_usuario <> 'SOPORTEON2' AND
            on2nime23_usuario <> 'SIGUEPOS' AND
            on2nime23_usuario <> 'CARNESMG') then
            suspend;
    END
end
PRD_SOCSYST20_SECPLAN01        

DECLARE VARIABLE RELA_PADRE BIGINT;
BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
PRD_SOCSYST20_PYMINGR01        

BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
        AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :ARG_USER
    INTO :XID_SOCSYST20,
         :XSOCSYST20_CONTADOR,
         :XSOCSYST20_MASCARA,
         :XSOCSYST20_PREFIJO,
         :XSOCSYST20_POSFIJO,
         :XSOCSYST20_LONGITUD;
    SUSPEND;
END
GRID_PYMINGR01_BUSQUEDA        

DECLARE VARIABLE SQLBUSQUEDA VARCHAR(2000);
DECLARE VARIABLE SQLFILTRO VARCHAR(2000);
BEGIN
  SQLBUSQUEDA = 'SELECT
                    PYMINGR01_CAB_FACTURAS.ID_PYMINGR01, ' ||
                   'PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01, ' ||
                   'PYMINGR01_CAB_FACTURAS.RELA_SICINGR01, ' ||
                   'PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01, ' ||
                   'PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_CONCEPTO, ' ||
                   'MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_FVTO, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_EXTEMPORANEO, ' ||
                   'SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1, ' ||
                   'PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPCANT ' ||
                'FROM PYMINGR01_CAB_FACTURAS
                 INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
                 INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                ';

  IF (:SUCURSAL != -1 AND :CLIENTE != -1) THEN
    SQLFILTRO = 'WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = ' || :EMPRESA ||
                ' AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = ' || :SUCURSAL ||
                ' AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = ' || :CLIENTE;
  ELSE
    IF (:SUCURSAL != -1 AND :CLIENTE = -1) THEN
        SQLFILTRO = 'WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = ' || :EMPRESA ||
                    ' AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = ' || :SUCURSAL;
    ELSE
        IF (:SUCURSAL = -1 AND :CLIENTE != -1) THEN
            SQLFILTRO = 'WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = ' || :EMPRESA ||
                        ' AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = ' || :CLIENTE;
        ELSE
            IF (:SUCURSAL = -1 AND :CLIENTE = -1) THEN
                SQLFILTRO = 'WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = ' || :EMPRESA;

  FOR EXECUTE STATEMENT :SQLBUSQUEDA || :SQLFILTRO
  INTO
       :ID_PYMINGR01,
       :RELA_SOCWFLO01,
       :RELA_SICINGR01,
       :RELA_MSGPOLI01,
       :RELA_MSGPOLI01_CANCELADO,
       :FOLIO,
       :CONCEPTO,
       :POLIZA,
       :FECHA,
       :FECHA_VTO,
       :SUBTOTAL,
       :IMPUESTOS,
       :TOTAL,
       :PAGO_EXT,
       :MONEDA,
       :IMPCANT
  DO
  BEGIN
     FOLIO_ELECT = '';

     SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
     FROM PYMINGR18_DEP_FACTELECT
     WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = :ID_PYMINGR01
     INTO FOLIO_ELECT;

     IF (:FOLIO_ELECT IS NULL) THEN
        FOLIO_ELECT = '';

     IF (RELA_MSGPOLI01_CANCELADO IS NULL) THEN
        IF (:IMPCANT != 0) THEN
            TIPO = 'Impresa';
         ELSE
            TIPO = 'Vigente';
     ELSE
        BEGIN
           SELECT MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO
           FROM MSGPOLI01_CAB_POLIZAS
           WHERE MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = :RELA_MSGPOLI01_CANCELADO
           INTO :POLIZA;

           TIPO = 'Cancelado';
        END

     REFERENCIA = NULL;

     IF (:FILTRO != -1) THEN
        SELECT
            PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
        FROM PYMINGR03_DET_REFERENCIAS
        WHERE PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10 = :FILTRO
            AND PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = :ID_PYMINGR01
        INTO :REFERENCIA;

     SUSPEND;
  END
END
PRD_MSGPOLI07_PYMINGR30        

DECLARE VARIABLE SQLUSER VARCHAR(1000);
DECLARE VARIABLE EXISTEDEPOSITO BIGINT;
DECLARE VARIABLE RELA_PYMREFE01 BIGINT;
BEGIN
  IF (RELA_SICINGR01X IS NULL) THEN
    sqluser = 'SELECT
                   RELA_SOCWFLO01, ' ||
                  'RELA_MSGPOLI01, ' ||
                  'RELA_SICINGR01, ' ||
                  'ID_MSGPOLI07, ' ||
                  'ENTIDAD, ' ||
                  'MSGPOLI07_NROFACTURA, ' ||
                  'MSGPOLI07_FFACT, ' ||
                  'MSGPOLI07_IMPORTE_NETO, ' ||
                  'MSGPOLI07_FAPL, ' ||
                  'MSGPOLI10_IMPORTE, ' ||
                  'SALDO_CONCILIADO, ' ||
                  'RELA_MSGPOLI05 ' ||
              'FROM PRD_MSGPOLI07_SINCONCILIAR(' || :RELA_SOCSYST01 || ')';
  ELSE
    IF (RELA_SICINGR01X IS NOT NULL) THEN
      sqluser = 'SELECT
                     RELA_SOCWFLO01, ' ||
                    'RELA_MSGPOLI01, ' ||
                    'RELA_SICINGR01, ' ||
                    'ID_MSGPOLI07, ' ||
                    'ENTIDAD, ' ||
                    'MSGPOLI07_NROFACTURA, ' ||
                    'MSGPOLI07_FFACT, ' ||
                    'MSGPOLI07_IMPORTE_NETO, ' ||
                    'MSGPOLI07_FAPL, ' ||
                    'MSGPOLI10_IMPORTE, ' ||
                    'SALDO_CONCILIADO, ' ||
                    'RELA_MSGPOLI05 ' ||
                'FROM PRD_MSGPOLI07_SINCONCILIAR(' || :RELA_SOCSYST01 || ') ' ||
                'WHERE RELA_SICINGR01 = ' || :RELA_SICINGR01X;

  FOR EXECUTE STATEMENT :sqluser
  INTO
       :RELA_SOCWFLO01,
       :RELA_MSGPOLI01,
       :RELA_SICINGR01,
       :ID_MSGPOLI07,
       :ENTIDAD,
       :MSGPOLI07_NROFACTURA,
       :MSGPOLI07_FFACT,
       :MSGPOLI07_IMPORTE_NETO,
       :MSGPOLI07_FAPL,
       :MSGPOLI10_IMPORTE,
       :SALDO_CONCILIADO,
       :RELA_MSGPOLI05
  DO
  BEGIN
    MARCA = 0;
    DEPOSITADO = 0;
    SALDO = 0;
    EXISTEDEPOSITO = NULL;
    VALORANTERIOR = 0;
    CODIGOTIPO = 'F';
    FOLIOELECT = NULL;
    REFERENCIA = NULL;
    RELA_PYMREFE01 = NULL;

    SELECT
        PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA,
        PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_TIPO,
        PYMINGR01_CAB_FACTURAS.RELA_PYMREFE01,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
        PYMINGR01_CAB_fACTURAS.PYMINGR01_TIPOCAMBIO,
        SNVL((SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
              FROM PYMINGR18_DEP_FACTELECT
              WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),'')
    FROM PYMINGR01_CAB_FACTURAS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = :RELA_MSGPOLI01
      AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :RELA_SICINGR01
    INTO
        :RELA_SOCSYST10_MONEDA,
        :RELA_SOCSYST10_TIPO,
        :RELA_PYMREFE01,
        :CODIGOMONEDA,
        :TIPOCAMBIO,
        :FOLIOELECT;

    SELECT PYMREFE01_CAB_REFERENCIAS.PYMREFE01_DOCNRO
    FROM PYMREFE01_CAB_REFERENCIAS
    WHERE PYMREFE01_CAB_REFERENCIAS.ID_PYMREFE01 = :RELA_PYMREFE01
    INTO :REFERENCIA;

    IF (:RELA_SOCSYST10_TIPO IS NOT NULL) THEN
        SELECT CBO_CFDS_TIPOS.SOCSYST10_CODIGO
        FROM CBO_CFDS_TIPOS
        WHERE CBO_CFDS_TIPOS.ID_SOCSYST10 = :RELA_SOCSYST10_TIPO
        INTO :CODIGOTIPO;

    IF (:RELA_SOCSYST10_MONEDA IS NULL) THEN
      BEGIN
        SELECT
            SOCSYST01_CAB_CLIENTES.RELA_SOCSYST10_MONEDA,
            SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
            1
        FROM MSGPOLI01_CAB_POLIZAS
        INNER JOIN SOCSYST01_CAB_CLIENTES ON (MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST01_CAB_CLIENTES.RELA_SOCSYST10_MONEDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        WHERE MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = :RELA_MSGPOLI01
        INTO
            :RELA_SOCSYST10_MONEDA,
            :CODIGOMONEDA,
            :TIPOCAMBIO;
      END

    IF (ID_PYMINGR30 IS NOT NULL) THEN
      BEGIN
        MARCA = 1;

        SELECT
            PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30,
            PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE,
            PYMINGR31_DET_FACTURAS.PYMINGR31_TIPOCAMBIO
        FROM PYMINGR30_CAB_DEPOSITOS
        INNER JOIN PYMINGR31_DET_FACTURAS ON (PYMINGR31_DET_FACTURAS.RELA_PYMINGR30 = PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30)
        WHERE PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07 = :ID_MSGPOLI07
          AND PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 = :ID_PYMINGR30
        INTO :EXISTEDEPOSITO,
             :DEPOSITADO,
             :TIPOCAMBIO;

        IF (:EXISTEDEPOSITO IS NOT NULL) THEN
          BEGIN
            SALDO = (MSGPOLI10_IMPORTE + SALDO_CONCILIADO) - DEPOSITADO;
            SUSPEND;
          END
      END
    ELSE
      BEGIN
        SELECT
            PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07,
            SUM(PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE)
        FROM PYMINGR31_DET_FACTURAS
        WHERE PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07 = :ID_MSGPOLI07
        GROUP BY PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07
        INTO :EXISTEDEPOSITO,
             :DEPOSITADO;

        IF ((:EXISTEDEPOSITO IS NULL) OR (:DEPOSITADO <> 0) ) THEN
          BEGIN
            --saldo = saldo_conciliado - depositado;
            SALDO = MSGPOLI07_IMPORTE_NETO - DEPOSITADO;
            SUSPEND;
          END
      END
  END
END
REP_PYMINGR01_CONCEPTOS        

BEGIN
    SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
    FROM CBO_CLIENTES_EMPRESAS_ALL
    WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :PARAM_EMPRESA
    INTO :EMPRESA;

    IF (:PARAM_CONCEPTO = -1) THEN
      BEGIN
        FOR
          SELECT
              PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
              PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
              PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD,
              CBO_SICINGR01.ENTIDAD,
              (SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
               FROM SOCSYST10_TBL_LISTAESTADOS
               WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD),
              PYMINGR02_DET_CONCEPTOS.PYMINGR02_CONCEPTO,
              SUM((PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD * PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE) - PYMINGR02_DET_CONCEPTOS.PYMINGR02_DESCUENTO)
          FROM PYMINGR01_CAB_FACTURAS
          INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
          INNER JOIN PYMINGR02_DET_CONCEPTOS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01)
          WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
            AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
          GROUP BY
              PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
              PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
              PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD,
              CBO_SICINGR01.ENTIDAD,
              PYMINGR02_DET_CONCEPTOS.PYMINGR02_CONCEPTO

          UNION

          SELECT
              PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
              PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
              CAST(-1 AS BIGINT),
              CBO_SICINGR01.ENTIDAD,
              CAST('No Aplica' AS VARCHAR(50)),
              CAST('Honorarios' AS VARCHAR(1000)),
              SUM(PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS)
          FROM PYMINGR01_CAB_FACTURAS
          INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
          INNER JOIN PYMINGR08_DEP_HONORARIOS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01)
          WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
            AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
          GROUP BY
              PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
              PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
              CBO_SICINGR01.ENTIDAD
          INTO
              :RELA_SOCSYST01,
              :RELA_SICINGR01,
              :RELA_SOCSYST10_UNIDAD,
              :CLIENTE,
              :SOCSYST10_UNIDAD,
              :CONCEPTO,
              :IMPORTE
        DO
        BEGIN
          IF (:SOCSYST10_UNIDAD IS NULL) THEN
            SOCSYST10_UNIDAD = 'No Aplica';

            SUSPEND;
        END
      END
    ELSE
      BEGIN
        FOR
          SELECT
              PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
              PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
              PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD,
              CBO_SICINGR01.ENTIDAD,
              (SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
               FROM SOCSYST10_TBL_LISTAESTADOS
               WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD),
              PYMINGR02_DET_CONCEPTOS.PYMINGR02_CONCEPTO,
              SUM((PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD * PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE) - PYMINGR02_DET_CONCEPTOS.PYMINGR02_DESCUENTO)
          FROM PYMINGR01_CAB_FACTURAS
          INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
          INNER JOIN PYMINGR02_DET_CONCEPTOS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01)
          WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
            AND PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR10 = :PARAM_CONCEPTO
            AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
          GROUP BY
              PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
              PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
              PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD,
              CBO_SICINGR01.ENTIDAD,
              PYMINGR02_DET_CONCEPTOS.PYMINGR02_CONCEPTO

          UNION

          SELECT
              PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
              PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
              CAST(-1 AS BIGINT),
              CBO_SICINGR01.ENTIDAD,
              CAST('No Aplica' AS VARCHAR(50)),
              CAST('Honorarios' AS VARCHAR(1000)),
              SUM(PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS)
          FROM PYMINGR01_CAB_FACTURAS
          INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
          INNER JOIN PYMINGR08_DEP_HONORARIOS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01)
          WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL
            AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
          GROUP BY
              PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
              PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
              CBO_SICINGR01.ENTIDAD

          INTO
              :RELA_SOCSYST01,
              :RELA_SICINGR01,
              :RELA_SOCSYST10_UNIDAD,
              :CLIENTE,
              :SOCSYST10_UNIDAD,
              :CONCEPTO,
              :IMPORTE
        DO
        BEGIN
            IF (:SOCSYST10_UNIDAD IS NULL) THEN
              SOCSYST10_UNIDAD = 'No Aplica';

            SUSPEND;
        END
      END
END
REP_PYMINGR06_ITEMS            

BEGIN
  FOR
    SELECT
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        SUM(PYMINGR06_DET_ITEMS.PYMINGR06_CANTIDAD),
        SUM(PYMINGR06_DET_ITEMS.PYMINGR06_IMPORTE),
        SUM(PYMINGR06_DET_ITEMS.PYMINGR06_CANTIDAD * PYMINGR06_DET_ITEMS.PYMINGR06_IMPORTE)
    FROM PYMINGR06_DET_ITEMS
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINGR06_DET_ITEMS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_MEDIDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :ID_FACTURA
    GROUP BY
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION
    INTO
        :UNIDAD,
        :CODIGO,
        :PRODUCTO,
        :CANTIDAD,
        :IMPORTE,
        :TOTAL
  DO
  BEGIN
      SUSPEND;
  END
END
REP_PYMINGR03_REFERENCIAS      

BEGIN
  FOR
    SELECT
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
        PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
    FROM PYMINGR03_DET_REFERENCIAS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = :ID_FACTURA
    ORDER BY SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1
    INTO
        :TIPO_DOCUMENTO,
        :CODIGO,
        :DOCUMENTO
  DO
  BEGIN
      SUSPEND;
  END
END
PRD_SRHNOMI03                  

BEGIN
  SELECT
     SICCONT70_MOV_EMPLEADOS.RELA_SICCONT02,
     SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
     SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
     (SELECT SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_nom
      FROM SRHNOMI02_DET_EMPLEADOS
      WHERE SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = :PARAM_SRHNOMI01
        AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :PARAM_EMPLEADO),
     CAST('SUELDO' AS VARCHAR(6))
  FROM SICCONT70_MOV_EMPLEADOS
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10)
  INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT70_MOV_EMPLEADOS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
  WHERE SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
     AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'SUELDO'
     AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_EMPRESA
  INTO
    :RELA_SICCONT02,
    :SICCONT02_CODEXT,
    :SICCONT02_DESCRI,
    :SRHNOMI03_IMPORTE,
    :CODIGO;

  IF (:SRHNOMI03_IMPORTE IS NULL) THEN
    SRHNOMI03_IMPORTE = 0;

  SUSPEND;

  FOR
    SELECT
        PRD_SRHMAIN11.RELA_SICCONT02,
        PRD_SRHMAIN11.ID_SRHMAIN11,
        PRD_SRHMAIN11.SICCONT02_CODEXT,
        PRD_SRHMAIN11.SICCONT02_DESCRI,
        (SELECT SRHNOMI03_DET_RETRIBUCIONES.SRHNOMI03_IMPORTE
         FROM SRHNOMI03_DET_RETRIBUCIONES
         INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHNOMI02 = SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02)
         INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
         WHERE SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = :PARAM_SRHNOMI01
            AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
            AND SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHMAIN11 = PRD_SRHMAIN11.ID_SRHMAIN11)
    FROM PRD_SRHMAIN11(:PARAM_EMPRESA,:PARAM_EMPLEADO)
    WHERE PRD_SRHMAIN11.MARCA = 1
    INTO
       :RELA_SICCONT02,
       :RELA_SRHMAIN11,
       :SICCONT02_CODEXT,
       :SICCONT02_DESCRI,
       :SRHNOMI03_IMPORTE
  DO
  BEGIN
    CODIGO = '';

    IF (SRHNOMI03_IMPORTE IS NULL) THEN
      SRHNOMI03_IMPORTE = 0;

    SUSPEND;
  END
END
PRD_SRHNOMI04                  

BEGIN
    FOR
      SELECT
         PRD_SRHMAIN12.RELA_SICCONT02,
         PRD_SRHMAIN12.ID_SRHMAIN12,
         PRD_SRHMAIN12.SICCONT02_CODEXT,
         PRD_SRHMAIN12.SICCONT02_DESCRI,
         (SELECT SRHNOMI04_DET_RETENCIONES.SRHNOMI04_IMPORTE
          FROM SRHNOMI04_DET_RETENCIONES
          INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI04_DET_RETENCIONES.RELA_SRHNOMI02 = SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02)
          INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
          WHERE SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = :PARAM_SRHNOMI01
            AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
            AND SRHNOMI04_DET_RETENCIONES.RELA_SRHMAIN12 = PRD_SRHMAIN12.ID_SRHMAIN12)
      FROM PRD_SRHMAIN12(:PARAM_EMPRESA,:PARAM_EMPLEADO)
      WHERE PRD_SRHMAIN12.MARCA = 1
      INTO
         :RELA_SICCONT02,
         :RELA_SRHMAIN12,
         :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :SRHNOMI04_IMPORTE
    DO
    BEGIN
       IF (SRHNOMI04_IMPORTE IS NULL) THEN
         SRHNOMI04_IMPORTE = 0;

       SUSPEND;
    END
END
PRD_PYMINGR01_AUTOMATIZACION   

DECLARE VARIABLE RELA_SICINGR01Z BIGINT;
DECLARE VARIABLE RELA_PYMINGR01Z BIGINT;
DECLARE VARIABLE ID_PYMINGR45Z BIGINT;
DECLARE VARIABLE RELA_SOCWFLO01X BIGINT;
DECLARE VARIABLE RELA_MSGPOLI01X BIGINT;
DECLARE VARIABLE RELA_SICINGR01X BIGINT;
DECLARE VARIABLE RELA_SOCSYST10X BIGINT;
DECLARE VARIABLE RELA_SOCSYST10X_MONEDA BIGINT;
DECLARE VARIABLE PYMINGR01_APLICATOTALX SMALLINT;
DECLARE VARIABLE PYMINGR01_SUBTOTALX DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR01_DESCUENTOSX DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR01_IMPUESTOSX DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR01_TOTALX DOUBLE PRECISION;
DECLARE VARIABLE RELA_SOCUSUA02_ACCIONY BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_ACCIONY BIGINT;
DECLARE VARIABLE RELA_SOCSYST10Y BIGINT;
DECLARE VARIABLE RELA_SICCONT02S BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_COLUMS BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_ARCOS BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_REFES BIGINT;
DECLARE VARIABLE RELA_SICEGRE01S BIGINT;
DECLARE VARIABLE RELA_SICINGR01S BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02S BIGINT;
DECLARE VARIABLE RELA_SRHMAIN10S BIGINT;
DECLARE VARIABLE MSGPOLI02_REFERENCIAS VARCHAR(50);
DECLARE VARIABLE MSGPOLI02_DEBES DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABERS DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_ANOS SMALLINT;
DECLARE VARIABLE MSGPOLI02_MESS SMALLINT;
DECLARE VARIABLE ULTIDMSGPOLI01 BIGINT;
DECLARE VARIABLE ULTIDPYMINGR01 BIGINT;
DECLARE VARIABLE ULTIDPYMINGR02 BIGINT;
DECLARE VARIABLE ULTIDPYMINGR06 BIGINT;
DECLARE VARIABLE ULTIDMSGPOLI07 INTEGER;
DECLARE VARIABLE PYMINGR01_DOCNRO VARCHAR(50);
DECLARE VARIABLE MSGPOLI07_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI07_IMPORTE_NETO DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI07_IMPORTE_BRUTO DOUBLE PRECISION;
DECLARE VARIABLE RELA_PYMINGR10W BIGINT;
DECLARE VARIABLE RELA_SICCONT02W BIGINT;
DECLARE VARIABLE RELA_SICCONT02_DESCUENTOSW BIGINT;
DECLARE VARIABLE ID_PYMINGR02W BIGINT;
DECLARE VARIABLE PYMINGR02_APLICATOTALW SMALLINT;
DECLARE VARIABLE PYMINGR02_CANTIDADW DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR02_IMPORTEW DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR02_DESCUENTOW DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR02_PORCENTAJEW DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR02_IMPUESTOSW DOUBLE PRECISION;
DECLARE VARIABLE RELA_SICCONT02Y BIGINT;
DECLARE VARIABLE PYMINGR05_DEBEY DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR05_HABERY DOUBLE PRECISION;
DECLARE VARIABLE RELA_PYMINVE10H BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02H BIGINT;
DECLARE VARIABLE RELA_SICCONT02H BIGINT;
DECLARE VARIABLE RELA_SICCONT02_DESCUENTOSH BIGINT;
DECLARE VARIABLE RELA_PYMINVE40H BIGINT;
DECLARE VARIABLE RELA_PYMINVE30H BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_MODELOH BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TALLAH BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_COLORH BIGINT;
DECLARE VARIABLE ID_PYMINGR06H BIGINT;
DECLARE VARIABLE PYMINGR06_APLICATOTALH SMALLINT;
DECLARE VARIABLE PYMINGR06_CANTIDADH DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR06_IMPORTEH DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR06_DESCUENTOH DOUBLE PRECISION;
DECLARE VARIABLE PYMINGR06_IMPUESTOSH DOUBLE PRECISION;
DECLARE VARIABLE RELA_SICCONT02K BIGINT;
DECLARE VARIABLE MSGPOLI02_DEBEK DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABERK DOUBLE PRECISION;
DECLARE VARIABLE SQLUSER VARCHAR(500);
DECLARE VARIABLE RELA_SOCSYST10Z BIGINT;
DECLARE VARIABLE PYMINGR03_DOCUMENTO VARCHAR(50);
BEGIN
    SELECT
        SOCSYST01_CAB_CLIENTES.RELA_SOCSYST10_MONEDA
    FROM SOCSYST01_CAB_CLIENTES
    WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :RELA_SOCSYST01
    INTO :RELA_SOCSYST10X_MONEDA;


    FOLIO_DESDE = NULL;
    FOLIO_HASTA = NULL;
    sqluser = '';

    if (RELA_PYMINGR40 is not null) then
        sqluser = 'select rela_sicingr01, rela_pymingr01, id_pymingr45 ' ||
                  'from pymingr45_cab_factmasters ' ||
                  'inner join ztmpingr45_automaticacion on (RELA_PYMINGR45 = id_pymingr45) ' ||
                  'where rela_socsyst01 = ' || :RELA_SOCSYST01 ||
                  ' and ztmpingr45_user = ''' || current_user || '''';
    else
        sqluser = 'select rela_sicingr01, rela_pymingr01, id_pymingr45 ' ||
                  'from pymingr45_cab_factmasters ' ||
                  'where rela_socsyst01 = ' || :RELA_SOCSYST01;

    /* --------------------------------------------------------------------------------------- */
    /* PYMINGR45 - RECORRE TODAS LAS FACTURAS MODELOS
    /* --------------------------------------------------------------------------------------- */
    FOR EXECUTE STATEMENT :sqluser
    into :rela_sicingr01z,
         :rela_pymingr01z,
         :id_pymingr45z
    do
    begin

        /* --------------------------------------------------------------------------------------- */
        /* PYMINGR01 - TOMO DATOS PRINCIPALES PARA EL MSGPOLI01
        /* --------------------------------------------------------------------------------------- */
        select
        pymingr01_cab_facturas.RELA_SOCWFLO01,
        pymingr01_cab_facturas.RELA_MSGPOLI01,
        pymingr01_cab_facturas.RELA_SICINGR01,
        pymingr01_cab_facturas.RELA_SOCSYST10,
        pymingr01_cab_facturas.RELA_SOCSYST10_MONEDA,
        pymingr01_cab_facturas.PYMINGR01_APLICATOTAL,
        pymingr01_cab_facturas.PYMINGR01_SUBTOTAL,
        pymingr01_cab_facturas.PYMINGR01_DESCUENTOS,
        pymingr01_cab_facturas.PYMINGR01_IMPUESTOS,
        pymingr01_cab_facturas.PYMINGR01_TOTAL
        from pymingr01_cab_facturas
        where pymingr01_cab_facturas.id_pymingr01 = :rela_pymingr01z
        into :RELA_SOCWFLO01x,
             :RELA_MSGPOLI01x,
             :RELA_SICINGR01x,
             :RELA_SOCSYST10x,
             :RELA_SOCSYST10X_MONEDA,
             :PYMINGR01_APLICATOTALx,
             :PYMINGR01_SUBTOTALx,
             :PYMINGR01_DESCUENTOSx,
             :PYMINGR01_IMPUESTOSx,
             :PYMINGR01_TOTALx;

        /* --------------------------------------------------------------------------------------- */
        /* MSGPOLI01
        /* --------------------------------------------------------------------------------------- */
        select
        msgpoli01_cab_polizas.rela_socusua02_accion,
        msgpoli01_cab_polizas.rela_socsyst10_accion,
        msgpoli01_cab_polizas.rela_socsyst10
        from msgpoli01_cab_polizas
        where msgpoli01_cab_polizas.id_msgpoli01 = :RELA_MSGPOLI01x
        into :rela_socusua02_acciony,
             :rela_socsyst10_acciony,
             :rela_socsyst10y;

        insert into msgpoli01_cab_polizas(
                    msgpoli01_cab_polizas.rela_socwflo01,
                    msgpoli01_cab_polizas.rela_socusua02_accion,
                    msgpoli01_cab_polizas.rela_socsyst10_accion,
                    msgpoli01_cab_polizas.rela_socsyst01,
                    msgpoli01_cab_polizas.rela_socsyst10,
                    msgpoli01_cab_polizas.msgpoli01_descripcion,
                    msgpoli01_cab_polizas.msgpoli01_docnro,
                    msgpoli01_cab_polizas.msgpoli01_fcta)
        values(:RELA_SOCWFLO01x,
               :rela_socusua02_acciony,
               :rela_socsyst10_acciony,
               :RELA_SOCSYST01,
               :rela_socsyst10y,
               :CONCEPTO,
               '',
               :FECHA_FACT);

        select socutil02_tbl_ultids.socutil02_ultid
        from socutil02_tbl_ultids
        where socutil02_tbl_ultids.socutil02_usuario = current_user
        into :ultIdMsgPoli01;

        /* --------------------------------------------------------------------------------------- */
        /* MSGPOLI02
        /* --------------------------------------------------------------------------------------- */
        for select
        msgpoli02_det_polizas.rela_siccont02,
        msgpoli02_det_polizas.rela_socsyst10_colum,
        msgpoli02_det_polizas.rela_socsyst10_arco,
        msgpoli02_det_polizas.rela_socsyst10_refe,
        msgpoli02_det_polizas.rela_sicegre01,
        msgpoli02_det_polizas.rela_sicingr01,
        msgpoli02_det_polizas.rela_socusua02,
        msgpoli02_det_polizas.rela_srhmain10,
        msgpoli02_det_polizas.msgpoli02_referencia,
        msgpoli02_det_polizas.msgpoli02_debe,
        msgpoli02_det_polizas.msgpoli02_haber,
        msgpoli02_det_polizas.msgpoli02_ano,
        msgpoli02_det_polizas.msgpoli02_mes
        from msgpoli02_det_polizas
        where msgpoli02_det_polizas.rela_msgpoli01 = :RELA_MSGPOLI01x
        into :rela_siccont02s,
             :rela_socsyst10_colums,
             :rela_socsyst10_arcos,
             :rela_socsyst10_refes,
             :rela_sicegre01s,
             :rela_sicingr01s,
             :rela_socusua02s,
             :rela_srhmain10s,
             :msgpoli02_referencias,
             :msgpoli02_debes,
             :msgpoli02_habers,
             :msgpoli02_anos,
             :msgpoli02_mess
        do
        begin
            insert into msgpoli02_det_polizas(
                        msgpoli02_det_polizas.rela_msgpoli01,
                        msgpoli02_det_polizas.rela_socsyst01,
                        msgpoli02_det_polizas.rela_siccont02,
                        msgpoli02_det_polizas.rela_socsyst10_colum,
                        msgpoli02_det_polizas.rela_socsyst10_arco,
                        msgpoli02_det_polizas.rela_socsyst10_refe,
                        msgpoli02_det_polizas.rela_sicegre01,
                        msgpoli02_det_polizas.rela_sicingr01,
                        msgpoli02_det_polizas.rela_socusua02,
                        msgpoli02_det_polizas.rela_srhmain10,
                        msgpoli02_det_polizas.msgpoli02_referencia,
                        msgpoli02_det_polizas.msgpoli02_debe,
                        msgpoli02_det_polizas.msgpoli02_haber,
                        msgpoli02_det_polizas.msgpoli02_ano,
                        msgpoli02_det_polizas.msgpoli02_mes)
            values(:ultIdMsgPoli01,
                   :rela_socsyst01,
                   :rela_siccont02s,
                   :rela_socsyst10_colums,
                   :rela_socsyst10_arcos,
                   :rela_socsyst10_refes,
                   :rela_sicegre01s,
                   :rela_sicingr01s,
                   :rela_socusua02s,
                   :rela_srhmain10s,
                   :msgpoli02_referencias,
                   :msgpoli02_debes,
                   :msgpoli02_habers,
                   :msgpoli02_anos,
                   :msgpoli02_mess);
        end


        /* --------------------------------------------------------------------------------------- */
        /* PYMINGR01 - AQUI COMIENZO A COPIAR DE LAS FACTURAS MODELOS
        /* --------------------------------------------------------------------------------------- */
        insert into pymingr01_cab_facturas(
                    pymingr01_cab_facturas.rela_socsyst01,
                    pymingr01_cab_facturas.RELA_SOCWFLO01,
                    pymingr01_cab_facturas.RELA_MSGPOLI01,
                    pymingr01_cab_facturas.RELA_SICINGR01,
                    pymingr01_cab_facturas.RELA_SOCSYST10,
                    pymingr01_cab_facturas.RELA_SOCSYST10_moneda,
                    pymingr01_cab_facturas.PYMINGR01_APLICATOTAL,
                    pymingr01_cab_facturas.PYMINGR01_CONCEPTO,
                    pymingr01_cab_facturas.PYMINGR01_FFAC,
                    pymingr01_cab_facturas.PYMINGR01_FVTO,
                    pymingr01_cab_facturas.PYMINGR01_SUBTOTAL,
                    pymingr01_cab_facturas.PYMINGR01_DESCUENTOS,
                    pymingr01_cab_facturas.PYMINGR01_IMPUESTOS,
                    pymingr01_cab_facturas.PYMINGR01_TOTAL,
                    pymingr01_cab_facturas.PYMINGR01_TIPOCAMBIO)
        values(:rela_socsyst01,
               :RELA_SOCWFLO01x,
               :ultIdMsgPoli01,
               :RELA_SICINGR01x,
               :RELA_SOCSYST10x,
               :RELA_SOCSYST10x_MONEDA,
               :PYMINGR01_APLICATOTALx,
               :CONCEPTO,
               :FECHA_FACT,
               :FACHA_VTO,
               :PYMINGR01_SUBTOTALx,
               :PYMINGR01_DESCUENTOSx,
               :PYMINGR01_IMPUESTOSx,
               :PYMINGR01_TOTALx,
               1);

        select socutil02_tbl_ultids.socutil02_ultid
        from socutil02_tbl_ultids
        where socutil02_tbl_ultids.socutil02_usuario = current_user
        into :ultIdPymIngr01;

        /* --------------------------------------------------------------------------------------- */
        /* MSGPOLI07 - Recupero los datos de PYMINGR01 para despues
        /* --------------------------------------------------------------------------------------- */
        select
        pymingr01_cab_facturas.pymingr01_docnro,
        pymingr01_cab_facturas.pymingr01_subtotal,
        pymingr01_cab_facturas.pymingr01_total,
        pymingr01_cab_facturas.pymingr01_subtotal + pymingr01_cab_facturas.pymingr01_impuestos
        from pymingr01_cab_facturas
        where pymingr01_cab_facturas.id_pymingr01 = :ultIdPymIngr01
        into :pymingr01_docnro,
             :MSGPOLI07_IMPORTE,
             :MSGPOLI07_IMPORTE_NETO,
             :MSGPOLI07_IMPORTE_BRUTO;

        if (FOLIO_DESDE IS NULL) then
            FOLIO_DESDE = :pymingr01_docnro;

        /* --------------------------------------------------------------------------------------- */
        /* PYMINGR03
        /* --------------------------------------------------------------------------------------- */

        FOR
          SELECT
              PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10,
              PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
          FROM PYMINGR03_DET_REFERENCIAS
          WHERE PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = :RELA_PYMINGR01Z
          INTO
              :RELA_SOCSYST10Z,
              :PYMINGR03_DOCUMENTO
        DO
        BEGIN
            INSERT INTO PYMINGR03_DET_REFERENCIAS(PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01,
                                                  PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10,
                                                  PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO)
                                           VALUES(:ULTIDPYMINGR01,
                                                  :RELA_SOCSYST10Z,
                                                  :PYMINGR03_DOCUMENTO);
        END

        /* --------------------------------------------------------------------------------------- */
        /* PYMINGR02
        /* --------------------------------------------------------------------------------------- */
        for select
        pymingr02_det_conceptos.rela_pymingr10,
        pymingr02_det_conceptos.rela_siccont02,
        pymingr02_det_conceptos.rela_siccont02_descuentos,
        pymingr02_det_conceptos.id_pymingr02,
        pymingr02_det_conceptos.pymingr02_aplicatotal,
        pymingr02_det_conceptos.pymingr02_cantidad,
        pymingr02_det_conceptos.pymingr02_importe,
        pymingr02_det_conceptos.pymingr02_descuento,
        pymingr02_det_conceptos.pymingr02_porcentaje,
        pymingr02_det_conceptos.pymingr02_impuestos
        from pymingr02_det_conceptos
        where pymingr02_det_conceptos.rela_pymingr01 = :rela_pymingr01z
        into :rela_pymingr10w,
             :rela_siccont02w,
             :rela_siccont02_descuentosw,
             :id_pymingr02w,
             :pymingr02_aplicatotalw,
             :pymingr02_cantidadw,
             :pymingr02_importew,
             :pymingr02_descuentow,
             :pymingr02_porcentajew,
             :pymingr02_impuestosw
        do
        begin
            insert into pymingr02_det_conceptos(
                        pymingr02_det_conceptos.rela_pymingr01,
                        pymingr02_det_conceptos.rela_pymingr10,
                        pymingr02_det_conceptos.rela_siccont02,
                        pymingr02_det_conceptos.rela_siccont02_descuentos,
                        pymingr02_det_conceptos.pymingr02_aplicatotal,
                        pymingr02_det_conceptos.pymingr02_cantidad,
                        pymingr02_det_conceptos.pymingr02_importe,
                        pymingr02_det_conceptos.pymingr02_descuento,
                        pymingr02_det_conceptos.pymingr02_porcentaje,
                        pymingr02_det_conceptos.pymingr02_impuestos)
            values(:ultIdPymIngr01,
                   :rela_pymingr10w,
                   :rela_siccont02w,
                   :rela_siccont02_descuentosw,
                   :pymingr02_aplicatotalw,
                   :pymingr02_cantidadw,
                   :pymingr02_importew,
                   :pymingr02_descuentow,
                   :pymingr02_porcentajew,
                   :pymingr02_impuestosw);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :ultIdPymIngr02;

            /* --------------------------------------------------------------------------------------- */
            /* PYMINGR05 - con el PYMINGR02
            /* --------------------------------------------------------------------------------------- */
            for select
            PYMINGR05_MOV_IMPUESTOS.rela_siccont02,
            PYMINGR05_MOV_IMPUESTOS.pymingr05_debe,
            PYMINGR05_MOV_IMPUESTOS.pymingr05_haber
            from PYMINGR05_MOV_IMPUESTOS
            where PYMINGR05_MOV_IMPUESTOS.rela_pymingr02 = :id_pymingr02w
            into :rela_siccont02y,
                 :pymingr05_debey,
                 :pymingr05_habery
            do
            begin
                insert into pymingr05_mov_impuestos(
                            pymingr05_mov_impuestos.rela_pymingr02,
                            pymingr05_mov_impuestos.rela_siccont02,
                            pymingr05_mov_impuestos.pymingr05_debe,
                            pymingr05_mov_impuestos.pymingr05_haber)
                values(:ultIdPymIngr02,
                       :rela_siccont02y,
                       :pymingr05_debey,
                       :pymingr05_habery);
            end
        end

        /* --------------------------------------------------------------------------------------- */
        /* PYMINGR06
        /* --------------------------------------------------------------------------------------- */
        for select
        pymingr06_det_items.rela_pyminve10,
        pymingr06_det_items.rela_socusua02,
        pymingr06_det_items.rela_siccont02,
        pymingr06_det_items.rela_siccont02_descuentos,
        pymingr06_det_items.rela_pyminve40,
        pymingr06_det_items.rela_pyminve30,
        pymingr06_det_items.rela_socsyst10_modelo,
        pymingr06_det_items.rela_socsyst10_talla,
        pymingr06_det_items.rela_socsyst10_color,
        pymingr06_det_items.id_pymingr06,
        pymingr06_det_items.pymingr06_aplicatotal,
        pymingr06_det_items.pymingr06_cantidad,
        pymingr06_det_items.pymingr06_importe,
        pymingr06_det_items.pymingr06_descuento,
        pymingr06_det_items.pymingr06_impuestos
        from pymingr06_det_items
        where pymingr06_det_items.rela_pymingr01 = :rela_pymingr01z
        into :rela_pyminve10h,
             :rela_socusua02h,
             :rela_siccont02h,
             :rela_siccont02_descuentosh,
             :rela_pyminve40h,
             :rela_pyminve30h,
             :rela_socsyst10_modeloh,
             :rela_socsyst10_tallah,
             :rela_socsyst10_colorh,
             :id_pymingr06h,
             :pymingr06_aplicatotalh,
             :pymingr06_cantidadh,
             :pymingr06_importeh,
             :pymingr06_descuentoh,
             :pymingr06_impuestosh
        do
        begin
            insert into pymingr06_det_items(pymingr06_det_items.rela_pymingr01,
                                            pymingr06_det_items.rela_pyminve10,
                                            pymingr06_det_items.rela_socusua02,
                                            pymingr06_det_items.rela_siccont02,
                                            pymingr06_det_items.rela_siccont02_descuentos,
                                            pymingr06_det_items.rela_pyminve40,
                                            pymingr06_det_items.rela_pyminve30,
                                            pymingr06_det_items.rela_socsyst10_modelo,
                                            pymingr06_det_items.rela_socsyst10_talla,
                                            pymingr06_det_items.rela_socsyst10_color,
                                            pymingr06_det_items.pymingr06_aplicatotal,
                                            pymingr06_det_items.pymingr06_cantidad,
                                            pymingr06_det_items.pymingr06_importe,
                                            pymingr06_det_items.pymingr06_descuento,
                                            pymingr06_det_items.pymingr06_porcentaje,
                                            pymingr06_det_items.pymingr06_impuestos)
                                     values(:ultIdPymIngr01,
                                            :rela_pyminve10h,
                                            :rela_socusua02h,
                                            :rela_siccont02h,
                                            :rela_siccont02_descuentosh,
                                            :rela_pyminve40h,
                                            :rela_pyminve30h,
                                            :rela_socsyst10_modeloh,
                                            :rela_socsyst10_tallah,
                                            :rela_socsyst10_colorh,
                                            :id_pymingr06h,
                                            :pymingr06_aplicatotalh,
                                            :pymingr06_cantidadh,
                                            :pymingr06_importeh,
                                            :pymingr06_descuentoh,
                                            :pymingr06_impuestosh);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :ultIdPymIngr06;

            /* --------------------------------------------------------------------------------------- */
            /* PYMINGR05 - con el PYMINGR06
            /* --------------------------------------------------------------------------------------- */
            for select
            PYMINGR05_MOV_IMPUESTOS.rela_siccont02,
            PYMINGR05_MOV_IMPUESTOS.pymingr05_debe,
            PYMINGR05_MOV_IMPUESTOS.pymingr05_haber
            from PYMINGR05_MOV_IMPUESTOS
            where PYMINGR05_MOV_IMPUESTOS.rela_pymingr06 = :id_pymingr06h
            into :rela_siccont02y,
                 :pymingr05_debey,
                 :pymingr05_habery
            do
            begin
                insert into pymingr05_mov_impuestos(
                            pymingr05_mov_impuestos.rela_pymingr06,
                            pymingr05_mov_impuestos.rela_siccont02,
                            pymingr05_mov_impuestos.pymingr05_debe,
                            pymingr05_mov_impuestos.pymingr05_haber)
                values(:ultIdPymIngr06,
                       :rela_siccont02y,
                       :pymingr05_debey,
                       :pymingr05_habery);
            end
        end

        /* --------------------------------------------------------------------------------------- */
        /* MSGPOLI07
        /* --------------------------------------------------------------------------------------- */
        insert into msgpoli07_det_facturas(
                    msgpoli07_det_facturas.rela_msgpoli01,
                    msgpoli07_det_facturas.rela_sicingr01,
                    msgpoli07_det_facturas.msgpoli07_nrofactura,
                    msgpoli07_det_facturas.msgpoli07_ffact,
                    msgpoli07_det_facturas.msgpoli07_importe,
                    msgpoli07_det_facturas.msgpoli07_importe_neto,
                    msgpoli07_det_facturas.msgpoli07_importe_bruto)
        values(:ultidmsgpoli01,
               :rela_sicingr01z,
               :pymingr01_docnro,
               :FECHA_FACT,
               :msgpoli07_importe,
               :msgpoli07_importe_neto,
               :msgpoli07_importe_bruto);

        select socutil02_tbl_ultids.socutil02_ultid
        from socutil02_tbl_ultids
        where socutil02_tbl_ultids.socutil02_usuario = current_user
        into :ultIdMsgPoli07;

        /* --------------------------------------------------------------------------------------- */
        /* MSGPOLI08
        /* --------------------------------------------------------------------------------------- */        
        for select
        msgpoli02_det_polizas.rela_siccont02,
        msgpoli02_det_polizas.msgpoli02_debe,
        msgpoli02_det_polizas.msgpoli02_haber
        from msgpoli02_det_polizas
        where msgpoli02_det_polizas.rela_msgpoli01 = :ultidmsgpoli01
        into :rela_siccont02k,
             :msgpoli02_debek,
             :msgpoli02_haberk
        do
        begin
            insert into msgpoli08_mov_facturas(
                        msgpoli08_mov_facturas.rela_msgpoli07,
                        msgpoli08_mov_facturas.rela_siccont02,
                        msgpoli08_mov_facturas.msgpoli08_debe,
                        msgpoli08_mov_facturas.msgpoli08_haber)
            values(:ultIdMsgPoli07,
                   :rela_siccont02k,
                   :msgpoli02_debek,
                   :msgpoli02_haberk);
        end

        /* --------------------------------------------------------------------------------------- */
        /* PYMINGR41 - FINALIZA CREANDO EL REGISTRO DE BITACORA
        /* --------------------------------------------------------------------------------------- */
        if (rela_pymingr40 is not null) then
            insert into PYMINGR41_DET_ACTAUTO(
                        PYMINGR41_DET_ACTAUTO.rela_pymingr40,
                        PYMINGR41_DET_ACTAUTO.rela_pymingr45,
                        PYMINGR41_DET_ACTAUTO.rela_pymingr01)
            values(:RELA_PYMINGR40,
                   :id_pymingr45z,
                   :ultIdPymIngr01);
    end

    FOLIO_HASTA = :pymingr01_docnro;
    suspend;
end
PRD_SOCSYST20_PYMVENT40        

BEGIN
    SELECT
        SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
        SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
        SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
    INTO
        :XID_SOCSYST20,
        :XSOCSYST20_CONTADOR,
        :XSOCSYST20_MASCARA,
        :XSOCSYST20_PREFIJO,
        :XSOCSYST20_POSFIJO,
        :XSOCSYST20_LONGITUD;

    SUSPEND;
END
JAM$_ACTUALIZA_ESTADOS         

begin
  FOR select
  socusua51_tbl_federativas.socusua51_entidad,
  socusua51_tbl_federativas.socusua51_codigo
  FROM socusua51_tbl_federativas
  INTO :socusua51_entidad,
       :socusua51_codigo
  DO
  BEGIN
    update socusua42_tbl_codpostales
    set socusua42_tbl_codpostales.socusua42_efederativa =  :socusua51_codigo
    where upper(socusua42_tbl_codpostales.socusua42_estadoprovincia) = upper(:socusua51_entidad);
    suspend;
  END
end
REP_SRHNOMI01_NOMINAS          

DECLARE VARIABLE ID_SRHMAIN10 BIGINT;
DECLARE VARIABLE ENTIDAD CHAR(255);
DECLARE VARIABLE SQLUSER VARCHAR(5000);
DECLARE VARIABLE SQLWHERE VARCHAR(50);
BEGIN
  DELETE FROM ZTMPMAIN10_EMPLEADOS
  WHERE ZTMPMAIN10_EMPLEADOS.USUARIO = CURRENT_USER;

  SQLUSER = 'SELECT
                SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10,
                CBO_SRHMAIN10.ENTIDAD,
                SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_FINGRESO,
                SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_FDEBAJA,
                SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_SALARIO_NOM,
                SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_SALARIO_DIA
             FROM SRHMAIN10_CAB_EMPLEADO
             INNER JOIN CBO_SRHMAIN10 ON (SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10 = CBO_SRHMAIN10.ID_SRHMAIN10)';

  SQLWHERE = '';
  IF (:PARAM_EMPLEADO != -1) THEN
    SQLWHERE = ' WHERE SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10 = ' || :PARAM_EMPLEADO;

  FOR EXECUTE STATEMENT :SQLUSER || :SQLWHERE
  INTO
      :ID_SRHMAIN10,
      :ENTIDAD,
      :SRHMAIN10_FINGRESO,
      :SRHMAIN10_FDEBAJA,
      :SRHMAIN10_SALARIO_NOM,
      :SRHMAIN10_SALARIO_DIA
  DO
  BEGIN
    RFC = '';
    CURP = '';
    NSS = '';
    SRHNOMI02_TOT_PERCEP = 0;
    SRHNOMI02_TOT_DEDUC = 0;
    SRHNOMI02_TOT_ISR = 0;
    SRHNOMI02_TOT_INCAP = 0;
    SRHNOMI02_TOT_HORAS = 0;

    SELECT
        SNVL(PRD_SRHMAIN10.SOCUSUA20_SOCUSUA30_RFC, ''),
        SNVL(PRD_SRHMAIN10.CURP, ''),
        SNVL(PRD_SRHMAIN10.NSS, '')
    FROM PRD_SRHMAIN10(:ID_SRHMAIN10)
    INTO
        :RFC,
        :CURP,
        :NSS;

    SELECT
        DNVL(SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_PERCEP), 0),
        DNVL(SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_DEDUC), 0),
        DNVL(SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_ISR), 0),
        DNVL(SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_INCAP), 0),
        DNVL(SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_HORAS), 0)
    FROM SRHNOMI01_CAB_SUELDOS
    INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01)
    WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :ID_SRHMAIN10
      AND SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    INTO
        :SRHNOMI02_TOT_PERCEP,
        :SRHNOMI02_TOT_DEDUC,
        :SRHNOMI02_TOT_ISR,
        :SRHNOMI02_TOT_INCAP,
        :SRHNOMI02_TOT_HORAS;

    INSERT INTO ZTMPMAIN10_EMPLEADOS (ZTMPMAIN10_EMPLEADOS.USUARIO,
                                      ZTMPMAIN10_EMPLEADOS.ID_SRHMAIN10,
                                      ZTMPMAIN10_EMPLEADOS.ENTIDAD,
                                      ZTMPMAIN10_EMPLEADOS.SRHMAIN10_FINGRESO,
                                      ZTMPMAIN10_EMPLEADOS.SRHMAIN10_FDEBAJA,
                                      ZTMPMAIN10_EMPLEADOS.SRHMAIN10_SALARIO_NOM,
                                      ZTMPMAIN10_EMPLEADOS.SRHMAIN10_SALARIO_DIA,
                                      ZTMPMAIN10_EMPLEADOS.RFC,
                                      ZTMPMAIN10_EMPLEADOS.CURP,
                                      ZTMPMAIN10_EMPLEADOS.NSS,
                                      ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_PERCEP,
                                      ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_DEDUC,
                                      ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_ISR,
                                      ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_INCAP,
                                      ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_HORAS)
                              VALUES (CURRENT_USER,
                                      :ID_SRHMAIN10,
                                      :ENTIDAD,
                                      :SRHMAIN10_FINGRESO,
                                      :SRHMAIN10_FDEBAJA,
                                      :SRHMAIN10_SALARIO_NOM,
                                      :SRHMAIN10_SALARIO_DIA,
                                      :RFC,
                                      :CURP,
                                      :NSS,
                                      :SRHNOMI02_TOT_PERCEP,
                                      :SRHNOMI02_TOT_DEDUC,
                                      :SRHNOMI02_TOT_ISR,
                                      :SRHNOMI02_TOT_INCAP,
                                      :SRHNOMI02_TOT_HORAS);
  END

  SQLUSER = 'SELECT
                 SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_PERCEP),
                 SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_DEDUC),
                 SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_ISR),
                 SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_INCAP),
                 SUM(SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_HORAS)
             FROM SRHNOMI01_CAB_SUELDOS
             INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01)
             WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             ' AND SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM BETWEEN ''' || :PARAM_FECHADESDE || ''' AND ''' || :PARAM_FECHAHASTA || '''';

  SQLWHERE = '';
  IF (:PARAM_EMPLEADO != -1) THEN
    SQLWHERE = ' AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = ' || :PARAM_EMPLEADO;

  EXECUTE STATEMENT :SQLUSER || :SQLWHERE
  INTO
      :TOTAL_PERCEPCIONES,
      :TOTAL_DEDUCCIONES,
      :TOTAL_ISR,
      :TOTAL_INCAPACIDADES,
      :TOTAL_HORAS;

  SQLUSER = 'SELECT
                 SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01,
                 SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01,
                 SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10,
                 SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02,
                 SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
                 ZTMPMAIN10_EMPLEADOS.ENTIDAD,
                 ZTMPMAIN10_EMPLEADOS.SRHMAIN10_FINGRESO,
                 ZTMPMAIN10_EMPLEADOS.SRHMAIN10_FDEBAJA,
                 ZTMPMAIN10_EMPLEADOS.RFC,
                 ZTMPMAIN10_EMPLEADOS.CURP,
                 ZTMPMAIN10_EMPLEADOS.NSS,
                 ZTMPMAIN10_EMPLEADOS.SRHMAIN10_SALARIO_NOM,
                 ZTMPMAIN10_EMPLEADOS.SRHMAIN10_SALARIO_DIA,
                 ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_PERCEP,
                 ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_DEDUC,
                 ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_ISR,
                 ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_INCAP,
                 ZTMPMAIN10_EMPLEADOS.SRHNOMI02_TOT_HORAS
             FROM SRHNOMI01_CAB_SUELDOS
             INNER JOIN SOCSYST01_CAB_CLIENTES ON (SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
             INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01)
             INNER JOIN ZTMPMAIN10_EMPLEADOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = ZTMPMAIN10_EMPLEADOS.ID_SRHMAIN10)
             WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             ' AND ZTMPMAIN10_EMPLEADOS.USUARIO = ''' || CURRENT_USER || '''' ||
             ' AND SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM BETWEEN ''' || :PARAM_FECHADESDE || ''' AND ''' || :PARAM_FECHAHASTA || '''';

  SQLWHERE = '';
  IF (:PARAM_EMPLEADO != -1) THEN
    SQLWHERE = ' AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = ' || :PARAM_EMPLEADO;

  FOR EXECUTE STATEMENT :SQLUSER || :SQLWHERE
  INTO
      :RELA_SOCSYST01,
      :RELA_SRHNOMI01,
      :RELA_SRHMAIN10,
      :ID_SRHNOMI02,
      :EMPRESA,
      :EMPLEADO,
      :SRHMAIN10_FINGRESO,
      :SRHMAIN10_FDEBAJA,
      :RFC,
      :CURP,
      :NSS,
      :SRHMAIN10_SALARIO_NOM,
      :SRHMAIN10_SALARIO_DIA,
      :SRHNOMI02_TOT_PERCEP,
      :SRHNOMI02_TOT_DEDUC,
      :SRHNOMI02_TOT_ISR,
      :SRHNOMI02_TOT_INCAP,
      :SRHNOMI02_TOT_HORAS
  DO
  BEGIN
    IF (:PARAM_TIPO = 1) THEN
      FOR
        SELECT
            CAST('Percepciones' AS VARCHAR(15)),
            SRHMAIN11_DET_INGRESOS.RELA_SICCONT02,
            SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
            SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
            SRHNOMI03_DET_RETRIBUCIONES.SRHNOMI03_IMPORTE
        FROM SRHNOMI03_DET_RETRIBUCIONES
        INNER JOIN SRHMAIN11_DET_INGRESOS ON (SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHMAIN11 = SRHMAIN11_DET_INGRESOS.ID_SRHMAIN11)
        INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SRHMAIN11_DET_INGRESOS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN11_DET_INGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        WHERE SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHNOMI02 = :ID_SRHNOMI02

        UNION

        SELECT
            CAST('Deducciones' AS VARCHAR(15)),
            SRHMAIN12_DET_EGRESOS.RELA_SICCONT02,
            SICCONT72_MOV_EMPRESAS.SICCONT72_CODIGO,
            SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
            SRHNOMI04_DET_RETENCIONES.SRHNOMI04_IMPORTE
        FROM SRHNOMI04_DET_RETENCIONES
        INNER JOIN SRHMAIN12_DET_EGRESOS ON (SRHNOMI04_DET_RETENCIONES.RELA_SRHMAIN12 = SRHMAIN12_DET_EGRESOS.ID_SRHMAIN12)
        INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SRHMAIN12_DET_EGRESOS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
        INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN12_DET_EGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
        WHERE SRHNOMI04_DET_RETENCIONES.RELA_SRHNOMI02 = :ID_SRHNOMI02
        INTO
            :TIPO,
            :RELA_SICCONT02,
            :SICCONT72_CODIGO,
            :SICCONT02_DESCRI,
            :IMPORTE
      DO
      BEGIN
        SUSPEND;
      END
    ELSE
      SUSPEND;
  END
END
REP_PYMVENT24_SALDOS           

BEGIN
  SELECT SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO :EMPRESA;

  IF (:PARAM_CLIENTE != -1) THEN
    FOR
      SELECT
          PYMVENT24_CAB_CLIENTES.RELA_SOCSYST01,
          PYMVENT24_CAB_CLIENTES.RELA_SOCWFLO01,
          PYMVENT24_CAB_CLIENTES.ID_PYMVENT24,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          DNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_CREDITO,0)
      FROM PYMVENT24_CAB_CLIENTES
      WHERE PYMVENT24_CAB_CLIENTES.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT24_CAB_CLIENTES.ID_PYMVENT24 = :PARAM_CLIENTE
        AND PYMVENT24_CAB_CLIENTES.PYMVENT24_CREDITO > 0
      INTO
         :RELA_SOCSYST01,
         :RELA_SOCWFLO01,
         :ID_PYMVENT24,
         :CLIENTE,
         :CREDITO
    DO
    BEGIN
      VENTAS = 0;
      SALDO = 0;

      SELECT FIRST 1
         CAST(PYMVENT35_DET_INGRESOS.PYMVENT35_FAPL AS DATE),
         DNVL(PYMVENT35_DET_INGRESOS.PYMVENT35_IMPORTE,0.00)
      FROM PYMVENT35_DET_INGRESOS
      WHERE PYMVENT35_DET_INGRESOS.RELA_PYMVENT24 = :ID_PYMVENT24
      ORDER BY CAST(PYMVENT35_DET_INGRESOS.PYMVENT35_FAPL AS DATE) DESC
      INTO
         :ULTFECHA,
         :ULTPAGO;

      SELECT DNVL(SUM(PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL), 0.00)
      FROM PYMVENT20_CAB_TICKETS
      WHERE PYMVENT20_CAB_TICKETS.PYMVENT20_ACREDITO = 1
        AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = :ID_PYMVENT24
      INTO :VENTAS;

      IF (:VENTAS IS NULL) THEN
        VENTAS = 0;

      SELECT DNVL(SUM(PYMVENT35_DET_INGRESOS.PYMVENT35_IMPORTE),0.00)
      FROM PYMVENT35_DET_INGRESOS
      WHERE PYMVENT35_DET_INGRESOS.RELA_PYMVENT24 = :ID_PYMVENT24
      INTO :PAGOS;

      SALDO = VENTAS - PAGOS;

      SUSPEND;
    END
  ELSE
    FOR
      SELECT
          PYMVENT24_CAB_CLIENTES.RELA_SOCSYST01,
          PYMVENT24_CAB_CLIENTES.RELA_SOCWFLO01,
          PYMVENT24_CAB_CLIENTES.ID_PYMVENT24,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          DNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_CREDITO,0)
      FROM PYMVENT24_CAB_CLIENTES
      WHERE PYMVENT24_CAB_CLIENTES.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT24_CAB_CLIENTES.PYMVENT24_CREDITO > 0
      INTO
         :RELA_SOCSYST01,
         :RELA_SOCWFLO01,
         :ID_PYMVENT24,
         :CLIENTE,
         :CREDITO
    DO
    BEGIN
      VENTAS = 0;
      SALDO = 0;

      SELECT FIRST 1
         CAST(PYMVENT35_DET_INGRESOS.PYMVENT35_FAPL AS DATE),
         DNVL(PYMVENT35_DET_INGRESOS.PYMVENT35_IMPORTE,0.00)
      FROM PYMVENT35_DET_INGRESOS
      WHERE PYMVENT35_DET_INGRESOS.RELA_PYMVENT24 = :ID_PYMVENT24
      ORDER BY CAST(PYMVENT35_DET_INGRESOS.PYMVENT35_FAPL AS DATE) DESC
      INTO
         :ULTFECHA,
         :ULTPAGO;

      SELECT DNVL(SUM(PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL), 0.00)
      FROM PYMVENT20_CAB_TICKETS
      WHERE PYMVENT20_CAB_TICKETS.PYMVENT20_ACREDITO = 1
        AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = :ID_PYMVENT24
      INTO :VENTAS;

      IF (:VENTAS IS NULL) THEN
        VENTAS = 0;

      SELECT DNVL(SUM(PYMVENT35_DET_INGRESOS.PYMVENT35_IMPORTE),0.00)
      FROM PYMVENT35_DET_INGRESOS
      WHERE PYMVENT35_DET_INGRESOS.RELA_PYMVENT24 = :ID_PYMVENT24
      INTO :PAGOS;

      SALDO = VENTAS - PAGOS;

      SUSPEND;
    END
END
GRID_SECPLAN02_PAGOS_RELA      

DECLARE VARIABLE SECPLAN02_V_FORZOSO INTEGER; /* x */
DECLARE VARIABLE SECPLAN02_V_LADA VARCHAR(50); /* x */
DECLARE VARIABLE SECPLAN02_V_TELEFONO VARCHAR(50); /* x */
DECLARE VARIABLE SECPLAN02_V_NROCUENTA VARCHAR(100); /* X */
DECLARE VARIABLE SECPLAN02_V_NROCUENTAYA VARCHAR(100); /* X */
DECLARE VARIABLE SECPLAN02_V_YACLIENTE SMALLINT; /* X */
begin
    FOR SELECT
    CBO_SICINGR01.entidad,
    SECPLAN02_DET_PLANES.ID_SECPLAN02,
    SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_des,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
    SECPLAN01_CAB_SOLICITUDES.secplan01_docnro,
    SECPLAN02_DET_PLANES.SECPLAN02_FOLIO,
    SECPLAN02_DET_PLANES.SECPLAN02_IMPORTE,
    SECPLAN02_DET_PLANES.SECPLAN02_DEPOSITO,
    SECPLAN02_DET_PLANES.SECPLAN02_FAPL,
    cast(SECPLAN02_DET_PLANES.SECPLAN02_FINI as date),
    cast(SECPLAN02_DET_PLANES.SECPLAN02_FAPRO as date),
    SECPLAN02_DET_PLANES.secplan02_plazo,
    SECPLAN02_DET_PLANES.secplan02_forzoso,
    SECPLAN02_DET_PLANES.secplan02_adelanto,
    SECPLAN02_DET_PLANES.secplan02_nrocuenta,
    SECPLAN02_DET_PLANES.secplan02_nrocuentaya,
    SECPLAN02_DET_PLANES.secplan02_yacliente,
    snvl(SECPLAN02_DET_PLANES.secplan02_lada,''),
    snvl(SECPLAN02_DET_PLANES.secplan02_telefono,'')
    FROM SECPLAN21_DET_PLANES
    INNER JOIN SECPLAN02_DET_PLANES ON (SECPLAN21_DET_PLANES.RELA_SECPLAN02 = SECPLAN02_DET_PLANES.ID_SECPLAN02)
    INNER JOIN SECPLAN01_CAB_SOLICITUDES ON (SECPLAN02_DET_PLANES.RELA_SECPLAN01 = SECPLAN01_CAB_SOLICITUDES.ID_SECPLAN01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SECPLAN01_CAB_SOLICITUDES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    INNER JOIN CBO_SICINGR01 ON (SECPLAN01_CAB_SOLICITUDES.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (SECPLAN02_DET_PLANES.RELA_PYMINVE10_PLAN = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    where SECPLAN21_DET_PLANES.rela_secplan20 = :rela_secplan20
    into :entidad,
         :id_secplan02,
         :secplan02_tplan,
         :secplan02_plan,
         :secplan01_sfolio,
         :secplan02_folio,
         :secplan02_importe,
         :secplan02_deposito,
         :SECPLAN02_CREADO,
         :secplan02_fini,
         :secplan02_fapro,
         :SECPLAN02_PLAZO,
         :SECPLAN02_V_FORZOSO,
         :SECPLAN02_RENTAS,
         :SECPLAN02_V_NROCUENTA,
         :SECPLAN02_V_NROCUENTAYA,
         :SECPLAN02_V_YACLIENTE,
         :secplan02_v_lada,
         :secplan02_v_telefono
    do
    begin
        /* -------------------------------------------------------------------------------------------------------- */
        if (SECPLAN02_PLAZO = 1) then
            SECPLAN02_PLAZO = 12;
        else if (SECPLAN02_PLAZO > 1) then
            SECPLAN02_PLAZO = 6 * (SECPLAN02_PLAZO+1);
        /* -------------------------------------------------------------------------------------------------------- */
        if (SECPLAN02_V_FORZOSO = 0) then
            SECPLAN02_FORZOSO = 'Libre';
        else
            SECPLAN02_FORZOSO = 'Forzoso';
        /* -------------------------------------------------------------------------------------------------------- */
        SECPLAN02_ADELANTO = secplan02_importe * SECPLAN02_RENTAS;
        /* -------------------------------------------------------------------------------------------------------- */
        if (SECPLAN02_V_YACLIENTE = 0) then
        begin
            SECPLAN02_STATUS = 'Nuevo Cliente';
            SECPLAN02_NROCUENTA = SECPLAN02_V_NROCUENTA;
        end
        else
        begin
            SECPLAN02_STATUS = 'Cliente Existente';
            SECPLAN02_NROCUENTA = SECPLAN02_V_NROCUENTAYA;
        end
        /* -------------------------------------------------------------------------------------------------------- */
        if (secplan02_v_lada = '') then
            secplan02_v_lada = substr(secplan02_v_telefono,1,3);
        /* -------------------------------------------------------------------------------------------------------- */
        SECPLAN02_TELEFONO = '';
        secplan03_diferencia = null;

        for SELECT
        pyminve10_cab_productos.pyminve10_codigo,
        pyminve10_cab_productos.pyminve10_descripcion,
        secplan03_det_equipos.secplan03_factura,
        secplan03_det_equipos.secplan03_diferencia,
        secplan03_det_equipos.secplan03_telnvo,
        secplan03_det_equipos.secplan03_telnvo_serie,
        secplan03_det_equipos.secplan03_telnvo_chip
        FROM secplan03_det_equipos
        INNER JOIN pyminve10_cab_productos ON (pyminve10_cab_productos.id_pyminve10 = secplan03_det_equipos.rela_pyminve10)
        WHERE secplan03_det_equipos.rela_secplan02 = :id_secplan02
        AND snvl(secplan03_det_equipos.secplan03_telnvo_serie,'') <> ''
        and snvl(secplan03_det_equipos.secplan03_telnvo_chip,'') <> ''
        and snvl(secplan03_det_equipos.secplan03_factura, '') <> ''
        order by secplan03_det_equipos.secplan03_fapl desc
        into :pyminve10_codigo,
             :pyminve10_descripcion,
             :secplan03_factura,
             :secplan03_diferencia,
             :SECPLAN02_TELEFONO,
             :secplan03_telnvo_serie,
             :secplan03_telnvo_chip
        do
        begin
            break;
        end
        /* -------------------------------------------------------------------------------------------------------- */
        if (secplan03_diferencia is null) then
            secplan03_diferencia = 0;
        /* -------------------------------------------------------------------------------------------------------- */
        if (SECPLAN02_TELEFONO = '') then
            SECPLAN02_TELEFONO = secplan02_v_telefono;
        else
            SECPLAN02_TELEFONO = secplan02_v_lada || SECPLAN02_TELEFONO;
        /* -------------------------------------------------------------------------------------------------------- */
        SECPLAN02_TOTAL = secplan02_adelanto + secplan02_deposito + secplan03_diferencia;
        /* -------------------------------------------------------------------------------------------------------- */
        select
        max(SECPLAN04_DET_PAGOS.secplan04_total),
        sum(SECPLAN04_DET_PAGOS.secplan04_recibe),
        min(SECPLAN04_DET_PAGOS.secplan04_cambio),
        cast(max(SECPLAN04_DET_PAGOS.secplan04_fapl) as date)
        from SECPLAN04_DET_PAGOS
        where SECPLAN04_DET_PAGOS.rela_secplan02 = :id_secplan02
        into :secplan04_total,
             :secplan04_recibe,
             :secplan04_cambio,
             :secplan04_fapl;
        /* -------------------------------------------------------------------------------------------------------- */
        SELECT cast(max(SECPLAN20_CAB_CORTECAJA.SECPLAN20_FCORTE) as date)
        FROM SECPLAN20_CAB_CORTECAJA
        INNER JOIN SECPLAN21_DET_PLANES ON (SECPLAN20_CAB_CORTECAJA.ID_SECPLAN20 = SECPLAN21_DET_PLANES.RELA_SECPLAN20)
        where SECPLAN21_DET_PLANES.rela_secplan02 = :id_secplan02
        into :SECPLAN20_FCORTE;
        /* -------------------------------------------------------------------------------------------------------- */
        suspend;
    end
end
REP_PYMVENT20_APARTADOS        

DECLARE VARIABLE TMPADEUDO DECIMAL(15,2);
DECLARE VARIABLE ADEUDO_INCIAL DECIMAL(15,2);
BEGIN
   FOR
     SELECT
         PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
         SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
         SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
         PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
         (SELECT PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE
          FROM PYMVENT24_CAB_CLIENTES
          WHERE PYMVENT24_CAB_CLIENTES.ID_PYMVENT24 = PYMVENT20_CAB_TICKETS.RELA_PYMVENT24),
         PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL - PYMVENT20_cAB_TICKETS.PYMVENT20_DESCUENTOS
     FROM PYMVENT20_CAB_TICKETS
     INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT20_cAB_TICKETS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
     INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT20_cAB_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
     WHERE PYMVENT20_cAB_TICKETS.RELA_SOCSYST01 = :PARAM_SOCWFLO01
       AND PYMVENT20_cAB_TICKETS.PYMVENT20_CANCELADO = 0
       AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 IS NOT NULL
       AND PYMVENT20_CAB_TICKETS.ID_PYMVENT20 IN (SELECT PYMVENT21_DET_TICKETS.RELA_PYMVENT20
                                                  FROM PYMVENT21_DET_TICKETS
                                                  WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20
                                                      AND PYMVENT21_DET_TICKETS.RELA_PYMVENT21 IS NULL
                                                  GROUP BY PYMVENT21_DET_TICKETS.RELA_PYMVENT20
                                                  HAVING SUM(PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO) > 0)
     INTO
          :RELA_SOCSYST01,
          :EMPRESA,
          :SUCURSAL,
          :ID_PYMVENT20,
          :CLIENTE,
          :TOTAL
  DO
  BEGIN
      ADEUDO = 0;

      FOR
        SELECT
           PYMVENT21_DET_TICKETS.ID_PYMVENT21,
           PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO
        FROM PYMVENT21_DET_TICKETS
        WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = :ID_PYMVENT20
        INTO
            :ID_PYMVENT21,
            :ADEUDO_INCIAL
      DO
      BEGIN
        SELECT
            MAX(PYMVENT21_DET_TICKETS.RELA_PYMVENT20),
            MAX(CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE)),
            MIN(PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO)
        FROM PYMVENT21_DET_TICKETS
        WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT21 = :ID_PYMVENT21
        INTO
            :RELA_PYMVENT20,
            :FECHA,
            :TMPADEUDO;

        IF (TMPADEUDO IS NOT NULL) THEN
            ADEUDO = ADEUDO + TMPADEUDO;
        ELSE
            ADEUDO = ADEUDO + ADEUDO_INCIAL;
      END

      IF (ADEUDO != 0) THEN
          SUSPEND;
  END
END
VW_SRHNOMI01                   

BEGIN
  IF (:PARAM_FLAG = 1) THEN
    BEGIN
       FOR
         SELECT
            :PARAM_MARCA,
            SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01,
            SRHNOMI01_CAB_SUELDOS.RELA_MSGPOLI01,
            SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10,
            SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01,
            CAST('Actual' AS VARCHAR(12)),
            GRID_SRHMAIN10.ENTIDAD,
            SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_nom
        FROM SRHNOMI01_CAB_SUELDOS
        INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01)
        INNER JOIN GRID_SRHMAIN10 ON (GRID_SRHMAIN10.ID_SRHMAIN10 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10)
        WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
            AND SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_nom != 0
        INTO
            :MARCA,
            :RELA_SOCSYST01,
            :RELA_MSGPOLI01,
            :RELA_SRHMAIN10,
            :ID_SRHNOMI01,
            :TIPO,
            :EMPLEADO,
            :SALARIO
      DO
      BEGIN
         SELECT
             SICCONT70_MOV_EMPLEADOS.RELA_SICCONT02
         FROM SICCONT70_MOV_EMPLEADOS
         INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10)
         WHERE SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
            AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'SUELDO'
         INTO :RELA_SICCONT02_CARGO;

         SELECT
             SICCONT70_MOV_EMPLEADOS.RELA_SICCONT02
         FROM SICCONT70_MOV_EMPLEADOS
         INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10)
         WHERE SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
            AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
         INTO :RELA_SICCONT02_ABONO;

         SELECT
            DNVL(SUM(SRHNOMI03_DET_RETRIBUCIONES.SRHNOMI03_IMPORTE),0)
         FROM SRHNOMI03_DET_RETRIBUCIONES
         INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHNOMI02 = SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02)
         INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
         WHERE SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = :ID_SRHNOMI01
            AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
         INTO :RETRIBUCIONES;

         SELECT DNVL(SUM(SRHNOMI04_DET_RETENCIONES.SRHNOMI04_IMPORTE),0)
         FROM SRHNOMI04_DET_RETENCIONES
         INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI04_DET_RETENCIONES.RELA_SRHNOMI02 = SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02)
         INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
         WHERE SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = :ID_SRHNOMI01
            AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
         INTO :RETENCIONES;

         TOTAL = (SALARIO + RETRIBUCIONES) - RETENCIONES;

         IF (RELA_SICCONT02_CARGO != 0 AND RELA_SICCONT02_ABONO != 0) THEN
             SUSPEND;
      END
    END
  ELSE
    BEGIN
       FOR
         SELECT
            :PARAM_MARCA,
            SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01,
            SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10,
            SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01,
            CAST('Actual' AS VARCHAR(12)),
            GRID_SRHMAIN10.ENTIDAD,
            SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_nom
         FROM SRHNOMI01_CAB_SUELDOS
         INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01)
         INNER JOIN GRID_SRHMAIN10 ON (GRID_SRHMAIN10.ID_SRHMAIN10 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10)
         WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM > :PARAM_FECHAHASTA
            AND SRHNOMI02_DET_EMPLEADOS.srhnomi02_salario_nom != 0
         INTO
            :MARCA,
            :RELA_SOCSYST01,
            :RELA_SRHMAIN10,
            :ID_SRHNOMI01,
            :TIPO,
            :EMPLEADO,
            :SALARIO
       DO
       BEGIN
          SUSPEND;
       END
    END
END
VW_SRHNOMI01_ANTERIOR          

BEGIN
  FOR
    SELECT
        PRD_SRHNOMI01.MARCA,
        PRD_SRHNOMI01.RELA_SOCSYST01,
        PRD_SRHNOMI01.RELA_SRHMAIN10,
        MAX(PRD_SRHNOMI01.ID_SRHNOMI01),
        PRD_SRHNOMI01.TIPO,
        PRD_SRHNOMI01.EMPLEADO,
        PRD_SRHNOMI01.SALARIO
    FROM PRD_SRHNOMI01(:PARAM_EMPRESA,:PARAM_FECHADESDE,:PARAM_FECHAHASTA,:PARAM_MARCA)
    GROUP BY
        PRD_SRHNOMI01.MARCA,
        PRD_SRHNOMI01.RELA_SOCSYST01,
        PRD_SRHNOMI01.RELA_SRHMAIN10,
        PRD_SRHNOMI01.TIPO,
        PRD_SRHNOMI01.EMPLEADO,
        PRD_SRHNOMI01.SALARIO
    ORDER BY
        PRD_SRHNOMI01.TIPO DESC,
        PRD_SRHNOMI01.EMPLEADO ASC
    INTO
        :MARCA,
        :RELA_SOCSYST01,
        :RELA_SRHMAIN10,
        :ID_SRHNOMI01,
        :TIPO,
        :EMPLEADO,
        :SALARIO
  DO
  BEGIN
     RELA_SICCONT02_CARGO = 0;
     RELA_SICCONT02_ABONO = 0;
     RETRIBUCIONES = 0;
     RETENCIONES = 0;
     TOTAL = 0;

     SELECT
         SICCONT70_MOV_EMPLEADOS.RELA_SICCONT02
     FROM SICCONT70_MOV_EMPLEADOS
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10)
     WHERE SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
         AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'SUELDO'
         AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_EMPRESA
     INTO :RELA_SICCONT02_CARGO;

     SELECT
         SICCONT70_MOV_EMPLEADOS.RELA_SICCONT02
     FROM SICCONT70_MOV_EMPLEADOS
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10)
     WHERE SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
         AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
         AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_EMPRESA
     INTO :RELA_SICCONT02_ABONO;

     IF (:ID_SRHNOMI01 IS NOT NULL) THEN
     BEGIN
         SELECT
            DNVL(SUM(SRHNOMI03_DET_RETRIBUCIONES.SRHNOMI03_IMPORTE),0)
         FROM SRHNOMI03_DET_RETRIBUCIONES
         INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI03_DET_RETRIBUCIONES.RELA_SRHNOMI02 = SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02)
         INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
         WHERE SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = :ID_SRHNOMI01
            AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
         INTO
            :RETRIBUCIONES;

         SELECT DNVL(SUM(SRHNOMI04_DET_RETENCIONES.SRHNOMI04_IMPORTE),0)
         FROM SRHNOMI04_DET_RETENCIONES
         INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI04_DET_RETENCIONES.RELA_SRHNOMI02 = SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02)
         INNER JOIN SRHNOMI01_CAB_SUELDOS ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
         WHERE SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = :ID_SRHNOMI01
            AND SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
         INTO :RETENCIONES;

         TOTAL = (SALARIO + RETRIBUCIONES) - RETENCIONES;
     END

     --IF (RELA_SICCONT02_CARGO != 0 AND RELA_SICCONT02_ABONO != 0) THEN
         SUSPEND;
  END
END
REP_PYMINVE10_MAXMIN           

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  SELECT
      SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01,
      SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_SUCURSAL
  INTO
      :RELA_SOCWFLO01,
      :SUCURSAL;

  DELETE FROM ZTMPINVE30_MOVIMIENTOS
  WHERE ZTMPINVE30_MOVIMIENTOS.USUARIO = CURRENT_USER;

  INSERT INTO ZTMPINVE30_MOVIMIENTOS (ZTMPINVE30_MOVIMIENTOS.USUARIO, ZTMPINVE30_MOVIMIENTOS.RELA_SOCWFLO01, ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE10, ZTMPINVE30_MOVIMIENTOS.CANTIDAD)
      SELECT
          CURRENT_USER,
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
          SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD)
      FROM PYMINVE30_MOV_STOCK
      WHERE PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :RELA_SOCWFLO01
      GROUP BY
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE10;

  IF (PARAM_TIPO = 1) THEN
    BEGIN
       FOR
         SELECT
            PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_REORDER,
            ZTMPINVE30_MOVIMIENTOS.CANTIDAD
         FROM ZTMPINVE30_MOVIMIENTOS
         INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
         WHERE ZTMPINVE30_MOVIMIENTOS.USUARIO = CURRENT_USER
           AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
         INTO
            :ID_PYMINVE10,
            :CODIGO_PRODUCTO,
            :PRODUCTO,
            :STOCK,
            :REORDER,
            :STOCK_ACTUAL
       DO
       BEGIN
           DIFERENCIA = 0;

           IF (STOCK_ACTUAL = 0) THEN
              DIFERENCIA = REORDER;
           ELSE
              DIFERENCIA = REORDER - STOCK_ACTUAL;

           SUSPEND;
       END
    END
  ELSE
    BEGIN
       FOR
         SELECT
            PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX,
            ZTMPINVE30_MOVIMIENTOS.CANTIDAD,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX - ZTMPINVE30_MOVIMIENTOS.CANTIDAD
         FROM ZTMPINVE30_MOVIMIENTOS
         INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (ZTMPINVE30_MOVIMIENTOS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
         WHERE ZTMPINVE30_MOVIMIENTOS.USUARIO = CURRENT_USER
           AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
           AND ZTMPINVE30_MOVIMIENTOS.CANTIDAD > PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX
         INTO
            :ID_PYMINVE10,
            :CODIGO_PRODUCTO,
            :PRODUCTO,
            :STOCK,
            :STOCK_ACTUAL,
            :DIFERENCIA
       DO
       BEGIN
           SUSPEND;
       END
    END
END
GRID_CFDI_ALL_SISTEMAS         

begin
    if (rela_socsyst01 <> -1) then
    begin
        FOR SELECT DISTINCT
        VW_CFDI_ALL_SISTEMAS.id,
        VW_CFDI_ALL_SISTEMAS.organizacion,
        VW_CFDI_ALL_SISTEMAS.beneficiario,
        VW_CFDI_ALL_SISTEMAS.docnro,
        VW_CFDI_ALL_SISTEMAS.docfec,
        VW_CFDI_ALL_SISTEMAS.doctot,
        VW_CFDI_ALL_SISTEMAS.folio,
        VW_CFDI_ALL_SISTEMAS.fecha,
        VW_CFDI_ALL_SISTEMAS.cancelado,
        VW_CFDI_ALL_SISTEMAS.uuid,
        VW_CFDI_ALL_SISTEMAS.uuid_fecha
        FROM VW_CFDI_ALL_SISTEMAS
        WHERE VW_CFDI_ALL_SISTEMAS.RELA_SOCSYST01 = :rela_socsyst01
        AND VW_CFDI_ALL_SISTEMAS.tipo = :tipo
        and VW_CFDI_ALL_SISTEMAS.docfec between :FECHA_DESDE and :FECHA_HASTA

        INTO :id, 
             :organizacion,
             :beneficiario,
             :docnro,
             :docfec,
             :doctot,
             :folio,
             :fecha,
             :cancelado,
             :uuid,
             :uuid_fecha
        do
        begin
            suspend;
        end
    end
end
REP_MSGPOLI23_ALL              

BEGIN
  SELECT CBO_CLIENTES_EMPRESAS.ENTIDAD
  FROM CBO_CLIENTES_EMPRESAS
  WHERE ID_SOCSYST01 = :EMPRESA
  INTO :ENTIDAD;

  SELECT CBO_MESES.SOCSYST10_FILTRO_DES
  FROM   CBO_MESES
  WHERE CBO_MESES.SOCSYST10_CODIGO = :MES
  INTO :MESES;

  FOR
    SELECT
        GRID_MSGPOLI23.RELA_MSGPOLI20_AUX,
        GRID_MSGPOLI23.RELA_SOCSYST01,
        GRID_MSGPOLI23.CODIGO_BITACORA,
        GRID_MSGPOLI23.DESCRI_BITACORA,
        GRID_MSGPOLI23.RELA_MSGPOLI01,
        GRID_MSGPOLI23.RELA_MSGPOLI20,
        GRID_MSGPOLI23.RELA_SOCSYST10,
        GRID_MSGPOLI23.ID_MSGPOLI23,
        GRID_MSGPOLI23.MSGPOLI23_ANO,
        GRID_MSGPOLI23.MSGPOLI23_MES,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_ACUMU,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_RING,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_REGR,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_CARGO,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_ABONO,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_INGRESOS,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_SING,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_EGRESOS,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_SEGR,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_AFAVOR,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_SINMOD,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_USUARIO,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE_PERDIDA,
        GRID_MSGPOLI23.MSGPOLI23_NOTAS,
        GRID_MSGPOLI23.RELA_SOCSYST10_TABLA,
        GRID_MSGPOLI23.MSGPOLI23_DBLCUOT,
        GRID_MSGPOLI23.MSGPOLI23_DBLPORC,
        GRID_MSGPOLI23.MSGPOLI23_DBLLINF,
        GRID_MSGPOLI23.MSGPOLI23_DBLLSUP,
        GRID_MSGPOLI23.MSGPOLI23_FAPL,
        UPPER(GRID_MSGPOLI23.MSGPOLI24_DESCRI),
        GRID_MSGPOLI23.MSGPOLI24_CODEXT,
        GRID_MSGPOLI23.MSGPOLI23_ULT_ANO,
        GRID_MSGPOLI23.MSGPOLI23_ULT_MES,
        GRID_MSGPOLI23.msgpoli23_coeficiente
    FROM GRID_MSGPOLI23
    where grid_msgpoli23.rela_socsyst01 = :empresa
          and grid_msgpoli23.msgpoli23_ano = :ano
          and grid_msgpoli23.msgpoli23_mes = :mes
          and grid_msgpoli23.codigo_bitacora = 'MODIFICADO'

    INTO :RELA_MSGPOLI20_AUX,
         :RELA_SOCSYST01,
         :CODIGO_BITACORA,
         :DESCRI_BITACORA,
         :RELA_MSGPOLI01,
         :RELA_MSGPOLI20,
         :RELA_SOCSYST10,
         :ID_MSGPOLI23,
         :MSGPOLI23_ANO,
         :MSGPOLI23_MES,
         :MSGPOLI23_IMPORTE,
         :MSGPOLI23_IMPORTE_ACUMU,
         :MSGPOLI23_IMPORTE_RING,
         :MSGPOLI23_IMPORTE_REGR,
         :MSGPOLI23_IMPORTE_CARGO,
         :MSGPOLI23_IMPORTE_ABONO,
         :MSGPOLI23_IMPORTE_INGRESOS,
         :MSGPOLI23_IMPORTE_SING,
         :MSGPOLI23_IMPORTE_EGRESOS,
         :MSGPOLI23_IMPORTE_SEGR,
         :MSGPOLI23_IMPORTE_AFAVOR,
         :MSGPOLI23_IMPORTE_SINMOD,
         :MSGPOLI23_IMPORTE_USUARIO,
         :MSGPOLI23_IMPORTE_PERDIDA,
         :MSGPOLI23_NOTAS,
         :RELA_SOCSYST10_TABLA,
         :MSGPOLI23_DBLCUOT,
         :MSGPOLI23_DBLPORC,
         :MSGPOLI23_DBLLINF,
         :MSGPOLI23_DBLLSUP,
         :MSGPOLI23_FAPL,
         :MSGPOLI24_DESCRI,
         :MSGPOLI24_CODEXT,
         :MSGPOLI23_ULT_ANO,
         :MSGPOLI23_ULT_MES,
         :msgpoli23_coeficiente
  DO
  BEGIN
    SUSPEND;
  END
END
REP_MSGPOLI23_IETU             

DECLARE VARIABLE ISR_RETENIDO DOUBLE PRECISION;
DECLARE VARIABLE ISR_PROVISIONAL DOUBLE PRECISION;
BEGIN
  IMPORTEFINAL = :IMPORTE;
  FOR
    SELECT
        GRID_MSGPOLI23.MSGPOLI24_DESCRI,
        GRID_MSGPOLI23.MSGPOLI23_IMPORTE
    FROM GRID_MSGPOLI23
    WHERE GRID_MSGPOLI23.RELA_SOCSYST01 = :EMPRESA
        AND GRID_MSGPOLI23.MSGPOLI23_ANO = :ANO
        AND GRID_MSGPOLI23.MSGPOLI23_MES = :MES
        AND GRID_MSGPOLI23.CODIGO_BITACORA = 'MODIFICADO'
        AND GRID_MSGPOLI23.RELA_MSGPOLI20_AUX = :MSGPOLI20
    INTO
         :DESCRIPCION,
         :PAGO
  DO
  BEGIN
    IF (PAGO < IMPORTEFINAL) THEN
        IMPORTEFINAL = IMPORTEFINAL - PAGO;
    ELSE
        BEGIN
            PAGO = IMPORTEFINAL;
            IMPORTEFINAL = 0;
        END
    SUSPEND;
  END

  FOR
    SELECT
        MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_DESCRI,
        MSGPOLI36_MOV_ACREDITAMIENTO.MSGPOLI36_IMPORTE,
        MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_ACTIVIDAD
    FROM MSGPOLI25_DET_CONCEPTOS
    INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = MSGPOLI25_DET_CONCEPTOS.RELA_MSGPOLI24)
    INNER JOIN MSGPOLI36_MOV_ACREDITAMIENTO ON (MSGPOLI36_MOV_ACREDITAMIENTO.RELA_MSGPOLI25 = MSGPOLI25_DET_CONCEPTOS.ID_MSGPOLI25)
    INNER JOIN MSGPOLI35_DET_PAGO ON (MSGPOLI36_MOV_ACREDITAMIENTO.RELA_MSGPOLI35 = MSGPOLI35_DET_PAGO.ID_MSGPOLI35)
    INNER JOIN MSGPOLI23_DET_BITACORA ON (MSGPOLI35_DET_PAGO.RELA_MSGPOLI23 = MSGPOLI23_DET_BITACORA.ID_MSGPOLI23)
    WHERE MSGPOLI25_DET_CONCEPTOS.RELA_SOCSYST01 = :EMPRESA
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :ANO
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES= :MES
        AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT LIKE 'MEX-F-IETU%'

    UNION
    
    SELECT
        MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_DESCRI,
        CAST(0 AS DOUBLE PRECISION),
        MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_ACTIVIDAD
    FROM MSGPOLI25_DET_CONCEPTOS
    INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = MSGPOLI25_DET_CONCEPTOS.RELA_MSGPOLI24)
    WHERE MSGPOLI25_DET_CONCEPTOS.ID_MSGPOLI25 NOT IN (SELECT MSGPOLI36_MOV_ACREDITAMIENTO.RELA_MSGPOLI25
                                                       FROM MSGPOLI36_MOV_ACREDITAMIENTO)
      AND MSGPOLI25_DET_CONCEPTOS.RELA_SOCSYST01 = :EMPRESA
      AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT LIKE 'MEX-F-IETU%'
    INTO
        :DESCRIPCION,
        :PAGO,
        :ACTIVIDAD
  DO
  BEGIN
    IF(ACTIVIDAD = 0) THEN
        IMPORTEFINAL = IMPORTEFINAL + PAGO;
    ELSE
        BEGIN
            IF (PAGO < IMPORTEFINAL) THEN
                IMPORTEFINAL = IMPORTEFINAL - PAGO;
            ELSE
                BEGIN
                    PAGO = IMPORTEFINAL;
                    IMPORTEFINAL = 0;
                END
        END
    SUSPEND;
  END

  SELECT
      SUM(GRID_MSGPOLI23.MSGPOLI23_IMPORTE),
      SUM(GRID_MSGPOLI23.MSGPOLI23_IMPORTE_RING)
  FROM GRID_MSGPOLI23
  WHERE GRID_MSGPOLI23.MSGPOLI24_CODEXT LIKE 'MEX-F-ISR%'
    AND (GRID_MSGPOLI23.RELA_SOCSYST01 = :EMPRESA
         AND GRID_MSGPOLI23.MSGPOLI23_ANO = :ANO
         AND GRID_MSGPOLI23.MSGPOLI23_MES <= :MES
         AND GRID_MSGPOLI23.CODIGO_BITACORA = 'MODIFICADO')
    OR GRID_MSGPOLI23.MSGPOLI24_CODEXT LIKE 'MEX-E-ITN'
    AND (GRID_MSGPOLI23.RELA_SOCSYST01 = :EMPRESA
         AND GRID_MSGPOLI23.MSGPOLI23_ANO = :ANO
         AND GRID_MSGPOLI23.MSGPOLI23_MES <= :MES
         AND GRID_MSGPOLI23.CODIGO_BITACORA = 'MODIFICADO')
  INTO
     :ISR_PROVISIONAL,
     :ISR_RETENIDO;

  DESCRIPCION = 'ACREDITAMIENTO DE PAGOS PROVISIONALES DEL ISR ENTERADOS ANTE OFICINAS AUTORIZADAS';
  PAGO = ISR_PROVISIONAL;

  IF (PAGO < IMPORTEFINAL) THEN
        IMPORTEFINAL = IMPORTEFINAL - PAGO;
    ELSE
        BEGIN
            PAGO = IMPORTEFINAL;
            IMPORTEFINAL = 0;
        END

  SUSPEND;

  SELECT
      SUM(GRID_MSGPOLI23.MSGPOLI23_IMPORTE_RING)
  FROM GRID_MSGPOLI23
  WHERE GRID_MSGPOLI23.MSGPOLI24_CODEXT LIKE 'MEX-F-ISR%'
    AND GRID_MSGPOLI23.RELA_SOCSYST01 = :EMPRESA
    AND GRID_MSGPOLI23.MSGPOLI23_ANO = :ANO
    AND GRID_MSGPOLI23.MSGPOLI23_MES <= :MES
    AND GRID_MSGPOLI23.CODIGO_BITACORA = 'MODIFICADO'
  INTO
     :ISR_RETENIDO;

  DESCRIPCION = 'ACREDITAMIENTO DEL ISR RETENIDO';
  PAGO = ISR_RETENIDO;

  IF (PAGO < IMPORTEFINAL) THEN
        IMPORTEFINAL = IMPORTEFINAL - PAGO;
    ELSE
        BEGIN
            PAGO = IMPORTEFINAL;
            IMPORTEFINAL = 0;
        END

  SUSPEND;

  DESCRIPCION = 'PAGOS PROVISIONALES DEL IETU EFECTUADOS CON ANTERIORIDAD';

  IF (MES = 1) THEN
    PAGO = 0;
  ELSE
    BEGIN
        SELECT MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_ACUMU
        FROM MSGPOLI23_DET_BITACORA
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
        INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI20_CAB_IMPUESTOS.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
        WHERE MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01 = :EMPRESA
            AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :ANO
            AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :MES-1
            AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
            AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-IETU'
        INTO
            :PAGO;
    END

  IMPORTEFINAL = IMPORTEFINAL - PAGO;

  IF (IMPORTEFINAL < 0) THEN
    IMPORTEFINAL = 0;

  SUSPEND;
END
REP_SICEGRE01_EMPRESA          

BEGIN
   SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
   FROM  CBO_CLIENTES_EMPRESAS_ALL
   WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :EMPRESA
   INTO
        :ENTIDAD;

  FOR
    SELECT
        GRID_SICCONT75_CTAS.SICCONT02_CODEXT,
        GRID_SICCONT75_CTAS.SICCONT02_DESCRI,
        GRID_SICCONT75_CTAS.RELA_SOCSYST01,
        CBO_SICEGRE01.ENTIDAD
    FROM CBO_SICEGRE01
       INNER JOIN GRID_SICCONT75_CTAS ON (CBO_SICEGRE01.ID_SICEGRE01 = GRID_SICCONT75_CTAS.RELA_SICEGRE01)
    WHERE  GRID_SICCONT75_CTAS.RELA_SOCSYST01 = :EMPRESA
    INTO :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :RELA_SOCSYST01,
         :PROVEEDOR
  DO
  BEGIN
    SUSPEND;
  END
END
PRD_SRHMAIN12                  

BEGIN
    IF (PARAM_EMPLEADO = -1) THEN
        BEGIN
            FOR
              SELECT
                1 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                :PARAM_EMPLEADO,
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SICCONT72_MOV_EMPRESAS
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'RETEN'
                AND SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
              INTO
                  :MARCA,
                  :RELA_SOCSYST01,
                  :RELA_SICCONT02,
                  :RELA_SRHMAIN10,
                  :RELA_SICCONT72,
                  :SICCONT02_DESCRI,
                  :SICCONT02_CODEXT,
                  :siccont72_codigo
            DO
            BEGIN
                DEPENDENCIA = -1;

                SELECT FIRST 1 SRHNOMI04_DET_RETENCIONES.RELA_SRHMAIN12
                FROM SRHNOMI04_DET_RETENCIONES
                INNER JOIN SRHMAIN12_DET_EGRESOS ON (SRHNOMI04_DET_RETENCIONES.RELA_SRHMAIN12 = SRHMAIN12_DET_EGRESOS.ID_SRHMAIN12)
                WHERE SRHMAIN12_DET_EGRESOS.RELA_SICCONT72 = :RELA_SICCONT72
                INTO DEPENDENCIA;

                IF (:DEPENDENCIA IS NULL) THEN
                  DEPENDENCIA = -1;

                SUSPEND;
            END
        END
    ELSE
        BEGIN
            FOR
              SELECT
                0 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                CAST(NULL AS BIGINT),
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                CAST(NULL AS BIGINT),
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SICCONT72_MOV_EMPRESAS
              INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'RETEN'
                AND SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
                AND SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 NOT IN (SELECT SRHMAIN12_DET_EGRESOS.RELA_SICCONT02
                                                                  FROM SRHMAIN12_DET_EGRESOS
                                                                  WHERE SRHMAIN12_DET_EGRESOS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
                                                                    AND SRHMAIN12_DET_EGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)

              UNION

              SELECT
                1 MARCA,
                SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01,
                SICCONT72_MOV_EMPRESAS.RELA_SICCONT02,
                SRHMAIN12_DET_EGRESOS.RELA_SRHMAIN10,
                SICCONT72_MOV_EMPRESAS.ID_SICCONT72,
                SRHMAIN12_DET_EGRESOS.ID_SRHMAIN12,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
                SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
                SICCONT72_MOV_EMPRESAS.siccont72_codigo
              FROM SRHMAIN12_DET_EGRESOS
              INNER JOIN SICCONT72_MOV_EMPRESAS ON (SRHMAIN12_DET_EGRESOS.RELA_SICCONT72 = SICCONT72_MOV_EMPRESAS.ID_SICCONT72)
              INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (SICCONT72_MOV_EMPRESAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
              WHERE SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :PARAM_EMPRESA
                AND SRHMAIN12_DET_EGRESOS.RELA_SRHMAIN10 = :PARAM_EMPLEADO
              INTO
                  :MARCA,
                  :RELA_SOCSYST01,
                  :RELA_SICCONT02,
                  :RELA_SRHMAIN10,
                  :RELA_SICCONT72,
                  :ID_SRHMAIN12,
                  :SICCONT02_DESCRI,
                  :SICCONT02_CODEXT,
                  :siccont72_codigo
            DO
            BEGIN
                DEPENDENCIA = -1;

                SELECT FIRST 1 SRHNOMI04_DET_RETENCIONES.RELA_SRHMAIN12
                FROM SRHNOMI04_DET_RETENCIONES
                INNER JOIN SRHMAIN12_DET_EGRESOS ON (SRHNOMI04_DET_RETENCIONES.RELA_SRHMAIN12 = SRHMAIN12_DET_EGRESOS.ID_SRHMAIN12)
                WHERE SRHMAIN12_DET_EGRESOS.RELA_SICCONT72 = :RELA_SICCONT72
                INTO DEPENDENCIA;

                IF (:DEPENDENCIA IS NULL) THEN
                  DEPENDENCIA = -1;

                IF (:RELA_SRHMAIN10 IS NULL) THEN
                    RELA_SRHMAIN10 = :PARAM_EMPLEADO;
                SUSPEND;
            END
        END
END
SOC$DB_FIELDSNULL              

DECLARE VARIABLE TABLA_SQL VARCHAR(1000);
begin
    FOR select
    RDB$RELATION_FIELDS.rdb$field_name,
    RDB$RELATION_FIELDS.rdb$relation_name
    from RDB$RELATION_FIELDS
    where exists (
                     SELECT RDB$RELATION_NAME
                     FROM RDB$RELATIONS
                     WHERE RDB$SYSTEM_FLAG = 0
                     and RDB$RELATION_NAME = RDB$RELATION_FIELDS.rdb$relation_name
                     AND RDB$RELATION_NAME NOT IN (SELECT RDB$VIEW_NAME FROM RDB$VIEW_RELATIONS)
                  )
    and (RDB$RELATION_FIELDS.rdb$null_flag = 1
    or exists (
                 select RDB$FIELDS.rdb$field_name
                 from RDB$FIELDS
                 where RDB$FIELDS.rdb$field_name = RDB$RELATION_FIELDS.rdb$field_source
                 and RDB$FIELDS.rdb$null_flag = 1)
              )

    INTO :FIELD,
         :TABLE_NAME
    DO
    BEGIN
        if (:tabla is not null) then
        begin
            if (TABLE_NAME = tabla) then
            begin
                if (accion = 1) then
                begin
                    CONTIENE_NULL = 0;
                    TABLA_SQL = 'SELECT count(*) FROM ' || :table_name || ' where ' || :field || ' is null';

                    EXECUTE STATEMENT :TABLA_SQL INTO :CONTIENE_NULL;
                end
                suspend;
            end
        end
        else
        begin
            if (accion = 1) then
            begin
                CONTIENE_NULL = 0;
                TABLA_SQL = 'SELECT count(*) FROM ' || :table_name || ' where ' || :field || ' is null';

                EXECUTE STATEMENT :TABLA_SQL INTO :CONTIENE_NULL;
            end
            suspend;
        end
    END

end
SOC$DB_GENERATORS              

DECLARE VARIABLE TABLA_SOLA SMALLINT;
DECLARE VARIABLE TABLA_SQL VARCHAR(1000);
begin
    for SELECT RDB$RELATION_NAME
    FROM RDB$RELATIONS
    WHERE RDB$SYSTEM_FLAG = 0 AND
    RDB$RELATION_NAME NOT IN (SELECT RDB$VIEW_NAME
    FROM RDB$VIEW_RELATIONS)
    INTO :TABLE_NAME
    DO
    BEGIN
        TABLA_SQL = 'SELECT COUNT(*) FROM ' || :TABLE_NAME;
        EXECUTE STATEMENT :TABLA_SQL INTO :TABLE_ROWCOUNT;
        TABLA_SOLA = 0;
        MAXID = 0;
        TABLE_NAME = strreplace(TABLE_NAME,' ','');
        TRIGGERNAME = '';
        ID = '';
        for select
        RDB$DEPENDENCIES.rdb$field_name,
        RDB$DEPENDENCIES.rdb$dependent_name
        from RDB$DEPENDENCIES
        where RDB$DEPENDENCIES.rdb$depended_on_name = :TABLE_NAME
        and RDB$DEPENDENCIES.rdb$field_name like 'ID_%'
        and RDB$DEPENDENCIES.rdb$dependent_name like 'TID_%'
        INTO :ID, :TRIGGERNAME
        DO
        begin
            ALIAS = '';
            ID = strreplace(ID,' ','');
            MAXID = 0;
            if (substr(ID,4,15) = substr(TRIGGERNAME,5,15)) then
            BEGIN
                ALIAS = STRREPLACE(substr(ID,4,15),' ','');
                EXECUTE STATEMENT 'Select max(' || :ID || ') from ' || :TABLE_NAME
                INTO :MAXID;
                MAXID = INVL(MAXID,0);

                if (ACCION = 0) then
                    EXECUTE STATEMENT 'SET GENERATOR SID_' || :ALIAS || ' TO ' || :MAXID;

                TABLA_SOLA = 1;
                suspend;
            END
        end

        if (TABLA_SOLA = 0) then
            suspend;
    END
end
JAM$_CROSSTAB_DESCRI           

DECLARE VARIABLE CORDEN VARCHAR(10);
begin
    corden = orden;
    if (strlen(corden) = 1) then
        corden = '0' || corden;
        DESCRIPCION = '<'|| corden || '>' || DESCRI;
    suspend;
end
REP_MSGPOLI01_SICSP            

BEGIN
    TIPO = :TIPOMOV ;

    SELECT CBO_CLIENTES_EMPRESAS.ID_SOCSYST01,
           CBO_CLIENTES_EMPRESAS.ENTIDAD
    FROM CBO_CLIENTES_EMPRESAS
    WHERE  CBO_CLIENTES_EMPRESAS.ID_SOCSYST01 =:EMPRESA
    INTO :RELA_SOCSYST01,
         :ENTIDAD ;

   SELECT CBO_MESES.socsyst10_filtro_des
    FROM CBO_MESES
    WHERE  CBO_MESES.socsyst10_codigo =:MES
    INTO :MESES  ;
    SUSPEND;

END
CBO_ANOS                       

begin
  ID = 1981;
  ANO = 1981;
  WHILE(ANO <= 2040) DO
  BEGIN
    ID = ID + 1;
    ANO = ID;
    suspend;
  END
end
JAM$_COPYARBOL_MSGPOLI28       

DECLARE VARIABLE ID_MSGPOLI28 BIGINT;
DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RELA_SICCONT02DEPRE BIGINT;
DECLARE VARIABLE MSGPOLI28_DESCRI VARCHAR(100);
DECLARE VARIABLE MSGPOLI28_DEPRECIACION DOUBLE PRECISION;
DECLARE VARIABLE RELA_SICCONT02_TARJET BIGINT;
DECLARE VARIABLE ULTID BIGINT;
begin
    NOK = 0;

    FOR SELECT
    GRID_MSGPOLI28.id_msgpoli28,
    GRID_MSGPOLI28.rela_siccont02,
    GRID_MSGPOLI28.msgpoli28_descri,
    GRID_MSGPOLI28.msgpoli28_depreciacion
    FROM GRID_MSGPOLI28
    WHERE GRID_MSGPOLI28.rela_socsyst01 = :source
    INTO :id_msgpoli28,
         :rela_siccont02depre,
         :msgpoli28_descri,
         :msgpoli28_depreciacion
    do
    begin
        NOK = NOK + 1;
        RELA_SICCONT02_TARJET = NULL;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :rela_siccont02depre)
        into :RELA_SICCONT02_TARJET;

        if (RELA_SICCONT02_TARJET IS NOT NULL) then
        BEGIN
            insert into msgpoli28_cab_activosporcen(msgpoli28_cab_activosporcen.rela_siccont02,
                                                    msgpoli28_cab_activosporcen.msgpoli28_descri,
                                                    msgpoli28_cab_activosporcen.msgpoli28_depreciacion)
            values(:RELA_SICCONT02_TARJET,
                   :msgpoli28_descri,
                   :msgpoli28_depreciacion);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :ultid;

            for select
            msgpoli29_det_activosporcen.rela_siccont02
            from msgpoli29_det_activosporcen
            where msgpoli29_det_activosporcen.rela_msgpoli28 = :id_msgpoli28
            into :rela_siccont02
            do
            begin
                select rela_siccont02_tarjet
                from jam$_copyarbol_iguales(:target, :rela_siccont02)
                into :RELA_SICCONT02_TARJET;

                if (RELA_SICCONT02_TARJET IS NOT NULL) then
                BEGIN
                    insert into msgpoli29_det_activosporcen(msgpoli29_det_activosporcen.rela_msgpoli28,
                                                            msgpoli29_det_activosporcen.rela_siccont02,
                                                            msgpoli29_det_activosporcen.rela_socsyst01)
                    values(:ultid, :RELA_SICCONT02_TARJET, :target);
                END
            end
        END


    end

    suspend;
end
TMP_ACTUALIZA_MENU_REPORTES    

DECLARE VARIABLE RELA_SOCUSUA05 INTEGER;
DECLARE VARIABLE ID_SOCUSUA07 INTEGER;
DECLARE VARIABLE RELA_SOCSYST04 INTEGER;
begin
    FOR SELECT
    socusua07_dep_reportes.rela_socusua05,
    socusua07_dep_reportes.id_socusua07
    FROM socusua07_dep_reportes
    into :rela_socusua05,
         :id_socusua07
    DO
    BEGIN
        SELECT socusua05_dep_funciones.rela_socsyst04
        FROM socusua05_dep_funciones
        WHERE socusua05_dep_funciones.id_socusua05 = :rela_socusua05
        INTO :rela_socsyst04;

        UPDATE socusua07_dep_reportes SET socusua07_dep_reportes.rela_socsyst04 = :rela_socsyst04
        WHERE socusua07_dep_reportes.id_socusua07 = :id_socusua07;
    END

  suspend;
end
JAM$_MSGPOLI01_PROVEEDORES_IMP 

DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RELA_SICCONT02X BIGINT;
DECLARE VARIABLE IMPORTE_TIPO VARCHAR(3);
DECLARE VARIABLE IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI09_PORCENTAJE DOUBLE PRECISION;
begin
    IMPORTE_IVA15 = 0;
    IMPORTE_IVA151 = 0;

    IMPORTE_IVA10 = 0;
    IMPORTE_IVA101 = 0;

    IMPORTE_IVA15NA = 0;
    IMPORTE_IVA10NA = 0;

    IMPORTE_IVAEXC = 0;
    IMPORTE_IVA0 = 0;

    IMPORTE_IVARET = 0;
    IMPORTE_IVADEV = 0;

    for select
    ztmppoli01_proveedores.rela_siccont02,
    ztmppoli01_proveedores.importe_tipo,
    ztmppoli01_proveedores.importe
    from ztmppoli01_proveedores
    where ztmppoli01_proveedores.ztmppoli01_user = current_user
    and ztmppoli01_proveedores.id_sicegre01 = :id_sicegre01
    into :rela_siccont02,
         :importe_tipo,
         :importe
    do
    begin
        if (importe is null) then
            importe = 0;


        if ((importe_tipo = 'III') and (importe <> 0)) then
            begin
                rela_siccont02x = null;
                FOR SELECT first 2 grid_msgpoli09.rela_siccont02, grid_msgpoli09.msgpoli09_porcentaje
                FROM grid_msgpoli09
                WHERE grid_msgpoli09.rela_socsyst01 = :EMPRESA
                AND ((grid_msgpoli09.msgpoli09_porcentaje = 15) or (grid_msgpoli09.msgpoli09_porcentaje = 16))
                and GRID_MSGPOLI09.msgpoli09_actividad = 1
                and GRID_MSGPOLI09.socsyst10_codigo_tipo = 'ACREDITA'
                AND GRID_MSGPOLI09.rela_siccont02 = :rela_siccont02
                INTO :rela_siccont02x, msgpoli09_porcentaje
                DO
                BEGIN
                    if (msgpoli09_porcentaje = 16) then
                        IMPORTE_IVA15 = IMPORTE_IVA15 + ((importe / msgpoli09_porcentaje) * 100);
                    else
                        IMPORTE_IVA151 = IMPORTE_IVA151 + ((importe / msgpoli09_porcentaje) * 100);
                END

                rela_siccont02x = null;
                FOR SELECT first 2 grid_msgpoli09.rela_siccont02, grid_msgpoli09.msgpoli09_porcentaje
                FROM grid_msgpoli09
                WHERE grid_msgpoli09.rela_socsyst01 = :EMPRESA
                AND ((grid_msgpoli09.msgpoli09_porcentaje = 10) or (grid_msgpoli09.msgpoli09_porcentaje = 11))
                and GRID_MSGPOLI09.msgpoli09_actividad = 1
                and GRID_MSGPOLI09.socsyst10_codigo_tipo = 'ACREDITA'
                AND GRID_MSGPOLI09.rela_siccont02 = :rela_siccont02
                INTO :rela_siccont02x, msgpoli09_porcentaje
                DO
                BEGIN
                    if (msgpoli09_porcentaje = 11) then
                        IMPORTE_IVA10 = IMPORTE_IVA10 + ((importe / msgpoli09_porcentaje) * 100);
                    else
                        IMPORTE_IVA101 = IMPORTE_IVA101 + ((importe / msgpoli09_porcentaje) * 100);
                END
            end

        if ((importe_tipo = 'EXT') and (importe <> 0)) then
            begin
                rela_siccont02x = null;
                SELECT grid_msgpoli09.rela_siccont02
                FROM grid_msgpoli09
                WHERE grid_msgpoli09.rela_socsyst01 = :EMPRESA
                AND grid_msgpoli09.msgpoli09_porcentaje = -1
                and GRID_MSGPOLI09.msgpoli09_actividad = 1
                and GRID_MSGPOLI09.socsyst10_codigo_tipo = 'ACREDITA'
                AND GRID_MSGPOLI09.rela_siccont02 = :rela_siccont02
                INTO :rela_siccont02x;

                if (rela_siccont02x is not null) then
                    IMPORTE_IVAEXC = IMPORTE_IVAEXC + (importe);
                else
                    begin
                        rela_siccont02x = null;
                        SELECT grid_msgpoli09.rela_siccont02
                        FROM grid_msgpoli09
                        WHERE grid_msgpoli09.rela_socsyst01 = :EMPRESA
                        AND grid_msgpoli09.msgpoli09_porcentaje = 0
                        and GRID_MSGPOLI09.msgpoli09_actividad = 1
                        and GRID_MSGPOLI09.socsyst10_codigo_tipo = 'ACREDITA'
                        AND GRID_MSGPOLI09.rela_siccont02 = :rela_siccont02
                        INTO :rela_siccont02x;

                        if (rela_siccont02x is not null) then
                            IMPORTE_IVA0 = IMPORTE_IVA0 + (importe);
                    end
            end

        if ((importe_tipo = 'RRR') and (importe <> 0)) then
            begin
                rela_siccont02x = null;
                SELECT MSGPOLI22_DET_EGRESOS.rela_siccont02
                FROM MSGPOLI22_DET_EGRESOS
                INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI22_DET_EGRESOS.RELA_SOCSYST10_TSUMA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI22_DET_EGRESOS.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
                INNER JOIN msgpoli24_arb_organizador ON (MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24 = msgpoli24_arb_organizador.id_msgpoli24)
                where MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :empresa
                and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'RET'
                and msgpoli24_arb_organizador.msgpoli24_codext =  'MEX-F-IVA'
                and MSGPOLI22_DET_EGRESOS.rela_siccont02 = :rela_siccont02
                INTO :rela_siccont02x;

                if (rela_siccont02x is not null) then
                    IMPORTE_IVARET = IMPORTE_IVARET + (importe);
            end

    end
    suspend;
end
PRD_PYMVENT01_PYMVENT02        

begin
    FOR SELECT
    socwflo01_arb_organigrama.socwflo01_descri,
    PYMVENT01_CAB_CAJAS.PYMVENT01_DESCRIPCION,
    pyminve40_arb_locaciones.pyminve40_descri,
    PYMVENT02_DET_CAJEROS.RELA_SRHMAIN10,
    PYMVENT02_DET_CAJEROS.RELA_SOCUSUA02,
    PYMVENT01_CAB_CAJAS.RELA_SOCWFLO01,
    PYMVENT01_CAB_CAJAS.RELA_SOCSYST01,
    PYMVENT01_CAB_CAJAS.PYMVENT01_CODIGO,
    PYMVENT01_CAB_CAJAS.ID_PYMVENT01,
    PYMVENT02_DET_CAJEROS.ID_PYMVENT02,
    PYMVENT01_CAB_CAJAS.PYMVENT01_EXCLUSIVO,
    PYMVENT01_CAB_CAJAS.pymvent01_supervisa,
    PYMVENT01_CAB_CAJAS.pymvent01_stocknegativo,
    PYMVENT01_CAB_CAJAS.pymvent01_cierrecaja,
    PYMVENT01_CAB_CAJAS.pymvent01_stockcompartido,
    PYMVENT01_CAB_CAJAS.pymvent01_cantidadsi,
    PYMVENT01_CAB_CAJAS.pymvent01_modiprecios,
    PYMVENT01_CAB_CAJAS.pymvent01_veimagen,
    PYMVENT01_CAB_CAJAS.pymvent01_concliente,
    PYMVENT01_CAB_CAJAS.pymvent01_cotizaticket,
    PYMVENT01_CAB_CAJAS.RELA_PYMINVE40,
    PYMVENT01_CAB_CAJAS.RELA_PYMINVE40_RESER_PAGO,
    PYMVENT01_CAB_CAJAS.RELA_PYMINVE40_RESER_NOPAGO,
    PYMVENT01_CAB_CAJAS.RELA_PYMINVE40_RESER_PAPAGO,
    PYMVENT01_CAB_CAJAS.RELA_SRHMAIN10_SUPERVISOR,
    PYMVENT01_CAB_CAJAS.rela_srhmain10_visor,
    PYMVENT01_CAB_CAJAS.rela_pyminve40_danado,
    PYMVENT01_CAB_CAJAS.rela_pyminve40_renta,
    PYMVENT01_CAB_CAJAS.rela_socsyst10_impuestos,
    PYMVENT01_CAB_CAJAS.pymvent01_ip_anclaje,
    PYMVENT01_CAB_CAJAS.pymvent01_catalogogral,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_impgrafica,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_logopath,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_leyenda,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_datossuc,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_printer,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_ancho,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_largo,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_fscab,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_fsdet,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_fsley,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_fsgra,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_mleft,
    PYMVENT01_CAB_CAJAS.pymvent01_ticket_mtop,
    PYMVENT01_CAB_CAJAS.PYMVENT01_FAPL,
    PYMVENT02_DET_CAJEROS.PYMVENT02_FAPL,
    PYMVENT02_DET_CAJEROS.RELA_PYMVENT01,
    PYMVENT02_DET_CAJEROS.rela_srhmain10,
    PYMVENT01_CAB_CAJAS.rela_socsyst10_plista,
    PYMVENT01_CAB_CAJAS.pymvent01_regalossindesc,
    PYMVENT01_CAB_CAJAS.pymvent01_servicio,
    PYMVENT01_CAB_CAJAS.pymvent01_printdefault,
    PYMVENT01_CAB_CAJAS.pymvent01_decimales,
    PYMVENT01_CAB_CAJAS.pymvent01_neteaalborrar,
    PYMVENT01_CAB_CAJAS.pymvent01_descuentos,
    PYMVENT01_CAB_CAJAS.pymvent01_correoseg,
    PYMVENT01_CAB_CAJAS.pymvent01_clavevendedor,
    PYMVENT01_CAB_CAJAS.pymvent01_cantidadpan,
    PYMVENT01_CAB_CAJAS.pymvent01_notasremision
    FROM PYMVENT02_DET_CAJEROS
    INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT02_DET_CAJEROS.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
    INNER JOIN socwflo01_arb_organigrama ON (PYMVENT01_CAB_CAJAS.rela_socwflo01 = socwflo01_arb_organigrama.id_socwflo01)
    INNER JOIN pyminve40_arb_locaciones ON (PYMVENT01_CAB_CAJAS.rela_pyminve40 = pyminve40_arb_locaciones.id_pyminve40)
    where PYMVENT01_CAB_CAJAS.rela_socsyst01 = :ID_SOCSYST01
    INTO :SUCURSAL,
         :CAJA,
         :ALMACEN,
         :RELA_SRHMAIN10,
         :RELA_SOCUSUA02,
         :RELA_SOCWFLO01,
         :RELA_SOCSYST01,
         :PYMVENT01_CODIGO,
         :ID_PYMVENT01,
         :ID_PYMVENT02,
         :PYMVENT01_EXCLUSIVO,
         :PYMVENT01_SUPERVISA,
         :PYMVENT01_STOCKNEGATIVO,
         :PYMVENT01_CIERRECAJA,
         :PYMVENT01_STOCKCOMPARTIDO,
         :PYMVENT01_CANTIDADSI,
         :PYMVENT01_MODIPRECIOS,
         :PYMVENT01_VEIMAGEN,
         :PYMVENT01_CONCLIENTE,
         :pymvent01_cotizaticket,
         :RELA_PYMINVE40,
         :RELA_PYMINVE40_RESER_PAGO,
         :RELA_PYMINVE40_RESER_NOPAGO,
         :RELA_PYMINVE40_RESER_PAPAGO,
         :RELA_SRHMAIN10_SUPERVISOR,
         :RELA_SRHMAIN10_VISOR,
         :RELA_PYMINVE40_DANADO,
         :RELA_PYMINVE40_RENTA,
         :RELA_SOCSYST10_IMPUESTOS,
         :PYMVENT01_IP_ANCLAJE,
         :pymvent01_catalogogral,
         :PYMVENT01_TICKET_IMPGRAFICA,
         :PYMVENT01_TICKET_LOGOPATH,
         :PYMVENT01_TICKET_LEYENDA,
         :PYMVENT01_TICKET_DATOSSUC,
         :PYMVENT01_TICKET_PRINTER,
         :PYMVENT01_TICKET_ANCHO,
         :PYMVENT01_TICKET_LARGO,
         :PYMVENT01_TICKET_FSCAB,
         :PYMVENT01_TICKET_FSDET,
         :PYMVENT01_TICKET_FSLEY,
         :PYMVENT01_TICKET_FSGRA,
         :pymvent01_ticket_mleft,
         :pymvent01_ticket_mtop,
         :PYMVENT01_FAPL,
         :PYMVENT02_FAPL,
         :RELA_PYMVENT01,
         :RELA_SRHMAIN10_CAJERO,
         :rela_socsyst10_plista,
         :pymvent01_regalossindesc,
         :pymvent01_servicio,
         :pymvent01_printdefault,
         :PYMVENT01_DECIMALES,
         :pymvent01_neteaalborrar,
         :pymvent01_descuentos,
         :pymvent01_correoseg,
         :PYMVENT01_CLAVEVENDEDOR,
         :pymvent01_cantidadpan,
         :pymvent01_notasremision
    DO
    BEGIN
        select cbo_srhmain10.entidad,
               socusua02_mae_usuarios.socusua02_password
        from cbo_srhmain10
        INNER JOIN socusua02_mae_usuarios ON (socusua02_mae_usuarios.id_socusua02 = cbo_srhmain10.rela_socusua02)
        where cbo_srhmain10.id_srhmain10 = :rela_srhmain10_supervisor
        into :SUPERVISOR,
             :socusua02_password;

        select cbo_srhmain10.entidad
        from cbo_srhmain10
        where cbo_srhmain10.id_srhmain10 = :RELA_SRHMAIN10
        into :CAJERO;

        if (PYMVENT01_TICKET_LARGO IS NULL) then
            PYMVENT01_TICKET_LARGO = 100;

        if (RELA_SRHMAIN10_VISOR IS NOT NULL) then
            select cbo_srhmain10.socusua02_usuario
            from cbo_srhmain10
            where cbo_srhmain10.id_srhmain10 = :RELA_SRHMAIN10_VISOR
            into :USUARIO_VISOR;
        else
            USUARIO_VISOR = null;
        suspend;
    END
end
PRD_SICEGRE01                  

DECLARE VARIABLE SOCUSUA02_USUARIO VARCHAR(20);
DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
DECLARE VARIABLE SOCUSUA01_TIPO CHAR(1);
DECLARE VARIABLE VAR_SOCUSUA SMALLINT;
DECLARE VARIABLE VAR_ID_SOCUSUA BIGINT;
BEGIN
  FOR
    SELECT
        SOCUSUA02_MAE_USUARIOS.SOCUSUA02_USUARIO,
        SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA20,
        SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA30,
        SOCUSUA01_MAE_ENTIDADES.SOCUSUA01_TIPO,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1
    FROM SICEGRE01_CAB_PROVEEDORES
    INNER JOIN SOCUSUA02_MAE_USUARIOS ON (SICEGRE01_CAB_PROVEEDORES.RELA_SOCUSUA02 = SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02)
    INNER JOIN SOCUSUA01_MAE_ENTIDADES ON (SOCUSUA02_MAE_USUARIOS.RELA_SOCUSUA01 = SOCUSUA01_MAE_ENTIDADES.ID_SOCUSUA01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICEGRE01_CAB_PROVEEDORES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE SICEGRE01_CAB_PROVEEDORES.ID_SICEGRE01 = :PARAM_ID_SICEGRE01
    INTO
        :SOCUSUA02_USUARIO,
        :RELA_SOCUSUA20,
        :RELA_SOCUSUA30,
        :SOCUSUA01_TIPO,
        :SOCSYST10_CODIGO_EXT1
  DO
  BEGIN
    IF (:SOCUSUA01_TIPO = 'M' ) THEN
      BEGIN
        VAR_SOCUSUA    = 20;
        VAR_ID_SOCUSUA = :RELA_SOCUSUA20;

        SELECT
            SOCUSUA20_MAE_ENTMORALES.SOCUSUA20_DENOMINACION || ' ' || SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES AS SOCUSUA02_ENTIDAD,
            SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
            SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_CODADUANA
        FROM SOCUSUA20_MAE_ENTMORALES
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA20_MAE_ENTMORALES.REFE_SOCSYST10_SOCIEDAD = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA20_MAE_ENTMORALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA20_MAE_ENTMORALES.ID_SOCUSUA20 = :RELA_SOCUSUA20
        INTO
            :SOCUSUA02_ENTIDAD,
            :NACIONALIDAD,
            :COD_PAIS;
      END
    ELSE
        BEGIN
           VAR_SOCUSUA = 30;
           VAR_ID_SOCUSUA = :RELA_SOCUSUA30;

           SELECT
               SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_NOMBRES || ' ' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_PADRE || ' ' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_MADRE AS SOCUSUA02_ENTIDAD,
               SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
               SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_CODADUANA
           FROM SOCUSUA30_MAE_ENTFISICAS
           INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA30_MAE_ENTFISICAS.rela_socusua50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
           WHERE SOCUSUA30_MAE_ENTFISICAS.ID_SOCUSUA30 = :RELA_SOCUSUA30
           INTO :SOCUSUA02_ENTIDAD,
                :NACIONALIDAD,
                :COD_PAIS;
        END

    SELECT SOCUSUA40_NUMERO
    FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'RFC')
    INTO :SOCUSUA20_SOCUSUA30_RFC;

    IF (:SOCUSUA20_SOCUSUA30_RFC = '') THEN
        SELECT SOCUSUA40_NUMERO
        FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'TXID')
        INTO :SOCUSUA20_SOCUSUA30_RFC;

    IF (:SOCUSUA20_SOCUSUA30_RFC IS NULL) THEN
        SOCUSUA20_SOCUSUA30_RFC = '';

    CURP = NULL;

    SELECT SNVL(PRD_SOCUSUA40.SOCUSUA40_NUMERO,'')
    FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'CURP')
    INTO :CURP;

    GIRO = NULL;

    IF (VAR_SOCUSUA = 20) THEN
        SELECT SNVL(SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,'')
        FROM SOCUSUA20_MAE_ENTMORALES
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA20_MAE_ENTMORALES.REFE_SOCSYST10_GIROSOC = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        WHERE SOCUSUA20_MAE_ENTMORALES.ID_SOCUSUA20 = :RELA_SOCUSUA20
        INTO :GIRO;

    SELECT
        SNVL(PRD_SOCUSUA41.SOCUSUA50_CIUDAD,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_PAIS,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_DOMICILIO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_CALLE,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_NRODOMICILIO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_TELEFONO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_FAX,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_CP,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_CORREO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_DEPTO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_PISO,'')
   FROM PRD_SOCUSUA41(:VAR_SOCUSUA, :VAR_ID_SOCUSUA)
   INTO
       :SOCUSUA50_CIUDAD,
       :SOCUSUA41_PAIS,
       :SOCUSUA41_DOMICILIO,
       :SOCUSUA41_CALLE,
       :SOCUSUA41_NRODOMICILIO,
       :SOCUSUA41_TELEFONO,
       :SOCUSUA41_FAX,
       :SOCUSUA41_CP,
       :SOCUSUA41_CORREO,
       :SOCUSUA41_DEPTO,
       :SOCUSUA41_PISO;

    SUSPEND;
  END
END
SOC$_TMPINVE10_IMPORTACION     

DECLARE VARIABLE ID_CATEGORIA_DEFAULT BIGINT;
DECLARE VARIABLE ID_FAMILIA_DEFAULT BIGINT;
DECLARE VARIABLE ID_CLASIFICADOR_DEFAULT BIGINT;
DECLARE VARIABLE ID_UNIDAD_MEDIDA_DEFAULT BIGINT;
DECLARE VARIABLE ID_EMPAQUE_DEFAULT BIGINT;
DECLARE VARIABLE ID_MONEDA_DEFAULT BIGINT;
DECLARE VARIABLE ID_CATEGORIA BIGINT;
DECLARE VARIABLE ID_FAMILIA BIGINT;
DECLARE VARIABLE ID_CLASIFICADOR BIGINT;
DECLARE VARIABLE ID_SOCSYST09_CATEGORIA BIGINT;
DECLARE VARIABLE ID_SOCSYST09_FAMILIA BIGINT;
DECLARE VARIABLE ID_SOCSYST09_CLASIFICADOR BIGINT;
DECLARE VARIABLE EXISTE_PRODUCTO BIGINT;
DECLARE VARIABLE ID_PYMINVE50 BIGINT;
DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
DECLARE VARIABLE ID_PYMINVE10 BIGINT;
DECLARE VARIABLE ID_SOCWFLO01 BIGINT;
DECLARE VARIABLE ID_PYMINVE40 BIGINT;
BEGIN
  SELECT SOCSYST09_DEP_LISTAESTADOS.ID_SOCSYST09
  FROM SOCSYST09_DEP_LISTAESTADOS
  WHERE SOCSYST09_DEP_LISTAESTADOS.SOCSYST09_COD = 'CA50'
  INTO :ID_SOCSYST09_CATEGORIA;

  SELECT SOCSYST09_DEP_LISTAESTADOS.ID_SOCSYST09
  FROM SOCSYST09_DEP_LISTAESTADOS
  WHERE SOCSYST09_DEP_LISTAESTADOS.SOCSYST09_COD = 'FA50'
  INTO :ID_SOCSYST09_FAMILIA;

  SELECT SOCSYST09_DEP_LISTAESTADOS.ID_SOCSYST09
  FROM SOCSYST09_DEP_LISTAESTADOS
  WHERE SOCSYST09_DEP_LISTAESTADOS.SOCSYST09_COD = 'CL20'
  INTO :ID_SOCSYST09_CLASIFICADOR;

  SELECT CBO_CATEGORIADEPRODUCTOS.ID_SOCSYST10
  FROM CBO_CATEGORIADEPRODUCTOS
  WHERE CBO_CATEGORIADEPRODUCTOS.SOCSYST10_CODIGO = 'PDG'
  INTO :ID_CATEGORIA_DEFAULT;

  SELECT CBO_FAMILIADEPRODUCTOS.ID_SOCSYST10
  FROM CBO_FAMILIADEPRODUCTOS
  WHERE CBO_FAMILIADEPRODUCTOS.SOCSYST10_CODIGO = 'SNC'
  INTO :ID_FAMILIA_DEFAULT;

  SELECT CBO_CLASIFICADORDEPRODUCTOS.ID_SOCSYST10
  FROM CBO_CLASIFICADORDEPRODUCTOS
  WHERE CBO_CLASIFICADORDEPRODUCTOS.SOCSYST10_CODIGO = 'SNC'
  INTO :ID_CLASIFICADOR_DEFAULT;
    
  SELECT CBO_UNIDADBIENES.ID_SOCSYST10
  FROM CBO_UNIDADBIENES
  WHERE CBO_UNIDADBIENES.SOCSYST10_CODIGO = 'PZ'
  INTO :ID_UNIDAD_MEDIDA_DEFAULT;

  SELECT CBO_EMPAQUES.ID_SOCSYST10
  FROM CBO_EMPAQUES
  WHERE CBO_EMPAQUES.SOCSYST10_CODIGO = 'PZA'
  INTO :ID_EMPAQUE_DEFAULT;

  SELECT CBO_MONEDAS.ID_SOCSYST10
  FROM CBO_MONEDAS
  WHERE CBO_MONEDAS.SOCSYST10_CODIGO = 'MXP'
  INTO :ID_MONEDA_DEFAULT;

  SELECT PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50
  FROM PYMINVE50_CAB_CONCEPTOS
  WHERE PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO = 'EN-NU'
  INTO :ID_PYMINVE50;

  SELECT SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02
  FROM SOCUSUA02_MAE_USUARIOS
  WHERE SOCUSUA02_MAE_USUARIOS.SOCUSUA02_USUARIO = 'ADMIN'
  INTO :ID_SOCUSUA02;

  FOR
    SELECT
        ZTMPINVE10_PRODUCTOS.ID_ZTMPINVE10,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_CATEGORIA,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_FAMILIA,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_CLASIFICADOR,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_CODIGO,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_DESCRIPCION,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_PVENTA,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_PCOSTO,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_UTILIDAD,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_STOCK_MIN,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_STOCK_MAX,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_STOCK_PDR,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_CODIGO_SUC,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_CODIGO_ALM,
        ZTMPINVE10_PRODUCTOS.ZTMPINVE10_EXISTENCIA
    FROM ZTMPINVE10_PRODUCTOS
    INTO
        :ID_ZTMPINVE10,
        :ZTMPINVE10_CATEGORIA,
        :ZTMPINVE10_FAMILIA,
        :ZTMPINVE10_CLASIFICADOR,
        :ZTMPINVE10_CODIGO,
        :ZTMPINVE10_DESCRIPCION,
        :ZTMPINVE10_PVENTA,
        :ZTMPINVE10_PCOSTO,
        :ZTMPINVE10_UTILIDAD,
        :ZTMPINVE10_STOCK_MIN,
        :ZTMPINVE10_STOCK_MAX,
        :ZTMPINVE10_STOCK_PDR,
        :ZTMPINVE10_CODIGO_SUC,
        :ZTMPINVE10_CODIGO_ALM,
        :ZTMPINVE10_EXISTENCIA
  DO
  BEGIN
    /* --------- */
    /* CATEGORIA */
    /* --------------------------------------------------------------------------------------- */
    /* AQUI VERIFICO QUE TENGA CATEGORIA SINO LA TIENE LA AGREGO AL CATALOGO Y LUEGO LA RECUPERO */
    /* --------------------------------------------------------------------------------------- */
    ID_CATEGORIA = NULL;

    IF (:ZTMPINVE10_CATEGORIA IS NOT NULL) THEN
      BEGIN
        SELECT CBO_CATEGORIADEPRODUCTOS.ID_SOCSYST10
        FROM CBO_CATEGORIADEPRODUCTOS
        WHERE UPPER(CBO_CATEGORIADEPRODUCTOS.SOCSYST10_FILTRO_DES) = UPPER(:ZTMPINVE10_CATEGORIA)
        INTO :ID_CATEGORIA;

        IF (:ID_CATEGORIA IS NULL) THEN
          BEGIN
            INSERT INTO SOCSYST10_TBL_LISTAESTADOS(SOCSYST10_TBL_LISTAESTADOS.RELA_SOCSYST09,
                                                   SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
                                                   SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO)
                                            VALUES(:ID_SOCSYST09_CATEGORIA,
                                                   :ZTMPINVE10_CATEGORIA,
                                                   'TEMP01');

            SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
            FROM SOCUTIL02_TBL_ULTIDS
            WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
            INTO :ID_CATEGORIA;

            UPDATE SOCSYST10_TBL_LISTAESTADOS
            SET SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'COD' || :ID_CATEGORIA
            WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'TEMP01';
          END
      END
    ELSE
      ID_CATEGORIA = ID_CATEGORIA_DEFAULT;
    /* --------------------------------------------------------------------------------------- */
    /*                                      FIN                                                */
    /* --------------------------------------------------------------------------------------- */

    /* --------- */
    /* FAMILIA   */
    /* --------------------------------------------------------------------------------------- */
    /* AQUI VERIFICO QUE TENGA FAMILIA SINO LA TIENE LA AGREGO AL CATALOGO Y LUEGO LA RECUPERO */
    /* --------------------------------------------------------------------------------------- */
    ID_FAMILIA = NULL;

    IF (:ZTMPINVE10_FAMILIA IS NOT NULL) THEN
      BEGIN
        SELECT CBO_FAMILIADEPRODUCTOS.ID_SOCSYST10
        FROM CBO_FAMILIADEPRODUCTOS
        WHERE UPPER(CBO_FAMILIADEPRODUCTOS.SOCSYST10_FILTRO_DES) = UPPER(:ZTMPINVE10_FAMILIA)
        INTO :ID_FAMILIA;

        IF (:ID_FAMILIA IS NULL) THEN
          BEGIN
            INSERT INTO SOCSYST10_TBL_LISTAESTADOS(SOCSYST10_TBL_LISTAESTADOS.RELA_SOCSYST09,
                                                   SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
                                                   SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO)
                                            VALUES(:ID_SOCSYST09_FAMILIA,
                                                   :ZTMPINVE10_FAMILIA,
                                                   'TEMP02');
            SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
            FROM SOCUTIL02_TBL_ULTIDS
            WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
            INTO :ID_FAMILIA;

            UPDATE SOCSYST10_TBL_LISTAESTADOS
            SET SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'COD' || :ID_FAMILIA
            WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'TEMP02';
          END
      END
    ELSE
      ID_FAMILIA = ID_FAMILIA_DEFAULT;
    /* --------------------------------------------------------------------------------------- */
    /*                                      FIN                                                */
    /* --------------------------------------------------------------------------------------- */

    /* -------------- */
    /* CLASIFICADOR   */
    /* -------------------------------------------------------------------------------------------- */
    /* AQUI VERIFICO QUE TENGA CLASIFICADOR SINO LA TIENE LA AGREGO AL CATALOGO Y LUEGO LA RECUPERO */
    /* -------------------------------------------------------------------------------------------- */
    ID_CLASIFICADOR = NULL;

    IF (:ZTMPINVE10_CLASIFICADOR IS NOT NULL) THEN
      BEGIN
        SELECT CBO_CLASIFICADORDEPRODUCTOS.ID_SOCSYST10
        FROM CBO_CLASIFICADORDEPRODUCTOS
        WHERE UPPER(CBO_CLASIFICADORDEPRODUCTOS.SOCSYST10_FILTRO_DES) = UPPER(:ZTMPINVE10_CLASIFICADOR)
        INTO :ID_CLASIFICADOR;

        IF (:ID_CLASIFICADOR IS NULL) THEN
          BEGIN
            INSERT INTO SOCSYST10_TBL_LISTAESTADOS(SOCSYST10_TBL_LISTAESTADOS.RELA_SOCSYST09,
                                                   SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
                                                   SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO)
                                            VALUES(:ID_SOCSYST09_CLASIFICADOR,
                                                   :ZTMPINVE10_CLASIFICADOR,
                                                   'TEMP03');

            SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
            FROM SOCUTIL02_TBL_ULTIDS
            WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
            INTO :ID_CLASIFICADOR;

            UPDATE SOCSYST10_TBL_LISTAESTADOS
            SET SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'COD' || :ID_CLASIFICADOR
            WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'TEMP03';
          END
        ELSE
          ID_CLASIFICADOR_DEFAULT = ID_CLASIFICADOR;
      END
    /* --------------------------------------------------------------------------------------- */
    /*                                      FIN                                                */
    /* --------------------------------------------------------------------------------------- */

    IF (:ZTMPINVE10_UTILIDAD IS NULL) THEN
      ZTMPINVE10_UTILIDAD = 0;

    IF (:ZTMPINVE10_PCOSTO IS NULL) THEN
      ZTMPINVE10_PCOSTO = 0;

    IF (:ZTMPINVE10_UTILIDAD = 0 AND ZTMPINVE10_PCOSTO = 0) THEN
      ZTMPINVE10_PCOSTO = ZTMPINVE10_PVENTA;
    ELSE
      IF ((:ZTMPINVE10_UTILIDAD = 0 AND ZTMPINVE10_PCOSTO <> 0) AND (:ZTMPINVE10_PCOSTO < :ZTMPINVE10_PVENTA)) THEN
        BEGIN
          ZTMPINVE10_UTILIDAD = ZTMPINVE10_PVENTA - ZTMPINVE10_PCOSTO;
          ZTMPINVE10_UTILIDAD = (ZTMPINVE10_UTILIDAD / ZTMPINVE10_PCOSTO) * 100;
        END

    EXISTE_PRODUCTO = NULL;

    SELECT PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10
    FROM PYMINVE10_CAB_PRODUCTOS
    WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :ID_SOCSYST01
        AND PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO = :ZTMPINVE10_CODIGO
    INTO :EXISTE_PRODUCTO;

    IF (:EXISTE_PRODUCTO IS NULL) THEN
      BEGIN
        INSERT INTO PYMINVE10_CAB_PRODUCTOS(PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01,
                                            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10,
                                            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_MONEDA,
                                            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA,
                                            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_MEDIDA,
                                            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_EMPAQUE,
                                            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_CLASIFICADOR,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_REORDER,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_LOTESIZE,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UNISIZE,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CADUCIDAD,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_MAXDESC,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_AUTDESC,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CANDESC,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_ESPARTE,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_NOACTIVO,
                                            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_MTC)
                                     VALUES(:ID_SOCSYST01,
                                           :ID_CATEGORIA,
                                           :ID_MONEDA_DEFAULT,
                                           :ID_FAMILIA,
                                           :ID_UNIDAD_MEDIDA_DEFAULT,
                                           :ID_EMPAQUE_DEFAULT,
                                           :ID_CLASIFICADOR_DEFAULT,
                                           :ZTMPINVE10_CODIGO,
                                           :ZTMPINVE10_DESCRIPCION,
                                           :ZTMPINVE10_STOCK_MIN,
                                           :ZTMPINVE10_STOCK_MAX,
                                           :ZTMPINVE10_STOCK_PDR,
                                           1,
                                           1,
                                           :ZTMPINVE10_PCOSTO,
                                           :ZTMPINVE10_UTILIDAD,
                                           0,
                                           0,
                                           0,
                                           0,
                                           0,
                                           0,
                                           0);

        SELECT SOCUTIL02_TBL_ULTIDS.SOCUTIL02_ULTID
        FROM SOCUTIL02_TBL_ULTIDS
        WHERE SOCUTIL02_TBL_ULTIDS.SOCUTIL02_USUARIO = CURRENT_USER
        INTO :ID_PYMINVE10;

        /* -------------- */
        /* EXISTENCIAS   */
        /* ------------------------------------------------------------------------------------------- */
        /* AQUI SE AGREGAN LAS EXISTENCIAS BUSCANDO LOS CODIGOS DE NUEVAS ENTRADAS, ALMACEN Y SUCURSAL */
        /* ------------------------------------------------------------------------------------------- */

        IF (:ZTMPINVE10_CODIGO_ALM IS NOT NULL AND :ZTMPINVE10_CODIGO_SUC IS NOT NULL) THEN
          BEGIN
            SELECT SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01
            FROM SOCWFLO01_ARB_ORGANIGRAMA
            WHERE SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO = :ZTMPINVE10_CODIGO_SUC
            INTO :ID_SOCWFLO01;

            SELECT PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40
            FROM PYMINVE40_ARB_LOCACIONES
            WHERE PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO = :ZTMPINVE10_CODIGO_ALM
            INTO :ID_PYMINVE40;

            INSERT INTO PYMINVE30_MOV_STOCK (PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
                                             PYMINVE30_MOV_STOCK.RELA_SOCUSUA02,
                                             PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
                                             PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
                                             PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
                                             PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
                                             PYMINVE30_MOV_STOCK.PYMINVE30_EXISTENCIA)
                                     VALUES (:ID_PYMINVE50,
                                             :ID_SOCUSUA02,
                                             :ID_SOCWFLO01,
                                             :ID_PYMINVE40,
                                             :ID_PYMINVE10,
                                             :ZTMPINVE10_EXISTENCIA,
                                             :ZTMPINVE10_EXISTENCIA);
          END
        SUSPEND;
      END
  END
END
PRD_SOCSYST01                  

BEGIN
  FOR
    SELECT CBO_CLIENTES_EMPRESAS.ENTIDAD, CBO_CLIENTES_EMPRESAS.ID_SOCSYST01, CBO_CLIENTES_EMPRESAS.RELA_SOCUSUA02
    FROM CBO_CLIENTES_EMPRESAS
    WHERE id_socsyst01= :param_socsyst01
    INTO :ENTIDAD,
         :ID_SOCSYST01,
         :RELA_SOCUSUA02

  DO
  BEGIN
    SUSPEND;
  END
END
REP_MSGPOLI01_SICEGRE01        

DECLARE VARIABLE RELA_SICCONT02AUX BIGINT;
DECLARE VARIABLE RELA_SICCONT02IMP BIGINT;
DECLARE VARIABLE RELA_SICCONT02RETE BIGINT;
DECLARE VARIABLE RELA_SICCONT02EXCE BIGINT;
DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_IMPUESTOS BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_RETENCIONES BIGINT;
DECLARE VARIABLE IMPORTE_AUX DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_IMP DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_IIT DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_IIS DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_RRT DOUBLE PRECISION;
DECLARE VARIABLE ORDEN INTEGER;
begin
    ID_ORDEN = 0;
    /* IMP = IMPORTE
    /  III = Impuestos
    /  IIT = Total Impuestos
    /  IIS = SubTotal Con Impuestos
    /  RRR = Retenciones Ingresos
    /  RRT = Total Retenciones
    /  NET = Total Neto = IIS - RRT  */

    Select CBO_TIPO_ASIENTOS.id_socsyst10
    from CBO_TIPO_ASIENTOS
    WHERE CBO_TIPO_ASIENTOS.socsyst10_codigo = 'ACREDITA'
    INTO :RELA_SOCSYST10_IMPUESTOS;

    Select CBO_TIPO_SUMACUENTAS.id_socsyst10
    from CBO_TIPO_SUMACUENTAS
    WHERE CBO_TIPO_SUMACUENTAS.socsyst10_codigo = 'RET'
    INTO :RELA_SOCSYST10_RETENCIONES;

    Select cbo_clientes_empresas.entidad
    from cbo_clientes_empresas
    where cbo_clientes_empresas.id_socsyst01 = :empresa
    into :empresadesc;

    rela_socsyst01 = :empresa;

    for Select
    CBO_SICEGRE01_FACT.id_sicegre01,
    CBO_SICEGRE01_FACT.id_socusua02,
    CBO_SICEGRE01_FACT.socusua01_tipo,
    CBO_SICEGRE01_FACT.entidad,
    CBO_SICEGRE01_FACT.rela_siccont02,
    CBO_SICEGRE01_FACT.siccont02_codext,
    CBO_SICEGRE01_FACT.siccont02_descri
    from CBO_SICEGRE01_FACT
    where CBO_SICEGRE01_FACT.rela_socsyst01 = :empresa
    ORDER BY CBO_SICEGRE01_FACT.entidad
    into :id_sicegre01,
         :id_socusua02,
         :ENTIDAD_TIPO,
         :entidad,
         :rela_siccont02,
         :siccont02_codext,
         :siccont02_descri
    do
    begin
        if (tipomovi = 'M') then
            select
            REP_MSGPOLI01_SICEGRE01_MOV.importe
            from REP_MSGPOLI01_SICEGRE01_MOV(:empresa, :ano, :mes, :id_sicegre01, :rela_siccont02)
            into :IMPORTE;
        else
            select
            REP_MSGPOLI01_SICEGRE01_CON.importe
            from REP_MSGPOLI01_SICEGRE01_CON(:empresa, :ano, :mes, :id_sicegre01, :rela_siccont02)
            into :IMPORTE;

        IMPORTE_AUX = 0;
        for select
        GRID_SICCONT02_AFECTABLES.id_siccont02
        from GRID_SICCONT02_AFECTABLES
        where GRID_SICCONT02_AFECTABLES.rela_socsyst01 = :empresa
        and GRID_SICCONT02_AFECTABLES.socsyst10_codigo = 'RESULTADO'
        and GRID_SICCONT02_AFECTABLES.socsyst10_codigo_ext1 = 'EGRESO'
        and GRID_SICCONT02_AFECTABLES.id_siccont02 <>  :rela_siccont02
        into :RELA_SICCONT02AUX
        do
        begin
            if (tipomovi = 'M') then
                select
                REP_MSGPOLI01_SICEGRE01_MOV.importe
                from REP_MSGPOLI01_SICEGRE01_MOV(:empresa, :ano, :mes, :id_sicegre01, :RELA_SICCONT02AUX)
                into :IMPORTE_AUX;
            else
                select
                REP_MSGPOLI01_SICEGRE01_CON.importe
                from REP_MSGPOLI01_SICEGRE01_CON(:empresa, :ano, :mes, :id_sicegre01, :RELA_SICCONT02AUX)
                into :IMPORTE_AUX;

            IMPORTE = importe + IMPORTE_AUX;
        end

        orden = 0;
        importe_imp = 0;
        importe_iit = 0;
        importe_iis = 0;
        importe_rrt = 0;

        if (IMPORTE <> 0) then
            begin
                select descripcion
                from jam$_crosstab_descri('Importe', :orden)
                into siccont02_descri;
                importe_imp = importe;
                importe_tipo = 'IMP';
                ID_ORDEN = ID_ORDEN + 1;
                siccont02_codext = '';
                RELA_SICCONT02 = -99;
                suspend;

                /* ---------------------------------------------------------------------------------------- */
                /* aqui tomo las cuentas que estan excentas para no sumarlas en los impuestos y solo        */
                /* mostarla. En el Loop deñ MSGPOLI09 mas abajo de impuesto, solo traigo aquellos que tienen*/
                /* porcentaje diferente de 0. Los que son iguales a 0 los tomo aqui                         */
                /* ---------------------------------------------------------------------------------------- */
                FOR SELECT
                grid_msgpoli09.rela_siccont02,
                GRID_MSGPOLI09.siccont02_codext,
                GRID_MSGPOLI09.siccont02_descri
                FROM grid_msgpoli09
                WHERE grid_msgpoli09.rela_socsyst01 = :empresa
                AND GRID_MSGPOLI09.rela_socsyst10_tipo = :RELA_SOCSYST10_IMPUESTOS
                AND grid_msgpoli09.msgpoli09_porcentaje <= 0
                and GRID_MSGPOLI09.msgpoli09_actividad = 1
                into :RELA_SICCONT02EXCE,
                     :siccont02_codext,
                     :siccont02_descri
                do
                begin
                    if (tipomovi = 'M') then
                        select
                        REP_MSGPOLI01_SICEGRE01_MOV.importe
                        from REP_MSGPOLI01_SICEGRE01_MOV(:empresa, :ano, :mes, :id_sicegre01, :RELA_SICCONT02EXCE)
                        into :IMPORTE;
                    else
                        select
                        REP_MSGPOLI01_SICEGRE01_CON.importe
                        from REP_MSGPOLI01_SICEGRE01_CON(:empresa, :ano, :mes, :id_sicegre01, :RELA_SICCONT02EXCE)
                        into :IMPORTE;

                    importe_tipo = 'EXT';

                    orden = orden + 1;
                    select descripcion
                    from jam$_crosstab_descri(:siccont02_descri, :orden)
                    into siccont02_descri;
                    RELA_SICCONT02 = :RELA_SICCONT02EXCE;
                    ID_ORDEN = ID_ORDEN + 1;
                    suspend;
                end

                /* ---------------------------------------------------------------------------------------- */
                /* aqui tomo los impuestos. repito el mismo quieri MSGPOLI09 pero que sea diferente de 0    */
                /* el campo de porcentaje                                                                   */
                /* ---------------------------------------------------------------------------------------- */

                IMPORTE_IIT = 0;
                for Select
                GRID_MSGPOLI09.rela_siccont02,
                GRID_MSGPOLI09.siccont02_codext,
                GRID_MSGPOLI09.siccont02_descri
                from GRID_MSGPOLI09
                WHERE GRID_MSGPOLI09.RELA_SOCSYST01 = :empresa
                AND GRID_MSGPOLI09.rela_socsyst10_tipo = :RELA_SOCSYST10_IMPUESTOS
                AND grid_msgpoli09.msgpoli09_porcentaje > 0
                and GRID_MSGPOLI09.msgpoli09_actividad = 1
                order by GRID_MSGPOLI09.siccont02_codext
                into :rela_siccont02imp,
                     :siccont02_codext,
                     :siccont02_descri
                do
                begin
                    if (tipomovi = 'M') then
                        select
                        REP_MSGPOLI01_SICEGRE01_MOV.importe
                        from REP_MSGPOLI01_SICEGRE01_MOV(:empresa, :ano, :mes, :id_sicegre01, :rela_siccont02imp)
                        into :IMPORTE;
                    else
                        select
                        REP_MSGPOLI01_SICEGRE01_CON.importe
                        from REP_MSGPOLI01_SICEGRE01_CON(:empresa, :ano, :mes, :id_sicegre01, :rela_siccont02imp)
                        into :IMPORTE;

                    importe_tipo = 'III';
                    IMPORTE_IIT = IMPORTE_IIT + IMPORTE;

                    orden = orden + 1;
                    select descripcion
                    from jam$_crosstab_descri(:siccont02_descri, :orden)
                    into siccont02_descri;
                    RELA_SICCONT02 = :rela_siccont02imp;
                    ID_ORDEN = ID_ORDEN + 1;
                    suspend;
                end
                importe_tipo = 'IIT';
                siccont02_codext = '';
                siccont02_descri = 'Total de Impuestos';
                IMPORTE = IMPORTE_IIT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                RELA_SICCONT02 = -98;
                ID_ORDEN = ID_ORDEN + 1;
                suspend;

                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */

                importe_tipo = 'IIS';
                siccont02_codext = '';
                siccont02_descri = 'SubTotal';
                IMPORTE = IMPORTE_IMP + IMPORTE_IIT;
                importe_iis = IMPORTE;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                RELA_SICCONT02 = -97;
                ID_ORDEN = ID_ORDEN + 1;
                suspend;

                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */

                IMPORTE_RRT = 0;
                FOR SELECT
                MSGPOLI22_DET_EGRESOS.RELA_SICCONT02,
                SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
                SICCONT02_ARB_PLANCTA_EMP.siccont02_descri
                FROM SICCONT02_ARB_PLANCTA_EMP
                INNER JOIN MSGPOLI22_DET_EGRESOS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = MSGPOLI22_DET_EGRESOS.RELA_SICCONT02)
                INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI22_DET_EGRESOS.RELA_SOCSYST10_TSUMA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI22_DET_EGRESOS.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
                where MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :empresa
                and MSGPOLI22_DET_EGRESOS.rela_socsyst10_tsuma = :RELA_SOCSYST10_RETENCIONES
                order by SICCONT02_ARB_PLANCTA_EMP.siccont02_codext
                into :rela_siccont02rete,
                     :siccont02_codext,
                     :siccont02_descri
                do
                begin
                    if (tipomovi = 'M') then
                        select
                        REP_MSGPOLI01_SICEGRE01_MOV.importe
                        from REP_MSGPOLI01_SICEGRE01_MOV(:empresa, :ano, :mes, :id_sicegre01, :rela_siccont02rete)
                        into :IMPORTE;
                    else
                        select
                        REP_MSGPOLI01_SICEGRE01_CON.importe
                        from REP_MSGPOLI01_SICEGRE01_CON(:empresa, :ano, :mes, :id_sicegre01, :rela_siccont02rete)
                        into :IMPORTE;

                    importe_tipo = 'RRR';
                    IMPORTE_RRT = IMPORTE_RRT + IMPORTE;

                    orden = orden + 1;
                    select descripcion
                    from jam$_crosstab_descri(:siccont02_descri, :orden)
                    into siccont02_descri;
                    RELA_SICCONT02 = :rela_siccont02rete;
                    ID_ORDEN = ID_ORDEN + 1;
                    suspend;
                end

                importe_tipo = 'RRT';
                siccont02_codext = '';
                siccont02_descri = 'Total Retenciones';
                IMPORTE = IMPORTE_RRT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                RELA_SICCONT02 = -96;
                ID_ORDEN = ID_ORDEN + 1;
                suspend;

                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */

                importe_tipo = 'NET';
                siccont02_codext = '';
                siccont02_descri = 'Importe Neto';
                IMPORTE = IMPORTE_IIS - IMPORTE_RRT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                RELA_SICCONT02 = -95;
                ID_ORDEN = ID_ORDEN + 1;
                suspend;
            end
    end
end
VW_MSGPOLI24_SF                

BEGIN
  FOR
    SELECT
    MSGPOLI24_ARB_ORGANIZADOR.RELA_SOCSYST06,
    MSGPOLI24_ARB_ORGANIZADOR.rela_socusua50,
    MSGPOLI24_ARB_ORGANIZADOR.RELA_MSGPOLI24,
    MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24,
    MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODIGO,
    MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT,
    MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_DESCRI,
    MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CLASE,
    SOCSYST06_DET_ARBNIVELES.RELA_SOCSYST05,
    SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_DESCRI,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_MASCARA,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_ACCION,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_CANT_PARES
    FROM MSGPOLI24_ARB_ORGANIZADOR
       INNER JOIN SOCSYST06_DET_ARBNIVELES ON (MSGPOLI24_ARB_ORGANIZADOR.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
    ORDER by msgpoli24_codigo
    INTO :RELA_SOCSYST06,
         :rela_socusua50,
         :RELA_MSGPOLI24,
         :ID_MSGPOLI24,
         :MSGPOLI24_CODIGO,
         :MSGPOLI24_CODEXT,
         :MSGPOLI24_DESCRI,
         :MSGPOLI24_CLASE,
         :RELA_SOCSYST05,
         :ID_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_DESCRI,
         :SOCSYST06_MASCARA,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES
  DO
  BEGIN
    SUSPEND;
  END
END
REP_MSGPOLI01_SICEGRE01_CON    

DECLARE VARIABLE SICCONT02_TIPO VARCHAR(1);
DECLARE VARIABLE MSGPOLI02_DEBE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABER DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_DEBE_AUTO DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABER_AUTO DOUBLE PRECISION;
BEGIN
  IF (:MES IS NOT NULL) THEN
    BEGIN
      SELECT
          SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE),
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER)
      FROM MSGPOLI04_CAB_BANCOS
      INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI04)
      INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
      INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
      INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
      WHERE MSGPOLI04_CAB_BANCOS.RELA_SOCSYST01 = :EMPRESA
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_ANO = :ANO
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_MES = :MES
        AND MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01 = :ID_SICEGRE01
        AND MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = :RELA_SICCONT02
      GROUP BY SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO
      INTO
          :SICCONT02_TIPO,
          :MSGPOLI02_DEBE,
          :MSGPOLI02_HABER;

      SELECT
          SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE),
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER)
      FROM MSGPOLI04_CAB_BANCOS
      INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI04)
      INNER JOIN PYMEGRE10_CAB_CHEQUES ON (MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01 = PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01)
      INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10)
      INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
      INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
      INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
      INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
      WHERE MSGPOLI04_CAB_BANCOS.RELA_SOCSYST01 = :EMPRESA
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_ANO = :ANO
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_MES = :MES
        AND MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01 = :ID_SICEGRE01
        AND MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = :RELA_SICCONT02
      GROUP BY SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO
      INTO
          :SICCONT02_TIPO,
          :MSGPOLI02_DEBE_AUTO,
          :MSGPOLI02_HABER_AUTO;

      SELECT
          SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE),
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER)
      FROM MSGPOLI04_CAB_BANCOS
      INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI04)
      INNER JOIN SCEXMLS40_CAB_POLIZAS ON (MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01 = SCEXMLS40_CAB_POLIZAS.RELA_MSGPOLI01)
      INNER JOIN SCEXMLS41_DET_XMLS ON (SCEXMLS40_CAB_POLIZAS.ID_SCEXMLS40 = SCEXMLS41_DET_XMLS.RELA_SCEXMLS40)
      INNER JOIN SCEXMLS11_DET_MIGRACION ON (SCEXMLS41_DET_XMLS.RELA_SCEXMLS11 = SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11)
      INNER JOIN MSGPOLI01_CAB_POLIZAS ON (SCEXMLS11_DET_MIGRACION.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
      INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
      INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
      WHERE MSGPOLI04_CAB_BANCOS.RELA_SOCSYST01 = :EMPRESA
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_ANO = :ANO
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_MES = :MES
        AND MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01 = :ID_SICEGRE01
        AND MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = :RELA_SICCONT02
      GROUP BY SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO
      INTO
          :SICCONT02_TIPO,
          :MSGPOLI02_DEBE_AUTO,
          :MSGPOLI02_HABER_AUTO;
    END
  ELSE
    BEGIN
      SELECT
          SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE),
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER)
      FROM MSGPOLI04_CAB_BANCOS
      INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI04)
      INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
      INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
      INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
      WHERE MSGPOLI04_CAB_BANCOS.RELA_SOCSYST01 = :EMPRESA
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_ANO = :ANO
        AND MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01 = :ID_SICEGRE01
        AND MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = :RELA_SICCONT02
      GROUP BY SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO
      INTO
          :SICCONT02_TIPO,
          :MSGPOLI02_DEBE,
          :MSGPOLI02_HABER;

      SELECT
          SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE),
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER)
      FROM MSGPOLI04_CAB_BANCOS
      INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI04)
      INNER JOIN PYMEGRE10_CAB_CHEQUES ON (MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01 = PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01)
      INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10)
      INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
      INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
      INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
      INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
      WHERE MSGPOLI04_CAB_BANCOS.RELA_SOCSYST01 = :EMPRESA
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_ANO = :ANO
        AND MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01 = :ID_SICEGRE01
        AND MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = :RELA_SICCONT02
      GROUP BY SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO
      INTO
          :SICCONT02_TIPO,
          :MSGPOLI02_DEBE_AUTO,
          :MSGPOLI02_HABER_AUTO;

      SELECT
          SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE),
          SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER)
      FROM MSGPOLI04_CAB_BANCOS
      INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI04)
      INNER JOIN SCEXMLS40_CAB_POLIZAS ON (MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01 = SCEXMLS40_CAB_POLIZAS.RELA_MSGPOLI01)
      INNER JOIN SCEXMLS41_DET_XMLS ON (SCEXMLS40_CAB_POLIZAS.ID_SCEXMLS40 = SCEXMLS41_DET_XMLS.RELA_SCEXMLS40)
      INNER JOIN SCEXMLS11_DET_MIGRACION ON (SCEXMLS41_DET_XMLS.RELA_SCEXMLS11 = SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11)
      INNER JOIN MSGPOLI01_CAB_POLIZAS ON (SCEXMLS11_DET_MIGRACION.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
      INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
      INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
      WHERE MSGPOLI04_CAB_BANCOS.RELA_SOCSYST01 = :EMPRESA
        AND MSGPOLI04_CAB_BANCOS.MSGPOLI04_ANO = :ANO
        AND MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01 = :ID_SICEGRE01
        AND MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = :RELA_SICCONT02
      GROUP BY SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO
      INTO
          :SICCONT02_TIPO,
          :MSGPOLI02_DEBE_AUTO,
          :MSGPOLI02_HABER_AUTO;
    END

  IF (:MSGPOLI02_DEBE IS NULL) THEN
    BEGIN
      MSGPOLI02_DEBE = 0;
      MSGPOLI02_HABER = 0;
    END

  IF (:MSGPOLI02_DEBE_AUTO IS NULL) THEN
    BEGIN
      MSGPOLI02_DEBE_AUTO = 0;
      MSGPOLI02_HABER_AUTO = 0;
    END

  IF (:SICCONT02_TIPO = 'D') THEN
    IMPORTE = (MSGPOLI02_DEBE + MSGPOLI02_DEBE_AUTO) - (MSGPOLI02_HABER + MSGPOLI02_HABER_AUTO);
  ELSE
    IMPORTE = (MSGPOLI02_HABER + MSGPOLI02_HABER_AUTO) - (MSGPOLI02_DEBE + MSGPOLI02_DEBE_AUTO);

  IF (:IMPORTE IS NULL) THEN
    IMPORTE = 0;

  SUSPEND;
END
REP_MSGPOLI01_SICEGRE01_MOV    

DECLARE VARIABLE SICCONT02_TIPO VARCHAR(1);
DECLARE VARIABLE MSGPOLI02_DEBE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABER DOUBLE PRECISION;
BEGIN
  IF (:MES IS NOT NULL) THEN
    BEGIN
      SELECT
          GRID_MSGPOLI02_MSGPOLI01.SICCONT02_TIPO,
          SUM(GRID_MSGPOLI02_MSGPOLI01.MSGPOLI02_DEBE),
          SUM(GRID_MSGPOLI02_MSGPOLI01.MSGPOLI02_HABER)
      FROM GRID_MSGPOLI02_MSGPOLI01
      WHERE GRID_MSGPOLI02_MSGPOLI01.RELA_SOCSYST01 = :EMPRESA
        AND GRID_MSGPOLI02_MSGPOLI01.MSGPOLI02_ANO = :ANO
        AND GRID_MSGPOLI02_MSGPOLI01.MSGPOLI02_MES = :MES
        AND GRID_MSGPOLI02_MSGPOLI01.RELA_SICEGRE01 = :ID_SICEGRE01
        AND GRID_MSGPOLI02_MSGPOLI01.RELA_SICCONT02 = :RELA_SICCONT02
      GROUP BY GRID_MSGPOLI02_MSGPOLI01.SICCONT02_TIPO
      INTO
          :SICCONT02_TIPO,
          :MSGPOLI02_DEBE,
          :MSGPOLI02_HABER;
    END
  ELSE
    BEGIN
      SELECT
          GRID_MSGPOLI02_MSGPOLI01.SICCONT02_TIPO,
          SUM(GRID_MSGPOLI02_MSGPOLI01.MSGPOLI02_DEBE),
          SUM(GRID_MSGPOLI02_MSGPOLI01.MSGPOLI02_HABER)
      FROM GRID_MSGPOLI02_MSGPOLI01
      WHERE GRID_MSGPOLI02_MSGPOLI01.RELA_SOCSYST01 = :EMPRESA
        AND GRID_MSGPOLI02_MSGPOLI01.MSGPOLI02_ANO = :ANO
        AND GRID_MSGPOLI02_MSGPOLI01.RELA_SICEGRE01 = :ID_SICEGRE01
        AND GRID_MSGPOLI02_MSGPOLI01.RELA_SICCONT02 = :RELA_SICCONT02
      GROUP BY GRID_MSGPOLI02_MSGPOLI01.SICCONT02_TIPO
      INTO
          :SICCONT02_TIPO,
          :MSGPOLI02_DEBE,
          :MSGPOLI02_HABER;
    END

  IF (:SICCONT02_TIPO = 'D') THEN
    IF (:MSGPOLI02_HABER > :MSGPOLI02_DEBE) THEN
      IMPORTE = :MSGPOLI02_HABER;
    ELSE
      IMPORTE = MSGPOLI02_DEBE - MSGPOLI02_HABER;
  ELSE
    IF (:MSGPOLI02_DEBE > :MSGPOLI02_HABER) THEN
      IMPORTE = :MSGPOLI02_DEBE;
    ELSE
      IMPORTE = MSGPOLI02_HABER - MSGPOLI02_DEBE;

  IF (IMPORTE IS NULL) THEN
    IMPORTE = 0;

  SUSPEND;
END
VW_MSGPOLI24                   

begin
    if (RELA_PADRE IS NULL) then
        FOR SELECT
        ID_MSGPOLI24,
        RELA_MSGPOLI24,
        MSGPOLI24_DESCRI,
        MSGPOLI24_CODIGO,
        msgpoli24_codext,
        RELA_SOCSYST06,
        SOCSYST06_NIVEL,
        SOCSYST06_MASCARA,
        SOCSYST06_DESCRI,
        SOCSYST06_ACCION,
        SOCSYST06_CANT_PARES
        FROM msgpoli24_arb_organizador
        INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
        WHERE SOCSYST06_NIVEL <> 5
        ORDER BY MSGPOLI24_CODIGO
        INTO :ID_MSGPOLI24,
             :RELA_MSGPOLI24,
             :MSGPOLI24_DESCRI,
             :MSGPOLI24_CODIGO,
             :MSGPOLI24_CODEXT,
             :RELA_SOCSYST06,
             :SOCSYST06_NIVEL,
             :SOCSYST06_MASCARA,
             :SOCSYST06_DESCRI,
             :SOCSYST06_ACCION,
             :SOCSYST06_CANT_PARES
        DO
        SUSPEND;
    ELSE if (RELA_PADRE = -1) then
    FOR SELECT
        ID_MSGPOLI24,
        RELA_MSGPOLI24,
        MSGPOLI24_DESCRI,
        MSGPOLI24_CODIGO,
        msgpoli24_codext,
        RELA_SOCSYST06,
        SOCSYST06_NIVEL,
        SOCSYST06_MASCARA,
        SOCSYST06_DESCRI,
        SOCSYST06_ACCION,
        SOCSYST06_CANT_PARES
        FROM msgpoli24_arb_organizador
        INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
        ORDER BY MSGPOLI24_CODIGO
        INTO :ID_MSGPOLI24,
             :RELA_MSGPOLI24,
             :MSGPOLI24_DESCRI,
             :MSGPOLI24_CODIGO,
             :msgpoli24_codext,
             :RELA_SOCSYST06,
             :SOCSYST06_NIVEL,
             :SOCSYST06_MASCARA,
             :SOCSYST06_DESCRI,
             :SOCSYST06_ACCION,
             :SOCSYST06_CANT_PARES
        DO
        SUSPEND;
    ELSE
        while (RELA_PADRE is not null) DO
        begin
            FOR SELECT
            ID_MSGPOLI24,
            RELA_MSGPOLI24,
            MSGPOLI24_DESCRI,
            MSGPOLI24_CODIGO,
            msgpoli24_codext,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION,
            SOCSYST06_DESCRI
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN msgpoli24_arb_organizador ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = msgpoli24_arb_organizador.RELA_SOCSYST06)
            WHERE ID_MSGPOLI24 = :RELA_PADRE
            INTO :ID_MSGPOLI24,
                 :RELA_MSGPOLI24,
                 :MSGPOLI24_DESCRI,
                 :MSGPOLI24_CODIGO,
                 :msgpoli24_codext,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION,
                 :SOCSYST06_DESCRI
            DO
            SUSPEND;
            RELA_PADRE = :RELA_MSGPOLI24;
        end
end
VW_SOCSYST01                   

begin
    FOR SELECT
    RELA_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    1
    FROM VR_ENTIDADES_ALL
    INNER JOIN SOCSYST01_CAB_CLIENTES ON (VR_ENTIDADES_ALL.ID_SOCUSUA02 = SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02)
    WHERE RELA_SOCUSUA02 = :FILTRO
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO
    begin
        SUSPEND;
    end

    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    0
    FROM vr_entidades_all
    WHERE not EXISTS (select SOCSYST01_CAB_CLIENTES.RELA_socusua02
                  from SOCSYST01_CAB_CLIENTES
                  where SOCSYST01_CAB_CLIENTES.RELA_socusua02 = vr_entidades_all.id_socusua02
                 )
      AND vr_entidades_all.socsyst10_codigo = 'UCT'
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO
    begin
    SUSPEND;
    end
end
REP_MSGPOLI01_SICEGRE01_SP     

begin

 FOR select
     REP_MSGPOLI01_SICEGRE01.rela_socsyst01,
     REP_MSGPOLI01_SICEGRE01.entidad,
     REP_MSGPOLI01_SICEGRE01.id_sicegre01,
     REP_MSGPOLI01_SICEGRE01.entidad_tipo,
     REP_MSGPOLI01_SICEGRE01.empresadesc,
     REP_MSGPOLI01_SICEGRE01.importe_tipo,
     REP_MSGPOLI01_SICEGRE01.siccont02_codext,
     REP_MSGPOLI01_SICEGRE01.siccont02_descri,
     REP_MSGPOLI01_SICEGRE01.importe
     from REP_MSGPOLI01_SICEGRE01(:EMPRESA,:ano, :mes, :tipomovi)
     into
        :rela_socsyst01,
        :PROVEEDOR,
        :ID_SICEGRE01,
        :ENTIDAD_TIPO,
        :entidad,
        :importe_tipo,
        :siccont02_codext,
        :siccont02_descri,
        :importe
     DO
     BEGIN
        PAIS ='';
        GIRO ='';
        RFC='';
        CURP='';

        SELECT
        SOCUSUA41_PAIS,
        GIRO,
        SOCUSUA20_SOCUSUA30_RFC,
        CURP
        FROM  PRD_SICEGRE01(:ID_SICEGRE01)
        INTO :PAIS,
             :GIRO,
             :RFC,
             :curp;

        suspend;
     end
end
PRD_PROXIMO_FOLIO_EMPRESAS     

DECLARE VARIABLE NID21 BIGINT;
DECLARE VARIABLE NCONTADOR INTEGER;
DECLARE VARIABLE CMASCARA VARCHAR(50);
DECLARE VARIABLE CPREFIJO VARCHAR(50);
DECLARE VARIABLE CPOSFIJO VARCHAR(50);
DECLARE VARIABLE NLONGITUD INTEGER;
DECLARE VARIABLE CCODTIPOPOLIZA VARCHAR(50);
DECLARE VARIABLE CCONTADOR VARCHAR(50);
DECLARE VARIABLE CNRODOCUM VARCHAR(50);
begin
    select socsyst10_tbl_listaestados.socsyst10_codigo
    FROM socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.id_socsyst10 = :rela_socsyst10
    into :cCODTIPOPOLIZA;

    select
    PRD_SOCSYST20_MSGPOLI01.xid_socsyst20,
    PRD_SOCSYST20_MSGPOLI01.xsocsyst20_contador,
    PRD_SOCSYST20_MSGPOLI01.xsocsyst20_mascara,
    PRD_SOCSYST20_MSGPOLI01.xsocsyst20_prefijo,
    PRD_SOCSYST20_MSGPOLI01.xsocsyst20_posfijo,
    PRD_SOCSYST20_MSGPOLI01.xsocsyst20_longitud
    FROM PRD_SOCSYST20_MSGPOLI01(:empresa,
                                 :cCODTIPOPOLIZA,
                                 null)
    INTO nID21, nCONTADOR, cMASCARA, cPREFIJO, cPOSFIJO, nLONGITUD;

    nCONTADOR = nCONTADOR + 1;
    cCONTADOR = nCONTADOR;
    nLONGITUD = nLONGITUD - StrLen(cCONTADOR);

    if (cPREFIJO is not null) then
        cNRODOCUM = cPREFIJO;

    cNRODOCUM = cNRODOCUM || StrRepeat(cMASCARA,nLONGITUD) || nCONTADOR;

    if (cPOSFIJO is not null) then
        cNRODOCUM = cNRODOCUM || cPOSFIJO;

    folio = cnrodocum;
    suspend;
end
CBO_ANOS_EMPRESAS              

DECLARE VARIABLE MAXANO INTEGER;
DECLARE VARIABLE MINANO INTEGER;
begin
  select
  VR_MSGPOLI01_ABIERTOS_CON_ULT.maxano,
  VR_MSGPOLI01_ABIERTOS_CON_ULT.minano
  from VR_MSGPOLI01_ABIERTOS_CON_ULT
  where VR_MSGPOLI01_ABIERTOS_CON_ULT.rela_socsyst01 = :empresa
  into :maxano,
       :minano;

  ID = minano;
  ANO = minano;
  while (ANO <= maxano) DO
  begin
    suspend;
    ID = ANO + 1;
    ANO = ANO + 1;
  end
end
JAM$_SOCSYST0914               

begin
  update socsyst14_det_parametros
  set socsyst14_det_parametros.socsyst14_descri = :DESCRIPCION
  WHERE socsyst14_det_parametros.socsyst14_parametro = :CODIGO;
  out = 1;
  suspend;
end
REP_MSGPOLI01_SICINGR01        

DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RELA_SICCONT02IMP BIGINT;
DECLARE VARIABLE RELA_SICCONT02RETE BIGINT;
DECLARE VARIABLE RELA_SICCONT02EXCE BIGINT;
DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_IMPUESTOS BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_RETENCIONES BIGINT;
DECLARE VARIABLE IMPORTE_IMP DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_IIT DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_IIS DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_RRT DOUBLE PRECISION;
DECLARE VARIABLE ORDEN INTEGER;
DECLARE VARIABLE IMPORTEAUX DOUBLE PRECISION;
begin
    /* IMP = IMPORTE
    /  III = Impuestos
    /  IIT = Total Impuestos
    /  IIS = SubTotal Con Impuestos
    /  RRR = Retenciones Ingresos
    /  RRT = Total Retenciones
    /  NET = Total Neto = IIS - RRT  */

    Select CBO_TIPO_ASIENTOS.id_socsyst10
    from CBO_TIPO_ASIENTOS
    WHERE CBO_TIPO_ASIENTOS.socsyst10_codigo = 'TRASLADA'
    INTO :RELA_SOCSYST10_IMPUESTOS;

    Select CBO_TIPO_SUMACUENTAS.id_socsyst10
    from CBO_TIPO_SUMACUENTAS
    WHERE CBO_TIPO_SUMACUENTAS.socsyst10_codigo = 'RET'
    INTO :RELA_SOCSYST10_RETENCIONES;

    Select cbo_clientes_empresas.entidad
    from cbo_clientes_empresas
    where cbo_clientes_empresas.id_socsyst01 = :empresa
    into :empresadesc;

    rela_socsyst01 = :empresa;

    /* ---------------------------------------------------------------------------------------- */
    /* en este for (no se confunda, solo lista el maestro de clientes para buscar las cuentas)  */
    /* solo hace esto, no hay que interpretar que lo recorre siempre. El For o loop importate   */
    /* es aquel donde barre las cuentas contables                                               */
    /* ---------------------------------------------------------------------------------------- */
    for Select
    CBO_SICINGR01_FACT.ID_SICINGR01,
    CBO_SICINGR01_FACT.id_socusua02,
    CBO_SICINGR01_FACT.socusua01_tipo,
    CBO_SICINGR01_FACT.entidad,
    CBO_SICINGR01_FACT.rela_siccont02,
    CBO_SICINGR01_FACT.siccont02_codext,
    CBO_SICINGR01_FACT.siccont02_descri
    from CBO_SICINGR01_FACT
    where CBO_SICINGR01_FACT.rela_socsyst01 = :empresa
    ORDER BY CBO_SICINGR01_FACT.entidad
    into :ID_SICINGR01,
         :id_socusua02,
         :ENTIDAD_TIPO,
         :entidad,
         :rela_siccont02,
         :siccont02_codext,
         :siccont02_descri
    do
    begin
        if (tipomovi = 'M') then
            select
            REP_MSGPOLI01_SICINGR01_MOV.importe
            from REP_MSGPOLI01_SICINGR01_MOV(:empresa, :ano, :mes, :ID_SICINGR01, :rela_siccont02)
            into :IMPORTE;
        else
            select
            REP_MSGPOLI01_SICINGR01_CON.importe
            from REP_MSGPOLI01_SICINGR01_CON(:empresa, :ano, :mes, :ID_SICINGR01, :rela_siccont02)
            into :IMPORTE;

        orden = 0;
        importe_imp = 0;
        importe_iit = 0;
        importe_iis = 0;
        importe_rrt = 0;

        if (IMPORTE <> 0) then
            begin
                /* ---------------------------------------------------------------------------------------- */
                /* aqui tomo el campo de importe. Obviamente acumulo si hay algun importe con la cuenta del */
                /* cliente que tomo desde el maestro de clientes                                            */
                /* ---------------------------------------------------------------------------------------- */
                importeaux = 0;
                select REP_MSGPOLI01_SICINGR01_IMP.importe_iit
                from REP_MSGPOLI01_SICINGR01_IMP(:empresa,
                                                 :RELA_SOCSYST10_IMPUESTOS,
                                                 :tipomovi,
                                                 :ano,
                                                 :mes,
                                                 :id_sicingr01)
                into :importeaux;


                
                select descripcion
                from jam$_crosstab_descri('Importe', :orden)
                into siccont02_descri;

                IMPORTE = IMPORTE-importeaux;
                importe_imp = IMPORTE;
                importe_tipo = 'IMP';
                suspend;

                /* ---------------------------------------------------------------------------------------- */
                /* aqui tomo las cuentas que estan excentas para no sumarlas en los impuestos y solo        */
                /* mostarla. En el Loop deñ MSGPOLI09 mas abajo de impuesto, solo traigo aquellos que tienen*/
                /* porcentaje diferente de 0. Los que son iguales a 0 los tomo aqui                         */
                /* ---------------------------------------------------------------------------------------- */
                FOR SELECT
                grid_msgpoli09.rela_siccont02,
                GRID_MSGPOLI09.siccont02_codext,
                GRID_MSGPOLI09.siccont02_descri
                FROM grid_msgpoli09
                WHERE grid_msgpoli09.rela_socsyst01 = :empresa
                AND GRID_MSGPOLI09.rela_socsyst10_tipo = :RELA_SOCSYST10_IMPUESTOS
                AND grid_msgpoli09.msgpoli09_porcentaje = 0
                and GRID_MSGPOLI09.msgpoli09_actividad = 1
                into :RELA_SICCONT02EXCE,
                     :siccont02_codext,
                     :siccont02_descri
                do
                begin
                    if (tipomovi = 'M') then
                        select
                        REP_MSGPOLI01_SICINGR01_MOV.importe
                        from REP_MSGPOLI01_SICINGR01_MOV(:empresa, :ano, :mes, :ID_SICINGR01, :RELA_SICCONT02EXCE)
                        into :IMPORTE;
                    else
                        select
                        REP_MSGPOLI01_SICINGR01_CON.importe
                        from REP_MSGPOLI01_SICINGR01_CON(:empresa, :ano, :mes, :ID_SICINGR01, :RELA_SICCONT02EXCE)
                        into :IMPORTE;

                    importe_tipo = 'EXT';

                    orden = orden + 1;
                    select descripcion
                    from jam$_crosstab_descri(:siccont02_descri, :orden)
                    into siccont02_descri;
                    suspend;
                end

                /* ---------------------------------------------------------------------------------------- */
                /* aqui tomo los impuestos. repito el mismo quieri MSGPOLI09 pero que sea diferente de 0    */
                /* el campo de porcentaje                                                                   */
                /* ---------------------------------------------------------------------------------------- */

                IMPORTE_IIT = 0;
                for Select
                GRID_MSGPOLI09.rela_siccont02,
                GRID_MSGPOLI09.siccont02_codext,
                GRID_MSGPOLI09.siccont02_descri
                from GRID_MSGPOLI09
                WHERE GRID_MSGPOLI09.RELA_SOCSYST01 = :empresa
                AND GRID_MSGPOLI09.rela_socsyst10_tipo = :RELA_SOCSYST10_IMPUESTOS
                and GRID_MSGPOLI09.msgpoli09_porcentaje <> 0
                and GRID_MSGPOLI09.msgpoli09_actividad = 1
                order by GRID_MSGPOLI09.siccont02_codext
                into :rela_siccont02imp,
                     :siccont02_codext,
                     :siccont02_descri
                do
                begin
                    if (tipomovi = 'M') then
                        select
                        REP_MSGPOLI01_SICINGR01_MOV.importe
                        from REP_MSGPOLI01_SICINGR01_MOV(:empresa, :ano, :mes, :ID_SICINGR01, :rela_siccont02imp)
                        into :IMPORTE;
                    else
                        select
                        REP_MSGPOLI01_SICINGR01_CON.importe
                        from REP_MSGPOLI01_SICINGR01_CON(:empresa, :ano, :mes, :ID_SICINGR01, :rela_siccont02imp)
                        into :IMPORTE;

                    importe_tipo = 'III';
                    IMPORTE_IIT = IMPORTE_IIT + IMPORTE;

                    orden = orden + 1;
                    select descripcion
                    from jam$_crosstab_descri(:siccont02_descri, :orden)
                    into siccont02_descri;
                    suspend;
                end
                importe_tipo = 'IIT';
                siccont02_codext = '';
                siccont02_descri = 'Total de Impuestos';
                IMPORTE = IMPORTE_IIT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                suspend;

                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */

                importe_tipo = 'IIS';
                siccont02_codext = '';
                siccont02_descri = 'SubTotal';
                IMPORTE = IMPORTE_IMP + IMPORTE_IIT;
                importe_iis = IMPORTE;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                suspend;

                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */

                IMPORTE_RRT = 0;
                FOR SELECT
                MSGPOLI21_DET_INGRESOS.RELA_SICCONT02,
                SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
                SICCONT02_ARB_PLANCTA_EMP.siccont02_descri
                FROM SICCONT02_ARB_PLANCTA_EMP
                INNER JOIN MSGPOLI21_DET_INGRESOS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = MSGPOLI21_DET_INGRESOS.RELA_SICCONT02)
                INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI21_DET_INGRESOS.RELA_SOCSYST10_TSUMA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI21_DET_INGRESOS.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
                where MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :empresa
                and MSGPOLI21_DET_INGRESOS.rela_socsyst10_tsuma = :RELA_SOCSYST10_RETENCIONES
                order by SICCONT02_ARB_PLANCTA_EMP.siccont02_codext
                into :rela_siccont02rete,
                     :siccont02_codext,
                     :siccont02_descri
                do
                begin
                    if (tipomovi = 'M') then
                        select
                        REP_MSGPOLI01_SICINGR01_MOV.importe
                        from REP_MSGPOLI01_SICINGR01_MOV(:empresa, :ano, :mes, :ID_SICINGR01, :rela_siccont02rete)
                        into :IMPORTE;
                    else
                        select
                        REP_MSGPOLI01_SICINGR01_CON.importe
                        from REP_MSGPOLI01_SICINGR01_CON(:empresa, :ano, :mes, :ID_SICINGR01, :rela_siccont02rete)
                        into :IMPORTE;

                    importe_tipo = 'RRR';
                    IMPORTE_RRT = IMPORTE_RRT + IMPORTE;

                    orden = orden + 1;
                    select descripcion
                    from jam$_crosstab_descri(:siccont02_descri, :orden)
                    into siccont02_descri;
                    suspend;
                end

                importe_tipo = 'RRT';
                siccont02_codext = '';
                siccont02_descri = 'Total Retenciones';
                IMPORTE = IMPORTE_RRT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                suspend;

                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */
                /* ---------------------------------------------------------------------------------------- */

                importe_tipo = 'NET';
                siccont02_codext = '';
                siccont02_descri = 'Importe Neto';
                IMPORTE = IMPORTE_IIS - IMPORTE_RRT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                suspend;
            end
    end
end
REP_MSGPOLI01_SICINGR01_CON    

DECLARE VARIABLE SICCONT02_TIPO VARCHAR(1);
DECLARE VARIABLE MSGPOLI02_DEBE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABER DOUBLE PRECISION;
DECLARE VARIABLE PORCENTAJE DOUBLE PRECISION;
begin
    if (mes is not null) then
        begin
            select rep_msgpoli01_clientes_con_mes.importe_porcentaje
            from rep_msgpoli01_clientes_con_mes
            where rep_msgpoli01_clientes_con_mes.rela_socsyst01 = :empresa
            and rep_msgpoli01_clientes_con_mes.msgpoli04_ano = :ano
            and rep_msgpoli01_clientes_con_mes.msgpoli04_mes = :mes
            and rep_msgpoli01_clientes_con_mes.rela_sicingr01 = :id_sicingr01
            into :porcentaje;

            SELECT
            SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
            SUM(MSGPOLI08_MOV_FACTURAS.MSGPOLI08_DEBE),
            SUM(MSGPOLI08_MOV_FACTURAS.MSGPOLI08_HABER)
            FROM MSGPOLI04_CAB_BANCOS
            INNER JOIN MSGPOLI10_MOV_CONCILIADAS ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI04)
            INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
            INNER JOIN MSGPOLI08_MOV_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = MSGPOLI08_MOV_FACTURAS.RELA_MSGPOLI07)
            INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI08_MOV_FACTURAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
            where MSGPOLI04_CAB_BANCOS.rela_socsyst01 = :empresa
            and MSGPOLI04_CAB_BANCOS.msgpoli04_ano = :ano
            and MSGPOLI04_CAB_BANCOS.msgpoli04_mes = :mes
            and MSGPOLI07_DET_FACTURAS.rela_sicingr01 = :ID_SICINGR01
            and MSGPOLI08_MOV_FACTURAS.rela_siccont02 = :rela_siccont02
            group by SICCONT02_ARB_PLANCTA_EMP.siccont02_tipo
            into :siccont02_tipo,
                 :msgpoli02_debe,
                 :msgpoli02_haber;
        end
    else
        begin
            select rep_msgpoli01_clientes_con_ano.importe_porcentaje
            from rep_msgpoli01_clientes_con_ano
            where rep_msgpoli01_clientes_con_ano.rela_socsyst01 = :empresa
            and rep_msgpoli01_clientes_con_ano.msgpoli04_ano = :ano
            and rep_msgpoli01_clientes_con_ano.rela_sicingr01 = :id_sicingr01
            into :porcentaje;

            SELECT
            SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO,
            SUM(MSGPOLI08_MOV_FACTURAS.MSGPOLI08_DEBE),
            SUM(MSGPOLI08_MOV_FACTURAS.MSGPOLI08_HABER)
            FROM MSGPOLI04_CAB_BANCOS
            INNER JOIN MSGPOLI10_MOV_CONCILIADAS ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI04)
            INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
            INNER JOIN MSGPOLI08_MOV_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = MSGPOLI08_MOV_FACTURAS.RELA_MSGPOLI07)
            INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI08_MOV_FACTURAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
            where MSGPOLI04_CAB_BANCOS.rela_socsyst01 = :empresa
            and MSGPOLI04_CAB_BANCOS.msgpoli04_ano = :ano
            and MSGPOLI07_DET_FACTURAS.rela_sicingr01 = :ID_SICINGR01
            and MSGPOLI08_MOV_FACTURAS.rela_siccont02 = :rela_siccont02
            group by SICCONT02_ARB_PLANCTA_EMP.siccont02_tipo
            into :siccont02_tipo,
                 :msgpoli02_debe,
                 :msgpoli02_haber;
        end

    if (siccont02_tipo = 'D') then
        IMPORTE = msgpoli02_debe - msgpoli02_haber;
    else
        IMPORTE = msgpoli02_haber - msgpoli02_debe;

    if (IMPORTE is null) then
        importe = 0;

    if (PORCENTAJE <> 0) then
        if (IMPORTE <> 0) then
            importe = (IMPORTE * PORCENTAJE) / 100;
    suspend;
end
VR_MSGPOLI01_ABIERTOS          

DECLARE VARIABLE NCERRADO INTEGER;
begin
    select MAX(GRID_SICCONT72_CTAS.rela_siccont02)
    from GRID_SICCONT72_CTAS
    where GRID_SICCONT72_CTAS.rela_socsyst01 = :idsocsyst01
      and GRID_SICCONT72_CTAS.SOCSYST10_CODIGO = 'CIERRE'
      INTO :RELA_SICCONT02_CIERRE;

    select MAX(GRID_SICCONT72_CTAS.rela_siccont02)
    from GRID_SICCONT72_CTAS
    where GRID_SICCONT72_CTAS.rela_socsyst01 = :idsocsyst01
      and GRID_SICCONT72_CTAS.SOCSYST10_CODIGO = 'ANTCIERRE'
      INTO :RELA_SICCONT02_ARRASTRE;

    if (PSTATUS = 'A') then
        NCERRADO = 0;
    else if (PSTATUS = 'C') then
        NCERRADO = 1;
    else
        NCERRADO = 2;

    if (ncerrado = 0 or ncerrado = 1) then
        begin
        for SELECT
        SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
        extractyear(SOCSYST01_CAB_CLIENTES.socsyst01_ejercicio),
        SICEMPR03_DET_COEFICIENTES.sicempr03_ano,
        (select count(msgpoli01_cab_polizas.id_msgpoli01)
         from msgpoli01_cab_polizas
         where msgpoli01_cab_polizas.rela_socsyst01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01
         and extractyear(msgpoli01_cab_polizas.msgpoli01_fcta) = CAST(SICEMPR03_DET_COEFICIENTES.sicempr03_ano AS INTEGER)
        )
        FROM SICEMPR03_DET_COEFICIENTES
        INNER JOIN SOCSYST01_CAB_CLIENTES ON (SICEMPR03_DET_COEFICIENTES.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
        WHERE SICEMPR03_DET_COEFICIENTES.rela_socsyst01 = :IDSOCSYST01
        AND SICEMPR03_DET_COEFICIENTES.sicempr03_cierre = :NCERRADO
        into :rela_socsyst01,
             :socsyst01_ejercicio,
             :MSGPOLI02_ANO,
             :CANTIDAD
        DO
        BEGIN
            if (NCERRADO = 0) then
                BEGIN
                STATUS = 'A';
                DESCRI = MSGPOLI02_ANO || '/Abierto';
                END
            else
                BEGIN
                STATUS = 'C';
                DESCRI = MSGPOLI02_ANO || '/Cerrado';
                END

            suspend;
        END
        end
    else
        begin
        for SELECT
        SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
        extractyear(SOCSYST01_CAB_CLIENTES.socsyst01_ejercicio),
        SICEMPR03_DET_COEFICIENTES.sicempr03_ano,
        (select count(msgpoli01_cab_polizas.id_msgpoli01)
         from msgpoli01_cab_polizas
         where msgpoli01_cab_polizas.rela_socsyst01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01
         and extractyear(msgpoli01_cab_polizas.msgpoli01_fcta) = CAST(SICEMPR03_DET_COEFICIENTES.sicempr03_ano AS INTEGER)
        ),
        SICEMPR03_DET_COEFICIENTES.sicempr03_cierre
        FROM SICEMPR03_DET_COEFICIENTES
        INNER JOIN SOCSYST01_CAB_CLIENTES ON (SICEMPR03_DET_COEFICIENTES.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
        WHERE SICEMPR03_DET_COEFICIENTES.rela_socsyst01 = :IDSOCSYST01
        into :rela_socsyst01,
             :socsyst01_ejercicio,
             :MSGPOLI02_ANO,
             :CANTIDAD,
             :ncerrado
        DO
        BEGIN
            if (NCERRADO = 0) then
                BEGIN
                STATUS = 'A';
                DESCRI = MSGPOLI02_ANO || '/Abierto';
                END
            else
                BEGIN
                STATUS = 'C';
                DESCRI = MSGPOLI02_ANO || '/Cerrado';
                END

            suspend;
        END
        end
end
REP_MSGPOLI01_SICINGR01_MOV    

DECLARE VARIABLE SICCONT02_TIPO VARCHAR(1);
DECLARE VARIABLE MSGPOLI02_DEBE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABER DOUBLE PRECISION;
begin
    if (mes is not null) then
        begin
            SELECT
            MIN(SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO),
            sum(MSGPOLI08_MOV_FACTURAS.MSGPOLI08_DEBE),
            sum(MSGPOLI08_MOV_FACTURAS.MSGPOLI08_HABER)
            FROM SICCONT02_ARB_PLANCTA_EMP
            INNER JOIN MSGPOLI08_MOV_FACTURAS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = MSGPOLI08_MOV_FACTURAS.RELA_SICCONT02)
            INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI08_MOV_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
            INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
            where MSGPOLI01_CAB_POLIZAS.rela_socsyst01 = :empresa
              and extractyear(MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA) = :ano
              and extractmonth(MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA) = :mes
              and MSGPOLI07_DET_FACTURAS.rela_sicingr01 = :ID_SICINGR01
              and MSGPOLI08_MOV_FACTURAS.rela_siccont02 = :rela_siccont02
              into :siccont02_tipo,
                   :msgpoli02_debe,
                   :msgpoli02_haber;

        end
    else
        begin
            SELECT
            MIN(SICCONT02_ARB_PLANCTA_EMP.SICCONT02_TIPO),
            sum(MSGPOLI08_MOV_FACTURAS.MSGPOLI08_DEBE),
            sum(MSGPOLI08_MOV_FACTURAS.MSGPOLI08_HABER)
            FROM SICCONT02_ARB_PLANCTA_EMP
            INNER JOIN MSGPOLI08_MOV_FACTURAS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = MSGPOLI08_MOV_FACTURAS.RELA_SICCONT02)
            INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI08_MOV_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
            INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
            where MSGPOLI01_CAB_POLIZAS.rela_socsyst01 = :empresa
              and extractyear(MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA) = :ano
              and MSGPOLI07_DET_FACTURAS.rela_sicingr01 = :ID_SICINGR01
              and MSGPOLI08_MOV_FACTURAS.rela_siccont02 = :rela_siccont02
              into :siccont02_tipo,
                   :msgpoli02_debe,
                   :msgpoli02_haber;
        end

    
    if (siccont02_tipo = 'D') then
        IMPORTE = msgpoli02_debe - msgpoli02_haber;
    else
        IMPORTE = msgpoli02_haber - msgpoli02_debe;

    if (IMPORTE is null) then
        importe = 0;

    suspend;
end
REP_MSGPOLI01_SICINGR01_SP     

begin
     FOR select
     REP_MSGPOLI01_SICINGR01.rela_socsyst01,
     REP_MSGPOLI01_SICINGR01.entidad,
     REP_MSGPOLI01_SICINGR01.id_sicingr01,
     REP_MSGPOLI01_SICINGR01.entidad_tipo,
     REP_MSGPOLI01_SICINGR01.empresadesc,
     REP_MSGPOLI01_SICINGR01.importe_tipo,
     REP_MSGPOLI01_SICINGR01.siccont02_codext,
     REP_MSGPOLI01_SICINGR01.siccont02_descri,
     REP_MSGPOLI01_SICINGR01.importe
     from REP_MSGPOLI01_SICINGR01(:EMPRESA,:ano, :mes, :tipomovi)
     into
        :rela_socsyst01,
        :CLIENTE,
        :id_sicingr01,
        :ENTIDAD_TIPO,
        :entidad,
        :importe_tipo,
        :siccont02_codext,
        :siccont02_descri,
        :importe
     DO
     BEGIN
        PAIS ='';
        GIRO ='';
        RFC='';
        CURP='';

        SELECT
        SOCUSUA41_PAIS,
        GIRO,
        SOCUSUA20_SOCUSUA30_RFC,
        CURP
        FROM  PRD_SICINGR01(:ID_SICINGR01)
        INTO :PAIS,
             :GIRO,
             :RFC,
             :curp;

        suspend;
     end
end
PRD_MSGPOLI07_SC               

BEGIN
    SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
    FROM CBO_CLIENTES_EMPRESAS_ALL
    WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :EMPRESA
    INTO :ENTIDAD;

    FOR
      SELECT
          0 MARCA,
          GRID_MSGPOLI07_SUM.RELA_MSGPOLI01,
          GRID_MSGPOLI07_SUM.RELA_SOCSYST01,
          GRID_MSGPOLI07_SUM.RELA_SOCWFLO01,
          GRID_MSGPOLI07_SUM.RELA_SICINGR01,
          GRID_MSGPOLI07_SUM.ID_MSGPOLI07,
          GRID_MSGPOLI07_SUM.MSGPOLI07_NROFACTURA,
          (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
           FROM PYMINGR18_DEP_FACTELECT
           INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01)
           WHERE PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = GRID_MSGPOLI07_SUM.RELA_MSGPOLI01),
          GRID_MSGPOLI07_SUM.MSGPOLI07_CLIENTE,
          GRID_MSGPOLI07_SUM.MSGPOLI07_FFACT,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_NETO,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_BRUTO,
          GRID_MSGPOLI07_SUM.MSGPOLI07_FAPL,
          GRID_MSGPOLI07_SUM.MSGPOLI10_IMPORTE,
          GRID_MSGPOLI07_SUM.SALDO_CONCILIADO
      FROM GRID_MSGPOLI07_SUM
      WHERE GRID_MSGPOLI07_SUM.MSGPOLI10_IMPORTE < GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_NETO
        AND GRID_MSGPOLI07_SUM.RELA_SOCSYST01 = :EMPRESA

      UNION ALL

      SELECT
          0 MARCA,
          MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01,
          MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
          MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
          MSGPOLI07_DET_FACTURAS.RELA_SICINGR01,
          MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07,
          MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
          (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
           FROM PYMINGR18_DEP_FACTELECT
           INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01)
           WHERE PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01),
          MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
          MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
          MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE,
          CAST(MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE_NETO AS NUMERIC(12,2)),
          MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE_BRUTO,
          MSGPOLI07_DET_FACTURAS.MSGPOLI07_FAPL,
          CAST(0 AS NUMERIC(12,2)),
          CAST(0 AS NUMERIC(12,2))
      FROM MSGPOLI07_DET_FACTURAS
      INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
      WHERE NOT EXISTS (SELECT MSGPOLI10_MOV_CONCILIADAS.ID_MSGPOLI10
                        FROM MSGPOLI10_MOV_CONCILIADAS
                        WHERE MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
        AND MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01 = :EMPRESA

      UNION ALL

      SELECT
          1 MARCA,
          GRID_MSGPOLI07_SUM.RELA_MSGPOLI01,
          GRID_MSGPOLI07_SUM.RELA_SOCSYST01,
          GRID_MSGPOLI07_SUM.RELA_SOCWFLO01,
          GRID_MSGPOLI07_SUM.RELA_SICINGR01,
          GRID_MSGPOLI07_SUM.ID_MSGPOLI07,
          GRID_MSGPOLI07_SUM.MSGPOLI07_NROFACTURA,
          (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
           FROM PYMINGR18_DEP_FACTELECT
           INNER JOIN PYMINGR01_CAB_FACTURAS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01)
           WHERE PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = GRID_MSGPOLI07_SUM.RELA_MSGPOLI01),
          GRID_MSGPOLI07_SUM.MSGPOLI07_CLIENTE,
          GRID_MSGPOLI07_SUM.MSGPOLI07_FFACT,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_NETO,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_BRUTO,
          GRID_MSGPOLI07_SUM.MSGPOLI07_FAPL,
          GRID_MSGPOLI07_SUM.MSGPOLI10_IMPORTE,
          GRID_MSGPOLI07_SUM.SALDO_CONCILIADO
      FROM MSGPOLI10_MOV_CONCILIADAS
      INNER JOIN GRID_MSGPOLI07_SUM ON (GRID_MSGPOLI07_SUM.ID_MSGPOLI07 = MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07)
      WHERE GRID_MSGPOLI07_SUM.RELA_SOCSYST01 = :EMPRESA
        AND GRID_MSGPOLI07_SUM.MSGPOLI10_IMPORTE = GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_NETO
      INTO
         :MARCA,
         :RELA_MSGPOLI01,
         :RELA_SOCSYST01,
         :RELA_SOCWFLO01,
         :RELA_SICINGR01,
         :ID_MSGPOLI07,
         :MSGPOLI07_NROFACTURA,
         :FOLIO_ELECT,
         :CLIENTES,
         :MSGPOLI07_FFACT,
         :MSGPOLI07_IMPORTE,
         :MSGPOLI07_IMPORTE_NETO,
         :MSGPOLI07_IMPORTE_BRUTO,
         :MSGPOLI07_FAPL,
         :MSGPOLI10_IMPORTE,
         :SALDO_CONCILIADO
    DO
    BEGIN
        IF (:SALDO_CONCILIADO = :MSGPOLI07_IMPORTE_NETO) THEN
            MARCA = 1;

        SUSPEND;
    END
END
REP_SOCSYST01_DESPACHO         

BEGIN
  FOR
    SELECT
        SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
        VR_ENTIDADES_ALL.ENTIDAD,
        SOCSYST01_CAB_CLIENTES.SOCSYST01_EJERCICIO
    FROM SOCSYST01_CAB_CLIENTES
    INNER JOIN VR_ENTIDADES_ALL ON (SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02 = VR_ENTIDADES_ALL.ID_SOCUSUA02)
    WHERE VR_ENTIDADES_ALL.SOCSYST10_CODIGO = 'UCT'
    INTO
        :ID_SOCSYST01,
        :ENTIDAD,
        :SOCSYST01_EJERCICIO
  DO
  BEGIN
    FOR
      SELECT
          REP_SOCUSUA41_ALL.SOCUSUA41_CALLE,
          REP_SOCUSUA41_ALL.SOCUSUA41_NRO,
          REP_SOCUSUA41_ALL.SOCUSUA41_CP,
          SNVL(REP_SOCUSUA41_ALL.SOCUSUA41_TELE_LINEA,''),
          SNVL(REP_SOCUSUA41_ALL.SOCUSUA41_TELE_CELU,''),
          SNVL(REP_SOCUSUA41_ALL.SOCUSUA41_TELE_FAX,''),
          SNVL(REP_SOCUSUA41_ALL.SOCUSUA41_MAIL_PERSO,'')
      FROM REP_SOCUSUA41_ALL(:ID_SOCSYST01)
      INTO
         :SOCUSUA41_CALLE,
         :SOCUSUA41_NRO,
         :SOCUSUA41_CP,
         :SOCUSUA41_TELE_LINEA,
         :SOCUSUA41_TELE_CELU,
         :SOCUSUA41_TELE_FAX,
         :SOCUSUA41_MAIL_PERSO
    DO
    BEGIN
        SUSPEND;
      FOR
        SELECT
            REP_SOCUSUA40_ALL.SOCSYST10_CODIGO || ' - ' || REP_SOCUSUA40_ALL.SOCUSUA40_NUMERO
        FROM REP_SOCUSUA40_ALL(:ID_SOCSYST01)
        INTO
            :SOCUSUA40_NUMERO
      DO
      BEGIN
        SUSPEND;
      END
    END
  END
END
REP_PYMINGR30_DEPOSITOS        

BEGIN
   /*********** DATOS DE LA EMPRESA ***********/

   SELECT
      CBO_CLIENTES_EMPRESAS_PYMES.SOCSYST01_DESCRI
   FROM CBO_CLIENTES_EMPRESAS_PYMES
   WHERE CBO_CLIENTES_EMPRESAS_PYMES.ID_SOCSYST01 = :PARAM_EMPRESA
   INTO :EMPRESA;

   /*********** DATOS DEL CLIENTE ***********/

   SELECT
       PRD_SICINGR01.SOCUSUA02_ENTIDAD,
       PRD_SICINGR01.SOCUSUA02_USUARIO,
       PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC,
       PRD_SICINGR01.SOCUSUA41_DOMICILIO,
       PRD_SICINGR01.SOCUSUA41_COLONIA,
       PRD_SICINGR01.SOCUSUA41_TELEFONO,
       PRD_SICINGR01.SOCUSUA41_CP,
       PRD_SICINGR01.SOCUSUA50_CIUDAD
   FROM PRD_SICINGR01(:PARAM_CLIENTE)
   INTO
       :CLIENTE,
       :USUARIO,
       :RFC,
       :DIRECCION,
       :COLONIA,
       :TELEFONO,
       :CP,
       :CIUDAD;

   /*********** DATOS DEL DEPOSITO ***********/

   SELECT
       PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01,
       PYMINGR30_CAB_DEPOSITOS.RELA_SICCONT02_BANCO,
       PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30,
       PYMINGR30_CAB_DEPOSITOS.PYMINGR30_IMPORTE,
       PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP,
       MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
       SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI
   FROM PYMINGR30_CAB_DEPOSITOS
   INNER JOIN MSGPOLI01_CAB_POLIZAS ON (PYMINGR30_CAB_DEPOSITOS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
   INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (PYMINGR30_CAB_DEPOSITOS.RELA_SICCONT02_BANCO = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
   WHERE PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 = :PARAM_DEPOSITO
   INTO
       :RELA_MSGPOLI01,
       :RELA_SICCONT02_BANCO,
       :ID_PYMINGR30,
       :TOTAL,
       :FECHA,
       :POLIZA,
       :BANCO;

   SELECT API_NUM_MEXICO.CNUMERO
   FROM API_NUM_MEXICO(:TOTAL,'MXN')
   INTO :TOTAL_LETRA;

   SUSPEND;
END
REP_PYMEGRE02_EDOCUENTA        

DECLARE VARIABLE SQLUSER VARCHAR(2000);
BEGIN
  DELETE FROM ZTMPEGRE10_CHEQUES
  WHERE ZTMPEGRE10_CHEQUES.USUARIO = CURRENT_USER;

  INSERT INTO ZTMPEGRE10_CHEQUES
      SELECT
         CURRENT_USER,
         PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02,
         NULL,
         SUM(PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE)
      FROM PYMEGRE10_CAB_CHEQUES
      INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10)
      WHERE PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO IS NULL
        AND PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      GROUP BY PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02;

  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :ENTIDAD;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :SUCURSAL;

  SQLUSER = 'SELECT
                 PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_PROVEEDOR,
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL
             FROM PYMEGRE02_CAB_FACTURAS
             WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             '  AND PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA;

  IF (:PARAM_ID != -1) THEN
    SQLUSER = SQLUSER || ' AND PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = ' || :PARAM_ID;

  FOR EXECUTE STATEMENT :SQLUSER
  INTO
      :ID_PYMEGRE02,
      :PROVEEDOR,
      :FOLIO,
      :FECHA,
      :IMPORTE_REAL
  DO
  BEGIN
    IMPORTE_CHEQUE = 0;
    MENOS30 = 0;
    MENOS60 = 0;
    MENOS90 = 0;
    MAS90 = 0;

    SELECT ZTMPEGRE10_CHEQUES.IMPORTE
    FROM ZTMPEGRE10_CHEQUES
    WHERE ZTMPEGRE10_CHEQUES.ID_PYMEGRE02 = :ID_PYMEGRE02
      AND ZTMPEGRE10_CHEQUES.USUARIO = CURRENT_USER
    INTO :IMPORTE_CHEQUE;

    IF (:IMPORTE_CHEQUE IS NULL) THEN
      IMPORTE_CHEQUE = 0;

    SALDO = IMPORTE_REAL - IMPORTE_CHEQUE;
    DIAS = DAYSBETWEEN(:FECHA,'NOW');

    IF (:DIAS < 30) THEN
      MENOS30 = SALDO;
    ELSE
      IF (:DIAS < 60 AND :DIAS >= 30) THEN
        MENOS60 = SALDO;
      ELSE
        IF (:DIAS < 90 AND :DIAS >= 60 ) THEN
          MENOS90 = SALDO;
        ELSE
          MAS90 = SALDO;

    IF (:SALDO != 0) THEN
      SUSPEND;
  END
END
REP_SCEXMLS40_CARTERA          

DECLARE VARIABLE IMPORTE_PARCIAL DOUBLE PRECISION;
DECLARE VARIABLE SQLUSER VARCHAR(2000);
DECLARE VARIABLE ID_MONEDA BIGINT;
BEGIN
  DELETE FROM ZTMSCEXMLS40_DEPOSITOS
  WHERE ZTMSCEXMLS40_DEPOSITOS.USUARIO = CURRENT_USER;

  IF (:PARAM_FLAG = 0) THEN
    INSERT INTO ZTMSCEXMLS40_DEPOSITOS
      SELECT
        CURRENT_USER,
        SCEXMLS41_DET_XMLS.RELA_SCEXMLS11,
        NULL,
        SUM(SCEXMLS41_DET_XMLS.SCEXMLS41_IMPORTE)
      FROM SCEXMLS40_CAB_POLIZAS
      INNER JOIN SCEXMLS41_DET_XMLS ON (SCEXMLS40_CAB_POLIZAS.ID_SCEXMLS40 = SCEXMLS41_DET_XMLS.RELA_SCEXMLS40)
      INNER JOIN SCEXMLS11_DET_MIGRACION ON (SCEXMLS41_DET_XMLS.RELA_SCEXMLS11 = SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11)
      INNER JOIN SCEXMLS10_CAB_MIGRACION ON (SCEXMLS11_DET_MIGRACION.RELA_SCEXMLS10 = SCEXMLS10_CAB_MIGRACION.ID_SCEXMLS10)
      WHERE SCEXMLS10_CAB_MIGRACION.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND SCEXMLS40_CAB_POLIZAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      GROUP BY SCEXMLS41_DET_XMLS.RELA_SCEXMLS11;
  ELSE
    INSERT INTO ZTMSCEXMLS40_DEPOSITOS
      SELECT
        CURRENT_USER,
        SCEXMLS41_DET_XMLS.RELA_SCEXMLS11,
        SCEXMLS40_CAB_POLIZAS.SCEXMLS40_FECHA,
        SCEXMLS41_DET_XMLS.SCEXMLS41_IMPORTE
      FROM SCEXMLS40_CAB_POLIZAS
      INNER JOIN SCEXMLS41_DET_XMLS ON (SCEXMLS40_CAB_POLIZAS.ID_SCEXMLS40 = SCEXMLS41_DET_XMLS.RELA_SCEXMLS40)
      INNER JOIN SCEXMLS11_DET_MIGRACION ON (SCEXMLS41_DET_XMLS.RELA_SCEXMLS11 = SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11)
      INNER JOIN SCEXMLS10_CAB_MIGRACION ON (SCEXMLS11_DET_MIGRACION.RELA_SCEXMLS10 = SCEXMLS10_CAB_MIGRACION.ID_SCEXMLS10)
      WHERE SCEXMLS10_CAB_MIGRACION.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND SCEXMLS40_CAB_POLIZAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA;

  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :SUCURSAL;

  ID_MONEDA = NULL;

  SELECT FIRST 1 CBO_MONEDAS_COTIZACION.ID_SOCSYST10
  FROM CBO_MONEDAS_COTIZACION
  WHERE CBO_MONEDAS_COTIZACION.RELA_SOCSYST01 = :PARAM_EMPRESA
    AND CBO_MONEDAS_COTIZACION.ID_SOCSYST10 = :PARAM_MONEDA
    AND CBO_MONEDAS_COTIZACION.SICCONT04_VENTA != 1
  INTO :ID_MONEDA;

  SQLUSER = 'SELECT
                 SCEXMLS11_DET_MIGRACION.RELA_SICINGR01,
                 SCEXMLS11_DET_MIGRACION.RELA_SICEGRE01,
                 SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_ENTIDAD,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_FOLIO,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID_FECHA,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_MONEDA,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_CAMBIO,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID_IMPORTE
             FROM SCEXMLS11_DET_MIGRACION
             INNER JOIN SCEXMLS10_CAB_MIGRACION ON (SCEXMLS11_DET_MIGRACION.RELA_SCEXMLS10 = SCEXMLS10_CAB_MIGRACION.ID_SCEXMLS10)
             WHERE SCEXMLS10_CAB_MIGRACION.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             ' AND SCEXMLS10_CAB_MIGRACION.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA;

  SQLUSER = :SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.SCEXMLS11_CAMBIO = 1';

  IF (:ID_MONEDA IS NOT NULL) THEN
    SQLUSER = :SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.SCEXMLS11_CAMBIO != 1';

  IF (:PARAM_ENTIDAD != -1) THEN
    BEGIN
      SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
      FROM SOCSYST10_TBL_LISTAESTADOS
      WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = :PARAM_TIPO
      INTO :CODIGO;

      IF (:CODIGO = 'CLIENTE') THEN
        SQLUSER = SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SICINGR01 = ' || :PARAM_ENTIDAD;
      ELSE
        IF (:CODIGO = 'PROVE') THEN
          SQLUSER = SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SICEGRE01 = ' || :PARAM_ENTIDAD;
        ELSE
          IF (:CODIGO = 'NOMI') THEN
            SQLUSER = SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SRHMAIN10 = ' || :PARAM_ENTIDAD;
    END
  ELSE
    SQLUSER = SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SOCSYST10 = ' || :PARAM_TIPO;

  FOR EXECUTE STATEMENT :SQLUSER
  INTO
       :RELA_SICINGR01,
       :RELA_SICEGRE01,
       :ID_SCEXMLS11,
       :ENTIDAD,
       :FOLIO,
       :FECHA,
       :MONEDA,
       :TIPOCAMBIO,
       :IMPORTE_REAL
  DO
  BEGIN
    DIASCREDITO = 0;
    FECHAPAGO = NULL;
    FECHADEPOSITO = NULL;
    IMPORTE_DEPOSITO = 0;
    IMPORTE_PARCIAL = 0;
    ALCORRIENTE = 0;
    MENOS30 = 0;
    MENOS60 = 0;
    MENOS90 = 0;
    MAS90 = 0;

    IF (:RELA_SICINGR01 IS NOT NULL) THEN
      SELECT SICINGR01_CAB_CLIENTES.SICINGR01_DIAS_CREDITO
      FROM SICINGR01_CAB_CLIENTES
      WHERE SICINGR01_CAB_CLIENTES.ID_SICINGR01 = :RELA_SICINGR01
      INTO :DIASCREDITO;
    ELSE
      IF (:RELA_SICINGR01 IS NOT NULL) THEN  
        SELECT SICEGRE01_CAB_PROVEEDORES.SICEGRE01_DIAS_CREDITO
        FROM SICEGRE01_CAB_PROVEEDORES
        WHERE SICEGRE01_CAB_PROVEEDORES.ID_SICEGRE01 = :RELA_SICEGRE01
        INTO :DIASCREDITO;

    IF (:DIASCREDITO IS NULL) THEN
      DIASCREDITO = 0;

    FECHAPAGO = :FECHA + :DIASCREDITO;

    IF (:PARAM_FLAG = 0) THEN
      BEGIN
        SELECT ZTMSCEXMLS40_DEPOSITOS.IMPORTE
        FROM ZTMSCEXMLS40_DEPOSITOS
        WHERE ZTMSCEXMLS40_DEPOSITOS.ID_SCEXMLS11 = :ID_SCEXMLS11
          AND ZTMSCEXMLS40_DEPOSITOS.USUARIO = CURRENT_USER
        INTO :IMPORTE_DEPOSITO;

        IF (:IMPORTE_DEPOSITO IS NULL) THEN
          IMPORTE_DEPOSITO = 0;

        IF (:IMPORTE_REAL != IMPORTE_DEPOSITO) THEN
          BEGIN
            DIAS = DAYSBETWEEN(:FECHA, 'NOW') - DIASCREDITO;

            IF (:DIAS <= 0) THEN
              ALCORRIENTE = IMPORTE_REAL;
            ELSE
              IF (:DIAS < 30) THEN
                MENOS30 = IMPORTE_REAL;
              ELSE
                IF (:DIAS >= 30 AND :DIAS < 60) THEN
                  MENOS60 = IMPORTE_REAL;
                ELSE
                  IF (:DIAS >= 60 AND :DIAS < 90) THEN
                    MENOS90 = IMPORTE_REAL;
                  ELSE
                    MAS90 = IMPORTE_REAL;

            SUSPEND;
          END
      END
    ELSE
      BEGIN
        FOR
          SELECT
              ZTMSCEXMLS40_DEPOSITOS.FECHA,
              ZTMSCEXMLS40_DEPOSITOS.IMPORTE
          FROM ZTMSCEXMLS40_DEPOSITOS
          WHERE ZTMSCEXMLS40_DEPOSITOS.ID_SCEXMLS11 = :ID_SCEXMLS11
            AND ZTMSCEXMLS40_DEPOSITOS.USUARIO = CURRENT_USER
          INTO
              :FECHADEPOSITO,
              :IMPORTE_PARCIAL
        DO
        BEGIN
          IMPORTE_DEPOSITO = IMPORTE_DEPOSITO + IMPORTE_PARCIAL;
          DIAS = DAYSBETWEEN(:FECHA,:FECHADEPOSITO) - DIASCREDITO;

          IF (:DIAS <= 0) THEN
            ALCORRIENTE = IMPORTE_PARCIAL;
          ELSE
            IF (:DIAS < 30) THEN
              MENOS30 = IMPORTE_PARCIAL;
            ELSE
              IF (:DIAS >= 30 AND :DIAS < 60) THEN
                MENOS60 = IMPORTE_PARCIAL;
              ELSE
                IF (:DIAS >= 60 AND :DIAS < 90) THEN
                  MENOS90 = IMPORTE_PARCIAL;
                ELSE
                  MAS90 = IMPORTE_PARCIAL;
        END

        IF (:IMPORTE_REAL != IMPORTE_DEPOSITO) THEN
          BEGIN
            DIAS = DAYSBETWEEN(:FECHA, 'NOW') - DIASCREDITO;

            IF (:DIAS <= 0) THEN
              ALCORRIENTE = IMPORTE_REAL;
            ELSE
              IF (:DIAS < 30) THEN
                MENOS30 = IMPORTE_REAL;
              ELSE
                IF (:DIAS >= 30 AND :DIAS < 60) THEN
                  MENOS60 = IMPORTE_REAL;
                ELSE
                  IF (:DIAS >= 60 AND :DIAS < 90) THEN
                    MENOS90 = IMPORTE_REAL;
                  ELSE
                    MAS90 = IMPORTE_REAL;

            SUSPEND;
          END
      END
  END
END
JAM$_MSGPOLI01_PROVEEDORES     

DECLARE VARIABLE I INTEGER;
DECLARE VARIABLE ILEN INTEGER;
DECLARE VARIABLE CSTR VARCHAR(200);
DECLARE VARIABLE CPASO VARCHAR(1);
DECLARE VARIABLE DOCU VARCHAR(50);
DECLARE VARIABLE IMPORTE_IVA151I DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_IVA101I DOUBLE PRECISION;
begin
    delete from ztmppoli01_proveedores where ztmppoli01_proveedores.ztmppoli01_user = current_user;

    insert into ztmppoli01_proveedores(ztmppoli01_proveedores.ztmppoli01_user,
                                       ztmppoli01_proveedores.id_orden,
                                       ztmppoli01_proveedores.rela_siccont02,
                                       ztmppoli01_proveedores.id_sicegre01,
                                       ztmppoli01_proveedores.importe_tipo,
                                       ztmppoli01_proveedores.siccont02_codext,
                                       ztmppoli01_proveedores.siccont02_descri,
                                       ztmppoli01_proveedores.importe)
    SELECT
    current_user,
    rep_msgpoli01_sicegre01.id_orden,
    rep_msgpoli01_sicegre01.rela_siccont02,
    rep_msgpoli01_sicegre01.id_sicegre01,
    rep_msgpoli01_sicegre01.importe_tipo,
    rep_msgpoli01_sicegre01.siccont02_codext,
    rep_msgpoli01_sicegre01.siccont02_descri,
    rep_msgpoli01_sicegre01.importe
    FROM rep_msgpoli01_sicegre01(:EMPRESA,:ANO,:MES,'C');

    FOR SELECT
    CBO_SICEGRE01_FACT.id_sicegre01,
    SUBSTR(CBO_SICEGRE01_FACT.entidad,1,43)
    FROM CBO_SICEGRE01_FACT
    where CBO_SICEGRE01_FACT.rela_socsyst01 = :empresa
    ORDER BY CBO_SICEGRE01_FACT.entidad
    INTO :id_sicegre01,
         :entidad
    do
    BEGIN
        SELECT
        SUBSTR(cod_pais, 1, 2),
        SOCUSUA20_SOCUSUA30_RFC,
        socsyst10_codigo_ext1,
        SUBSTR(nacionalidad,1,40)
        FROM  PRD_SICEGRE01(:ID_SICEGRE01)
        INTO :PAIS,
             :DOCU,
             :TIPO_OPERACION,
             :NACIONALIDAD;

        TIPO_TERCERO = NULL;

        if (TRIM(PAIS) = 'ME' or TRIM(PAIS) = 'MX') then
            TIPO_TERCERO = '04';
        else if (PAIS IS NOT NULL) then
            TIPO_TERCERO = '05';

        i = 0;
        ilen = strlen(:DOCU);
        cStr = '';

        while (i < ilen) DO
            begin
                i = i + 1;
                CPASO = LONGSUBSTR(:DOCU,i,1);
                if (CPASO <> '-') then
                    cStr = cStr || + CPASO;
            end

        DOCU = cStr;

        RFC = '';
        IDFISCAL = '';

        IMPORTE_IVA15 = 0;
        IMPORTE_IVA151 = 0;
        IMPORTE_IVA15NA = 0;

        IMPORTE_IVA10 = 0;
        IMPORTE_IVA151 = 0;
        IMPORTE_IVA10NA = 0;

        IMPORTE_IVA15I = 0;
        IMPORTE_IVA15NAI = 0;

        IMPORTE_IVA10I = 0;
        IMPORTE_IVA10NAI = 0;

        IMPORTE_IVAEXC = 0;
        IMPORTE_IVAEXCI = 0;
        IMPORTE_IVA0 = 0;

        IMPORTE_IVARET = 0;
        IMPORTE_IVADEV = 0;

        if (StrPos('MAD', DOCU) != 0) then
            DOCU = DOCU;


        if (strlen(DOCU) > 11 and PAIS is not null and TIPO_TERCERO = '04') then
            BEGIN
                ENTIDAD = '';
                RFC =  substr(:DOCU,1,13);
                nacionalidad = '';
                pais = '';

                EXECUTE PROCEDURE jam$_msgpoli01_proveedores_imp(:empresa,:id_sicegre01)
                RETURNING_VALUES :IMPORTE_IVA15,
                                 :IMPORTE_IVA151,
                                 :IMPORTE_IVA15NA,
                                 :IMPORTE_IVA10,
                                 :IMPORTE_IVA101,
                                 :IMPORTE_IVA10NA,
                                 :IMPORTE_IVAEXC,
                                 :IMPORTE_IVA0,
                                 :IMPORTE_IVARET,
                                 :IMPORTE_IVADEV;

                if ((IMPORTE_IVA15 <> 0)   or (IMPORTE_IVA15NA <> 0) or (IMPORTE_IVA10 <> 0) or
                    (IMPORTE_IVA10NA <> 0) or (IMPORTE_IVAEXC <> 0)  or (IMPORTE_IVA0 <> 0) or
                    (IMPORTE_IVARET <> 0)  or (IMPORTE_IVADEV <> 0) or
                    (IMPORTE_IVA151 <> 0)  or (IMPORTE_IVA101 <> 0)) then
                    suspend;
            END

        else if (strlen(DOCU) > 11 and PAIS is not null and TIPO_TERCERO = '05') then
            BEGIN
                IDFISCAL = substr(:DOCU,1 , 40);
                EXECUTE PROCEDURE jam$_msgpoli01_proveedores_imp(:empresa,:id_sicegre01)
                RETURNING_VALUES :IMPORTE_IVA15I,
                                 :IMPORTE_IVA151I,
                                 :IMPORTE_IVA15NAI,
                                 :IMPORTE_IVA10I,
                                 :IMPORTE_IVA101I,
                                 :IMPORTE_IVA10NAI,
                                 :IMPORTE_IVAEXCI,
                                 :IMPORTE_IVA0,
                                 :IMPORTE_IVARET,
                                 :IMPORTE_IVADEV;

                if ((IMPORTE_IVA15I <> 0) or (IMPORTE_IVA15NAI <> 0) or (IMPORTE_IVA10I <> 0) or
                    (IMPORTE_IVA10NAI <> 0) or (IMPORTE_IVAEXCI <> 0)  or (IMPORTE_IVA0 <> 0) or
                    (IMPORTE_IVARET <> 0) or (IMPORTE_IVADEV <> 0) or
                    (IMPORTE_IVA151 <> 0)  or (IMPORTE_IVA101 <> 0)) then
                    suspend;
            end
        
    END
end
REP_MSGPOLI24                  

BEGIN
  IMPORTEFINAL = IMPORTE;
  FOR
    SELECT
    
        MSGPOLI25_DET_CONCEPTOS.RELA_MSGPOLI24,
        MSGPOLI25_DET_CONCEPTOS.RELA_SOCSYST01,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT,
        MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_DESCRI,
        MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO,
        MSGPOLI23_DET_BITACORA.MSGPOLI23_MES,
        MSGPOLI36_MOV_ACREDITAMIENTO.MSGPOLI36_IMPORTE,
        MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_ACTIVIDAD
    FROM MSGPOLI25_DET_CONCEPTOS
    INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = MSGPOLI25_DET_CONCEPTOS.RELA_MSGPOLI24)
    INNER JOIN MSGPOLI36_MOV_ACREDITAMIENTO ON (MSGPOLI36_MOV_ACREDITAMIENTO.RELA_MSGPOLI25 = MSGPOLI25_DET_CONCEPTOS.ID_MSGPOLI25)
    INNER JOIN MSGPOLI35_DET_PAGO ON (MSGPOLI36_MOV_ACREDITAMIENTO.RELA_MSGPOLI35 = MSGPOLI35_DET_PAGO.ID_MSGPOLI35)
    INNER JOIN MSGPOLI23_DET_BITACORA ON (MSGPOLI35_DET_PAGO.RELA_MSGPOLI23 = MSGPOLI23_DET_BITACORA.ID_MSGPOLI23)
    WHERE MSGPOLI25_DET_CONCEPTOS.RELA_SOCSYST01 = :EMPRESA AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :ANO
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES= :MES
        AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT LIKE 'MEX-F-IETU%'

    UNION
    
    SELECT
    
        MSGPOLI25_DET_CONCEPTOS.RELA_MSGPOLI24,
        MSGPOLI25_DET_CONCEPTOS.RELA_SOCSYST01,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT,
        MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_DESCRI,
        CAST(0 AS SMALLINT),
        CAST(0 AS SMALLINT),
        CAST(0 AS DOUBLE PRECISION),
        MSGPOLI25_DET_CONCEPTOS.MSGPOLI25_ACTIVIDAD
    FROM MSGPOLI25_DET_CONCEPTOS
    INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = MSGPOLI25_DET_CONCEPTOS.RELA_MSGPOLI24)
    WHERE MSGPOLI25_DET_CONCEPTOS.ID_MSGPOLI25 NOT IN (SELECT MSGPOLI36_MOV_ACREDITAMIENTO.RELA_MSGPOLI25
                                                       FROM MSGPOLI36_MOV_ACREDITAMIENTO)
    and MSGPOLI25_DET_CONCEPTOS.RELA_SOCSYST01 = :EMPRESA
      AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT LIKE 'MEX-F-IETU%'
    INTO :RELA_MSGPOLI24,
         :RELA_SOCSYST01,
         :MSGPOLI24_CODEXT,
         :MSGPOLI25_DESCRI,
         :MSGPOLI23_ANO,
         :MSGPOLI23_MES,
         :MSGPOLI36_IMPORTE,
         :ACTIVIDAD
  DO
  BEGIN
    IF(ACTIVIDAD = 0) THEN
        ACTIVIDAD = -1;
    ELSE
        ACTIVIDAD = 1;

    IF(IMPORTEFINAL > MSGPOLI36_IMPORTE) THEN
        IMPORTEFINAL = :IMPORTEFINAL - MSGPOLI36_IMPORTE;
    ELSE
        IF((IMPORTEFINAL > 0.00) AND (IMPORTEFINAL < MSGPOLI36_IMPORTE)) THEN
        BEGIN
            MSGPOLI36_IMPORTE = IMPORTEFINAL;
            IMPORTEFINAL = 0.00;
        END
        ELSE
            IF ((IMPORTEFINAL < 0) OR (IMPORTEFINAL = 0.0 )) THEN
                MSGPOLI36_IMPORTE = IMPORTEFINAL;
    SUSPEND;
  END
END
REP_MSGPOLI23_IMP              

BEGIN

    SELECT CBO_CLIENTES_EMPRESAS.entidad
    FROM CBO_CLIENTES_EMPRESAS
    WHERE ID_SOCSYST01 = :EMPRESA
    INTO :ENTIDAD;

    SELECT CBO_MESES.SOCSYST10_FILTRO_DES
    FROM CBO_MESES
    WHERE CBO_MESES.SOCSYST10_CODIGO = :MES
    INTO :MESES;

IF (MSGPOLI20_AUX=0) THEN
  FOR SELECT
    GRID_MSGPOLI23_ALL.RELA_MSGPOLI20_AUX,
    GRID_MSGPOLI23_ALL.RELA_SOCSYST01,
    GRID_MSGPOLI23_ALL.CODIGO_BITACORA,
    GRID_MSGPOLI23_ALL.DESCRI_BITACORA,
    GRID_MSGPOLI23_ALL.RELA_MSGPOLI01,
    GRID_MSGPOLI23_ALL.NO_POLIZA,
    GRID_MSGPOLI23_ALL.FECHA_POLIZA,
    GRID_MSGPOLI23_ALL.DESCRIPCION_POLIZA,
    GRID_MSGPOLI23_ALL.RELA_MSGPOLI20,
    GRID_MSGPOLI23_ALL.RELA_SOCSYST10,
    GRID_MSGPOLI23_ALL.ID_MSGPOLI23,
    GRID_MSGPOLI23_ALL.MSGPOLI23_ANO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_MES,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_ACUMU,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_RING,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_RING_ACUMU,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_REGR,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_REGR_ACUMU,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_CARGO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_ABONO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_INGRESOS,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_SING,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_EGRESOS,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_SEGR,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_AFAVOR,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_AFAVORO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_SINMOD,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_USUARIO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_PERDIDA,
    GRID_MSGPOLI23_ALL.RELA_SOCSYST10_TABLA,
    GRID_MSGPOLI23_ALL.TABLA,
    GRID_MSGPOLI23_ALL.MSGPOLI23_DBLCUOT,
    GRID_MSGPOLI23_ALL.MSGPOLI23_DBLPORC,
    GRID_MSGPOLI23_ALL.MSGPOLI23_DBLLINF,
    GRID_MSGPOLI23_ALL.MSGPOLI23_DBLLSUP,
    GRID_MSGPOLI23_ALL.MSGPOLI23_COEFICIENTE,
    GRID_MSGPOLI23_ALL.MSGPOLI23_PORCENTUAL,
    GRID_MSGPOLI23_ALL.MSGPOLI23_PARAMETROS,
    GRID_MSGPOLI23_ALL.MSGPOLI23_NOTAS,
    GRID_MSGPOLI23_ALL.MSGPOLI23_FAPL,
    UPPER(GRID_MSGPOLI23_ALL.MSGPOLI24_DESCRI),
    GRID_MSGPOLI23_ALL.MSGPOLI24_CODEXT,
    GRID_MSGPOLI23_ALL.MSGPOLI23_ULT_ANO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_ULT_MES
    FROM GRID_MSGPOLI23_ALL
          where GRID_MSGPOLI23_ALL.rela_socsyst01 = :EMPRESA
          and GRID_MSGPOLI23_ALL.msgpoli23_ano = :ANO
          and GRID_MSGPOLI23_ALL.msgpoli23_mes = :MES
          and GRID_MSGPOLI23_ALL.codigo_bitacora = 'MODIFICADO'
    INTO :RELA_MSGPOLI20_AUX,
         :RELA_SOCSYST01,
         :CODIGO_BITACORA,
         :DESCRI_BITACORA,
         :RELA_MSGPOLI01,
         :NO_POLIZA,
         :FECHA_POLIZA,
         :DESCRIPCION_POLIZA,
         :RELA_MSGPOLI20,
         :RELA_SOCSYST10,
         :ID_MSGPOLI23,
         :MSGPOLI23_ANO,
         :MSGPOLI23_MES,
         :MSGPOLI23_IMPORTE,
         :MSGPOLI23_IMPORTE_ACUMU,
         :MSGPOLI23_IMPORTE_RING,
         :MSGPOLI23_IMPORTE_RING_ACUMU,
         :MSGPOLI23_IMPORTE_REGR,
         :MSGPOLI23_IMPORTE_REGR_ACUMU,
         :MSGPOLI23_IMPORTE_CARGO,
         :MSGPOLI23_IMPORTE_ABONO,
         :MSGPOLI23_IMPORTE_INGRESOS,
         :MSGPOLI23_IMPORTE_SING,
         :MSGPOLI23_IMPORTE_EGRESOS,
         :MSGPOLI23_IMPORTE_SEGR,
         :MSGPOLI23_IMPORTE_AFAVOR,
         :MSGPOLI23_IMPORTE_AFAVORO,
         :MSGPOLI23_IMPORTE_SINMOD,
         :MSGPOLI23_IMPORTE_USUARIO,
         :MSGPOLI23_IMPORTE_PERDIDA,
         :RELA_SOCSYST10_TABLA,
         :TABLA,
         :MSGPOLI23_DBLCUOT,
         :MSGPOLI23_DBLPORC,
         :MSGPOLI23_DBLLINF,
         :MSGPOLI23_DBLLSUP,
         :MSGPOLI23_COEFICIENTE,
         :MSGPOLI23_PORCENTUAL,
         :MSGPOLI23_PARAMETROS,
         :MSGPOLI23_NOTAS,
         :MSGPOLI23_FAPL,
         :MSGPOLI24_DESCRI,
         :MSGPOLI24_CODEXT,
         :MSGPOLI23_ULT_ANO,
         :MSGPOLI23_ULT_MES
  DO
   BEGIN
    SUSPEND;
  END
ELSE
  FOR SELECT
    GRID_MSGPOLI23_ALL.RELA_MSGPOLI20_AUX,
    GRID_MSGPOLI23_ALL.RELA_SOCSYST01,
    GRID_MSGPOLI23_ALL.CODIGO_BITACORA,
    GRID_MSGPOLI23_ALL.DESCRI_BITACORA,
    GRID_MSGPOLI23_ALL.RELA_MSGPOLI01,
    GRID_MSGPOLI23_ALL.NO_POLIZA,
    GRID_MSGPOLI23_ALL.FECHA_POLIZA,
    GRID_MSGPOLI23_ALL.DESCRIPCION_POLIZA,
    GRID_MSGPOLI23_ALL.RELA_MSGPOLI20,
    GRID_MSGPOLI23_ALL.RELA_SOCSYST10,
    GRID_MSGPOLI23_ALL.ID_MSGPOLI23,
    GRID_MSGPOLI23_ALL.MSGPOLI23_ANO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_MES,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_ACUMU,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_RING,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_RING_ACUMU,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_REGR,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_REGR_ACUMU,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_CARGO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_ABONO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_INGRESOS,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_SING,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_EGRESOS,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_SEGR,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_AFAVOR,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_AFAVORO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_SINMOD,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_USUARIO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_IMPORTE_PERDIDA,
    GRID_MSGPOLI23_ALL.RELA_SOCSYST10_TABLA,
    GRID_MSGPOLI23_ALL.TABLA,
    GRID_MSGPOLI23_ALL.MSGPOLI23_DBLCUOT,
    GRID_MSGPOLI23_ALL.MSGPOLI23_DBLPORC,
    GRID_MSGPOLI23_ALL.MSGPOLI23_DBLLINF,
    GRID_MSGPOLI23_ALL.MSGPOLI23_DBLLSUP,
    GRID_MSGPOLI23_ALL.MSGPOLI23_COEFICIENTE,
    GRID_MSGPOLI23_ALL.MSGPOLI23_PORCENTUAL,
    GRID_MSGPOLI23_ALL.MSGPOLI23_PARAMETROS,
    GRID_MSGPOLI23_ALL.MSGPOLI23_NOTAS,
    GRID_MSGPOLI23_ALL.MSGPOLI23_FAPL,
    UPPER(GRID_MSGPOLI23_ALL.MSGPOLI24_DESCRI),
    GRID_MSGPOLI23_ALL.MSGPOLI24_CODEXT,
    GRID_MSGPOLI23_ALL.MSGPOLI23_ULT_ANO,
    GRID_MSGPOLI23_ALL.MSGPOLI23_ULT_MES
    FROM GRID_MSGPOLI23_ALL
          where GRID_MSGPOLI23_ALL.rela_socsyst01 = :EMPRESA
          and GRID_MSGPOLI23_ALL.msgpoli23_ano = :ANO
          and GRID_MSGPOLI23_ALL.msgpoli23_mes = :MES
          and GRID_MSGPOLI23_ALL.codigo_bitacora = 'MODIFICADO'
          and GRID_MSGPOLI23_ALL.RELA_MSGPOLI20_AUX = :MSGPOLI20_AUX
    INTO :RELA_MSGPOLI20_AUX,
         :RELA_SOCSYST01,
         :CODIGO_BITACORA,
         :DESCRI_BITACORA,
         :RELA_MSGPOLI01,
         :NO_POLIZA,
         :FECHA_POLIZA,
         :DESCRIPCION_POLIZA,
         :RELA_MSGPOLI20,
         :RELA_SOCSYST10,
         :ID_MSGPOLI23,
         :MSGPOLI23_ANO,
         :MSGPOLI23_MES,
         :MSGPOLI23_IMPORTE,
         :MSGPOLI23_IMPORTE_ACUMU,
         :MSGPOLI23_IMPORTE_RING,
         :MSGPOLI23_IMPORTE_RING_ACUMU,
         :MSGPOLI23_IMPORTE_REGR,
         :MSGPOLI23_IMPORTE_REGR_ACUMU,
         :MSGPOLI23_IMPORTE_CARGO,
         :MSGPOLI23_IMPORTE_ABONO,
         :MSGPOLI23_IMPORTE_INGRESOS,
         :MSGPOLI23_IMPORTE_SING,
         :MSGPOLI23_IMPORTE_EGRESOS,
         :MSGPOLI23_IMPORTE_SEGR,
         :MSGPOLI23_IMPORTE_AFAVOR,
         :MSGPOLI23_IMPORTE_AFAVOR,
         :MSGPOLI23_IMPORTE_SINMOD,
         :MSGPOLI23_IMPORTE_USUARIO,
         :MSGPOLI23_IMPORTE_PERDIDA,
         :RELA_SOCSYST10_TABLA,
         :TABLA,
         :MSGPOLI23_DBLCUOT,
         :MSGPOLI23_DBLPORC,
         :MSGPOLI23_DBLLINF,
         :MSGPOLI23_DBLLSUP,
         :MSGPOLI23_COEFICIENTE,
         :MSGPOLI23_PORCENTUAL,
         :MSGPOLI23_PARAMETROS,
         :MSGPOLI23_NOTAS,
         :MSGPOLI23_FAPL,
         :MSGPOLI24_DESCRI,
         :MSGPOLI24_CODEXT,
         :MSGPOLI23_ULT_ANO,
         :MSGPOLI23_ULT_MES
  DO
  BEGIN
    SUSPEND;
  END
END
REP_MSGPOLI23_ISR              

BEGIN
     IMPORTEFINAL = :IMPORTE;
  FOR
    SELECT
        GRID_MSGPOLI23.RELA_SOCSYST01,
        SUM(GRID_MSGPOLI23.MSGPOLI23_IMPORTE),
        GRID_MSGPOLI23.RELA_MSGPOLI20,
        SUM(GRID_MSGPOLI23.MSGPOLI23_IMPORTE_RING)
    FROM GRID_MSGPOLI23
    WHERE  GRID_MSGPOLI23.MSGPOLI24_CODEXT LIKE 'MEX-F-ISR%'
        AND grid_msgpoli23.rela_socsyst01 = :empresa
        AND grid_msgpoli23.msgpoli23_ano = :ano
        AND grid_msgpoli23.msgpoli23_mes <= :mes
        AND grid_msgpoli23.codigo_bitacora = 'MODIFICADO'
    GROUP BY
        GRID_MSGPOLI23.RELA_SOCSYST01,
        GRID_MSGPOLI23.RELA_MSGPOLI20
    INTO :RELA_SOCSYST01,
         :MSGPOLI23_IMPORTE,
         :RELA_MSGPOLI20,
         :MSGPOLI23_IMPORTE_RING
  DO
  BEGIN
       if (IMPORTEFINAL > MSGPOLI23_IMPORTE) then
            IMPORTEFINAL = :IMPORTEFINAL - MSGPOLI23_IMPORTE;
            ELSE
                if ((IMPORTEFINAL > 0.00) AND (IMPORTEFINAL < MSGPOLI23_IMPORTE )) then
                    BEGIN
                        MSGPOLI23_IMPORTE = IMPORTEFINAL;
                        IMPORTEFINAL = 0.00;
                    END
                    ELSE if (IMPORTEFINAL > MSGPOLI23_IMPORTE_RING) then
                            IMPORTEFINAL = :IMPORTEFINAL - MSGPOLI23_IMPORTE_RING;
                         ELSE if ((IMPORTEFINAL > 0.00) AND (IMPORTEFINAL < MSGPOLI23_IMPORTE_RING )) then
                            BEGIN
                                MSGPOLI23_IMPORTE_RING = IMPORTEFINAL;
                                IMPORTEFINAL = 0.00;
                            END
                            ELSE IF ((IMPORTEFINAL < 0) or (IMPORTEFINAL = 0.0 )) THEN
                                 MSGPOLI23_IMPORTE = IMPORTEFINAL; 
    SUSPEND;
  END
END
REP_SCEXMLS40_EDOCUENTA        

DECLARE VARIABLE SQLUSER VARCHAR(2000);
DECLARE VARIABLE ID_MONEDA BIGINT;
BEGIN
  DELETE FROM ZTMSCEXMLS40_DEPOSITOS
  WHERE ZTMSCEXMLS40_DEPOSITOS.USUARIO = CURRENT_USER;

  INSERT INTO ZTMSCEXMLS40_DEPOSITOS
    SELECT
      CURRENT_USER,
      SCEXMLS41_DET_XMLS.RELA_SCEXMLS11,
      NULL,
      SUM(SCEXMLS41_DET_XMLS.SCEXMLS41_IMPORTE)
    FROM SCEXMLS40_CAB_POLIZAS
    INNER JOIN SCEXMLS41_DET_XMLS ON (SCEXMLS40_CAB_POLIZAS.ID_SCEXMLS40 = SCEXMLS41_DET_XMLS.RELA_SCEXMLS40)
    INNER JOIN SCEXMLS11_DET_MIGRACION ON (SCEXMLS41_DET_XMLS.RELA_SCEXMLS11 = SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11)
    INNER JOIN SCEXMLS10_CAB_MIGRACION ON (SCEXMLS11_DET_MIGRACION.RELA_SCEXMLS10 = SCEXMLS10_CAB_MIGRACION.ID_SCEXMLS10)
    WHERE SCEXMLS10_CAB_MIGRACION.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND SCEXMLS40_CAB_POLIZAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
    GROUP BY SCEXMLS41_DET_XMLS.RELA_SCEXMLS11;

  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :SUCURSAL;

  ID_MONEDA = NULL;

  SELECT FIRST 1 CBO_MONEDAS_COTIZACION.ID_SOCSYST10
  FROM CBO_MONEDAS_COTIZACION
  WHERE CBO_MONEDAS_COTIZACION.RELA_SOCSYST01 = :PARAM_EMPRESA
    AND CBO_MONEDAS_COTIZACION.ID_SOCSYST10 = :PARAM_MONEDA
    AND CBO_MONEDAS_COTIZACION.SICCONT04_VENTA != 1
  INTO :ID_MONEDA;

  SQLUSER = 'SELECT
                 SCEXMLS11_DET_MIGRACION.ID_SCEXMLS11,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_ENTIDAD,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_FOLIO,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID_FECHA,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_UUID_IMPORTE,
                 SCEXMLS11_DET_MIGRACION.SCEXMLS11_MONEDA
             FROM SCEXMLS11_DET_MIGRACION
             INNER JOIN SCEXMLS10_CAB_MIGRACION ON (SCEXMLS11_DET_MIGRACION.RELA_SCEXMLS10 = SCEXMLS10_CAB_MIGRACION.ID_SCEXMLS10)
             WHERE SCEXMLS10_CAB_MIGRACION.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             ' AND SCEXMLS10_CAB_MIGRACION.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA;

  SQLUSER = :SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.SCEXMLS11_CAMBIO = 1';

  IF (:ID_MONEDA IS NOT NULL) THEN
    SQLUSER = :SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.SCEXMLS11_CAMBIO != 1';

  IF (:PARAM_ENTIDAD != -1) THEN
    BEGIN
      SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
      FROM SOCSYST10_TBL_LISTAESTADOS
      WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = :PARAM_TIPO
      INTO :CODIGO;

      IF (:CODIGO = 'CLIENTE') THEN
        SQLUSER = SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SICINGR01 = ' || :PARAM_ENTIDAD;
      ELSE
        IF (:CODIGO = 'PROVE') THEN
          SQLUSER = SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SICEGRE01 = ' || :PARAM_ENTIDAD;
        ELSE
          IF (:CODIGO = 'NOMI') THEN
            SQLUSER = SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SRHMAIN10 = ' || :PARAM_ENTIDAD;
    END
  ELSE
    SQLUSER = SQLUSER || ' AND SCEXMLS11_DET_MIGRACION.RELA_SOCSYST10 = ' || :PARAM_TIPO;

  FOR EXECUTE STATEMENT :SQLUSER
  INTO
      :ID_SCEXMLS11,
      :ENTIDAD,
      :FOLIO,
      :FECHA,
      :IMPORTE_REAL,
      :MONEDA
  DO
  BEGIN
    IMPORTE_DEPOSITO = 0;
    SALDO = 0;
    MENOS30 = 0;
    MENOS60 = 0;
    MENOS90 = 0;
    MAS90 = 0;

    SELECT ZTMSCEXMLS40_DEPOSITOS.IMPORTE
    FROM ZTMSCEXMLS40_DEPOSITOS
    WHERE ZTMSCEXMLS40_DEPOSITOS.ID_SCEXMLS11 = :ID_SCEXMLS11
      AND ZTMSCEXMLS40_DEPOSITOS.USUARIO = CURRENT_USER
    INTO :IMPORTE_DEPOSITO;

    IF (:IMPORTE_DEPOSITO IS NULL) THEN
      IMPORTE_DEPOSITO = 0;

    SALDO = IMPORTE_REAL - IMPORTE_DEPOSITO;
    DIAS = DAYSBETWEEN(:FECHA, 'NOW');

    IF (:DIAS < 30) THEN
      MENOS30 = SALDO;
    ELSE
      IF (:DIAS >= 30 AND :DIAS < 60) THEN
        MENOS60 = SALDO;
      ELSE
        IF (:DIAS >= 60 AND :DIAS < 90) THEN
          MENOS90 = SALDO;
        ELSE
          MAS90 = SALDO;

    IF (:SALDO != 0) THEN
      SUSPEND;
  END
END
REP_MSGPOLI01_SRHMAIN10        

DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RELA_SICCONT02IMP BIGINT;
DECLARE VARIABLE RELA_SICCONT02RETE BIGINT;
DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_IMPUESTOS BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_RETENCIONES BIGINT;
DECLARE VARIABLE IMPORTE_IMP DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_IIT DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_IIS DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_RRT DOUBLE PRECISION;
DECLARE VARIABLE ORDEN INTEGER;
begin
    /* IMP = IMPORTE
    /  III = Impuestos
    /  IIT = Total Impuestos
    /  IIS = SubTotal Con Impuestos
    /  RRR = Retenciones Ingresos
    /  RRT = Total Retenciones
    /  NET = Total Neto = IIS - RRT  */

    Select CBO_TIPO_ASIENTOS.id_socsyst10
    from CBO_TIPO_ASIENTOS
    WHERE CBO_TIPO_ASIENTOS.socsyst10_codigo = 'ACREDITA'
    INTO :RELA_SOCSYST10_IMPUESTOS;

    Select CBO_TIPO_SUMACUENTAS.id_socsyst10
    from CBO_TIPO_SUMACUENTAS
    WHERE CBO_TIPO_SUMACUENTAS.socsyst10_codigo = 'RET'
    INTO :RELA_SOCSYST10_RETENCIONES;

    for Select
    CBO_SRHMAIN10_FACT.id_srhmain10,
    CBO_SRHMAIN10_FACT.id_socusua02,
    CBO_SRHMAIN10_FACT.socusua01_tipo,
    CBO_SRHMAIN10_FACT.entidad,
    CBO_SRHMAIN10_FACT.rela_siccont02,
    CBO_SRHMAIN10_FACT.siccont02_codext,
    CBO_SRHMAIN10_FACT.siccont02_descri
    from CBO_SRHMAIN10_FACT
    where CBO_SRHMAIN10_FACT.rela_socsyst01 = :empresa
    ORDER BY CBO_SRHMAIN10_FACT.entidad
    into :id_srhmain10,
         :id_socusua02,
         :ENTIDAD_TIPO,
         :entidad,
         :rela_siccont02,
         :siccont02_codext,
         :siccont02_descri
    do
    begin
        if (tipomovi = 'M') then
            select
            REP_MSGPOLI01_SICEGRE01_MOV.importe
            from REP_MSGPOLI01_SICEGRE01_MOV(:empresa, :ano, :mes, :id_srhmain10, :rela_siccont02)
            into :IMPORTE;
        else
            select
            REP_MSGPOLI01_SICEGRE01_CON.importe
            from REP_MSGPOLI01_SICEGRE01_CON(:empresa, :ano, :mes, :id_srhmain10, :rela_siccont02)
            into :IMPORTE;

        orden = 0;
        importe_imp = 0;
        importe_iit = 0;
        importe_iis = 0;
        importe_rrt = 0;

        select descripcion
        from jam$_crosstab_descri('Importe', :orden)
        into siccont02_descri;

        if (IMPORTE <> 0) then
            begin
                importe_imp = importe;
                importe_tipo = 'IMP';
                suspend;

                IMPORTE_IIT = 0;
                for Select
                GRID_MSGPOLI09.rela_siccont02,
                GRID_MSGPOLI09.siccont02_codext,
                GRID_MSGPOLI09.siccont02_descri
                from GRID_MSGPOLI09
                WHERE GRID_MSGPOLI09.RELA_SOCSYST01 = :empresa
                AND GRID_MSGPOLI09.rela_socsyst10_tipo = :RELA_SOCSYST10_IMPUESTOS
                order by GRID_MSGPOLI09.siccont02_codext
                into :rela_siccont02imp,
                     :siccont02_codext,
                     :siccont02_descri
                do
                begin
                    if (tipomovi = 'M') then
                        select
                        REP_MSGPOLI01_SICEGRE01_MOV.importe
                        from REP_MSGPOLI01_SICEGRE01_MOV(:empresa, :ano, :mes, :id_srhmain10, :rela_siccont02imp)
                        into :IMPORTE;
                    else
                        select
                        REP_MSGPOLI01_SICEGRE01_CON.importe
                        from REP_MSGPOLI01_SICEGRE01_CON(:empresa, :ano, :mes, :id_srhmain10, :rela_siccont02imp)
                        into :IMPORTE;

                    importe_tipo = 'III';
                    IMPORTE_IIT = IMPORTE_IIT + IMPORTE;

                    orden = orden + 1;
                    select descripcion
                    from jam$_crosstab_descri(:siccont02_descri, :orden)
                    into siccont02_descri;
                    suspend;
                end
                importe_tipo = 'IIT';
                siccont02_codext = '';
                siccont02_descri = 'Total de Impuestos';
                IMPORTE = IMPORTE_IIT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                suspend;

                importe_tipo = 'IIS';
                siccont02_codext = '';
                siccont02_descri = 'SubTotal';
                IMPORTE = IMPORTE_IMP + IMPORTE_IIT;
                importe_iis = IMPORTE;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                suspend;

                IMPORTE_RRT = 0;
                FOR SELECT
                MSGPOLI22_DET_EGRESOS.RELA_SICCONT02,
                SICCONT02_ARB_PLANCTA_EMP.siccont02_codext,
                SICCONT02_ARB_PLANCTA_EMP.siccont02_descri
                FROM SICCONT02_ARB_PLANCTA_EMP
                INNER JOIN MSGPOLI22_DET_EGRESOS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = MSGPOLI22_DET_EGRESOS.RELA_SICCONT02)
                INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI22_DET_EGRESOS.RELA_SOCSYST10_TSUMA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI22_DET_EGRESOS.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
                where MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :empresa
                and MSGPOLI22_DET_EGRESOS.rela_socsyst10_tsuma = :RELA_SOCSYST10_RETENCIONES
                order by SICCONT02_ARB_PLANCTA_EMP.siccont02_codext
                into :rela_siccont02rete,
                     :siccont02_codext,
                     :siccont02_descri
                do
                begin
                    if (tipomovi = 'M') then
                        select
                        REP_MSGPOLI01_SICEGRE01_MOV.importe
                        from REP_MSGPOLI01_SICEGRE01_MOV(:empresa, :ano, :mes, :id_srhmain10, :rela_siccont02rete)
                        into :IMPORTE;
                    else
                        select
                        REP_MSGPOLI01_SICEGRE01_CON.importe
                        from REP_MSGPOLI01_SICEGRE01_CON(:empresa, :ano, :mes, :id_srhmain10, :rela_siccont02rete)
                        into :IMPORTE;

                    importe_tipo = 'RRR';
                    IMPORTE_RRT = IMPORTE_RRT + IMPORTE;

                    orden = orden + 1;
                    select descripcion
                    from jam$_crosstab_descri(:siccont02_descri, :orden)
                    into siccont02_descri;
                    suspend;
                end

                importe_tipo = 'RRT';
                siccont02_codext = '';
                siccont02_descri = 'Total Retenciones';
                IMPORTE = IMPORTE_RRT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                suspend;

                importe_tipo = 'NET';
                siccont02_codext = '';
                siccont02_descri = 'Importe Neto';
                IMPORTE = IMPORTE_IIS - IMPORTE_RRT;

                orden = orden + 1;
                select descripcion
                from jam$_crosstab_descri(:siccont02_descri, :orden)
                into siccont02_descri;
                suspend;
            end
    end
end
PRD_PYMVENT45                  

DECLARE VARIABLE RELA_SRHMAIN10 BIGINT;
DECLARE VARIABLE RELA_PYMINVE30 BIGINT;
DECLARE VARIABLE RELA_PYMINVE30_INGRESO BIGINT;
DECLARE VARIABLE RELA_PYMINVE30_PROVEEDOR BIGINT;
DECLARE VARIABLE RELA_PYMINVE30_REPARADO BIGINT;
DECLARE VARIABLE RELA_PYMINVE30_ENTREGADO BIGINT;
begin
    delete from ztmpcbo_entidades where ztmpcbo_entidades.id_user = current_user;

    insert into ztmpcbo_entidades(
    ztmpcbo_entidades.id_user,
    ztmpcbo_entidades.id_socusua02,
    ztmpcbo_entidades.id_sicegre01,
    ztmpcbo_entidades.entidad)
    select
    current_user,
    CBO_SICEGRE01.id_socusua02,
    CBO_SICEGRE01.id_sicegre01,
    CBO_SICEGRE01.entidad
    from CBO_SICEGRE01
    ;

    PYMINVE31_NROLOTE = null;
    rela_pymvent24 = NULL;

    SELECT
    MAX(pyminve31_dep_proveedores.rela_pyminve30),
    MAX(pyminve31_dep_proveedores.id_pyminve31),
    pyminve31_dep_proveedores.pyminve31_nrolote
    FROM PYMINVE50_CAB_CONCEPTOS
    INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50 = PYMINVE30_MOV_STOCK.RELA_PYMINVE50)
    INNER JOIN PYMINVE31_DEP_PROVEEDORES ON (PYMINVE30_MOV_STOCK.ID_PYMINVE30 = PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINVE50_CAB_CONCEPTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = 'ENTRADA'
    AND pyminve31_dep_proveedores.pyminve31_nrolote = :nroserie
    GROUP by pyminve31_dep_proveedores.pyminve31_nrolote
    INTO :rela_pyminve30,
         :rela_pyminve31,
         :PYMINVE31_NROLOTE;

    select
    PYMVENT01_CAB_CAJAS.id_pymvent01,
    PYMVENT01_CAB_CAJAS.rela_pyminve40_danado,
    PYMVENT21_DET_TICKETS.id_pymvent21,
    PYMVENT21_DET_TICKETS.rela_pyminve10,
    PYMVENT02_DET_CAJEROS.RELA_SRHMAIN10,
    PYMVENT01_CAB_CAJAS.rela_socwflo01,
    PYMVENT01_CAB_CAJAS.rela_socsyst01,
    socsyst01_cab_clientes.socsyst01_descri,
    socwflo01_arb_organigrama.socwflo01_descri,
    PYMVENT01_CAB_CAJAS.pymvent01_descripcion,
    pymvent20_cab_tickets.rela_pymvent24,
    pymvent20_cab_tickets.pymvent20_docnro,
    pymvent20_cab_tickets.pymvent20_fapl,
    pymvent21_det_tickets.pymvent21_codigo,
    pymvent21_det_tickets.pymvent21_descripcion,
    pymvent21_det_tickets.pymvent21_impounitario
    FROM PYMVENT21_DET_TICKETS
    INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
    INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
    INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT01_CAB_CAJAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
    INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT01_CAB_CAJAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
    INNER JOIN PYMVENT02_DET_CAJEROS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT02 = PYMVENT02_DET_CAJEROS.ID_PYMVENT02)
    INNER JOIN PYMINVE30_MOV_STOCK ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
    where PYMINVE30_MOV_STOCK.id_pyminve30 = :rela_pyminve30
    into :rela_pymvent01,
         :rela_pyminve40_danado,
         :rela_pymvent21,
         :rela_pyminve10,
         :RELA_SRHMAIN10,
         :rela_socwflo01,
         :rela_socsyst01,
         :socsyst01_descri,
         :socwflo01_descri,
         :pymvent01_descripcion,
         :rela_pymvent24,
         :pymvent20_docnro,
         :pymvent20_fapl,
         :pymvent21_codigo,
         :pymvent21_descripcion,
         :pymvent21_impounitario;

    SELECT CBO_SRHMAIN10.entidad
    FROM CBO_SRHMAIN10
    WHERE CBO_SRHMAIN10.ID_SRHMAIN10 = :RELA_SRHMAIN10
    INTO :cajero;

    select
    pymingr06_det_items.id_pymingr06,
    pymingr01_cab_facturas.pymingr01_docnro,
    pymingr01_cab_facturas.pymingr01_ffac,
    pymingr01_cab_facturas.pymingr01_concepto
    from pymingr06_det_items
    inner join pymingr01_cab_facturas on (pymingr01_cab_facturas.id_pymingr01 = pymingr06_det_items.RELA_PYMINGR01)
    where pymingr06_det_items.rela_pymvent21 = :rela_pymvent21
    AND pymingr01_cab_facturas.RELA_MSGPOLI01_CANCELADO IS NULL
    into :rela_pymingr06,
         :pymingr01_docnro,
         :pymingr01_ffac,
         :pymingr01_concepto;

    if (PYMINVE31_NROLOTE is not null) then
    begin
        SELECT
        PYMVENT45_CAB_GARANTIAS.id_pymvent45,
        PYMVENT45_CAB_GARANTIAS.rela_sicingr01,
        PYMVENT46_DET_GARANTIAS.pymvent46_nroserie_repos
        FROM PYMVENT45_CAB_GARANTIAS
        INNER JOIN PYMVENT46_DET_GARANTIAS ON (PYMVENT45_CAB_GARANTIAS.ID_PYMVENT45 = PYMVENT46_DET_GARANTIAS.RELA_PYMVENT45)
        WHERE PYMVENT46_DET_GARANTIAS.pymvent46_nroserie = :NROSERIE
        INTO :id_pymvent45,
             :rela_sicingr01_garantia,
             :PYMVENT46_NROSERIE_REPOS;

        /* ----------------------------------------------------------------------------------------------------------- */

        rela_sicingr01 = NULL;

        if (rela_pymvent24 IS NULL) then
            CLIENTE_POS = 'no se definio en la venta. Debe agregar el cliente para continuar';
        else
            select
            pymvent24_cab_clientes.pymvent24_cliente,
            pymvent24_cab_clientes.rela_sicingr01
            from pymvent24_cab_clientes
            where pymvent24_cab_clientes.id_pymvent24 = :rela_pymvent24
            into :CLIENTE_POS,
                 :rela_sicingr01;

        if (rela_sicingr01 is null) then
            CLIENTE_PYME = 'no tiene definido el CLIENTE PYME. Debe agregar el cliente para continuar';
        else
            select
            cbo_sicingr01.entidad
            from cbo_sicingr01
            where cbo_sicingr01.id_sicingr01 = :rela_sicingr01
            into :CLIENTE_PYME;

        if (rela_sicingr01_garantia is null) then
            cliente_garantia = 'Se asignará el CLIENTE DE LA GARANTIA. En la recepción del producto dañado';
        else
            select
            cbo_sicingr01.entidad
            from cbo_sicingr01
            where cbo_sicingr01.id_sicingr01 = :rela_sicingr01_garantia
            into :CLIENTE_GARANTIA;

        /* ----------------------------------------------------------------------------------------------------------- */

        SELECT
        max(PYMINVE24_CAB_RECEPCION.id_pyminve24),
        max(PYMINVE27_DET_RECEPCION.id_pyminve27),
        max(PYMINVE25_CAB_PEDIDOS.pyminve25_docnro),
        max(PYMINVE24_CAB_RECEPCION.pyminve24_docnro),
        max(PYMINVE24_CAB_RECEPCION.pyminve24_fecnro),
        ztmpcbo_entidades.entidad,
        max(PYMINVE26_DET_PEDIDOS.pyminve26_impcostouni)
        FROM ztmpcbo_entidades
        INNER JOIN PYMINVE25_CAB_PEDIDOS ON (ztmpcbo_entidades.ID_SICEGRE01 = PYMINVE25_CAB_PEDIDOS.RELA_SICEGRE01)
        INNER JOIN PYMINVE26_DET_PEDIDOS ON (PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25 = PYMINVE26_DET_PEDIDOS.RELA_PYMINVE25)
        INNER JOIN PYMINVE27_DET_RECEPCION ON (PYMINVE26_DET_PEDIDOS.ID_PYMINVE26 = PYMINVE27_DET_RECEPCION.RELA_PYMINVE26)
        INNER JOIN PYMINVE24_CAB_RECEPCION ON (PYMINVE27_DET_RECEPCION.RELA_PYMINVE24 = PYMINVE24_CAB_RECEPCION.ID_PYMINVE24)
        INNER JOIN PYMINVE25_CAB_PEDIDOS ON (PYMINVE24_CAB_RECEPCION.RELA_PYMINVE25 = PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25)
        where ztmpcbo_entidades.id_user = current_user
        and PYMINVE27_DET_RECEPCION.pyminve27_nrolote = :NROSERIE
        group by PYMINVE27_DET_RECEPCION.pyminve27_nrolote, ztmpcbo_entidades.entidad
        into :rela_pyminve24,
             :rela_pyminve27,
             :PYMINVE25_DOCNRO,
             :pyminve24_docnro,
             :pyminve24_fecnro,
             :PROVEEDOR,
             :pyminve26_impcostouni;

        SELECT
        PYMVENT46_DET_GARANTIAS.rela_pyminve30,
        PYMVENT46_DET_GARANTIAS.rela_pyminve30_proveedor,
        PYMVENT46_DET_GARANTIAS.rela_pyminve30_reparado,
        PYMVENT46_DET_GARANTIAS.rela_pyminve30_entregado
        FROM PYMVENT46_DET_GARANTIAS
        where PYMVENT46_DET_GARANTIAS.pymvent46_nroserie = :NROSERIE
        into :rela_pyminve30_ingreso,
             :rela_pyminve30_proveedor,
             :rela_pyminve30_reparado,
             :rela_pyminve30_entregado;

        if (rela_pyminve30_ingreso is null and
            rela_pyminve30_proveedor is null and
            rela_pyminve30_reparado is null and
            rela_pyminve30_entregado is null) then
        BEGIN
            STATUS = 'Esperando INGRESO para enviar al PROVEEDOR';
            STATUS_CODE = 0;
        END
        else if (rela_pyminve30_ingreso is not null and
                 rela_pyminve30_proveedor is null and
                 rela_pyminve30_reparado is null and
                 rela_pyminve30_entregado is null) then
        BEGIN
            STATUS = 'Esperando PROVEEDOR para enviar a REPARAR O REPOSICION';
            STATUS_CODE = 1;
        END
        else if (rela_pyminve30_ingreso is not null and
                 rela_pyminve30_proveedor is not null and
                 rela_pyminve30_reparado is null and
                 rela_pyminve30_entregado is null) then
        BEGIN
            STATUS = 'Esperando REPARAR O REPOSICION para ENTREGAR';
            STATUS_CODE = 2;
        END
        else if (rela_pyminve30_ingreso is not null and
                 rela_pyminve30_proveedor is not null and
                 rela_pyminve30_reparado is not null and
                 rela_pyminve30_entregado is null) then
        BEGIN
            STATUS = 'Esperando ENTREGAR a CLIENTE';
            STATUS_CODE = 3;
        END
        else
        BEGIN
            STATUS = 'Procesos de INGRESO, PROVEEDOR, REPARACIÓN Y ENTREGA finalizados';
            STATUS_CODE = 4;
        END
        suspend;
    end
end
PRD_CREA_CFDI_CORTE_POS_DEL    

DECLARE VARIABLE ENCONTRO INTEGER;
begin
    FOR SELECT
    MSGPOLI01_CAB_POLIZAS.id_msgpoli01
    FROM MSGPOLI01_CAB_POLIZAS
    WHERE MSGPOLI01_CAB_POLIZAS.msgpoli01_descripcion = 'CIERRE DE CAJA-POS'
    INTO :id_msgpoli01
    DO
    begin
        SELECT count(*)
        FROM PYMINGR01_CAB_FACTURAS
        INNER JOIN PYMINGR18_DEP_FACTELECT ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01)
        WHERE pymingr01_cab_facturas.rela_msgpoli01 = :id_msgpoli01
        and pymingr01_cab_facturas.pymingr01_concepto = 'CORTE DE CAJA'
        and PYMINGR18_DEP_FACTELECT.pymingr18_sello is not null
        into :encontro;

        if (encontro = 0) then
        begin
            delete from MSGPOLI01_CAB_POLIZAS where MSGPOLI01_CAB_POLIZAS.id_msgpoli01 = :id_msgpoli01;
            suspend;
        end
   END
end
SOC$_CFDIXML_NOMINA            

DECLARE VARIABLE ID_SCEXMLS20 BIGINT;
DECLARE VARIABLE ID_SCEXMLS25 BIGINT;
DECLARE VARIABLE RELA_SICCONT02 BIGINT;
begin
    ok = 1;

    select scexmls20_cab_parametrizacion.id_scexmls20
    from scexmls20_cab_parametrizacion
    where scexmls20_cab_parametrizacion.rela_socsyst01 = :rela_socsyst01
    into :id_scexmls20;

    rela_siccont02 = NULL;
    ID_SCEXMLS25 = NULL;

    if (IMPORTE_GRAVADO <> 0) then
    begin
        select
        scexmls25_det_nominas.id_scexmls25,
        scexmls25_det_nominas.rela_siccont02
        from scexmls25_det_nominas
        where scexmls25_det_nominas.rela_scexmls20 = :id_scexmls20
        and scexmls25_det_nominas.scexmls25_tipo = :tipo_concepto
        and scexmls25_det_nominas.scexmls25_gravado = 1
        and scexmls25_det_nominas.scexmls25_concepto = :concepto
        INTO :id_scexmls25, :rela_siccont02;

        if (id_scexmls25 is null) then
        BEGIN
            insert into scexmls25_det_nominas(scexmls25_det_nominas.rela_scexmls20,
                                              scexmls25_det_nominas.scexmls25_tipo,
                                              scexmls25_det_nominas.scexmls25_gravado,
                                              scexmls25_det_nominas.scexmls25_concepto)
            values(:id_scexmls20, :TIPO_CONCEPTO, 1, :concepto);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :id_scexmls25;

            OK = 0;
        END

        if (rela_siccont02 is null) then
            OK = 0;
    end

    if (importe_exento <> 0) then
    begin
        select
        scexmls25_det_nominas.id_scexmls25,
        scexmls25_det_nominas.rela_siccont02
        from scexmls25_det_nominas
        where scexmls25_det_nominas.rela_scexmls20 = :id_scexmls20
        and scexmls25_det_nominas.scexmls25_tipo = :tipo_concepto
        and scexmls25_det_nominas.scexmls25_gravado = 0
        and scexmls25_det_nominas.scexmls25_concepto = :concepto
        INTO :id_scexmls25, :rela_siccont02;

        if (id_scexmls25 is null) then
        BEGIN
            insert into scexmls25_det_nominas(scexmls25_det_nominas.rela_scexmls20,
                                              scexmls25_det_nominas.scexmls25_tipo,
                                              scexmls25_det_nominas.scexmls25_gravado,
                                              scexmls25_det_nominas.scexmls25_concepto)
            values(:id_scexmls20, :TIPO_CONCEPTO, 0, :concepto);

            select socutil02_tbl_ultids.socutil02_ultid
            from socutil02_tbl_ultids
            where socutil02_tbl_ultids.socutil02_usuario = current_user
            into :id_scexmls25;

            OK = 0;
        END

        if (rela_siccont02 is null) then
            OK = 0;
    end

    if (id_scexmls25 is not null) then
        insert into scexmls24_tmp_transacciones(scexmls24_tmp_transacciones.rela_scexmls25,
                                                scexmls24_tmp_transacciones.scexmls24_user,
                                                scexmls24_tmp_transacciones.scexmls24_uuid,
                                                scexmls24_tmp_transacciones.scexmls24_tipo,
                                                scexmls24_tmp_transacciones.scexmls24_descripcion,
                                                scexmls24_tmp_transacciones.scexmls24_cantidad,
                                                scexmls24_tmp_transacciones.scexmls24_importe,
                                                scexmls24_tmp_transacciones.scexmls24_unidad,
                                                scexmls24_tmp_transacciones.scexmls24_valorunidad,
                                                scexmls24_tmp_transacciones.scexmls24_excluir)
        values(:id_scexmls25,
                current_user,
                :uuid,
                :TIPO_CONCEPTO,
                :concepto,
                1,
                :importe_gravado,
                'N/A',
                :importe_exento,
                'N');

    suspend;
end
SOC$_TMPINVE30_IMPORTACION     

DECLARE VARIABLE ID_PYMINVE10 BIGINT;
DECLARE VARIABLE ID_PYMINVE50 BIGINT;
DECLARE VARIABLE ID_PYMINVE40 BIGINT;
DECLARE VARIABLE ID_SOCWFLO01 BIGINT;
DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
BEGIN
  SELECT PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50
  FROM PYMINVE50_CAB_CONCEPTOS
  WHERE PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO = 'EN-NU'
  INTO :ID_PYMINVE50;

  SELECT SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02
  FROM SOCUSUA02_MAE_USUARIOS
  WHERE SOCUSUA02_MAE_USUARIOS.SOCUSUA02_USUARIO = 'ADMIN'
  INTO :ID_SOCUSUA02;

  FOR
    SELECT
        ZTMPINVE30_PRODUCTOS.ID_ZTMPINVE30,
        ZTMPINVE30_PRODUCTOS.ZTMPINVE30_CODIGO,
        ZTMPINVE30_PRODUCTOS.ZTMPINVE30_CODIGO_SUC,
        ZTMPINVE30_PRODUCTOS.ZTMPINVE30_CODIGO_ALM,
        ZTMPINVE30_PRODUCTOS.ZTMPINVE30_EXISTENCIA
    FROM ZTMPINVE30_PRODUCTOS
    WHERE ZTMPINVE30_PRODUCTOS.ZTMPINVE30_EXISTENCIA != 0
    INTO
       :ID_ZTMPINVE30,
       :ZTMPINVE30_CODIGO,
       :ZTMPINVE30_CODIGO_SUC,
       :ZTMPINVE30_CODIGO_ALM,
       :ZTMPINVE30_EXISTENCIA
  DO
  BEGIN
    ID_PYMINVE10 = NULL;

    SELECT PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10
    FROM PYMINVE10_CAB_PRODUCTOS
    WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :ID_SOCSYST01
      AND PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO = :ZTMPINVE30_CODIGO
    INTO :ID_PYMINVE10;

    IF (:ID_PYMINVE10 IS NOT NULL) THEN
      BEGIN
        /* -------------- */
        /* EXISTENCIAS   */
        /* ------------------------------------------------------------------------------------------- */
        /* AQUI SE AGREGAN LAS EXISTENCIAS BUSCANDO LOS CODIGOS DE NUEVAS ENTRADAS, ALMACEN Y SUCURSAL */
        /* ------------------------------------------------------------------------------------------- */

        SELECT SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01
        FROM SOCWFLO01_ARB_ORGANIGRAMA
        WHERE SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO = :ZTMPINVE30_CODIGO_SUC
        INTO :ID_SOCWFLO01;

        SELECT PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40
        FROM PYMINVE40_ARB_LOCACIONES
        WHERE PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODIGO = :ZTMPINVE30_CODIGO_ALM
        INTO :ID_PYMINVE40;

        INSERT INTO PYMINVE30_MOV_STOCK (PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
                                         PYMINVE30_MOV_STOCK.RELA_SOCUSUA02,
                                         PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
                                         PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
                                         PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
                                         PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
                                         PYMINVE30_MOV_STOCK.PYMINVE30_EXISTENCIA)
                                 VALUES (:ID_PYMINVE50,
                                         :ID_SOCUSUA02,
                                         :ID_SOCWFLO01,
                                         :ID_PYMINVE40,
                                         :ID_PYMINVE10,
                                         :ZTMPINVE30_EXISTENCIA,
                                         :ZTMPINVE30_EXISTENCIA);

        SUSPEND;
      END
  END
END
REP_MSGPOLI34_IR               

BEGIN
  SELECT CBO_MESES.SOCSYST10_FILTRO_DES
  FROM CBO_MESES
  WHERE  CBO_MESES.SOCSYST10_CODIGO =:MES
  INTO :MESES;

  FOR
    SELECT
        GRID_MSGPOLI34_PAGADOS.RELA_MSGPOLI24,
        GRID_MSGPOLI34_PAGADOS.RELA_SOCSYST01,
        GRID_MSGPOLI34_PAGADOS.ID_MSGPOLI34,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CLASE,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI24_DESCRI,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI23_ANO,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI23_MES,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_IMPORTE,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_ACTUALIZACION,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_RECARGO,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_ACREDITAMIENTOS,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_AFAVOR,
        GRID_MSGPOLI34_PAGADOS.MSGPOLI35_IMPORTEF,
        CAST('Impuestos' AS VARCHAR(12)),
        CBO_CLIENTES_EMPRESAS.ENTIDAD
    FROM MSGPOLI24_ARB_ORGANIZADOR
    INNER JOIN GRID_MSGPOLI34_PAGADOS ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = GRID_MSGPOLI34_PAGADOS.RELA_MSGPOLI24)
    INNER JOIN CBO_CLIENTES_EMPRESAS ON (GRID_MSGPOLI34_PAGADOS.RELA_SOCSYST01 = CBO_CLIENTES_EMPRESAS.ID_SOCSYST01)
    WHERE GRID_MSGPOLI34_PAGADOS.RELA_SOCSYST01 = :EMPRESA
        AND GRID_MSGPOLI34_PAGADOS.MSGPOLI23_ANO = :ANO
        AND GRID_MSGPOLI34_PAGADOS.MSGPOLI23_MES = :MES
        AND GRID_MSGPOLI34_PAGADOS.MSGPOLI34_RET = 0

    UNION

    SELECT
        GRID_MSGPOLI34_PAGADOS_RET.RELA_MSGPOLI24,
        GRID_MSGPOLI34_PAGADOS_RET.RELA_SOCSYST01,
        GRID_MSGPOLI34_PAGADOS_RET.ID_MSGPOLI34,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CLASE,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI24_DESCRI,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI23_ANO,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI23_MES,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_IMPORTE,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_ACTUALIZACION,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_RECARGO,
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_ACREDITAMIENTOS,
        CAST(0 AS DOUBLE PRECISION),
        GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI35_IMPORTEF,
        CAST('Retenciones' AS VARCHAR(12)),
        CBO_CLIENTES_EMPRESAS.ENTIDAD
    FROM MSGPOLI24_ARB_ORGANIZADOR
    INNER JOIN GRID_MSGPOLI34_PAGADOS_RET ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = GRID_MSGPOLI34_PAGADOS_RET.RELA_MSGPOLI24)
    INNER JOIN CBO_CLIENTES_EMPRESAS ON (GRID_MSGPOLI34_PAGADOS_RET.RELA_SOCSYST01 = CBO_CLIENTES_EMPRESAS.ID_SOCSYST01)
    WHERE GRID_MSGPOLI34_PAGADOS_RET.RELA_SOCSYST01 = :EMPRESA
        AND GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI23_ANO = :ANO
        AND GRID_MSGPOLI34_PAGADOS_RET.MSGPOLI23_MES = :MES
    INTO :RELA_MSGPOLI24,
         :RELA_SOCSYST01,
         :ID_MSGPOLI34,
         :MSGPOLI24_CLASE,
         :MSGPOLI24_DESCRI,
         :MSGPOLI24_CODEXT,
         :MSGPOLI23_ANO,
         :MSGPOLI23_MES,
         :MSGPOLI35_IMPORTE,
         :MSGPOLI35_ACTUALIZACION,
         :MSGPOLI35_RECARGO,
         :MSGPOLI35_ACREDITAMIENTOS,
         :MSGPOLI35_AFAVOR,
         :MSGPOLI35_IMPORTEF,
         :MSGPOLI34_TIPO,
         :ENTIDAD
  DO
  BEGIN
   SELECT VW_MSGPOLI24.MSGPOLI24_DESCRI,
          VW_MSGPOLI24.MSGPOLI24_CODEXT
   FROM VW_MSGPOLI24(:RELA_MSGPOLI24)
   WHERE VW_MSGPOLI24.SOCSYST06_NIVEL = 2
   INTO :MSGPOLI24_GRUPO,
        :MSGPOLI24_CODEXTX;

   MSGPOLI24_GRUPOX = '';

   IF (MSGPOLI24_CODEXTX = '01.02') THEN
      SELECT VW_MSGPOLI24.MSGPOLI24_DESCRI
      FROM VW_MSGPOLI24(:RELA_MSGPOLI24)
      WHERE VW_MSGPOLI24.SOCSYST06_NIVEL = 3
      INTO :MSGPOLI24_GRUPOX;

    MSGPOLI24_GRUPOX = MSGPOLI24_GRUPO || ' - ' || MSGPOLI24_GRUPOX;
    SUSPEND;
  END
END
REP_MSGPOLI01_SRHMAIN10_CON    

DECLARE VARIABLE SICCONT02_TIPO VARCHAR(1);
DECLARE VARIABLE MSGPOLI02_DEBE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABER DOUBLE PRECISION;
begin
    if (mes is not null) then
        begin
            select
            SICCONT02_ARB_PLANCTA_EMP.siccont02_tipo,
            sum(MSGPOLI02_DET_POLIZAS.msgpoli02_debe),
            sum(MSGPOLI02_DET_POLIZAS.msgpoli02_haber)
            FROM MSGPOLI04_CAB_BANCOS
            INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI04)
            INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
            INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
            INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
            where MSGPOLI04_CAB_BANCOS.rela_socsyst01 = :empresa
            and MSGPOLI04_CAB_BANCOS.msgpoli04_ano = :ano
            and MSGPOLI04_CAB_BANCOS.msgpoli04_mes = :mes
            and MSGPOLI02_DET_POLIZAS.rela_sicingr01 = :ID_SICINGR01
            and MSGPOLI02_DET_POLIZAS.rela_siccont02 = :rela_siccont02
            group by SICCONT02_ARB_PLANCTA_EMP.siccont02_tipo
            into :siccont02_tipo,
                 :msgpoli02_debe,
                 :msgpoli02_haber;
        end
    else
        begin
            select
            SICCONT02_ARB_PLANCTA_EMP.siccont02_tipo,
            sum(MSGPOLI02_DET_POLIZAS.msgpoli02_debe),
            sum(MSGPOLI02_DET_POLIZAS.msgpoli02_haber)
            FROM MSGPOLI04_CAB_BANCOS
            INNER JOIN MSGPOLI05_MOV_CONCILIACION ON (MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI04)
            INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI05_MOV_CONCILIACION.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
            INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
            INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
            where MSGPOLI04_CAB_BANCOS.rela_socsyst01 = :empresa
            and MSGPOLI04_CAB_BANCOS.msgpoli04_ano = :ano
            and MSGPOLI02_DET_POLIZAS.rela_sicingr01 = :ID_SICINGR01
            and MSGPOLI02_DET_POLIZAS.rela_siccont02 = :rela_siccont02
            group by SICCONT02_ARB_PLANCTA_EMP.siccont02_tipo
            into :siccont02_tipo,
                 :msgpoli02_debe,
                 :msgpoli02_haber;
        end

    if (siccont02_tipo = 'D') then
        IMPORTE = msgpoli02_debe - msgpoli02_haber;
    else
        IMPORTE = msgpoli02_haber - msgpoli02_debe;

    if (IMPORTE is null) then
        importe = 0;

    suspend;
end
REP_MSGPOLI01_SRHMAIN10_MOV    

DECLARE VARIABLE SICCONT02_TIPO VARCHAR(1);
DECLARE VARIABLE MSGPOLI02_DEBE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABER DOUBLE PRECISION;
begin
    if (mes is not null) then
        begin
              select
              GRID_MSGPOLI02_MSGPOLI01.siccont02_tipo,
              sum(GRID_MSGPOLI02_MSGPOLI01.msgpoli02_debe),
              sum(GRID_MSGPOLI02_MSGPOLI01.msgpoli02_haber)
              from GRID_MSGPOLI02_MSGPOLI01
              where GRID_MSGPOLI02_MSGPOLI01.rela_socsyst01 = :empresa
              and GRID_MSGPOLI02_MSGPOLI01.msgpoli02_ano = :ano
              and GRID_MSGPOLI02_MSGPOLI01.msgpoli02_mes = :mes
              and GRID_MSGPOLI02_MSGPOLI01.rela_sicegre01 = :id_sicegre01
              and GRID_MSGPOLI02_MSGPOLI01.rela_siccont02 = :rela_siccont02
              group by GRID_MSGPOLI02_MSGPOLI01.siccont02_tipo
              into :siccont02_tipo,
                   :msgpoli02_debe,
                   :msgpoli02_haber;
        end
    else
        begin
              select
              GRID_MSGPOLI02_MSGPOLI01.siccont02_tipo,
              sum(GRID_MSGPOLI02_MSGPOLI01.msgpoli02_debe),
              sum(GRID_MSGPOLI02_MSGPOLI01.msgpoli02_haber)
              from GRID_MSGPOLI02_MSGPOLI01
              where GRID_MSGPOLI02_MSGPOLI01.rela_socsyst01 = :empresa
              and GRID_MSGPOLI02_MSGPOLI01.msgpoli02_ano = :ano
              and GRID_MSGPOLI02_MSGPOLI01.rela_sicegre01 = :id_sicegre01
              and GRID_MSGPOLI02_MSGPOLI01.rela_siccont02 = :rela_siccont02
              group by GRID_MSGPOLI02_MSGPOLI01.siccont02_tipo
              into :siccont02_tipo,
                   :msgpoli02_debe,
                   :msgpoli02_haber;
        end

    
    if (siccont02_tipo = 'D') then
        IMPORTE = msgpoli02_debe - msgpoli02_haber;
    else
        IMPORTE = msgpoli02_haber - msgpoli02_debe;

    if (IMPORTE is null) then
        importe = 0;

    suspend;
end
PRD_SOCSYS10_MONEDA            

BEGIN
  FOR
    SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES, SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10, SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
    FROM SOCSYST10_TBL_LISTAESTADOS
    WHERE id_socsyst10 = :param_id_socsyst10
    INTO :SOCSYST10_FILTRO_DES,
         :ID_SOCSYST10,
         :SOCSYST10_CODIGO
  DO
  BEGIN
    SUSPEND;
  END
END
PRD_LISTADATOS                 

DECLARE VARIABLE VAR_ID_SOCSYST09 INTEGER;
begin
  /* Procedure Text */
    select distinct SOCSYST09_COD
        from socsyst09_dep_listaestados
        where SOCSYST09_COD = :codigo_lista
        into :VAR_SOCSYST09_COD;

    if (VAR_SOCSYST09_COD is null) then
        begin
            INSERT INTO socsyst09_dep_listaestados
                (ID_SOCSYST09, SOCSYST09_COD, SOCSYST09_TABLA, SOCSYST09_FAPL)
            VALUES
                (null, :codigo_lista, :tablavirtual_lista, current_timestamp);

            UPDATE socsyst14_det_parametros
                set socsyst14_det_parametros.socsyst14_descri = :descripcion_lista
                where socsyst14_det_parametros.socsyst14_parametro = :VAR_SOCSYST09_COD;
        end
    else
        begin
            select socsyst09_dep_listaestados.id_socsyst09
                from socsyst09_dep_listaestados
                where socsyst09_dep_listaestados.socsyst09_cod = :VAR_SOCSYST09_COD
                INTO :VAR_ID_SOCSYST09;
                
            INSERT INTO SOCSYST10_TBL_LISTAESTADOS
                (RELA_SOCSYST09, ID_SOCSYST10, SOCSYST10_FILTRO_COD, SOCSYST10_FILTRO_DES,
                SOCSYST10_CODIGO, SOCSYST10_CODIGO_EXT1, SOCSYST10_TABLA, SOCSYST10_FAPL)
             VALUES
                (:VAR_ID_SOCSYST09, null, :VAR_ID_SOCSYST09, :descripcion_articulo,
                 :codigo_articulo, null, :tablavirtual_lista, current_timestamp);
        end
  suspend;
end
REP_MSGPOLI03_MAYOR            

DECLARE VARIABLE CLIKE VARCHAR(50);
begin
    clike = codigo || '%';
    MSGPOLI02_SALDO = PSALDOINI;

    FOR SELECT
    vr_msgpoli01_msgpoli02.MSGPOLI01_FCTA,
    vr_msgpoli01_msgpoli02.MSGPOLI02_ANO,
    vr_msgpoli01_msgpoli02.MSGPOLI02_MES,
    vr_msgpoli01_msgpoli02.SOCSYST10_FILTRO_DES,
    vr_msgpoli01_msgpoli02.MSGPOLI01_DOCNRO,
    vr_msgpoli01_msgpoli02.MSGPOLI01_DESCRIPCION,
    vr_msgpoli01_msgpoli02.MSGPOLI02_DEBE,
    vr_msgpoli01_msgpoli02.MSGPOLI02_HABER,
    vr_msgpoli01_msgpoli02.ID_MSGPOLI01,
    vr_msgpoli01_msgpoli02.ID_MSGPOLI02,
    vr_msgpoli01_msgpoli02.RELA_SICCONT02,
    vr_msgpoli01_msgpoli02.siccont02_tipo
    FROM vr_msgpoli01_msgpoli02
    WHERE vr_msgpoli01_msgpoli02.rela_socsyst01 = :pempresa
      AND vr_msgpoli01_msgpoli02.msgpoli02_ano = :pano
      AND vr_msgpoli01_msgpoli02.msgpoli02_mes = :pmes
      AND vr_msgpoli01_msgpoli02.siccont02_codigo like :clike
      order by vr_msgpoli01_msgpoli02.msgpoli01_fcta
    into :MSGPOLI01_FCTA,
         :MSGPOLI02_ANO,
         :MSGPOLI02_MES,
         :SOCSYST10_FILTRO_DES,
         :MSGPOLI01_DOCNRO,
         :MSGPOLI01_DESCRIPCION,
         :MSGPOLI02_DEBE,
         :MSGPOLI02_HABER,
         :ID_MSGPOLI01,
         :ID_MSGPOLI02,
         :RELA_SICCONT02,
         :siccont02_tipo
   do
   begin
        if (siccont02_tipo = 'D') then
            BEGIN
            if (MSGPOLI02_DEBE > 0) then
                MSGPOLI02_SALDO = MSGPOLI02_SALDO + MSGPOLI02_DEBE;
            else
                MSGPOLI02_SALDO = MSGPOLI02_SALDO - MSGPOLI02_HABER;
            END
        else
            begin
            if (MSGPOLI02_DEBE > 0) then
                MSGPOLI02_SALDO = MSGPOLI02_SALDO - MSGPOLI02_DEBE;
            else
                MSGPOLI02_SALDO = MSGPOLI02_SALDO + MSGPOLI02_HABER;
            end
     suspend;
  end
end
REP_MSGPOLI03_AUXILIAR         

DECLARE VARIABLE TMP_RELA_SICCONT02 BIGINT;
BEGIN
  SELECT CBO_CLIENTES_EMPRESAS.ENTIDAD
  FROM CBO_CLIENTES_EMPRESAS
  WHERE CBO_CLIENTES_EMPRESAS.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO :ENTIDAD;

  DELETE FROM ZTMPCONT02_SALDOACUMULADO
  WHERE ZTMPCONT02_SALDOACUMULADO.USUARIO = CURRENT_USER;

  INSERT INTO ZTMPCONT02_SALDOACUMULADO
    SELECT
        CURRENT_USER,
        MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
        MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
        DNVL(SUM(MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE + (MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER * -1)), 0)
    FROM MSGPOLI02_DET_POLIZAS
    INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01)
    WHERE MSGPOLI02_DET_POLIZAS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND MSGPOLI01_CAB_POLIZAS.MSGPOLI01_FCTA < :PARAM_FECHADESDE
    GROUP BY
        MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
        MSGPOLI02_DET_POLIZAS.RELA_SICCONT02;

  RELA_SOCSYST01 = :PARAM_EMPRESA;
  TMP_RELA_SICCONT02 = -1;

  FOR
    SELECT
        VR_MSGPOLI01_MSGPOLI02.SICCONT02_CODIGO,
        VR_MSGPOLI01_MSGPOLI02.SICCONT02_CODEXT,
        VR_MSGPOLI01_MSGPOLI02.SICCONT02_DESCRI,
        VR_MSGPOLI01_MSGPOLI02.SOCWFLO01_CODINT,
        VR_MSGPOLI01_MSGPOLI02.MSGPOLI01_FCTA,
        VR_MSGPOLI01_MSGPOLI02.MSGPOLI02_ANO,
        VR_MSGPOLI01_MSGPOLI02.MSGPOLI02_MES,
        VR_MSGPOLI01_MSGPOLI02.SOCSYST10_FILTRO_DES,
        VR_MSGPOLI01_MSGPOLI02.MSGPOLI01_DOCNRO,
        VR_MSGPOLI01_MSGPOLI02.MSGPOLI01_DESCRIPCION,
        VR_MSGPOLI01_MSGPOLI02.MSGPOLI02_DEBE,
        VR_MSGPOLI01_MSGPOLI02.MSGPOLI02_HABER,
        VR_MSGPOLI01_MSGPOLI02.ID_MSGPOLI01,
        VR_MSGPOLI01_MSGPOLI02.ID_MSGPOLI02,
        VR_MSGPOLI01_MSGPOLI02.RELA_SICCONT02,
        VR_MSGPOLI01_MSGPOLI02.SICCONT02_TIPO
    FROM VR_MSGPOLI01_MSGPOLI02
    WHERE VR_MSGPOLI01_MSGPOLI02.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND CAST(VR_MSGPOLI01_MSGPOLI02.MSGPOLI01_FCTA AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    ORDER BY
        VR_MSGPOLI01_MSGPOLI02.SICCONT02_CODIGO,
        VR_MSGPOLI01_MSGPOLI02.MSGPOLI01_FCTA
  INTO
     :SICCONT02_CODIGO,
     :SICCONT02_CODEXT,
     :SICCONT02_DESCRI,
     :SOCWFLO01_CODINT,
     :MSGPOLI01_FCTA,
     :MSGPOLI02_ANO,
     :MSGPOLI02_MES,
     :SOCSYST10_FILTRO_DES,
     :MSGPOLI01_DOCNRO,
     :MSGPOLI01_DESCRIPCION,
     :MSGPOLI02_DEBE,
     :MSGPOLI02_HABER,
     :ID_MSGPOLI01,
     :ID_MSGPOLI02,
     :RELA_SICCONT02,
     :SICCONT02_TIPO
  DO
  BEGIN
    SALDOANTERIOR = 0;
    TOTALACUMULADO = 0;

    SELECT ZTMPCONT02_SALDOACUMULADO.ACUMULADO
    FROM ZTMPCONT02_SALDOACUMULADO
    WHERE ZTMPCONT02_SALDOACUMULADO.USUARIO = CURRENT_USER
      AND ZTMPCONT02_SALDOACUMULADO.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND ZTMPCONT02_SALDOACUMULADO.ID_SICCONT02 = :RELA_SICCONT02
    INTO :SALDOANTERIOR;

    IF (:SALDOANTERIOR IS NULL) THEN
      SALDOANTERIOR = 0;

    IF (:TMP_RELA_SICCONT02 != :RELA_SICCONT02) THEN
      BEGIN
        TMP_RELA_SICCONT02 = :RELA_SICCONT02;
        TOTALACUMULADO = SALDOANTERIOR;
      END

    SUSPEND;
  END
END
REP_ZTMPPOLI03_CREA            

begin
    DELETE FROM ztmppoli03_balanza
    WHERE ztmppoli03_balanza.ztmppoli03_user = current_user;

    INSERT INTO ztmppoli03_balanza (ztmppoli03_balanza.ztmppoli03_user,
                                    ztmppoli03_balanza.entidad,
                                    ztmppoli03_balanza.fecha,
                                    ztmppoli03_balanza.RELA_SOCSYST01,
                                    ztmppoli03_balanza.ID_SICCONT02,
                                    ztmppoli03_balanza.SICCONT02_CODIGO,
                                    ztmppoli03_balanza.SICCONT02_CODEXT,
                                    ztmppoli03_balanza.SICCONT02_DESCRI,
                                    ztmppoli03_balanza.SICCONT02_TIPO,
                                    ztmppoli03_balanza.SICCONT02_MAYOR,
                                    ztmppoli03_balanza.MSGPOLI03_DSALDOINI,
                                    ztmppoli03_balanza.MSGPOLI03_HSALDOINI,
                                    ztmppoli03_balanza.MSGPOLI03_DEBE,
                                    ztmppoli03_balanza.MSGPOLI03_HABER,
                                    ztmppoli03_balanza.MSGPOLI03_DSALDOFIN,
                                    ztmppoli03_balanza.MSGPOLI03_HSALDOFIN,
                                    ztmppoli03_balanza.TIENEHIJOS,
                                    ztmppoli03_balanza.MSGPOLI03_NETEADO,
                                    ztmppoli03_balanza.nivel,
                                    ztmppoli03_balanza.resultados,
                                    ztmppoli03_balanza.grupo,
                                    ztmppoli03_balanza.grupo1,
                                    ztmppoli03_balanza.msgpoli03_saldo)

                                    select
                                    current_user,
                                    ENTIDAD,
                                    FECHA,
                                    RELA_SOCSYST01,
                                    ID_SICCONT02,
                                    SICCONT02_CODIGO,
                                    SICCONT02_CODEXT,
                                    SICCONT02_DESCRI,
                                    SICCONT02_TIPO,
                                    SICCONT02_MAYOR,
                                    MSGPOLI03_DSALDOINI,
                                    MSGPOLI03_HSALDOINI,
                                    MSGPOLI03_DEBE,
                                    MSGPOLI03_HABER,
                                    MSGPOLI03_DSALDOFIN,
                                    MSGPOLI03_HSALDOFIN,
                                    TIENEHIJOS,
                                    MSGPOLI03_NETEADO,
                                    nivel,
                                    resultados,
                                    grupo,
                                    grupo1,
                                    msgpoli03_saldo
                                    from rep_msgpoli03_balanza_preview(:empresa,:ano,:mes);
end
REP_ZTMPPOLI04_CREA            

begin
    delete from ZTMPPOLI04_BALANCE
    where ZTMPPOLI04_BALANCE.ztmppoli04_user = current_user;

    insert into ZTMPPOLI04_BALANCE(ZTMPPOLI04_BALANCE.ztmppoli04_user,
                                   ZTMPPOLI04_BALANCE.id_siccont02,
                                   ZTMPPOLI04_BALANCE.entidad,
                                   ZTMPPOLI04_BALANCE.fecha,
                                   ZTMPPOLI04_BALANCE.grupo,
                                   ZTMPPOLI04_BALANCE.subgrupo,
                                   ZTMPPOLI04_BALANCE.siccont02_codigo,
                                   ZTMPPOLI04_BALANCE.siccont02_descri,
                                   ZTMPPOLI04_BALANCE.msgpoli03_importe,
                                   ZTMPPOLI04_BALANCE.nivel,
                                   ZTMPPOLI04_BALANCE.rela_socsyst01,
                                   ZTMPPOLI04_BALANCE.siccont02_tipo)

                                   select
                                   current_user,
                                   rep_msgpoli03_balance.id_siccont02,
                                   rep_msgpoli03_balance.entidad,
                                   rep_msgpoli03_balance.fecha,
                                   rep_msgpoli03_balance.grupo,
                                   rep_msgpoli03_balance.subgrupo,
                                   rep_msgpoli03_balance.siccont02_codigo,
                                   rep_msgpoli03_balance.siccont02_descri,
                                   rep_msgpoli03_balance.msgpoli03_importe,
                                   rep_msgpoli03_balance.nivel,
                                   rep_msgpoli03_balance.rela_socsyst01,
                                   rep_msgpoli03_balance.siccont02_tipo
                                   from rep_msgpoli03_balance(:empresa,:ano,:mes,:modo);
end
JAM$_USER_ADD                  

DECLARE VARIABLE CUSUARIO VARCHAR(50);
DECLARE VARIABLE IDSOCUSUA02 BIGINT;
begin
  CUSUARIO = current_user;

  select socusua02_mae_usuarios.id_socusua02
  FROM socusua02_mae_usuarios
  WHERE socusua02_mae_usuarios.socusua02_usuario = :Z_USER
  AND socusua02_mae_usuarios.socusua02_password = :Z_PASS
  INTO :IDSOCUSUA02;

  OK = ADD_USER(1, 'localhost',
  SUBSTR('JAM$_' || :Z_USER,1,31),
  SUBSTR(:Z_PASS,1,8),
  '',
  SUBSTR(:Z_NOM1 || IDSOCUSUA02,1,31),
  SUBSTR(:Z_NOM2,1,31),
  SUBSTR(:Z_NOM3,1,31),
  'sysdba',
  'ChkMts5');
  update SOCUSUA02_MAE_USUARIOS SET SOCUSUA02_USUADB = 1
  WHERE SOCUSUA02_USUARIO = :Z_USER;

  EXECUTE STATEMENT 'GRANT JAM_SOC TO "' || SUBSTR('JAM$_' || :Z_USER,1,31) || '" WITH ADMIN OPTION;';
  suspend;
end
JAM$_USER_DEL                  

begin
  OK = DELETE_USER(1, 'localhost',
  'JAM$_' || :Z_USER,
  'sysdba',
  'ChkMts5');
  update SOCUSUA02_MAE_USUARIOS SET SOCUSUA02_USUADB = 0
  WHERE SOCUSUA02_USUARIO = :Z_USER;
  suspend;
  /* Procedure Text */
end
PRD_SICINGR01                  

DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
DECLARE VARIABLE SOCUSUA01_TIPO CHAR(1);
DECLARE VARIABLE VAR_SOCUSUA SMALLINT;
DECLARE VARIABLE VAR_ID_SOCUSUA BIGINT;
DECLARE VARIABLE VAR1 BIGINT;
BEGIN
  FOR
    SELECT
        SOCUSUA02_MAE_USUARIOS.SOCUSUA02_USUARIO,
        SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA20,
        SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA30,
        SOCUSUA01_MAE_ENTIDADES.SOCUSUA01_TIPO
    FROM SICINGR01_CAB_CLIENTES
    INNER JOIN SOCUSUA02_MAE_USUARIOS ON (SICINGR01_CAB_CLIENTES.RELA_SOCUSUA02 = SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02)
    INNER JOIN SOCUSUA01_MAE_ENTIDADES ON (SOCUSUA02_MAE_USUARIOS.RELA_SOCUSUA01 = SOCUSUA01_MAE_ENTIDADES.ID_SOCUSUA01)
    WHERE SICINGR01_CAB_CLIENTES.ID_SICINGR01 = :PARAM_ID_SICINGR01
    INTO :SOCUSUA02_USUARIO,
         :RELA_SOCUSUA20,
         :RELA_SOCUSUA30,
         :SOCUSUA01_TIPO
  DO
  BEGIN
    IF (:SOCUSUA01_TIPO = 'M' ) THEN
        BEGIN
            VAR_SOCUSUA    = 20;
            VAR_ID_SOCUSUA = :RELA_SOCUSUA20;

            SELECT
                SOCUSUA20_MAE_ENTMORALES.SOCUSUA20_DENOMINACION || ' ' || SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES AS SOCUSUA02_ENTIDAD
            FROM SOCUSUA20_MAE_ENTMORALES
            INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA20_MAE_ENTMORALES.REFE_SOCSYST10_SOCIEDAD = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
            WHERE SOCUSUA20_MAE_ENTMORALES.ID_SOCUSUA20 = :RELA_SOCUSUA20
            INTO :SOCUSUA02_ENTIDAD;
        END
    ELSE
        BEGIN
            VAR_SOCUSUA = 30;
            VAR_ID_SOCUSUA = :RELA_SOCUSUA30;

            SELECT
                SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_NOMBRES || ' ' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_PADRE || ' ' || SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_MADRE AS SOCUSUA02_ENTIDAD
            FROM SOCUSUA30_MAE_ENTFISICAS
            WHERE SOCUSUA30_MAE_ENTFISICAS.ID_SOCUSUA30 = :RELA_SOCUSUA30
            INTO :SOCUSUA02_ENTIDAD;
        END

   SELECT
        SNVL(PRD_SOCUSUA41.SOCUSUA50_CIUDAD,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_PAIS,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_DOMICILIO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_CALLE,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_NRODOMICILIO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_TELEFONO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_FAX,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_CP,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_CORREO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_DEPTO,''),
        SNVL(PRD_SOCUSUA41.SOCUSUA41_PISO,'')
   FROM PRD_SOCUSUA41(:VAR_SOCUSUA, :VAR_ID_SOCUSUA)
   INTO
       :SOCUSUA50_CIUDAD,
       :SOCUSUA41_PAIS,
       :SOCUSUA41_DOMICILIO,
       :SOCUSUA41_CALLE,
       :SOCUSUA41_NRODOMICILIO,
       :SOCUSUA41_TELEFONO,
       :SOCUSUA41_FAX,
       :SOCUSUA41_CP,
       :SOCUSUA41_CORREO,
       :SOCUSUA41_DEPTO,
       :SOCUSUA41_PISO;

    SELECT
        PRD_SOCUSUA40.SOCUSUA40_CODEXT,
        PRD_SOCUSUA40.SOCUSUA40_NUMERO
    FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'RFC')
    INTO
        :SOCUSUA20_SOCUSUA30_CODEXT,
        :SOCUSUA20_SOCUSUA30_RFC;

    IF (:SOCUSUA20_SOCUSUA30_RFC IS NULL) THEN
        SELECT SOCUSUA40_NUMERO
        FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'TXID')
        INTO :SOCUSUA20_SOCUSUA30_RFC;

    IF (:SOCUSUA20_SOCUSUA30_RFC IS NULL) THEN
        SELECT SOCUSUA40_NUMERO
        FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'CUIT')
        INTO :SOCUSUA20_SOCUSUA30_RFC;

    IF (:SOCUSUA20_SOCUSUA30_RFC IS NULL) THEN
        SOCUSUA20_SOCUSUA30_RFC = '';

    CURP = NULL;

    SELECT SNVL(PRD_SOCUSUA40.SOCUSUA40_NUMERO,'')
    FROM PRD_SOCUSUA40(:VAR_SOCUSUA, :VAR_ID_SOCUSUA, 'CURP')
    INTO :CURP;

    GIRO = NULL;

    SELECT
        SNVL(SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,'')
    FROM SOCUSUA20_MAE_ENTMORALES
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA20_MAE_ENTMORALES.REFE_SOCSYST10_GIROSOC = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE SOCUSUA20_MAE_ENTMORALES.ID_SOCUSUA20 = :RELA_SOCUSUA20
    INTO :GIRO;

    SUSPEND;
  END
END
PRD_SOCSYST09_SOCSYST10        

DECLARE VARIABLE VAR_SOCSYST09_COD VARCHAR(50);
DECLARE VARIABLE VAR_ID_SOCSYST09 INTEGER;
begin
    var_id_socsyst09 = 0;
    var_socsyst09_cod = null;

    /* Verificamos si existe el codigo de la lista  */
    select distinct SOCSYST09_COD
        from socsyst09_dep_listaestados
        where SOCSYST09_COD = :codigo_lista
        into :VAR_SOCSYST09_COD;

    if (:VAR_SOCSYST09_COD is null) then
        begin

            /* Iniciamos proceso para insertar un nuevo codigo de lista*/
            INSERT INTO socsyst09_dep_listaestados
                (ID_SOCSYST09, SOCSYST09_COD, SOCSYST09_TABLA, SOCSYST09_FAPL)
            VALUES
                (null, :codigo_lista, :tablavirtual_lista, current_timestamp);


            UPDATE socsyst14_det_parametros
                set socsyst14_det_parametros.socsyst14_descri = :descripcion_lista
                where socsyst14_det_parametros.socsyst14_parametro = :codigo_lista;
        end
        
        /* En cualquiera de los casos siempre entrara por aqui a dar de alta un elemento */
        select socsyst09_dep_listaestados.id_socsyst09
            from socsyst09_dep_listaestados
            where socsyst09_dep_listaestados.socsyst09_cod = :codigo_lista
        INTO :VAR_ID_SOCSYST09;
                
        INSERT INTO SOCSYST10_TBL_LISTAESTADOS
            (RELA_SOCSYST09, ID_SOCSYST10, SOCSYST10_FILTRO_COD, SOCSYST10_FILTRO_DES,
            SOCSYST10_CODIGO, SOCSYST10_CODIGO_EXT1, SOCSYST10_TABLA, SOCSYST10_FAPL)
        VALUES
            (:VAR_ID_SOCSYST09, null, null, :descripcion_elemento,
            :codigo_elemento, :CODIGO_EXTENDIDO, null, current_timestamp);
  SALIDA = 'Ok';
  suspend;
end
JAM$_USER_MOD                  

DECLARE VARIABLE CUSUARIO VARCHAR(50);
DECLARE VARIABLE IDSOCUSUA02 BIGINT;
begin
  CUSUARIO = current_user;

  select socusua02_mae_usuarios.id_socusua02
  FROM socusua02_mae_usuarios
  WHERE socusua02_mae_usuarios.socusua02_usuario = :Z_USER
  AND socusua02_mae_usuarios.socusua02_password = :Z_PASS
  INTO :IDSOCUSUA02;

  OK = modify_user(1, 'localhost',
  SUBSTR('JAM$_' || :Z_USER,1,31),
  SUBSTR(:Z_PASS,1,8),
  '',
  SUBSTR(:Z_NOM1 || IDSOCUSUA02,1,31),
  SUBSTR(:Z_NOM2,1,31),
  SUBSTR(:Z_NOM3,1,31),
  'sysdba',
  'ChkMts5');
  update SOCUSUA02_MAE_USUARIOS SET SOCUSUA02_USUADB = 1
  WHERE SOCUSUA02_USUARIO = :Z_USER;
  suspend;
end
JAM$_COPYARBOL_IGUALES         

begin
    select siccont02_arb_plancta_emp.id_siccont02
    from siccont02_arb_plancta_emp
    where siccont02_arb_plancta_emp.rela_socsyst01 = :target
    and siccont02_arb_plancta_emp.rela_siccont02_source = :RELA_SICCONT02_SOURCE
    into :rela_siccont02_tarjet;
    suspend;
end
JAM$_COPYARBOL_MSGPOLI09       

DECLARE VARIABLE ID_SOCSYST10_TIPOFILTRO BIGINT;
DECLARE VARIABLE RELA_SICCONT02_SOURCE BIGINT;
DECLARE VARIABLE RELA_SICCONT02_TARJET BIGINT;
DECLARE VARIABLE ID_MSGPOLI09 BIGINT;
DECLARE VARIABLE ULTID BIGINT;
DECLARE VARIABLE T1RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE T1RELA_SICCONT02 BIGINT;
DECLARE VARIABLE T1RELA_SICCONT02_CONCILIA BIGINT;
DECLARE VARIABLE T1MSGPOLI09_CODEXT VARCHAR(50);
DECLARE VARIABLE T1MSGPOLI09_PORCENTAJE DOUBLE PRECISION;
DECLARE VARIABLE T1MSGPOLI09_ACTIVIDAD SMALLINT;
DECLARE VARIABLE T1MSGPOLI09_SCRIPCALCULO BLOB SUB_TYPE 1 SEGMENT SIZE 8000;
DECLARE VARIABLE T1RELA_SICCONT02_TARGET BIGINT;
DECLARE VARIABLE T1RELA_SICCONT02_CONCILIA_TARGET BIGINT;
begin
    NOK = 0;

    if (:modo = 'VENTA') then
        Select CBO_TIPO_ASIENTOS.id_socsyst10
        from CBO_TIPO_ASIENTOS
        where CBO_TIPO_ASIENTOS.socsyst10_codigo = 'TRASLADA'
        into :ID_SOCSYST10_TIPOFILTRO;
    else
        Select CBO_TIPO_ASIENTOS.id_socsyst10
        from CBO_TIPO_ASIENTOS
        where CBO_TIPO_ASIENTOS.socsyst10_codigo = 'ACREDITA'
        into :ID_SOCSYST10_TIPOFILTRO;

    FOR Select
    GRID_MSGPOLI09.rela_siccont02,
    GRID_MSGPOLI09.id_msgpoli09
    from GRID_MSGPOLI09
    WHERE RELA_SOCSYST01 = :source and RELA_SOCSYST10_TIPO = :ID_SOCSYST10_TIPOFILTRO
    INTO :rela_siccont02_source,
         :id_msgpoli09
    DO
    BEGIN
        NOK = NOK + 1;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :RELA_SICCONT02_SOURCE)
        into :rela_siccont02_tarjet;

        insert into siccont73_mov_impuestos(rela_socsyst01, rela_socsyst10, rela_siccont02)
        values(:target, :ID_SOCSYST10_TIPOFILTRO, :rela_siccont02_tarjet);

        select socutil02_tbl_ultids.socutil02_ultid
        from socutil02_tbl_ultids
        where socutil02_tbl_ultids.socutil02_usuario = current_user
        into :ultid;

        select
        t1.rela_socsyst10,
        t1.rela_siccont02,
        t1.rela_siccont02_concilia,
        t1.msgpoli09_codext,
        t1.msgpoli09_porcentaje,
        t1.msgpoli09_actividad,
        t1.msgpoli09_scripcalculo
        from msgpoli09_cab_impuestos t1
        where t1.id_msgpoli09 = :id_msgpoli09
        into :t1rela_socsyst10,
             :t1rela_siccont02,
             :t1rela_siccont02_concilia,
             :t1msgpoli09_codext,
             :t1msgpoli09_porcentaje,
             :t1msgpoli09_actividad,
             :t1msgpoli09_scripcalculo;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :t1rela_siccont02)
        into :t1rela_siccont02_target;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :t1rela_siccont02_concilia)
        into :t1rela_siccont02_concilia_target;

        insert into msgpoli09_cab_impuestos(rela_siccont73,
                                            rela_socsyst10,
                                            rela_siccont02,
                                            rela_siccont02_concilia,
                                            msgpoli09_codext,
                                            msgpoli09_porcentaje,
                                            msgpoli09_actividad,
                                            msgpoli09_scripcalculo)
        values(:ultid,
               :t1rela_socsyst10,
               :t1rela_siccont02_target,
               :t1rela_siccont02_concilia_target,
               :t1msgpoli09_codext,
               :t1msgpoli09_porcentaje,
               :t1msgpoli09_actividad,
               :t1msgpoli09_scripcalculo);
    END

    suspend;
end
JAM$_COPYARBOL_MSGPOLI20       

DECLARE VARIABLE ULTID BIGINT;
DECLARE VARIABLE RELA_MSGPOLI24 BIGINT;
DECLARE VARIABLE RELA_MSGPOLI20 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TABLA BIGINT;
DECLARE VARIABLE RELA_SICCONT02_CARGO BIGINT;
DECLARE VARIABLE RELA_SICCONT02_ABONO BIGINT;
DECLARE VARIABLE RELA_SICCONT02_APAGAR BIGINT;
DECLARE VARIABLE RELA_SICCONT02_AFAVOR BIGINT;
DECLARE VARIABLE ID_MSGPOLI20 BIGINT;
DECLARE VARIABLE MSGPOLI20_DESCRI VARCHAR(100);
DECLARE VARIABLE MSGPOLI20_COEFICIENTE DECIMAL(15,2);
DECLARE VARIABLE MSGPOLI20_PORCENTUAL NUMERIC(3,2);
DECLARE VARIABLE MSGPOLI20_PARAMETROS VARCHAR(200);
DECLARE VARIABLE T1RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE T1RELA_SOCSYST10_TSUMA BIGINT;
DECLARE VARIABLE T1RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RELA_MSGPOLI20_XC BIGINT;
DECLARE VARIABLE RELA_MSGPOLI24_XC BIGINT;
begin
    NOK = 0;

    for select
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.rela_msgpoli24,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.rela_msgpoli20,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.rela_socsyst10_tabla,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.rela_siccont02_cargo,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.rela_siccont02_abono,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.rela_siccont02_apagar,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.rela_siccont02_afavor,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.id_msgpoli20,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.msgpoli20_descri,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.msgpoli20_coeficiente,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.msgpoli20_porcentual,
    JAM$_COPYARBOL_MSGPOLI20_FILTRO.msgpoli20_parametros
    from JAM$_COPYARBOL_MSGPOLI20_FILTRO(:source, :areafiscal)
    order by invl(JAM$_COPYARBOL_MSGPOLI20_FILTRO.rela_msgpoli20,0) ascending
    into :rela_msgpoli24,
         :rela_msgpoli20,
         :rela_socsyst10_tabla,
         :rela_siccont02_cargo,
         :rela_siccont02_abono,
         :rela_siccont02_apagar,
         :rela_siccont02_afavor,
         :id_msgpoli20,
         :msgpoli20_descri,
         :msgpoli20_coeficiente,
         :msgpoli20_porcentual,
         :msgpoli20_parametros
    do
    begin
        NOK = NOK + 1;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :rela_siccont02_cargo)
        into :rela_siccont02_cargo;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :rela_siccont02_abono)
        into :rela_siccont02_abono;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :rela_siccont02_apagar)
        into :rela_siccont02_apagar;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :rela_siccont02_afavor)
        into :rela_siccont02_afavor;

        insert into MSGPOLI20_CAB_IMPUESTOS(rela_socsyst01,
                                            rela_msgpoli24,
                                            rela_msgpoli20,
                                            rela_socsyst10_tabla,
                                            rela_siccont02_cargo,
                                            rela_siccont02_abono,
                                            rela_siccont02_apagar,
                                            rela_siccont02_afavor,
                                            msgpoli20_descri,
                                            msgpoli20_coeficiente,
                                            msgpoli20_porcentual,
                                            msgpoli20_parametros)
        values(:target,
               :rela_msgpoli24,
               :rela_msgpoli20,
               :rela_socsyst10_tabla,
               :rela_siccont02_cargo,
               :rela_siccont02_abono,
               :rela_siccont02_apagar,
               :rela_siccont02_afavor,
               :msgpoli20_descri,
               :msgpoli20_coeficiente,
               :msgpoli20_porcentual,
               :msgpoli20_parametros);

        select socutil02_tbl_ultids.socutil02_ultid
        from socutil02_tbl_ultids
        where socutil02_tbl_ultids.socutil02_usuario = current_user
        into :ultid;

        if (rela_msgpoli20 is not null) then
            BEGIN
                select MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24
                from MSGPOLI20_CAB_IMPUESTOS
                where MSGPOLI20_CAB_IMPUESTOS.id_msgpoli20 = :rela_msgpoli20
                into :rela_msgpoli24_xc;

                RELA_MSGPOLI20_XC = null;
                select XC.id_msgpoli20
                from MSGPOLI20_CAB_IMPUESTOS XC
                where XC.rela_socsyst01 = :target
                and XC.rela_msgpoli24 = :rela_msgpoli24_xc
                into :RELA_MSGPOLI20_XC;

                update MSGPOLI20_CAB_IMPUESTOS set MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20 = :RELA_MSGPOLI20_XC
                where MSGPOLI20_CAB_IMPUESTOS.id_msgpoli20 = :ultid;
            END

        /* ----------------------------------------------------- */
        /* aqui creo el msgpoli21 o de ingresos de los impuestos */
        /* ----------------------------------------------------- */

        for select
        msgpoli21_det_ingresos.rela_socsyst10,
        msgpoli21_det_ingresos.rela_socsyst10_tsuma,
        msgpoli21_det_ingresos.rela_siccont02
        from msgpoli21_det_ingresos
        where msgpoli21_det_ingresos.rela_msgpoli20 = :id_msgpoli20
        into :t1rela_socsyst10,
             :t1rela_socsyst10_tsuma,
             :t1rela_siccont02
        do
        begin
            select rela_siccont02_tarjet
            from jam$_copyarbol_iguales(:target, :t1rela_siccont02)
            into :t1rela_siccont02;

            insert into msgpoli21_det_ingresos(rela_msgpoli20,
                                               rela_socsyst10,
                                               rela_socsyst10_tsuma,
                                               rela_siccont02)
            values(:ultid,
                   :t1rela_socsyst10,
                   :t1rela_socsyst10_tsuma,
                   :t1rela_siccont02);
        end

        /* ----------------------------------------------------- */
        /* aqui creo el msgpoli22 o de ingresos de los impuestos */
        /* ----------------------------------------------------- */

        for select
        msgpoli22_det_egresos.rela_socsyst10,
        msgpoli22_det_egresos.rela_socsyst10_tsuma,
        msgpoli22_det_egresos.rela_siccont02
        from msgpoli22_det_egresos
        where msgpoli22_det_egresos.rela_msgpoli20 = :id_msgpoli20
        into :t1rela_socsyst10,
             :t1rela_socsyst10_tsuma,
             :t1rela_siccont02
        do
        begin
            select rela_siccont02_tarjet
            from jam$_copyarbol_iguales(:target, :t1rela_siccont02)
            into :t1rela_siccont02;

            insert into msgpoli22_det_egresos(rela_msgpoli20,
                                              rela_socsyst10,
                                              rela_socsyst10_tsuma,
                                              rela_siccont02)
            values(:ultid,
                   :t1rela_socsyst10,
                   :t1rela_socsyst10_tsuma,
                   :t1rela_siccont02);
        end

    end

    suspend;
end
PRD_MSGPOLI07_CONCONCILIAR     
BEGIN
    FOR
      SELECT
          1 MARCA,
          GRID_MSGPOLI07_SUM.RELA_SOCWFLO01,
          GRID_MSGPOLI07_SUM.RELA_MSGPOLI01,
          GRID_MSGPOLI07_SUM.RELA_SICINGR01,
          GRID_MSGPOLI07_SUM.ID_MSGPOLI07,
          GRID_MSGPOLI07_SUM.MSGPOLI07_NROFACTURA,
          GRID_MSGPOLI07_SUM.MSGPOLI07_CLIENTE,
          GRID_MSGPOLI07_SUM.MSGPOLI07_FFACT,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_NETO,
          GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_BRUTO,
          GRID_MSGPOLI07_SUM.MSGPOLI07_FAPL,
          GRID_MSGPOLI07_SUM.MSGPOLI10_IMPORTE,
          GRID_MSGPOLI07_SUM.SALDO_CONCILIADO,
          MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI05
      FROM MSGPOLI10_MOV_CONCILIADAS
      INNER JOIN GRID_MSGPOLI07_SUM ON (GRID_MSGPOLI07_SUM.ID_MSGPOLI07 = MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07)
      WHERE (GRID_MSGPOLI07_SUM.MSGPOLI10_IMPORTE = GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_NETO OR GRID_MSGPOLI07_SUM.SALDO_CONCILIADO <> 0)
        AND MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI04 = :RELA_MSGPOLI04
      INTO :MARCA,
           :RELA_SOCWFLO01,
           :RELA_MSGPOLI01,
           :RELA_SICINGR01,
           :ID_MSGPOLI07,
           :MSGPOLI07_NROFACTURA,
           :ENTIDAD,
           :MSGPOLI07_FFACT,
           :MSGPOLI07_IMPORTE,
           :MSGPOLI07_IMPORTE_NETO,
           :MSGPOLI07_IMPORTE_BRUTO,
           :MSGPOLI07_FAPL,
           :MSGPOLI10_IMPORTE,
           :SALDO_CONCILIADO,
           :RELA_MSGPOLI05
    DO
    BEGIN
        SUSPEND;
    END
END
PRD_MSGPOLI07_SINCONCILIAR     
BEGIN
   FOR
    SELECT
        0 MARCA,
        GRID_MSGPOLI07_SUM.RELA_SOCWFLO01,
        GRID_MSGPOLI07_SUM.RELA_MSGPOLI01,
        GRID_MSGPOLI07_SUM.RELA_SICINGR01,
        GRID_MSGPOLI07_SUM.ID_MSGPOLI07,
        GRID_MSGPOLI07_SUM.MSGPOLI07_NROFACTURA,
        GRID_MSGPOLI07_SUM.MSGPOLI07_CLIENTE,
        GRID_MSGPOLI07_SUM.MSGPOLI07_FFACT,
        GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE,
        GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_NETO,
        GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_BRUTO,
        GRID_MSGPOLI07_SUM.MSGPOLI07_FAPL,
        GRID_MSGPOLI07_SUM.MSGPOLI10_IMPORTE,
        GRID_MSGPOLI07_SUM.SALDO_CONCILIADO,
        0 RELA_MSGPOLI05
    FROM GRID_MSGPOLI07_SUM
    WHERE GRID_MSGPOLI07_SUM.MSGPOLI10_IMPORTE < GRID_MSGPOLI07_SUM.MSGPOLI07_IMPORTE_NETO
      AND GRID_MSGPOLI07_SUM.RELA_SOCSYST01 = :RELA_SOCSYST01

    UNION ALL

    SELECT
        0 MARCA,
        MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
        MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01,
        MSGPOLI07_DET_FACTURAS.RELA_SICINGR01,
        MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE,
        CAST(MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE_NETO AS NUMERIC(12,2)),
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE_BRUTO,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_FAPL,
        CAST(0 AS NUMERIC(12,2)),
        CAST(MSGPOLI07_DET_FACTURAS.MSGPOLI07_IMPORTE_NETO AS NUMERIC(12,2)),
        0 RELA_MSGPOLI05
    FROM MSGPOLI07_DET_FACTURAS
    INNER JOIN MSGPOLI01_CAB_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
    WHERE NOT EXISTS (SELECT MSGPOLI10_MOV_CONCILIADAS.ID_MSGPOLI10
                      FROM MSGPOLI10_MOV_CONCILIADAS
                      WHERE MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
      AND MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01 = :RELA_SOCSYST01
    INTO
       :MARCA,
       :RELA_SOCWFLO01,
       :RELA_MSGPOLI01,
       :RELA_SICINGR01,
       :ID_MSGPOLI07,
       :MSGPOLI07_NROFACTURA,
       :ENTIDAD,
       :MSGPOLI07_FFACT,
       :MSGPOLI07_IMPORTE,
       :MSGPOLI07_IMPORTE_NETO,
       :MSGPOLI07_IMPORTE_BRUTO,
       :MSGPOLI07_FAPL,
       :MSGPOLI10_IMPORTE,
       :SALDO_CONCILIADO,
       :RELA_MSGPOLI05
   DO
   BEGIN
       SUSPEND;
   END
END
JAM$_COPYARBOL_SICCONT72       

DECLARE VARIABLE RELA_SICCONT02_SOURCE BIGINT;
DECLARE VARIABLE RELA_SICCONT02_TARJET BIGINT;
DECLARE VARIABLE RELA_SOCSYST10 BIGINT;
begin
    NOK = 0;
    FOR SELECT
    SICCONT72_MOV_EMPRESAS.RELA_SOCSYST10,
    SICCONT72_MOV_EMPRESAS.RELA_SICCONT02
    FROM SICCONT72_MOV_EMPRESAS
    WHERE SICCONT72_MOV_EMPRESAS.RELA_SOCSYST01 = :SOURCE
    INTO :RELA_SOCSYST10,
         :RELA_SICCONT02_SOURCE
    DO
    BEGIN
        NOK = NOK + 1;

        select rela_siccont02_tarjet
        from jam$_copyarbol_iguales(:target, :RELA_SICCONT02_SOURCE)
        into :rela_siccont02_tarjet;

        insert into SICCONT72_MOV_EMPRESAS(RELA_SOCSYST01, RELA_SOCSYST10, RELA_SICCONT02)
        values(:target,:RELA_SOCSYST10,:rela_siccont02_tarjet);
    END

    suspend;
end
PRD_SOCUSUA40                  

BEGIN
  IF (:PARA_SOCUSUA = 20) THEN
    SELECT
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_CODEXT,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCUSUA40_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10)
    WHERE SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20 = :PARA_ID_SOCUSUA
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :PARA_CODIGO
    INTO
        :SOCUSUA40_CODEXT,
        :SOCUSUA40_NUMERO;

  IF (:PARA_SOCUSUA = 30) THEN
    SELECT
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_CODEXT,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SOCUSUA40_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10)
    WHERE SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA30 = :PARA_ID_SOCUSUA
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :PARA_CODIGO
    INTO
        :SOCUSUA40_CODEXT,
        :SOCUSUA40_NUMERO;

   SUSPEND;
END
PRD_SOCUSUA41                  

DECLARE VARIABLE VAR_ID_SOCUSUA42 BIGINT;
DECLARE VARIABLE VAR_ID_SOCUSUA50 BIGINT;
DECLARE VARIABLE VAR_SOCUSUA50_DESCRI VARCHAR(100);
DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
DECLARE VARIABLE VAR_SOCUSUA42_CIUDAD VARCHAR(200);
BEGIN
   IF (:PARAM_SOCUSUA = 20) THEN
   BEGIN
    SELECT FIRST 1
        SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA42,
        SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE || ' No. ' ||
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO SOCUSUA41_DOMICILIO,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO SOCUSUA41_NRODOMICILIO,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO
    FROM SOCUSUA50_ARB_LOCALIDADES
    INNER JOIN SOCUSUA41_DET_LOCALIDADES ON (SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50 = SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50)
    WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20 = :PARAM_ID_SOCUSUA
        AND SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL = 1
    INTO
        :VAR_ID_SOCUSUA42,
        :VAR_ID_SOCUSUA50,
        :SOCUSUA41_CP,
        :SOCUSUA41_DOMICILIO,
        :SOCUSUA41_CALLE,
        :SOCUSUA41_NRODOMICILIO,
        :SOCUSUA41_PISO,
        :SOCUSUA41_DEPTO,
        :SOCUSUA41_TELEFONO,
        :SOCUSUA41_FAX,
        :SOCUSUA41_CORREO;

    IF (:VAR_ID_SOCUSUA50 IS NOT NULL) THEN
     BEGIN
      FOR
        SELECT
            VW_SOCUSUA50.SOCUSUA50_DESCRI,
            VW_SOCUSUA50.RELA_SOCUSUA50,
            VW_SOCUSUA50.SOCUSUA50_CODADUANA
        FROM VW_SOCUSUA50(:VAR_ID_SOCUSUA50)
        INTO :VAR_SOCUSUA50_DESCRI,
             :RELA_SOCUSUA50,
             :SOCUSUA50_CODADUANA
      DO
      BEGIN
        IF (:SOCUSUA50_CIUDAD IS NULL) THEN
            SOCUSUA50_CIUDAD =  :VAR_SOCUSUA50_DESCRI;
        ELSE
            SOCUSUA50_CIUDAD =  :SOCUSUA50_CIUDAD || ', ' || :VAR_SOCUSUA50_DESCRI;

            IF (RELA_SOCUSUA50 IS NULL) THEN
               SOCUSUA41_PAIS = :VAR_SOCUSUA50_DESCRI;
        END
      END
   END

   IF (:PARAM_SOCUSUA = 30) THEN
   BEGIN
    SELECT FIRST 1
        SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA42,
        SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE || ' No. ' ||
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO SOCUSUA41_DOMICILIO,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO SOCUSUA41_NRODOMICILIO,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
        SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO
    FROM SOCUSUA50_ARB_LOCALIDADES
    INNER JOIN SOCUSUA41_DET_LOCALIDADES ON (SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50 = SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50)
    WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA30 = :PARAM_ID_SOCUSUA
        AND SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL = 1
    INTO
         :VAR_ID_SOCUSUA42,
         :VAR_ID_SOCUSUA50,
         :SOCUSUA41_CP,
         :SOCUSUA41_DOMICILIO,
         :SOCUSUA41_CALLE,
         :SOCUSUA41_NRODOMICILIO,
         :SOCUSUA41_PISO,
         :SOCUSUA41_DEPTO,
         :SOCUSUA41_TELEFONO,
         :SOCUSUA41_FAX,
         :SOCUSUA41_CORREO;

    IF (:VAR_ID_SOCUSUA50 IS NOT NULL) THEN
      BEGIN
        FOR
          SELECT
               VW_SOCUSUA50.SOCUSUA50_DESCRI,
               VW_SOCUSUA50.RELA_SOCUSUA50,
               VW_SOCUSUA50.SOCUSUA50_CODADUANA
          FROM VW_SOCUSUA50(:VAR_ID_SOCUSUA50)
          INTO :VAR_SOCUSUA50_DESCRI,
               :RELA_SOCUSUA50,
               :SOCUSUA50_CODADUANA
          DO
          BEGIN
            IF (:SOCUSUA50_CIUDAD IS NULL) THEN
                SOCUSUA50_CIUDAD =  :VAR_SOCUSUA50_DESCRI;
            ELSE
                BEGIN
                    SOCUSUA50_CIUDAD = :SOCUSUA50_CIUDAD || ', ' || :VAR_SOCUSUA50_DESCRI;

                    IF (RELA_SOCUSUA50 IS NULL) THEN
                      SOCUSUA41_PAIS = :VAR_SOCUSUA50_DESCRI;
                END
          END
      END
    END

    IF (:VAR_ID_SOCUSUA42 IS NOT NULL) THEN
      BEGIN
        SELECT SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO || ', ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CIUDAD || ', ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA
        FROM SOCUSUA42_TBL_CODPOSTALES
        WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :VAR_ID_SOCUSUA42
        INTO :VAR_SOCUSUA42_CIUDAD;

        SOCUSUA50_CIUDAD = VAR_SOCUSUA42_CIUDAD || ', ' || SOCUSUA50_CIUDAD;
      END

   SUSPEND;
END
VW_SICCONT02                   

DECLARE VARIABLE CCODIGO VARCHAR(50) CHARACTER SET ASCII;
begin
    if (:FILTRO is null) then
        BEGIN
            FOR SELECT
            rela_socsyst01,
            RELA_SICCONT02,
            RELA_SOCSYST06,
            ID_SICCONT02,
            SICCONT02_CODIGO,
            SICCONT02_CODEXT,
            DESCRIPCION,
            SICCONT02_DESCRI,
            SOCSYST06_DESCRI,
            SOCSYST06_MASCARA,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION,
            SOCSYST10_FILTRO_DES,
            rela_socsyst10,
            siccont02_tipo,
            tipo,
            sinhijos
            FROM GRID_TREE_SICCONT02
            WHERE RELA_SICCONT02 is null and rela_socsyst01 = :cliente
            ORDER BY SICCONT02_CODIGO
            INTO :rela_socsyst01,
                 :RELA_SICCONT02,
                 :RELA_SOCSYST06,
                 :ID_SICCONT02,
                 :SICCONT02_CODIGO,
                 :SICCONT02_CODEXT,
                 :DESCRIPCION,
                 :SICCONT02_DESCRI,
                 :SOCSYST06_DESCRI,
                 :SOCSYST06_MASCARA,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION,
                 :SOCSYST10_FILTRO_DES,
                 :RELA_SOCSYST10,
                 :siccont02_tipo,
                 :tipo,
                 :sinhijos
            DO
            SUSPEND;
        END
    if (:FILTRO != -1) then
        BEGIN
            SELECT
            SICCONT02_CODIGO
            FROM GRID_TREE_SICCONT02
            WHERE ID_SICCONT02 = :FILTRO and rela_socsyst01 = :cliente
            INTO :SICCONT02_CODIGO;
            CCODIGO = TRIM(:SICCONT02_CODIGO) || '%';
            FOR SELECT
            rela_socsyst01,
            RELA_SICCONT02,
            RELA_SOCSYST06,
            ID_SICCONT02,
            SICCONT02_CODIGO,
            SICCONT02_CODEXT,
            DESCRIPCION,
            SICCONT02_DESCRI,
            SOCSYST06_DESCRI,
            SOCSYST06_MASCARA,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION,
            SOCSYST10_FILTRO_DES,
            rela_socsyst10,
            siccont02_tipo,
            tipo,
            sinhijos
            FROM GRID_TREE_SICCONT02
            WHERE GRID_TREE_SICCONT02.siccont02_codigo LIKE :CCODIGO
            AND rela_socsyst01 = :cliente
            ORDER BY SICCONT02_CODIGO
            INTO :rela_socsyst01,
                 :RELA_SICCONT02,
                 :RELA_SOCSYST06,
                 :ID_SICCONT02,
                 :SICCONT02_CODIGO,
                 :SICCONT02_CODEXT,
                 :DESCRIPCION,
                 :SICCONT02_DESCRI,
                 :SOCSYST06_DESCRI,
                 :SOCSYST06_MASCARA,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION,
                 :SOCSYST10_FILTRO_DES,
                 :RELA_SOCSYST10,
                 :siccont02_tipo,
                 :tipo,
                 :sinhijos
            DO
            SUSPEND;
        END
    if (:FILTRO = -1) then
        BEGIN
            FOR SELECT
            rela_socsyst01,
            RELA_SICCONT02,
            RELA_SOCSYST06,
            ID_SICCONT02,
            SICCONT02_CODIGO,
            SICCONT02_CODEXT,
            DESCRIPCION,
            SICCONT02_DESCRI,
            SOCSYST06_DESCRI,
            SOCSYST06_MASCARA,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION,
            SOCSYST10_FILTRO_DES,
            rela_socsyst10,
            siccont02_tipo,
            tipo,
            sinhijos
            FROM GRID_TREE_SICCONT02
            WHERE rela_socsyst01 = :cliente
            ORDER BY SICCONT02_CODIGO
            INTO :rela_socsyst01,
                 :RELA_SICCONT02,
                 :RELA_SOCSYST06,
                 :ID_SICCONT02,
                 :SICCONT02_CODIGO,
                 :SICCONT02_CODEXT,
                 :DESCRIPCION,
                 :SICCONT02_DESCRI,
                 :SOCSYST06_DESCRI,
                 :SOCSYST06_MASCARA,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION,
                 :SOCSYST10_FILTRO_DES,
                 :RELA_SOCSYST10,
                 :siccont02_tipo,
                 :tipo,
                 :sinhijos
            DO
            SUSPEND;
        END
end
PR_AUTORIZA                    

DECLARE VARIABLE VARFLAG SMALLINT;
BEGIN
    VARFLAG = 0;
    IF (INTRONCAL = 'PYMEGRE10') THEN
        BEGIN
            SELECT PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT
            FROM PYMEGRE10_CAB_CHEQUES
            WHERE PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = :INVALOR
            INTO :RETO_CANTIMP;

            RETO_CANTIMP = :RETO_CANTIMP + 1;

            UPDATE PYMEGRE10_CAB_CHEQUES
            SET PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT = :RETO_CANTIMP
            WHERE PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = :INVALOR;

            SUSPEND;
        END
    ELSE
        IF (INTRONCAL = 'PYMINGR01') THEN
            BEGIN
                SELECT PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPCANT
                FROM PYMINGR01_CAB_FACTURAS
                WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :INVALOR
                INTO :RETO_CANTIMP;

                RETO_CANTIMP = :RETO_CANTIMP + 1;

                UPDATE PYMINGR01_CAB_FACTURAS
                SET PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPCANT = :RETO_CANTIMP
                WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :INVALOR;

                SUSPEND;
            END
        ELSE
            IF (INTRONCAL = 'PYMVENT15') THEN
                BEGIN
                    SELECT PYMVENT15_CAB_APARTADOS.PYMVENT15_IMPCANT
                    FROM PYMVENT15_CAB_APARTADOS
                    WHERE PYMVENT15_CAB_APARTADOS.ID_PYMVENT15 = :INVALOR
                    INTO :RETO_CANTIMP;

                    RETO_CANTIMP = :RETO_CANTIMP + 1;
        
                    UPDATE PYMVENT15_CAB_APARTADOS
                    SET PYMVENT15_CAB_APARTADOS.PYMVENT15_IMPCANT = :RETO_CANTIMP
                    WHERE PYMVENT15_CAB_APARTADOS.ID_PYMVENT15 = :INVALOR;
        
                    SUSPEND;
                END
            ELSE
                IF (INTRONCAL = 'PYMVENT16') THEN
                    BEGIN
                        SELECT PYMVENT16_CAB_ENTREGA.PYMVENT16_IMPCANT
                        FROM PYMVENT16_CAB_ENTREGA
                        WHERE PYMVENT16_CAB_ENTREGA.ID_PYMVENT16 = :INVALOR
                        INTO :RETO_CANTIMP;

                        RETO_CANTIMP = :RETO_CANTIMP + 1;
        
                        UPDATE PYMVENT16_CAB_ENTREGA
                        SET PYMVENT16_CAB_ENTREGA.PYMVENT16_IMPCANT = :RETO_CANTIMP
                        WHERE PYMVENT16_CAB_ENTREGA.ID_PYMVENT16 = :INVALOR;
        
                        SUSPEND;
                    END
            ELSE
                IF (INTRONCAL = 'PYMVENT28') THEN
                    BEGIN
                        SELECT PYMVENT28_DEP_FACTELECT.PYMVENT28_IMPCANT
                        FROM PYMVENT28_DEP_FACTELECT
                        WHERE PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20 = :INVALOR
                        INTO :RETO_CANTIMP;

                        RETO_CANTIMP = :RETO_CANTIMP + 1;
        
                        UPDATE PYMVENT28_DEP_FACTELECT
                        SET PYMVENT28_DEP_FACTELECT.PYMVENT28_IMPCANT = :RETO_CANTIMP
                        WHERE PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20 = :INVALOR;
        
                        SUSPEND;
                    END
                ELSE
                    IF (INTRONCAL = 'PYMINGR18') THEN
                        BEGIN
                            SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_IMPCANT
                            FROM PYMINGR18_DEP_FACTELECT
                            WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = :INVALOR
                            INTO :RETO_CANTIMP;
            
                            RETO_CANTIMP = :RETO_CANTIMP + 1;
        
                            UPDATE PYMINGR18_DEP_FACTELECT
                            SET PYMINGR18_DEP_FACTELECT.PYMINGR18_IMPCANT = :RETO_CANTIMP
                            WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = :INVALOR;
        
                            SUSPEND;
                        END
                    ELSE
                        IF (INTRONCAL = 'ON2CFDS18') THEN
                            BEGIN
                                SELECT first 1 ON2CFDS18_DEP_FACTELECT.ON2CFDS18_IMPCANT
                                FROM ON2CFDS18_DEP_FACTELECT
                                WHERE ON2CFDS18_DEP_FACTELECT.RELA_ON2CFDS10 = :INVALOR
                                AND ON2CFDS18_DEP_FACTELECT.on2cfds18_cancelado is null

                                INTO :RETO_CANTIMP;
            
                                RETO_CANTIMP = :RETO_CANTIMP + 1;
        
                                UPDATE ON2CFDS18_DEP_FACTELECT
                                SET ON2CFDS18_DEP_FACTELECT.ON2CFDS18_IMPCANT = :RETO_CANTIMP
                                WHERE ON2CFDS18_DEP_FACTELECT.RELA_ON2CFDS10 = :INVALOR;
        
                                SUSPEND;
                            END
END
VW_SICGEST20_FILTRO            

DECLARE VARIABLE RELA_PADRE BIGINT;
DECLARE VARIABLE VAR_LIKE VARCHAR(10);
begin
    SELECT
    RELA_SICGEST20
    FROM sicgest20_arb_servicios
    WHERE SICGEST20_CODIGO = :FILTRO
    INTO :RELA_PADRE;

    while (RELA_PADRE is not null) DO
        begin
            FOR SELECT
            SICGEST20_ARB_SERVICIOS.id_sicgest20,
            SICGEST20_ARB_SERVICIOS.rela_sicgest20,
            SICGEST20_ARB_SERVICIOS.sicgest20_descri,
            SICGEST20_ARB_SERVICIOS.sicgest20_codigo,
            SICGEST20_ARB_SERVICIOS.rela_socsyst06,
            SOCSYST06_DET_ARBNIVELES.socsyst06_nivel,
            SOCSYST06_DET_ARBNIVELES.socsyst06_mascara,
            SOCSYST06_DET_ARBNIVELES.socsyst06_descri,
            SOCSYST06_DET_ARBNIVELES.socsyst06_accion,
            SOCSYST06_DET_ARBNIVELES.socsyst06_cant_pares
            FROM SICGEST20_ARB_SERVICIOS
            INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SICGEST20_ARB_SERVICIOS.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
            WHERE ID_sicgest20 = :RELA_PADRE
            INTO id_sicgest20,
                 :rela_sicgest20,
                 :sicgest20_descri,
                 :sicgest20_codigo,
                 :rela_socsyst06,
                 :socsyst06_nivel,
                 :socsyst06_mascara,
                 :socsyst06_descri,
                 :socsyst06_accion,
                 :socsyst06_cant_pares

            DO
          importe = dnvl(:importe,0);
            SUSPEND;
            RELA_PADRE = :rela_sicgest20;
        end

    VAR_LIKE = FILTRO || '%';
    FOR SELECT
    ID_SICGEST20,
    RELA_SICGEST20,
    SICGEST20_DESCRI,
    SICGEST20_CODIGO,
    RELA_SOCSYST06,
    SOCSYST06_NIVEL,
    SOCSYST06_MASCARA,
    SOCSYST06_DESCRI,
    SOCSYST06_ACCION,
    SOCSYST06_CANT_PARES,
    (SELECT siccont63_det_servicios.siccont63_importe
    FROM siccont63_det_servicios
    WHERE siccont63_det_servicios.rela_sicgest20 = :id_sicgest20
    )
    FROM sicgest20_arb_servicios
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SICGEST20_ARB_SERVICIOS.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
    WHERE SICGEST20_CODIGO LIKE :VAR_LIKE
    ORDER BY SICGEST20_CODIGO
    INTO :ID_SICGEST20,
         :RELA_SICGEST20,
         :SICGEST20_DESCRI,
         :SICGEST20_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES,
         :IMPORTE
    DO
    SUSPEND;
end
VW_SICGEST20_IMPORTES          

begin
    FOR SELECT
    ID_SICGEST20,
    RELA_SICGEST20,
    SICGEST20_DESCRI,
    SICGEST20_CODIGO,
    RELA_SOCSYST06,
    SOCSYST06_NIVEL,
    SOCSYST06_MASCARA,
    SOCSYST06_DESCRI,
    SOCSYST06_ACCION,
    SOCSYST06_CANT_PARES,
    (SELECT siccont63_det_servicios.siccont63_importe
    FROM siccont63_det_servicios
    WHERE siccont63_det_servicios.rela_sicgest20 = :id_sicgest20
    )
    FROM SICGEST20_ARB_SERVICIOS
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
    ORDER BY SICGEST20_CODIGO
    INTO :ID_SICGEST20,
         :RELA_SICGEST20,
         :SICGEST20_DESCRI,
         :SICGEST20_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES,
         :IMPORTE
    DO
    BEGIN
        IMPORTE = DNVL(:IMPORTE,0);
        SUSPEND;
    END
end
REP_PYMINGR01_EDOCUENTAPYME    

DECLARE VARIABLE SQLUSER VARCHAR(2000);
BEGIN
  DELETE FROM ZTMPINGR30_DEPOSITOS
  WHERE ZTMPINGR30_DEPOSITOS.USUARIO = CURRENT_USER;

  INSERT INTO ZTMPINGR30_DEPOSITOS
    SELECT
      CURRENT_USER,
      PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07,
      NULL,
      SUM(PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE)
    FROM PYMINGR30_CAB_DEPOSITOS
    INNER JOIN PYMINGR31_DET_FACTURAS ON (PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30 = PYMINGR31_DET_FACTURAS.RELA_PYMINGR30)
    WHERE PYMINGR30_CAB_DEPOSITOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND PYMINGR30_CAB_DEPOSITOS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
    GROUP BY PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07;

  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :ENTIDAD;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :SUCURSAL;

  SQLUSER = 'SELECT
                 MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07,
                 MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
                 (SELECT FIRST 1 PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
                  FROM PYMINGR18_DEP_FACTELECT
                  WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01
                    AND PYMINGR18_DEP_FACTELECT.PYMINGR18_CANCELADO IS NULL),
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
                 MONEDA.SOCSYST10_CODIGO
             FROM PYMINGR01_CAB_FACTURAS
             INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_fACTURAS.RELA_MSGPOLI01)
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPODOC ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_TIPO = TIPODOC.ID_SOCSYST10)
             WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             ' AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA ||
             ' AND PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = ' || :PARAM_MONEDA ||
             ' AND TIPODOC.SOCSYST10_CODIGO = ''F''' ||
             ' AND PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO IS NULL';

  IF (:PARAM_ID != -1) THEN
    SQLUSER = SQLUSER || ' AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = ' || :PARAM_ID;

  FOR EXECUTE STATEMENT :SQLUSER
  INTO
      :RELA_MSGPOLI07,
      :CLIENTE,
      :FOLIO,
      :FOLIO_ELECT,
      :FECHA,
      :IMPORTE_REAL,
      :MONEDA
  DO
  BEGIN
    IMPORTE_DEPOSITO = 0;
    SALDO = 0;
    MENOS30 = 0;
    MENOS60 = 0;
    MENOS90 = 0;
    MAS90 = 0;

    SELECT ZTMPINGR30_DEPOSITOS.IMPORTE
    FROM ZTMPINGR30_DEPOSITOS
    WHERE ZTMPINGR30_DEPOSITOS.ID_MSGPOLI07 = :RELA_MSGPOLI07
        AND ZTMPINGR30_DEPOSITOS.USUARIO = CURRENT_USER
    INTO :IMPORTE_DEPOSITO;

    IF (:IMPORTE_DEPOSITO IS NULL) THEN
      IMPORTE_DEPOSITO = 0;

    SALDO = IMPORTE_REAL - IMPORTE_DEPOSITO;
    DIAS = DAYSBETWEEN(:FECHA, 'NOW');

    IF (:DIAS < 30) THEN
      MENOS30 = SALDO;
    ELSE
      IF (:DIAS >= 30 AND :DIAS < 60) THEN
        MENOS60 = SALDO;
      ELSE
        IF (:DIAS >= 60 AND :DIAS < 90) THEN
          MENOS90 = SALDO;
        ELSE
          MAS90 = SALDO;

    IF (:SALDO != 0) THEN
      SUSPEND;
  END
END
GRID_SOCSYST50                 

begin
    for select
    socsyst50_mov_boletines.rela_socwflo02,
    socsyst50_mov_boletines.rela_socusua02,
    socsyst50_mov_boletines.rela_socwflo01,
    socsyst50_mov_boletines.id_socsyst50,
    socsyst50_mov_boletines.socsyst50_titulo,
    socsyst50_mov_boletines.socsyst50_boletin,
    socsyst50_mov_boletines.socsyst50_fapl,
    socsyst50_mov_boletines.socsyst50_bloquea
    from socsyst50_mov_boletines
    into :rela_socwflo02,
         :rela_socusua02,
         :rela_socwflo01,
         :id_socsyst50,
         :socsyst50_titulo,
         :socsyst50_boletin,
         :socsyst50_fapl,
         :socsyst50_bloquea
    do
    begin
        if (rela_socwflo02 is not null) then
        begin
            tipo = 'CARGO';
            select socwflo02_tbl_cargos.socwflo02_descri
            FROM socwflo02_tbl_cargos
            WHERE socwflo02_tbl_cargos.id_socwflo02 = :rela_socwflo02
            INTO :ENTIDAD;
        end
        else if (rela_socusua02 is not null) then
        begin
            tipo = 'USUARIO';
            select
            '(' || VR_ENTIDADES_ALL.socusua02_usuario || ') ' || entidad
            from VR_ENTIDADES_ALL
            WHERE VR_ENTIDADES_ALL.id_socusua02 = :rela_socusua02
            INTO :ENTIDAD;
        end
        else if (rela_socwflo01 is not null) then
        begin
            tipo = 'ORGANIZACION';
            select socwflo01_arb_organigrama.socwflo01_descri
            FROM socwflo01_arb_organigrama
            WHERE socwflo01_arb_organigrama.id_socwflo01 = :rela_socwflo01
            INTO :ENTIDAD;
        end

        suspend;
    end
end
VR_SOCSYST50                   

begin
    select
    0,
    socsyst50_mov_boletines.id_socsyst50,
    socsyst50_mov_boletines.socsyst50_titulo,
    socsyst50_mov_boletines.socsyst50_boletin,
    socsyst50_mov_boletines.socsyst50_bloquea
    from socsyst50_mov_boletines
    where socsyst50_mov_boletines.rela_socwflo01 = :rela_socwflo01
    into :TIPO,
         :id_socsyst50,
         :socsyst50_titulo,
         :socsyst50_boletin,
         :SOCSYST50_BLOQUEA;

    if (TIPO is not null) then
        suspend;

    TIPO = NULL;
    select
    1,
    socsyst50_mov_boletines.id_socsyst50,
    socsyst50_mov_boletines.socsyst50_titulo,
    socsyst50_mov_boletines.socsyst50_boletin
    from socsyst50_mov_boletines
    where socsyst50_mov_boletines.rela_socwflo02 = :rela_socwflo02
    into :TIPO,
         :id_socsyst50,
         :socsyst50_titulo,
         :socsyst50_boletin;

    if (TIPO is not null) then
        suspend;

    TIPO = NULL;
    select
    2,
    socsyst50_mov_boletines.id_socsyst50,
    socsyst50_mov_boletines.socsyst50_titulo,
    socsyst50_mov_boletines.socsyst50_boletin
    from socsyst50_mov_boletines
    where socsyst50_mov_boletines.rela_socusua02 = :rela_socusua02
    into :TIPO,
         :id_socsyst50,
         :socsyst50_titulo,
         :socsyst50_boletin;

    if (TIPO is not null) then
        suspend;

end
VW_SICGEST30_CODINT            

DECLARE VARIABLE VAR_SICGEST30_CODIGO VARCHAR(100);
DECLARE VARIABLE RELA_PADRE BIGINT;
DECLARE VARIABLE VAR_LIKE VARCHAR(50);
begin
      SELECT ID_SICGEST30, SICGEST30_CODIGO
        FROM SICGEST30_ARB_BIENES
       WHERE SICGEST30_CODINT = :FILTRO
    ORDER BY ID_SICGEST30
        INTO :RELA_PADRE, :VAR_SICGEST30_CODIGO;

    FILTRO = TRIM(:VAR_SICGEST30_CODIGO) || '.';

/*
    while (RELA_PADRE is not null) DO
        begin
            FOR SELECT
            SICGEST30_ARB_BIENES.id_sicgest30,
            SICGEST30_ARB_BIENES.rela_sicgest30,
            SICGEST30_ARB_BIENES.sicgest30_descri,
            SICGEST30_ARB_BIENES.sicgest30_codigo,
            SICGEST30_ARB_BIENES.rela_socsyst06,
            SOCSYST06_DET_ARBNIVELES.socsyst06_nivel,
            SOCSYST06_DET_ARBNIVELES.socsyst06_mascara,
            SOCSYST06_DET_ARBNIVELES.socsyst06_descri,
            SOCSYST06_DET_ARBNIVELES.socsyst06_accion,
            SOCSYST06_DET_ARBNIVELES.socsyst06_cant_pares
            FROM SICGEST30_ARB_BIENES
            INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SICGEST30_ARB_BIENES.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
            WHERE ID_sicgest30 = :RELA_PADRE
            ORDER BY ID_SICGEST30
            INTO id_sicgest30,
                 :rela_sicgest30,
                 :sicgest30_descri,
                 :sicgest30_codigo,
                 :rela_socsyst06,
                 :socsyst06_nivel,
                 :socsyst06_mascara,
                 :socsyst06_descri,
                 :socsyst06_accion,
                 :socsyst06_cant_pares
            DO
            SUSPEND;
            RELA_PADRE = :rela_sicgest30;
        end
  */

    FOR SELECT
        ID_SICGEST30,
        RELA_SICGEST30,
        SICGEST30_DESCRI,
        SICGEST30_CODIGO,
        RELA_SOCSYST06,
        SOCSYST06_NIVEL,
        SOCSYST06_MASCARA,
        SOCSYST06_DESCRI,
        SOCSYST06_ACCION,
        SOCSYST06_CANT_PARES
    FROM SICGEST30_ARB_BIENES
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SICGEST30_ARB_BIENES.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
    WHERE RELA_SICGEST30 = :RELA_PADRE
    ORDER BY ID_SICGEST30
    INTO :ID_SICGEST30,
         :RELA_SICGEST30,
         :SICGEST30_DESCRI,
         :SICGEST30_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES
    DO
    SUSPEND;
end
VW_SICGEST40_RUTAS             

BEGIN
  EXIT;
END
VW_SOCSYST13                   

BEGIN
  IF (:RELA_PADRE IS NULL) THEN
    FOR
      SELECT
          SOCSYST13_ARB_REPORTES.ID_SOCSYST13,
          SOCSYST13_ARB_REPORTES.RELA_SOCSYST13,
          SOCSYST13_ARB_REPORTES.RELA_SOCSYST04,
          SOCSYST13_ARB_REPORTES.SOCSYST13_DESCRI,
          SOCSYST13_ARB_REPORTES.SOCSYST13_CODIGO,
          SOCSYST13_ARB_REPORTES.RELA_SOCSYST06,
          SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL,
          SOCSYST06_DET_ARBNIVELES.SOCSYST06_MASCARA,
          SOCSYST06_DET_ARBNIVELES.SOCSYST06_DESCRI,
          SOCSYST06_DET_ARBNIVELES.SOCSYST06_ACCION,
          SOCSYST06_DET_ARBNIVELES.SOCSYST06_CANT_PARES
      FROM SOCSYST13_ARB_REPORTES
      INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SOCSYST13_ARB_REPORTES.RELA_SOCSYST06 = ID_SOCSYST06)
      WHERE SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL <> 5
      ORDER BY SOCSYST13_ARB_REPORTES.SOCSYST13_CODIGO
      INTO
          :ID_SOCSYST13,
          :RELA_SOCSYST13,
          :RELA_SOCSYST04,
          :SOCSYST13_DESCRI,
          :SOCSYST13_CODIGO,
          :RELA_SOCSYST06,
          :SOCSYST06_NIVEL,
          :SOCSYST06_MASCARA,
          :SOCSYST06_DESCRI,
          :SOCSYST06_ACCION,
          :SOCSYST06_CANT_PARES
    DO
      SUSPEND;
  ELSE
    IF (:RELA_PADRE = -1) THEN
      FOR
        SELECT
            SOCSYST13_ARB_REPORTES.ID_SOCSYST13,
            SOCSYST13_ARB_REPORTES.RELA_SOCSYST13,
            SOCSYST13_ARB_REPORTES.RELA_SOCSYST04,
            SOCSYST13_ARB_REPORTES.SOCSYST13_DESCRI,
            SOCSYST13_ARB_REPORTES.SOCSYST13_CODIGO,
            SOCSYST13_ARB_REPORTES.RELA_SOCSYST06,
            SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL,
            SOCSYST06_DET_ARBNIVELES.SOCSYST06_MASCARA,
            SOCSYST06_DET_ARBNIVELES.SOCSYST06_DESCRI,
            SOCSYST06_DET_ARBNIVELES.SOCSYST06_ACCION,
            SOCSYST06_DET_ARBNIVELES.SOCSYST06_CANT_PARES
        FROM SOCSYST13_ARB_REPORTES
        INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SOCSYST13_ARB_REPORTES.RELA_SOCSYST06 = ID_SOCSYST06)
        ORDER BY SOCSYST13_ARB_REPORTES.SOCSYST13_CODIGO
        INTO
            :ID_SOCSYST13,
            :RELA_SOCSYST13,
            :RELA_SOCSYST04,
            :SOCSYST13_DESCRI,
            :SOCSYST13_CODIGO,
            :RELA_SOCSYST06,
            :SOCSYST06_NIVEL,
            :SOCSYST06_MASCARA,
            :SOCSYST06_DESCRI,
            :SOCSYST06_ACCION,
            :SOCSYST06_CANT_PARES
      DO
        SUSPEND;
    ELSE
      WHILE (:RELA_PADRE IS NOT NULL) DO
        BEGIN
          FOR
            SELECT
                SOCSYST13_ARB_REPORTES.ID_SOCSYST13,
                SOCSYST13_ARB_REPORTES.RELA_SOCSYST13,
                SOCSYST13_ARB_REPORTES.RELA_SOCSYST04,
                SOCSYST13_ARB_REPORTES.SOCSYST13_DESCRI,
                SOCSYST13_ARB_REPORTES.SOCSYST13_CODIGO,
                SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL,
                SOCSYST06_DET_ARBNIVELES.SOCSYST06_ACCION,
                SOCSYST06_DET_ARBNIVELES.SOCSYST06_DESCRI
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN SOCSYST13_ARB_REPORTES ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCSYST13_arb_REPORTES.RELA_SOCSYST06)
            WHERE SOCSYST13_ARB_REPORTES.ID_SOCSYST13 = :RELA_PADRE
            INTO
                :ID_SOCSYST13,
                :RELA_SOCSYST13,
                :RELA_SOCSYST04,
                :SOCSYST13_DESCRI,
                :SOCSYST13_CODIGO,
                :SOCSYST06_NIVEL,
                :SOCSYST06_ACCION,
                :SOCSYST06_DESCRI
          DO
            SUSPEND;

          RELA_PADRE = :RELA_SOCSYST13;
        END
END
PR_CALL_LOGS_ULTIDS            

DECLARE VARIABLE NEXISTE BIGINT;
begin
    INSERT INTO socutil01_mov_logs
    (SOCUTIL01_USUARIO,
    SOCUTIL01_ACCION,
    SOCUTIL01_TABLA,
    SOCUTIL01_ULTID)
    VALUES(:CUSUARIO, :CTIPO, :CTABLA,:NULTID);

    SELECT count(*) FROM SOCUTIL02_TBL_ULTIDS
    WHERE SOCUTIL02_USUARIO=:CUSUARIO
    INTO :NEXISTE;

    if (NEXISTE =0) then
      begin
        INSERT INTO SOCUTIL02_TBL_ULTIDS
        (SOCUTIL02_USUARIO, SOCUTIL02_ULTID, SOCUTIL02_ULTTBL)
        VALUES(:CUSUARIO,:NULTID,:CTABLA);
      end
    else
      begin
        UPDATE SOCUTIL02_TBL_ULTIDS
        SET SOCUTIL02_ULTID = :NULTID,
            SOCUTIL02_ULTTBL = :CTABLA,
            SOCUTIL02_FAPL = current_timestamp
        WHERE SOCUTIL02_USUARIO=:CUSUARIO;
      end
end
PR_SICCONT02                   

DECLARE VARIABLE CODIGO VARCHAR(50) CHARACTER SET ASCII;
DECLARE VARIABLE DIGITO VARCHAR(50);
DECLARE VARIABLE NDESDE INTEGER;
DECLARE VARIABLE CTIPO VARCHAR(1);
DECLARE VARIABLE INTRELA10 BIGINT;
DECLARE VARIABLE IDCABE BIGINT;
begin
    CODIGO = PARAMCODIGO;
    RETO_CTIPO = :PARAMTIPO;

    if (STRLEN(TRIM(:CODIGO))<>0) then
        begin
            DIGITO = 'Z';
            NDESDE = strlen(TRIM(:CODIGO));
            while (DIGITO <> '.') DO
                begin
                    DIGITO = LONGSUBSTR(:CODIGO,NDESDE,1);
                    NDESDE = NDESDE - 1;
                    if (NDESDE = 0) then break;
                end
            
            if (ndesde <> 0) then
                DIGITO = LONGSUBSTR(:CODIGO, 1, NDESDE);
            else
                DIGITO = :CODIGO;

            SELECT SICCONT02_TIPO, rela_socsyst10, ID_SICCONT02
            FROM siccont02_arb_plancta_emp
            WHERE SICCONT02_CODIGO = :DIGITO
              AND rela_socsyst01 = :PARAMCLIENTE
            INTO :CTIPO, :INTRELA10, :IDCABE;

            RETO_CTIPO = :CTIPO;
            RETO_RELA = :INTRELA10;
        end

    if ((RETO_CTIPO is null) or (PARAMMAYOR = 1) ) then
        RETO_CTIPO = :PARAMTIPO;
    suspend;
end
PR_SIGPRES11                   

BEGIN
  EXIT;
END
PR_SOCSYST16_DELETE            

begin
    DELETE FROM SOCSYST16_DET_PARAM_WHERE WHERE RELA_SOCSYST15 = :ID;
    NADA = 1;
    suspend;
end
PR_VALIDA_FORMATO_FACTURA      

BEGIN
  EXIT;
END
PRD_MSGPOLI03_CREATE           

declare variable i integer;
declare variable existe bigint;
declare variable grupo varchar(50);
declare variable p integer;
declare variable maxano integer;
declare variable minano integer;
begin
    select
    grid_siccont02.rela_socsyst01,
    grid_siccont02.socsyst10_codigo,
    grid_siccont02.siccont02_tipo
    from grid_siccont02
    where grid_siccont02.id_siccont02 = :IDSICCONT02
    into :rela_socsyst01,
         :grupo,
         :tipo;

    resultado = 0;
    if (grupo = 'RESULTADO') then
       resultado = 1;


    if (ano is null) then
    begin
    select
    vr_msgpoli01_abiertos_con_ult.minano,
    vr_msgpoli01_abiertos_con_ult.maxano
    from vr_msgpoli01_abiertos_con_ult
    where vr_msgpoli01_abiertos_con_ult.rela_socsyst01 = :rela_socsyst01
    into :minano,
         :maxano;

    P = minano;
    while (P <= maxano) DO
    begin
        EXISTE = null;
        SELECT MAX(msgpoli03_mov_saldos.id_msgpoli03)
        FROM msgpoli03_mov_saldos
        WHERE msgpoli03_mov_saldos.rela_siccont02 = :IDSICCONT02
        AND msgpoli03_mov_saldos.msgpoli03_ano = :p
        INTO :EXISTE;

        if (EXISTE IS NULL) then
        BEGIN
            select sicempr03_det_coeficientes.id_sicempr03
            from sicempr03_det_coeficientes
            where sicempr03_det_coeficientes.rela_socsyst01 = :rela_socsyst01
            and sicempr03_det_coeficientes.sicempr03_ano = :p
            into :existe;

            if (existe is null) then
                insert into sicempr03_det_coeficientes(sicempr03_det_coeficientes.rela_socsyst01,
                                                       sicempr03_det_coeficientes.sicempr03_ano)
                                                values(:rela_socsyst01,
                                                       :p);

            i = -1;
            while (i<12) do
            begin
                i = i + 1;
                insert into msgpoli03_mov_saldos(msgpoli03_mov_saldos.rela_siccont02,
                                                 msgpoli03_mov_saldos.msgpoli03_ano,
                                                 msgpoli03_mov_saldos.msgpoli03_mes,
                                                 msgpoli03_mov_saldos.msgpoli03_resultados,
                                                 msgpoli03_mov_saldos.msgpoli03_saldoini,
                                                 msgpoli03_mov_saldos.msgpoli03_debe,
                                                 msgpoli03_mov_saldos.msgpoli03_haber,
                                                 msgpoli03_mov_saldos.msgpoli03_saldofin)
                                          values(:IDSICCONT02,
                                                 :p,
                                                 :i,
                                                 :resultado,
                                                 0,
                                                 0,
                                                 0,
                                                 0);
            end
        end
        p = p + 1;
    end
    end

    else

    begin
        EXISTE = null;
        SELECT MAX(msgpoli03_mov_saldos.id_msgpoli03)
        FROM msgpoli03_mov_saldos
        WHERE msgpoli03_mov_saldos.rela_siccont02 = :IDSICCONT02
        AND msgpoli03_mov_saldos.msgpoli03_ano = :ano
        INTO :EXISTE;

        if (EXISTE IS NULL) then
        BEGIN
            select sicempr03_det_coeficientes.id_sicempr03
            from sicempr03_det_coeficientes
            where sicempr03_det_coeficientes.rela_socsyst01 = :rela_socsyst01
            and sicempr03_det_coeficientes.sicempr03_ano = :ano
            into :existe;

            if (existe is null) then
                insert into sicempr03_det_coeficientes(sicempr03_det_coeficientes.rela_socsyst01,
                                                       sicempr03_det_coeficientes.sicempr03_ano)
                                                values(:rela_socsyst01,
                                                       :ano);

            i = -1;
            while (i<12) do
            begin
                i = i + 1;
                insert into msgpoli03_mov_saldos(msgpoli03_mov_saldos.rela_siccont02,
                                                 msgpoli03_mov_saldos.msgpoli03_ano,
                                                 msgpoli03_mov_saldos.msgpoli03_mes,
                                                 msgpoli03_mov_saldos.msgpoli03_resultados,
                                                 msgpoli03_mov_saldos.msgpoli03_saldoini,
                                                 msgpoli03_mov_saldos.msgpoli03_debe,
                                                 msgpoli03_mov_saldos.msgpoli03_haber,
                                                 msgpoli03_mov_saldos.msgpoli03_saldofin)
                                          values(:IDSICCONT02,
                                                 :ano,
                                                 :i,
                                                 :resultado,
                                                 0,
                                                 0,
                                                 0,
                                                 0);
            end
        end
    end

    SUSPEND;
end
PRD_ARB_SICCONT01              

BEGIN
  EXIT;
END
REP_MSGPOLI03_BALANCE          

DECLARE VARIABLE SICCONT02_MAYOR INTEGER;
DECLARE VARIABLE VTIPO VARCHAR(1);
DECLARE VARIABLE VIDCIERRE BIGINT;
DECLARE VARIABLE VIDANTCIERRE BIGINT;
DECLARE VARIABLE CLIKE VARCHAR(50);
DECLARE VARIABLE NNIVELMAYOR INTEGER;
DECLARE VARIABLE NETEADO INTEGER;
DECLARE VARIABLE SALDO_ACT DOUBLE PRECISION;
begin
    NNIVELMAYOR = 1964;

    select distinct
    max(grid_siccont72_ctas.rela_siccont02)
    from grid_siccont72_ctas
    where grid_siccont72_ctas.rela_socsyst01 = :empresa
      and grid_siccont72_ctas.socsyst10_codigo = 'CIERRE'
    into :vidcierre;

    select
    max(grid_siccont72_ctas.rela_siccont02)
    from grid_siccont72_ctas
    where grid_siccont72_ctas.rela_socsyst01 = :empresa
      and grid_siccont72_ctas.socsyst10_codigo = 'ANTCIERRE'
    into :vidantcierre;

    if ((vidcierre is null) or (vidantcierre is null)) then
        EXCEPTION EXCEPTION_MSGPOLI03_BALANCE;

    SELECT
    rep_msgpoli03_balance_resultado.saldo
    FROM rep_msgpoli03_balance_resultado(:empresa, :ano, :mes)
    into :saldo_act;

    update ztmppoli03_balanza set ztmppoli03_balanza.msgpoli03_hsaldofin = :saldo_act
    where ztmppoli03_balanza.id_siccont02 = :vidcierre;

    FOR SELECT
    ztmppoli03_balanza.id_siccont02,
    ztmppoli03_balanza.entidad,
    ztmppoli03_balanza.grupo,
    ztmppoli03_balanza.grupo1,
    ztmppoli03_balanza.resultados,
    ztmppoli03_balanza.siccont02_tipo,
    ztmppoli03_balanza.siccont02_codigo,
    ztmppoli03_balanza.siccont02_descri,
    ztmppoli03_balanza.nivel,
    ztmppoli03_balanza.siccont02_mayor,
    ztmppoli03_balanza.msgpoli03_neteado,
    ztmppoli03_balanza.fecha,
    ztmppoli03_balanza.rela_socsyst01

    FROM ztmppoli03_balanza
    WHERE ztmppoli03_balanza.ztmppoli03_user = current_user
    order by ztmppoli03_balanza.siccont02_codigo
    into :id_siccont02,
         :entidad,
         :grupo,
         :subgrupo,
         :resultados,
         :siccont02_tipo,
         :siccont02_codigo,
         :siccont02_descri,
         :nivel,
         :siccont02_mayor,
         :neteado,
         :fecha,
         :rela_socsyst01
    do
    begin
        msgpoli03_importe = null;

        if (nivel != 1) then
            siccont02_descri = strrepeat(' ', strlen(trim(siccont02_codigo))) || siccont02_descri;

        clike = trim(SICCONT02_CODIGO) || '%';

        if (siccont02_mayor = 1) then
            begin
                if (NNIVELMAYOR = 1964) then
                    NNIVELMAYOR =  nivel;

                if ((siccont02_tipo = 'D')) then
                    select
                    sum(ztmppoli03_balanza.msgpoli03_dsaldofin)
                    from ztmppoli03_balanza
                    where ztmppoli03_balanza.ztmppoli03_user = current_user
                      and ztmppoli03_balanza.siccont02_codigo like :clike
                    into :msgpoli03_importe;
                else
                    select
                    sum(ztmppoli03_balanza.msgpoli03_hsaldofin)
                    from ztmppoli03_balanza
                    where ztmppoli03_balanza.ztmppoli03_user = current_user
                      and ztmppoli03_balanza.siccont02_codigo like :clike
                    into :msgpoli03_importe;

                SELECT rep_msgpoli03_titulo.reto_tipo
                FROM rep_msgpoli03_titulo(:siccont02_codigo, :empresa)
                INTO :vtipo;

                if ((vtipo <>  siccont02_tipo) and (msgpoli03_importe <> 0)) then
                    msgpoli03_importe = msgpoli03_importe * (-1);
            end

        if ((nivel <= nnivelmayor) and (SINMOVIMIENTO = 1)) then
            suspend;
        else if (SINMOVIMIENTO = 2) then
            begin
                if (nivel <= nnivelmayor) then
                    if ( not (siccont02_mayor = 1 and msgpoli03_importe = 0)) then
                        suspend;
                    else
                        begin
                            if (id_siccont02 = vidcierre) then
                                suspend;
                            else if (id_siccont02 = vidantcierre) then
                                suspend;
                        end
            end
    end
end
PRD_LOCALIDAD                  

DECLARE VARIABLE DESCRIPCION VARCHAR(100);
DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
begin
  SELECT
     SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCUSUA50
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE
     socwflo01_arb_organigrama.id_socwflo01 = :ID_SOCWFLO01
  INTO
    :RELA_SOCUSUA50
  ;

  SELECT
     socusua50_arb_localidades.rela_socusua50,
     socusua50_arb_localidades.socusua50_descri
  FROM socusua50_arb_localidades
  WHERE
     socusua50_arb_localidades.id_socusua50 = :RELA_SOCUSUA50
  INTO
    :RELA_SOCUSUA50,
    :DESCRIPCION
  ;

  LOCALIDAD= '';

  while (RELA_SOCUSUA50 is NOT null) DO
     begin
       LOCALIDAD= LOCALIDAD || ', ' || DESCRIPCION;

       SELECT
         socusua50_arb_localidades.rela_socusua50,
         Socusua50_arb_localidades.socusua50_descri
       FROM socusua50_arb_localidades
       WHERE
         socusua50_arb_localidades.id_socusua50 = :rela_socusua50
       INTO
         :RELA_SOCUSUA50,
         :DESCRIPCION
       ;
     END
  LOCALIDAD= LOCALIDAD || ', ' || DESCRIPCION;

  LOCALIDAD= CAST(substr(LOCALIDAD, 3, strlen(LOCALIDAD)) AS varchar(200));
  suspend;
end
CBO_ON2CFDS10_FOLIOS           

begin
  FOR select
    cbo_oncfds10_folios.socsyst10_codigo,
    cbo_oncfds10_folios.rela_socsyst01,
    cbo_oncfds10_folios.rela_socsyst21,
    cbo_oncfds10_folios.rela_socwflo01,
    cbo_oncfds10_folios.socwflo01_descri,
    cbo_oncfds10_folios.socsyst21_contador,
    cbo_oncfds10_folios.socsyst21_formateado,
    cbo_oncfds10_folios.id_socsyst20,
    cbo_oncfds10_folios.descripcion,
    cbo_oncfds10_folios.socsyst20_folio_desde,
    cbo_oncfds10_folios.socsyst20_folio_hasta,
    cbo_oncfds10_folios.socsyst20_folio_serie,
    cbo_oncfds10_folios.socsyst20_minfolioante,
    cbo_oncfds10_folios.socsyst20_nro_aproba,
    cbo_oncfds10_folios.socsyst20_ano_aproba,
    cbo_oncfds10_folios.socsyst20_fapl,
    cbo_oncfds10_folios.socsyst01_nrocertificado,
    cbo_oncfds10_folios.socsyst01_claveprivada
  FROM cbo_oncfds10_folios
  where cbo_oncfds10_folios.rela_socsyst01 = :ID_SOCSYST01
  into
    :socsyst10_codigo,
    :rela_socsyst01,
    :rela_socsyst21,
    :rela_socwflo01,
    :socwflo01_descri,
    :socsyst21_contador,
    :socsyst21_formateado,
    :id_socsyst20,
    :descripcion,
    :socsyst20_folio_desde,
    :socsyst20_folio_hasta,
    :socsyst20_folio_serie,
    :socsyst20_minfolioante,
    :socsyst20_nro_aproba,
    :socsyst20_ano_aproba,
    :socsyst20_fapl,
    :socsyst01_nrocertificado,
    :socsyst01_claveprivada
    
    DO
      BEGIN
        descripcion = descripcion || ' - ' || socsyst21_formateado;
        execute procedure prd_LOCALIDAD :rela_socwflo01 RETURNING_VALUES LUGAR_LOCALIDAD;
        suspend;
      END
end
PRD_ARB_SICCONT02              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from SICCONT02_arb_plancta_emp WHERE RELA_SICCONT02 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL, socsyst06_accion from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS, :ACCION;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL, socsyst06_accion from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS, :ACCION;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT SICCONT02_CODIGO, RELA_SOCSYST06 from SICCONT02_arb_plancta_emp WHERE ID_SICCONT02=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      NIVEL_MAS = NIVEL_MAS+1;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06, socsyst06_accion from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS INTO :MASCARA, :NIVEL, :ACCION;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
PRD_MSGPOLI03_RECALCULA        

DECLARE VARIABLE VID_MSGPOLI03 BIGINT;
DECLARE VARIABLE VSALDOINI DOUBLE PRECISION;
DECLARE VARIABLE VSALDOINIREAL DOUBLE PRECISION;
DECLARE VARIABLE VDEBE DOUBLE PRECISION;
DECLARE VARIABLE VHABER DOUBLE PRECISION;
DECLARE VARIABLE NMINANO INTEGER;
DECLARE VARIABLE NMAXANO INTEGER;
DECLARE VARIABLE NRESULTADOS INTEGER;
DECLARE VARIABLE VMES INTEGER;
DECLARE VARIABLE VSALDOFIN DOUBLE PRECISION;
DECLARE VARIABLE UNAVEZ INTEGER;
begin
    vid_msgpoli03 = 0;
    vsaldoini     = 0;
    vdebe         = 0;
    vhaber        = 0;
    unavez        = 0;

    if (ano is not null) then
        begin
            nminano = (ano-1);
            nmaxano = (ano+1);
        end
    else
        begin
            select
            VR_MSGPOLI01_ABIERTOS_CON_ULT.maxano,
            VR_MSGPOLI01_ABIERTOS_CON_ULT.minano
            from VR_MSGPOLI01_ABIERTOS_CON_ULT
            where VR_MSGPOLI01_ABIERTOS_CON_ULT.rela_socsyst01 = :ID_SOCSYST01
            into :nmaxano,
                 :nminano;
        end

    FOR SELECT
    msgpoli03_mov_saldos.id_msgpoli03,
    msgpoli03_mov_saldos.msgpoli03_mes,
    dnvl(msgpoli03_mov_saldos.msgpoli03_saldoini,0),
    dnvl(msgpoli03_mov_saldos.msgpoli03_debe,0),
    dnvl(msgpoli03_mov_saldos.msgpoli03_haber,0),
    dnvl(msgpoli03_mov_saldos.msgpoli03_saldofin,0),
    msgpoli03_mov_saldos.msgpoli03_resultados
    FROM msgpoli03_mov_saldos
    WHERE msgpoli03_mov_saldos.rela_siccont02 = :siccont02_new
      AND msgpoli03_mov_saldos.msgpoli03_ano >= :nminano
      AND msgpoli03_mov_saldos.msgpoli03_ano <= :nmaxano
    order by msgpoli03_mov_saldos.msgpoli03_ano,
             msgpoli03_mov_saldos.msgpoli03_mes
    into :vid_msgpoli03,
         :vmes,
         :vsaldoini,
         :vdebe,
         :vhaber,
         :vsaldofin,
         :nresultados
    do
    begin
        if (unavez = 0) then
            begin
                unavez = 1;
                vsaldoinireal = vsaldoini;
            end

        if ((nresultados = 1) and (vmes <= 1)) then
            vsaldoinireal = 0;

        if (tipo = 'D') then
            vsaldofin = vsaldoinireal + (vdebe-vhaber);
        else
            vsaldofin = vsaldoinireal + (vhaber-vdebe);

        update msgpoli03_mov_saldos set msgpoli03_mov_saldos.msgpoli03_saldoini = :vsaldoinireal,
                                        msgpoli03_mov_saldos.msgpoli03_saldofin = :vsaldofin
        where msgpoli03_mov_saldos.id_msgpoli03 = :vid_msgpoli03;

        vsaldoinireal = vsaldofin;
    end
end
PRD_MSGPOLI03_ACTUALIZA_SALDOS 

DECLARE VARIABLE TIPO_NEW VARCHAR(1);
DECLARE VARIABLE TIPO_OLD VARCHAR(1);
DECLARE VARIABLE VDEBE DOUBLE PRECISION;
DECLARE VARIABLE VHABER DOUBLE PRECISION;
DECLARE VARIABLE VID_MSGPOLI03 BIGINT;
DECLARE VARIABLE RESULTADO INTEGER;
begin
    siccont02_old = invl(siccont02_old,0);
    debe_old      = dnvl(debe_old,0);
    haber_old     = dnvl(haber_old,0);
    ano_old       = invl(ano_old,0);
    mes_old       = invl(mes_old,0);

    if ((ACCION = 'INSERT')) then
        BEGIN
            /* ----------------------------------------------------------------------------- */
            /* Aqui se hace los procesos para mantener la bitacora de saldos de las polizas  */
            /*                1. Verifica si en la vitacora existe la cuenta con el año.     */
            /*                   Si no existe la Crea.                                       */
            /*                2. Luego actualizo en la bitacora solo el DEBE y HABER         */
            /*                3. Recalculos los saldos INICIALES y FINALES                   */
            /* ----------------------------------------------------------------------------- */

            EXECUTE PROCEDURE PRD_MSGPOLI03_CREATE(:siccont02_new, null)
            RETURNING_VALUES :tipo_new, :resultado, :id_socsyst01;

            update msgpoli03_mov_saldos set msgpoli03_mov_saldos.msgpoli03_debe = msgpoli03_mov_saldos.msgpoli03_debe + :debe_new,
                                            msgpoli03_mov_saldos.msgpoli03_haber = msgpoli03_mov_saldos.msgpoli03_haber + :haber_new
            where msgpoli03_mov_saldos.rela_siccont02 = :siccont02_new
            and msgpoli03_mov_saldos.msgpoli03_ano = :ano_new
            and msgpoli03_mov_saldos.msgpoli03_mes = :mes_new;

            EXECUTE PROCEDURE PRD_MSGPOLI03_RECALCULA(:ID_SOCSYST01, :siccont02_new, :tipo_new, null);
        END

    else if ((ACCION = 'DELETE')) then

        BEGIN
            Select
            invl(msgpoli03_mov_saldos.id_msgpoli03,0),
            dnvl(msgpoli03_mov_saldos.msgpoli03_debe,0),
            dnvl(msgpoli03_mov_saldos.msgpoli03_haber,0)
            from msgpoli03_mov_saldos
            where msgpoli03_mov_saldos.rela_siccont02 = :siccont02_new
            and msgpoli03_mov_saldos.msgpoli03_ano = :ano_new
            and msgpoli03_mov_saldos.msgpoli03_mes = :mes_new
            into :vid_msgpoli03,
            :vdebe,
            :vhaber;

            vdebe = vdebe + :debe_new;
            vhaber = vhaber + :haber_new;

            if (vdebe < 0) then
                vdebe = 0;
            if (vhaber < 0) then
                vhaber = 0;

            /* ----------------------------------------------------------------------------- */
            /* Aqui se hace los procesos para mantener la bitacora de saldos de las polizas  */
            /*                1. Verifica si en la vitacora existe la cuenta con el año.     */
            /*                   Si no existe la Crea.                                       */
            /*                2. Luego actualizo en la bitacora solo el DEBE y HABER         */
            /*                3. Recalculos los saldos INICIALES y FINALES                   */
            /* ----------------------------------------------------------------------------- */

            EXECUTE PROCEDURE PRD_MSGPOLI03_CREATE(:siccont02_new, null)
            RETURNING_VALUES :tipo_new, :resultado, :id_socsyst01;

            update msgpoli03_mov_saldos set msgpoli03_mov_saldos.msgpoli03_debe = :vdebe,
                                            msgpoli03_mov_saldos.msgpoli03_haber = :vhaber
            where msgpoli03_mov_saldos.id_msgpoli03 = :vid_msgpoli03;

            EXECUTE PROCEDURE PRD_MSGPOLI03_RECALCULA(:ID_SOCSYST01, :siccont02_new, :tipo_new, null);
        END

    else if ((ACCION = 'UPDATE')) then

        BEGIN

            if (siccont02_old = siccont02_new and
                ano_old = ano_new and
                mes_old = mes_new and
                debe_old = debe_new and
                haber_old = haber_new)   then
                begin
                    ACCION = 'NO HAGO NADA'; /* PORQUE ES MODIFICACION PERO NO CAMBIO NINGUN DATOS' */
                end
            else
                begin
                    Select
                    invl(msgpoli03_mov_saldos.id_msgpoli03,0),
                    dnvl(msgpoli03_mov_saldos.msgpoli03_debe,0),
                    dnvl(msgpoli03_mov_saldos.msgpoli03_haber,0)
                    from msgpoli03_mov_saldos
                    where msgpoli03_mov_saldos.rela_siccont02 = :siccont02_old
                    and msgpoli03_mov_saldos.msgpoli03_ano = :ano_old
                    and msgpoli03_mov_saldos.msgpoli03_mes = :mes_old
                    into :vid_msgpoli03,
                    :vdebe,
                    :vhaber;

                    vdebe = vdebe + (:debe_old * (-1));
                    vhaber = vhaber + (:haber_old * (-1));

                    if (vdebe < 0) then
                        vdebe = 0;
                    if (vhaber < 0) then
                        vhaber = 0;

                    /* ----------------------------------------------------------------------------- */
                    /* Aqui se hace los procesos para mantener la bitacora de saldos de las polizas  */
                    /*                1. Verifica si en la vitacora existe la cuenta con el año.     */
                    /*                   Si no existe la Crea.                                       */
                    /*                2. Luego actualizo en la bitacora solo el DEBE y HABER         */
                    /*                3. Recalculos los saldos INICIALES y FINALES                   */
                    /* ----------------------------------------------------------------------------- */

                    /* ----------------------------------------------------------------------------- */
                    /* Aqui tomo los valores OLD como el SicCont02 y Tipo y proceso los valores      */
                    /* anteriores, es como hacer un DELETE, para agregar los nuevos valores          */
                    /* ----------------------------------------------------------------------------- */

                    EXECUTE PROCEDURE PRD_MSGPOLI03_CREATE(:siccont02_old, null)
                    RETURNING_VALUES :tipo_old, :resultado, :id_socsyst01;

                    update msgpoli03_mov_saldos set msgpoli03_mov_saldos.msgpoli03_debe = :vdebe,
                                                    msgpoli03_mov_saldos.msgpoli03_haber = :vhaber
                    where msgpoli03_mov_saldos.id_msgpoli03 = :vid_msgpoli03;

                    EXECUTE PROCEDURE PRD_MSGPOLI03_RECALCULA(:ID_SOCSYST01, :siccont02_old, :tipo_old, null);

                    /* ----------------------------------------------------------------------------- */
                    /* Aqui simplemente genero los valores nuevos haciendo las modificaciones        */
                    /* ----------------------------------------------------------------------------- */
                    EXECUTE PROCEDURE PRD_MSGPOLI03_CREATE(:siccont02_new, null)
                    RETURNING_VALUES :tipo_new, :resultado, :id_socsyst01;

                    update msgpoli03_mov_saldos set msgpoli03_mov_saldos.msgpoli03_debe = msgpoli03_mov_saldos.msgpoli03_debe + :debe_new,
                                                    msgpoli03_mov_saldos.msgpoli03_haber = msgpoli03_mov_saldos.msgpoli03_haber + :haber_new
                    where msgpoli03_mov_saldos.rela_siccont02 = :siccont02_new
                    and msgpoli03_mov_saldos.msgpoli03_ano = :ano_new
                    and msgpoli03_mov_saldos.msgpoli03_mes = :mes_new;

                    EXECUTE PROCEDURE PRD_MSGPOLI03_RECALCULA(:ID_SOCSYST01, :siccont02_new, :tipo_new, null);
                end

        END
end
GRID_MSGPOLI04_ULTSALDO        

begin
  if (ID_ACTUAL = -1) then
      select max(GRID_MSGPOLI04.id_msgpoli04)
      from GRID_MSGPOLI04
      where GRID_MSGPOLI04.rela_socsyst01 = :empresa
        and GRID_MSGPOLI04.rela_siccont02 = :ID_BANCO
      into :id_msgpoli04;
  else
      select max(GRID_MSGPOLI04.id_msgpoli04)
      from GRID_MSGPOLI04
      where GRID_MSGPOLI04.rela_socsyst01 = :empresa
        and GRID_MSGPOLI04.rela_siccont02 = :ID_BANCO
        and GRID_MSGPOLI04.id_msgpoli04 < :ID_ACTUAL
      into :id_msgpoli04;

  select GRID_MSGPOLI04.msgpoli04_importe
  from GRID_MSGPOLI04
  where GRID_MSGPOLI04.id_msgpoli04 = :id_msgpoli04
  into :msgpoli04_importe;

  select
  msgpoli03_mov_saldos.msgpoli03_saldoini,
  msgpoli03_mov_saldos.msgpoli03_debe,
  msgpoli03_mov_saldos.msgpoli03_haber,
  msgpoli03_mov_saldos.msgpoli03_saldofin
  from msgpoli03_mov_saldos
  where msgpoli03_mov_saldos.rela_socsyst01 = :empresa
    and msgpoli03_mov_saldos.rela_siccont02 = :id_banco
    and msgpoli03_mov_saldos.msgpoli03_ano = :ano
    and msgpoli03_mov_saldos.msgpoli03_mes = :mes
  into :msgpoli03_saldoini,
       :msgpoli03_debe,
       :msgpoli03_haber,
       :msgpoli03_saldofin;

    
  suspend;
end
JAM$_MSGPOLI03_REPARA_ALL      

DECLARE VARIABLE IDSOCSYST01 VARCHAR(10);
begin
  update sicempr03_det_coeficientes set sicempr03_det_coeficientes.sicempr03_cierre = 0;
  delete from sicempr03_det_coeficientes;

  for select distinct msgpoli02_det_polizas.rela_socsyst01
  from msgpoli02_det_polizas
  into :idsocsyst01
  do
  begin
    select jam$_msgpoli03_repara.cok
    from jam$_msgpoli03_repara(:idsocsyst01)
    into :cok;
    suspend;
  end
end
PRD_ARB_SICCONT40              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from siccont40_arb_conceptos WHERE RELA_SICCONT40 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT SICCONT40_CODIGO, RELA_SOCSYST06 from siccont40_arb_conceptos WHERE ID_SICCONT40=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
REP_MSGPOLI03_BALANCE_ACTIVO   

begin
    for select
    ZTMPPOLI04_BALANCE.entidad,
    ZTMPPOLI04_BALANCE.fecha,
    ZTMPPOLI04_BALANCE.siccont02_descri,
    ZTMPPOLI04_BALANCE.msgpoli03_importe,
    ZTMPPOLI04_BALANCE.nivel
    from ZTMPPOLI04_BALANCE
    where ZTMPPOLI04_BALANCE.ztmppoli04_user = current_user
      and ZTMPPOLI04_BALANCE.grupo = 'ACTIVO'
    order by ZTMPPOLI04_BALANCE.siccont02_codigo
    into :entidad,
         :fecha,
         :siccont02_descri,
         :msgpoli03_importe,
         :nivel
    do
    begin
        suspend;
    end
end
JAM$_MSGPOLI03_REPARA          

DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE MSGPOLI02_ANO INTEGER;
DECLARE VARIABLE MSGPOLI02_MES INTEGER;
DECLARE VARIABLE MSGPOLI02_DEBE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI02_HABER DOUBLE PRECISION;
DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE NRESULTADOS INTEGER;
DECLARE VARIABLE TIPO VARCHAR(1);
DECLARE VARIABLE EXISTE BIGINT;
DECLARE VARIABLE VANO_MIN INTEGER;
DECLARE VARIABLE VANO_MAX INTEGER;
DECLARE VARIABLE P INTEGER;
DECLARE VARIABLE ID_MSGPOLI02 BIGINT;
DECLARE VARIABLE RELA_SICCONT02_MAL BIGINT;
DECLARE VARIABLE RELA_SICCONT02_BUENO BIGINT;
begin
    delete from sicempr03_det_coeficientes
    where sicempr03_det_coeficientes.rela_socsyst01 = :empresa
    and sicempr03_det_coeficientes.sicempr03_cierre = 0;

    for SELECT
    msgpoli02_det_polizas.id_msgpoli02,
    msgpoli02_det_polizas.rela_siccont02 rela_siccont02_mal,
    (SELECT SICCONT02_ARB_PLANCTA_EMP.id_siccont02
     FROM SICCONT02_ARB_PLANCTA_EMP
     WHERE SICCONT02_ARB_PLANCTA_EMP.siccont02_codigo = CTA.siccont02_codigo
    AND SICCONT02_ARB_PLANCTA_EMP.rela_socsyst01 = :EMPRESA) rela_siccont02_bueno
    FROM SICCONT02_ARB_PLANCTA_EMP CTA
    INNER JOIN MSGPOLI02_DET_POLIZAS ON (CTA.ID_SICCONT02 = MSGPOLI02_DET_POLIZAS.RELA_SICCONT02)
    WHERE MSGPOLI02_DET_POLIZAS.rela_socsyst01 = :EMPRESA
    AND MSGPOLI02_DET_POLIZAS.rela_socsyst01 <> SICCONT02_ARB_PLANCTA_EMP.rela_socsyst01
    into :id_msgpoli02,
         :rela_siccont02_mal,
         :rela_siccont02_bueno
    do
    begin
        if (rela_siccont02_bueno is not null) then
            update msgpoli02_det_polizas set msgpoli02_det_polizas.rela_siccont02 = :rela_siccont02_bueno
            where msgpoli02_det_polizas.id_msgpoli02 = :id_msgpoli02;
    end

    select distinct
    min(vr_msgpoli02_saldos.msgpoli02_ano),
    max(vr_msgpoli02_saldos.msgpoli02_ano)
    from vr_msgpoli02_saldos
    where vr_msgpoli02_saldos.rela_socsyst01 = :empresa
    and not exists (select sicempr03_det_coeficientes.id_sicempr03
               from sicempr03_det_coeficientes
               where sicempr03_det_coeficientes.rela_socsyst01 = vr_msgpoli02_saldos.rela_socsyst01
               and sicempr03_det_coeficientes.sicempr03_ano = vr_msgpoli02_saldos.msgpoli02_ano
               and sicempr03_det_coeficientes.sicempr03_cierre = 1)
    into :vano_min,
         :vano_max;

    FOR SELECT
    vr_msgpoli02_saldos.rela_socsyst01,
    vr_msgpoli02_saldos.rela_siccont02,
    vr_msgpoli02_saldos.msgpoli02_ano,
    vr_msgpoli02_saldos.msgpoli02_mes,
    vr_msgpoli02_saldos.msgpoli02_debe,
    vr_msgpoli02_saldos.msgpoli02_haber
    FROM vr_msgpoli02_saldos
    where vr_msgpoli02_saldos.rela_socsyst01 = :empresa
/*    and vr_msgpoli02_saldos.rela_siccont02 = 28555   */
    order by vr_msgpoli02_saldos.rela_socsyst01,
             vr_msgpoli02_saldos.msgpoli02_ano,
             vr_msgpoli02_saldos.msgpoli02_mes
    INTO :rela_socsyst01,
         :rela_siccont02,
         :msgpoli02_ano,
         :msgpoli02_mes,
         :msgpoli02_debe,
         :msgpoli02_haber
    do
    BEGIN
    existe = null;

    /* ================================================================================================== */    

    p = vano_min;
    while (p <= vano_max) DO
    begin
        EXECUTE PROCEDURE PRD_MSGPOLI03_CREATE(:rela_siccont02, :p)
        RETURNING_VALUES :tipo, :nresultados, :empresa;
        p = p + 1;
    end

    /* ================================================================================================== */

    update msgpoli03_mov_saldos set msgpoli03_mov_saldos.msgpoli03_debe = :msgpoli02_debe,
                                    msgpoli03_mov_saldos.msgpoli03_haber = :msgpoli02_haber,
                                    msgpoli03_mov_saldos.msgpoli03_saldoini = 0,
                                    msgpoli03_mov_saldos.msgpoli03_saldofin = 0
    WHERE msgpoli03_mov_saldos.rela_siccont02 = :rela_siccont02
      AND msgpoli03_mov_saldos.msgpoli03_ano = :msgpoli02_ano
      AND msgpoli03_mov_saldos.msgpoli03_mes = :msgpoli02_mes;

    /* ================================================================================================== */

    p = vano_min;
    while (p <= vano_max) DO
    begin
        EXECUTE PROCEDURE PRD_MSGPOLI03_RECALCULA(:rela_socsyst01,
                                                  :rela_siccont02,
                                                  :tipo,
                                                  :p);
        p = p + 1;
    end


    /* ================================================================================================== */
  END

  COK = 'OK';
  suspend;
end
REP_SOCSYST01_CAB              

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE SOCUSUA01_TIPO VARCHAR(1);
DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
begin
    
  FOR SELECT
  cbo_clientes_empresas.rela_socusua02,
  cbo_clientes_empresas.entidad
  FROM cbo_clientes_empresas
  WHERE cbo_clientes_empresas.id_socsyst01 = :RELA_SOCSYST01
  INTO :rela_socusua02, 
       :ENTIDAD
  DO
  BEGIN
       select
       vr_entidades_all.rela_socusua20,
       vr_entidades_all.rela_socusua30,
       vr_entidades_all.socusua01_tipo
       from vr_entidades_all
       where vr_entidades_all.id_socusua02 = :rela_socusua02
       into :rela_socusua20, 
            :rela_socusua30, 
            :socusua01_tipo;

       if (socusua01_tipo = 'F') then
            BEGIN
            TIPO = 'F';
            rela_entidad = rela_socusua30;
            END
       else
            BEGIN
            TIPO = 'M';
            rela_entidad = rela_socusua20;
            END
      suspend;
  END
end
REP_MSGPOLI03_BALANCE_PC       

begin
    FOR SELECT
    ZTMPPOLI04_BALANCE.subgrupo,
    ZTMPPOLI04_BALANCE.entidad,
    ZTMPPOLI04_BALANCE.fecha,
    ZTMPPOLI04_BALANCE.siccont02_descri,
    ZTMPPOLI04_BALANCE.msgpoli03_importe,
    ZTMPPOLI04_BALANCE.nivel
    FROM ZTMPPOLI04_BALANCE
    WHERE ZTMPPOLI04_BALANCE.ztmppoli04_user = current_user
      AND (ZTMPPOLI04_BALANCE.grupo = 'PASIVO'
       or ZTMPPOLI04_BALANCE.grupo = 'CAPITAL')
      order by ZTMPPOLI04_BALANCE.siccont02_codigo
    INTO :subgrupo,
         :entidad,
         :fecha,
         :siccont02_descri,
         :msgpoli03_importe,
         :nivel
    DO
    BEGIN
        SUSPEND;
    END

end
PRD_SCEXMLS11_MSGPOLI02        

DECLARE VARIABLE COLUMNA_ACTIVA BIGINT;
DECLARE VARIABLE IMPORTE_CARGO_ACTIVO DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_ABONO_ACTIVO DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_CARGO_ACTIVO_EXENTO DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_ABONO_ACTIVO_EXENTO DOUBLE PRECISION;
begin
    IMPORTE_CARGO_ACTIVO = 0.00;
    importe_abono_activo = 0.00;
    importe_cargo_activo_exento = 0.00;
    importe_abono_activo_exento = 0.00;

    if ((AJUSTE IS NULL) or (AJUSTE <= 0) ) then
        AJUSTE = 1;

    if (cambio = 0 and tipo_movimiento <> 'S') then
        cambio = 1;

    if (tipo = 'I') then
    /* INGRESOS */
    BEGIN
        /* CUENTA PRINCIPAL */
        if (TIPO_MOVIMIENTO = 'P') then
        BEGIN
            columna_activa = columna_cargo;
            IMPORTE_CARGO_ACTIVO = (:IMPORTE * :cambio);
            importe_abono_activo = 0.00;
        END
        /* CUENTA DE DESCUENTO */
        ELSE if (TIPO_MOVIMIENTO = 'D') then
        BEGIN
            columna_activa = columna_cargo;
            IMPORTE_CARGO_ACTIVO = (:IMPORTE * :cambio);
            importe_abono_activo = 0.00;
        END
        /* CUENTA IMPUESTOS RETENIDOS */
        ELSE if (TIPO_MOVIMIENTO = 'R') then
        BEGIN
            columna_activa = columna_cargo;
            IMPORTE_CARGO_ACTIVO = (:IMPORTE * :cambio);
            importe_abono_activo = 0.00;
        END
        /* CUENTA IMPUESTOS TRASLADADOS */
        ELSE if (TIPO_MOVIMIENTO = 'T') then
        BEGIN
            columna_activa = columna_abono;
            IMPORTE_CARGO_ACTIVO = 0.00;
            importe_abono_activo = (:IMPORTE * :cambio);
        END
        /* CUENTA DE CONCEPTOS */
        else if (TIPO_MOVIMIENTO = 'C') then
        BEGIN
            columna_activa = columna_abono;
            IMPORTE_CARGO_ACTIVO = 0.00;
            importe_abono_activo = (:IMPORTE * :cambio);
        END
        /* CUENTA DE AJUSTE */
        else if (TIPO_MOVIMIENTO = 'E') then
        BEGIN
            if (IMPORTE > 0 and IMPORTE < :AJUSTE) then
            begin
                columna_activa = columna_abono;
                IMPORTE_CARGO_ACTIVO = 0.00;
                importe_abono_activo = (:IMPORTE * :cambio);
            end
            else if (importe < 0 AND (importe*-1) < :AJUSTE) then
            begin
                columna_activa = columna_cargo;
                IMPORTE_CARGO_ACTIVO = (:IMPORTE * :cambio) * -1;
                importe_abono_activo = 0.00;
            end
            else
            begin
                EXCEPTION dbxmlcfdi_ajustes + 'El Ajuste supera el monto Limite : ' || Cast(importe as numeric(15,4));
            end
        END
    END
    /* EGRESOS */
    ELSE if (tipo = 'E') then
    BEGIN
        /* CUENTA PRINCIPAL */
        if (TIPO_MOVIMIENTO = 'P') then
        BEGIN
            columna_activa = columna_abono;
            IMPORTE_CARGO_ACTIVO = 0.00;
            importe_abono_activo = (:IMPORTE * :cambio);
        END
        /* CUENTA DE DESCUENTO */
        ELSE if (TIPO_MOVIMIENTO = 'D') then
        BEGIN
            columna_activa = columna_abono;
            IMPORTE_CARGO_ACTIVO = 0.00;
            importe_abono_activo = (:IMPORTE * :cambio);
        END
        /* CUENTA IMPUESTOS RETENIDOS */
        ELSE if (TIPO_MOVIMIENTO = 'R') then
        BEGIN
            columna_activa = columna_abono;
            IMPORTE_CARGO_ACTIVO = 0.00;
            importe_abono_activo = (:IMPORTE * :cambio);
        END
        /* CUENTA IMPUESTOS TRASLADADOS */
        ELSE if (TIPO_MOVIMIENTO = 'T') then
        BEGIN
            columna_activa = columna_cargo;
            IMPORTE_CARGO_ACTIVO = (:IMPORTE * :cambio);
            importe_abono_activo = 0.00;
        END
        /* CUENTA DE CONCEPTOS */
        else if (TIPO_MOVIMIENTO = 'C') then
        BEGIN
            columna_activa = columna_cargo;
            IMPORTE_CARGO_ACTIVO = (:IMPORTE * :cambio);
            importe_abono_activo = 0.00;
        END
        /* CUENTA DE AJUSTE */
        else if (TIPO_MOVIMIENTO = 'E') then
        BEGIN
            if (IMPORTE > 0 and IMPORTE < :AJUSTE) then
            begin
                columna_activa = columna_abono;
                IMPORTE_CARGO_ACTIVO = 0.00;
                importe_abono_activo = (:IMPORTE * :cambio);
            end
            else if (importe < 0 AND (importe*-1) < :AJUSTE) then
            begin
                columna_activa = columna_cargo;
                IMPORTE_CARGO_ACTIVO = (:IMPORTE * :cambio) * -1;
                importe_abono_activo = 0.00;
            end
            else
            begin
                EXCEPTION dbxmlcfdi_ajustes + 'El Ajuste supera el monto Limite : ' || Cast(importe as numeric(15,4));
            end
        END
        /* CUENTA PRINCIPAL DE NOMINA */
        else if (TIPO_MOVIMIENTO = 'H') then
        BEGIN
            columna_activa = columna_abono;
            IMPORTE_CARGO_ACTIVO = 0.00;
            importe_abono_activo = :IMPORTE;
            cambio = 1;
        END   
    END
    ELSE if (tipo = 'D' or tipo = 'P' ) then
    BEGIN
        /* DEDUCCIONES van en el ABONO grabados y exentos */
        if (tipo = 'D') then
        BEGIN
            if (IMPORTE > 0) then
            begin
                columna_activa = columna_abono;
                IMPORTE_CARGO_ACTIVO = 0.00;
                importe_abono_activo = :IMPORTE;
            end
            ELSE
            begin
                columna_activa = columna_cargo;
                IMPORTE_CARGO_ACTIVO = :IMPORTE * -1;
                importe_abono_activo = 0;
            end

            if (cambio <> 0) then
            begin
                if (CAMBIO > 0) then
                begin
                    columna_activa = columna_abono;
                    importe_cargo_activo_exento = 0.00;
                    importe_abono_activo_exento = :CAMBIO;
                end
                ELSE
                begin
                    columna_activa = columna_cargo;
                    importe_cargo_activo_exento = :CAMBIO * -1;
                    importe_abono_activo_exento = 0.00;
                end
            end
        END

        /* PERCEPCIONES van en el CARGO grabados y exentos */
        if (tipo = 'P') then
        begin
            if (IMPORTE > 0) then
            begin
                columna_activa = columna_cargo;
                IMPORTE_CARGO_ACTIVO = :IMPORTE;
                importe_abono_activo = 0.00;
            end
            ELSE
            begin
                columna_activa = columna_abono;
                IMPORTE_CARGO_ACTIVO = 0.00;
                importe_abono_activo = :IMPORTE * -1;
            end

            if (cambio <> 0) then
            begin
                if (cambio > 0) then
                begin
                    columna_activa = columna_cargo;
                    importe_cargo_activo_exento = :CAMBIO;
                    importe_abono_activo_exento = 0.00;
                end
                else
                begin
                    columna_activa = columna_abono;
                    importe_cargo_activo_exento = 0.00;
                    importe_abono_activo_exento = :CAMBIO * -1;
                end
            end
        end
    END

    if (importe_cargo_activo < 0) then
        importe_cargo_activo = importe_cargo_activo + -1;

    if (importe_abono_activo < 0) then
        importe_abono_activo = importe_abono_activo + -1;

    if (importe_cargo_activo_exento < 0) then
        importe_cargo_activo_exento = importe_cargo_activo_exento + -1;

    if (importe_abono_activo_exento < 0) then
        importe_abono_activo_exento = importe_abono_activo_exento + -1;

    if (tipo <> 'D' and tipo <> 'P' ) then
    BEGIN
        insert into MSGPOLI02_DET_POLIZAS(MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
                                            MSGPOLI02_DET_POLIZAS.RELA_SOCSYST01,
                                            MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
                                            MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_COLUM,
                                            MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_ARCO,
                                            MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_MONEDA,
                                            MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01,
                                            MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
                                            MSGPOLI02_DET_POLIZAS.RELA_SRHMAIN10,
                                            MSGPOLI02_DET_POLIZAS.MSGPOLI02_COTIZA,
                                            MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE,
                                            MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER,
                                            MSGPOLI02_DET_POLIZAS.MSGPOLI02_ANO,
                                            MSGPOLI02_DET_POLIZAS.MSGPOLI02_MES)
        values(:RELA_MSGPOLI01,
                :RELA_SOCSYST01,
                :RELA_SICCONT02,
                :columna_activa,
                :RELA_SOCSYST10_ARCO,
                :RELA_SOCSYST10_MONEDA,
                :RELA_SICEGRE01,
                :RELA_SICINGR01,
                :RELA_SRHMAIN10,
                :cambio,
                :importe_cargo_activo,
                :importe_abono_activo,
                :ANO,
                :MES);
    end
    else  /* si es D O P POR DEDUCCIONES O PERCEPCIONES EN NOMINA */
    BEGIN
        if (cambio <> 0) then
            insert into MSGPOLI02_DET_POLIZAS(MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
                                                MSGPOLI02_DET_POLIZAS.RELA_SOCSYST01,
                                                MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
                                                MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_COLUM,
                                                MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_ARCO,
                                                MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_MONEDA,
                                                MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01,
                                                MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
                                                MSGPOLI02_DET_POLIZAS.RELA_SRHMAIN10,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_COTIZA,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_ANO,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_MES)
        values(:RELA_MSGPOLI01,
                :RELA_SOCSYST01,
                :RELA_SICCONT02,
                :columna_activa,
                :RELA_SOCSYST10_ARCO,
                :RELA_SOCSYST10_MONEDA,
                :RELA_SICEGRE01,
                :RELA_SICINGR01,
                :RELA_SRHMAIN10,
                :cambio,
                :importe_cargo_activo_exento,
                :importe_abono_activo_exento,
                :ANO,
                :MES);

        if (importe <> 0) then
            insert into MSGPOLI02_DET_POLIZAS(MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
                                                MSGPOLI02_DET_POLIZAS.RELA_SOCSYST01,
                                                MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
                                                MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_COLUM,
                                                MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_ARCO,
                                                MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_MONEDA,
                                                MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01,
                                                MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
                                                MSGPOLI02_DET_POLIZAS.RELA_SRHMAIN10,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_COTIZA,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_ANO,
                                                MSGPOLI02_DET_POLIZAS.MSGPOLI02_MES)
        values(:RELA_MSGPOLI01,
                :RELA_SOCSYST01,
                :RELA_SICCONT02,
                :columna_activa,
                :RELA_SOCSYST10_ARCO,
                :RELA_SOCSYST10_MONEDA,
                :RELA_SICEGRE01,
                :RELA_SICINGR01,
                :RELA_SRHMAIN10,
                :cambio,
                :importe_cargo_activo,
                :importe_abono_activo,
                :ANO,
                :MES);

    END

end
VW_SOCWFLO01_SUCURSALES        

DECLARE VARIABLE RELA_PADRE BIGINT;
DECLARE VARIABLE CDESCRI01 VARCHAR(100);
DECLARE VARIABLE CDESCRI02 VARCHAR(100);
begin
    SELECT  ID_SOCWFLO01,
            RELA_SOCWFLO01,
            SOCWFLO01_DESCRI,
            SOCWFLO01_CODIGO,
            socwflo01_codint,
            RELA_SOCUSUA50,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
    FROM SOCSYST06_DET_ARBNIVELES
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCSYST06)
    WHERE socwflo01_arb_organigrama.id_socwflo01 = :IDFILTRO
    INTO :ID_SOCWFLO01,
         :RELA_SOCWFLO01,
         :SOCWFLO01_DESCRI,
         :SOCWFLO01_CODIGO,
         :socwflo01_codint,
         :RELA_SOCUSUA50,
         :SOCSYST06_NIVEL,
         :SOCSYST06_ACCION;

    RELA_PADRE = :RELA_SOCWFLO01;

    if (:SOCSYST06_NIVEL = 3) then
        begin
            Select socusua50_descri
            FROM vw_socusua50_filtro(:RELA_SOCUSUA50,3)
            INTO :cDescri01;

            Select socusua50_codaduana
            FROM vw_socusua50_filtro(:RELA_SOCUSUA50,2)
            INTO :cDescri02;

            LOCALIDAD = :cDescri01 || ', ' || :cDescri02 || '.';
            SUSPEND;

            RELA_PADRE = NULL;
        end


    while (RELA_PADRE is not null) DO
        begin
            FOR SELECT
            ID_SOCWFLO01,
            RELA_SOCWFLO01,
            SOCWFLO01_DESCRI,
            SOCWFLO01_CODIGO,
            socwflo01_codint,
            RELA_SOCUSUA50,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCSYST06)
            WHERE ID_SOCWFLO01 = :RELA_PADRE
            INTO :ID_SOCWFLO01,
                 :RELA_SOCWFLO01,
                 :SOCWFLO01_DESCRI,
                 :SOCWFLO01_CODIGO,
                 :socwflo01_codint,
                 :RELA_SOCUSUA50,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION
            DO
            if (:SOCSYST06_NIVEL = 3) then
                begin
                    Select socusua50_descri
                    FROM vw_socusua50_filtro(:RELA_SOCUSUA50,3)
                    INTO :cDescri01;

                    Select socusua50_codaduana
                    FROM vw_socusua50_filtro(:RELA_SOCUSUA50,2)
                    INTO :cDescri02;

                    LOCALIDAD = :cDescri01 || ', ' || :cDescri02 || '.';
                    SUSPEND;
                end

            RELA_PADRE = :RELA_SOCWFLO01;                
        end
end
VW_ULTID                       

begin
    FOR SELECT
    SOCUTIL02_ULTID
    FROM SOCUTIL02_TBL_ULTIDS
    WHERE SOCUTIL02_USUARIO = :USRID
    INTO :ULTID
    DO
    SUSPEND;
end
REP_SOCUSUA41_ALL              

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
BEGIN
    SELECT CBO_CLIENTES_EMPRESAS.RELA_SOCUSUA02
    FROM CBO_CLIENTES_EMPRESAS
    WHERE CBO_CLIENTES_EMPRESAS.ID_SOCSYST01 = :RELA_SOCSYST01
    INTO :RELA_SOCUSUA02;

    SELECT
        VR_ENTIDADES_ALL.RELA_SOCUSUA20,
        VR_ENTIDADES_ALL.RELA_SOCUSUA30
    FROM VR_ENTIDADES_ALL
    WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02
    INTO
        :RELA_SOCUSUA20,
        :RELA_SOCUSUA30;

    IF (:RELA_SOCUSUA20 IS NOT NULL) THEN
      FOR
        SELECT
            SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
            SOCUSUA41_DET_LOCALIDADES.ID_SOCUSUA41,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_FAPL,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL
         FROM SOCUSUA41_DET_LOCALIDADES
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20 = :RELA_SOCUSUA20
          AND SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL = 1
        INTO
            :SOCUSUA50_DESCRI,
            :RELA_ENTIDAD,
            :RELA_SOCUSUA50,
            :ID_SOCUSUA41,
            :SOCUSUA41_CALLE,
            :SOCUSUA41_NRO,
            :SOCUSUA41_PISO,
            :SOCUSUA41_DEPTO,
            :SOCUSUA41_TELE_LINEA,
            :SOCUSUA41_TELE_CELU,
            :SOCUSUA41_TELE_FAX,
            :SOCUSUA41_MAIL_PERSO,
            :SOCUSUA41_FAPL,
            :SOCUSUA41_CP,
            :SOCUSUA41_PRINCIPAL
      DO
        SUSPEND;
    ELSE
      FOR
        SELECT
            SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20,
            SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
            SOCUSUA41_DET_LOCALIDADES.ID_SOCUSUA41,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_FAPL,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
            SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL
        FROM SOCUSUA41_DET_LOCALIDADES
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA30 = :RELA_SOCUSUA30
          AND SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL = 1
        INTO
            :SOCUSUA50_DESCRI,
            :RELA_ENTIDAD,
            :RELA_SOCUSUA50,
            :ID_SOCUSUA41,
            :SOCUSUA41_CALLE,
            :SOCUSUA41_NRO,
            :SOCUSUA41_PISO,
            :SOCUSUA41_DEPTO,
            :SOCUSUA41_TELE_LINEA,
            :SOCUSUA41_TELE_CELU,
            :SOCUSUA41_TELE_FAX,
            :SOCUSUA41_MAIL_PERSO,
            :SOCUSUA41_FAPL,
            :SOCUSUA41_CP,
            :SOCUSUA41_PRINCIPAL
      DO
        SUSPEND;
END
PRD_ARB_SICGEST12              

BEGIN
  EXIT;
END
PRD_ARB_SICGEST20              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from SICGEST20_ARB_SERVICIOS WHERE RELA_SICGEST20 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT SICGEST20_CODIGO, RELA_SOCSYST06 from SICGEST20_ARB_SERVICIOS WHERE ID_SICGEST20=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
REP_MSGPOLI03_BALANCE_IE       

DECLARE VARIABLE SICCONT02_CODIGO VARCHAR(50);
DECLARE VARIABLE MSGPOLI03_SALDO DOUBLE PRECISION;
DECLARE VARIABLE SUBTOTAL DOUBLE PRECISION;
begin
    subtotal = 0;

    FOR SELECT
    ZTMPPOLI04_BALANCE.subgrupo,
    ZTMPPOLI04_BALANCE.entidad,
    ZTMPPOLI04_BALANCE.fecha,
    ZTMPPOLI04_BALANCE.siccont02_codigo,
    ZTMPPOLI04_BALANCE.siccont02_descri,
    ZTMPPOLI04_BALANCE.msgpoli03_importe,
    ZTMPPOLI04_BALANCE.nivel
    FROM ZTMPPOLI04_BALANCE
    WHERE ZTMPPOLI04_BALANCE.ztmppoli04_user = current_user
      AND (ZTMPPOLI04_BALANCE.subgrupo = 'INGRESO'
       or ZTMPPOLI04_BALANCE.subgrupo = 'EGRESO')
    ORDER BY ZTMPPOLI04_BALANCE.siccont02_codigo
    INTO :subgrupo,
         :entidad,
         :fecha,
         :siccont02_codigo,
         :siccont02_descri,
         :msgpoli03_importe,
         :nivel
    DO
    BEGIN
        if ((msgpoli03_importe IS NOT NULL) AND ((nivel <> 99 AND NIVEL <> 100))) then
            BEGIN
                MSGPOLI03_IMPORTE_ACT = 0;
                siccont02_codigo = trim(siccont02_codigo) || '%';

                SELECT
                sum(dif(ord(REP_MSGPOLI03_AFECTABLES.siccont02_tipo)-68,
                        REP_MSGPOLI03_AFECTABLES.msgpoli03_haber-REP_MSGPOLI03_AFECTABLES.msgpoli03_debe,
                        REP_MSGPOLI03_AFECTABLES.msgpoli03_debe-REP_MSGPOLI03_AFECTABLES.msgpoli03_haber))
                FROM REP_MSGPOLI03_AFECTABLES
                WHERE REP_MSGPOLI03_AFECTABLES.rela_socsyst01 = :empresa
                AND REP_MSGPOLI03_AFECTABLES.msgpoli03_ano = :ano
                AND REP_MSGPOLI03_AFECTABLES.msgpoli03_mes = :mes
                AND REP_MSGPOLI03_AFECTABLES.siccont02_codigo LIKE :siccont02_codigo
                into :MSGPOLI03_IMPORTE_ACT;

                subtotal = subtotal + MSGPOLI03_IMPORTE_ACT;
            END

        if (NIVEL = 99) then
            BEGIN
                MSGPOLI03_IMPORTE_ACT = SUBTOTAL;
                SUBTOTAL = 0;
            END

        if (msgpoli03_importe is null) then
            MSGPOLI03_IMPORTE_ACT = null;

        SUSPEND;
        
        if (NIVEL = 99) then
            MSGPOLI03_IMPORTE_ACT = 0;

    END

end
PRD_ARB_SICGEST30              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from SICGEST30_ARB_BIENES WHERE RELA_SICGEST30 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT SICGEST30_CODIGO, RELA_SOCSYST06 from SICGEST30_ARB_BIENES WHERE ID_SICGEST30=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
REP_MSGPOLI03_BALANCE_TRONCAL  

DECLARE VARIABLE VGRUPO VARCHAR(50);
DECLARE VARIABLE VSUBGRUPO VARCHAR(50);
DECLARE VARIABLE VCODIGO VARCHAR(50);
DECLARE VARIABLE VDESCRI VARCHAR(200);
DECLARE VARIABLE CLIKE VARCHAR(50);
DECLARE VARIABLE SUBTOTAL DOUBLE PRECISION;
DECLARE VARIABLE FALSOID BIGINT;
begin
    titular = null;
    falsoid = 0;

    EXECUTE PROCEDURE REP_ZTMPPOLI04_CREA(:empresa, :ano, :mes, :modo);

    /* ================================================================================== */

    for select
    ZTMPPOLI04_BALANCE.grupo,
    ZTMPPOLI04_BALANCE.subgrupo,
    ZTMPPOLI04_BALANCE.siccont02_codigo,
    ZTMPPOLI04_BALANCE.siccont02_descri,
    ZTMPPOLI04_BALANCE.rela_socsyst01
    from ZTMPPOLI04_BALANCE
    where ZTMPPOLI04_BALANCE.ztmppoli04_user = current_user
      AND ZTMPPOLI04_BALANCE.nivel = 2
    into :vgrupo,
         :vsubgrupo,
         :vcodigo,
         :vdescri,
         :rela_socsyst01
    do
    begin
        clike = trim(vcodigo) || '%';
        vcodigo = trim(vcodigo) || '.9999999';
        select sum(ZTMPPOLI04_BALANCE.msgpoli03_importe)
        from ZTMPPOLI04_BALANCE
        where ZTMPPOLI04_BALANCE.ztmppoli04_user =  current_user
          and ZTMPPOLI04_BALANCE.siccont02_codigo like :clike
          into :subtotal;

        IF (:SUBTOTAL IS NULL) THEN
          SUBTOTAL = 0;
        
        falsoid = falsoid - 1;
        insert into ZTMPPOLI04_BALANCE(ZTMPPOLI04_BALANCE.ztmppoli04_user,
                                       ZTMPPOLI04_BALANCE.id_siccont02,
                                       ZTMPPOLI04_BALANCE.entidad,
                                       ZTMPPOLI04_BALANCE.fecha,
                                       ZTMPPOLI04_BALANCE.grupo,
                                       ZTMPPOLI04_BALANCE.subgrupo,
                                       ZTMPPOLI04_BALANCE.siccont02_codigo,
                                       ZTMPPOLI04_BALANCE.siccont02_descri,
                                       ZTMPPOLI04_BALANCE.msgpoli03_importe,
                                       ZTMPPOLI04_BALANCE.nivel,
                                       ZTMPPOLI04_BALANCE.rela_socsyst01,
                                       ZTMPPOLI04_BALANCE.siccont02_tipo)
                                values(current_user,
                                       :falsoid,
                                       '',
                                       '',
                                       :vgrupo,
                                       :vsubgrupo,
                                       :vcodigo,
                                       strrepeat(' ', strlen(:clike)-1) || 'TOTAL ' || trim(:vdescri),
                                       :subtotal,
                                       99,
                                       :falsoid,
                                       'X');

        falsoid = falsoid - 1;
        vcodigo = trim(vcodigo) || '.1';
        insert into ZTMPPOLI04_BALANCE(ZTMPPOLI04_BALANCE.ztmppoli04_user,
                                       ZTMPPOLI04_BALANCE.id_siccont02,
                                       ZTMPPOLI04_BALANCE.entidad,
                                       ZTMPPOLI04_BALANCE.fecha,
                                       ZTMPPOLI04_BALANCE.grupo,
                                       ZTMPPOLI04_BALANCE.subgrupo,
                                       ZTMPPOLI04_BALANCE.siccont02_codigo,
                                       ZTMPPOLI04_BALANCE.siccont02_descri,
                                       ZTMPPOLI04_BALANCE.msgpoli03_importe,
                                       ZTMPPOLI04_BALANCE.nivel,
                                       ZTMPPOLI04_BALANCE.rela_socsyst01,
                                       ZTMPPOLI04_BALANCE.siccont02_tipo)
                                values(current_user,
                                       :falsoid,
                                       '',
                                       '',
                                       :vgrupo,
                                       :vsubgrupo,
                                       :vcodigo,
                                       '',
                                       0,
                                       100,
                                       :falsoid,
                                       'X');

                                        

    end

    /* ================================================================================== */
    for select
    ZTMPPOLI04_BALANCE.entidad,
    ZTMPPOLI04_BALANCE.fecha,
    ZTMPPOLI04_BALANCE.siccont02_descri,
    ZTMPPOLI04_BALANCE.msgpoli03_importe,
    ZTMPPOLI04_BALANCE.nivel,
    ZTMPPOLI04_BALANCE.rela_socsyst01
    from ZTMPPOLI04_BALANCE
    where ZTMPPOLI04_BALANCE.ztmppoli04_user = current_user
      and ZTMPPOLI04_BALANCE.grupo = 'ACTIVO'
      and ZTMPPOLI04_BALANCE.nivel = 1
    order by ZTMPPOLI04_BALANCE.siccont02_codigo
    into :entidad,
         :fecha,
         :siccont02_descri,
         :msgpoli03_importe,
         :nivel,
         :rela_socsyst01
    do
    begin
        if (titular is null) then
            begin
            select
            cbo_clientes_empresas.entidad
            from cbo_clientes_empresas
            where cbo_clientes_empresas.socsyst01_propietario = 1
            into :titular;
            end
        suspend;
    end
end
REP_MSGPOLI02_CONCILIADAS      

DECLARE VARIABLE LOGENTRA INTEGER;
BEGIN
    LOGENTRA = 0;

    SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
    FROM CBO_CLIENTES_EMPRESAS_ALL
    WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :EMPRESA
    INTO :ENTIDAD;

    SELECT CBO_MESES.SOCSYST10_FILTRO_DES
    FROM CBO_MESES
    WHERE CBO_MESES.SOCSYST10_CODIGO = :MES
    INTO :MESES;
    
    MSGPOLI02_ANO = ANO;
    MSGPOLI02_MES = MES;
    IMPORTE_BANCOS = 0.00;
    RELA_SOCSYST01 = EMPRESA;

    SELECT MSGPOLI04_CAB_BANCOS.MSGPOLI04_IMPORTE
    FROM MSGPOLI04_CAB_BANCOS
    WHERE MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04 = :MSGPOLI04
    INTO :IMPORTE_BANCOS;

  FOR
    SELECT
        GRID_MSGPOLI02_CONCONCILIAR.MSGPOLI01_DOCNRO,
        GRID_MSGPOLI02_CONCONCILIAR.MSGPOLI01_DESCRIPCION,
        GRID_MSGPOLI02_CONCONCILIAR.RELA_MSGPOLI01,
        GRID_MSGPOLI02_CONCONCILIAR.MSGPOLI01_FCTA,
        GRID_MSGPOLI02_CONCONCILIAR.RELA_SICCONT02,
        GRID_MSGPOLI02_CONCONCILIAR.ID_MSGPOLI02,
        GRID_MSGPOLI02_CONCONCILIAR.MSGPOLI02_DEBE,
        GRID_MSGPOLI02_CONCONCILIAR.MSGPOLI02_HABER,
        GRID_MSGPOLI02_CONCONCILIAR.SOCSYST10_FILTRO_DES,
        GRID_MSGPOLI02_CONCONCILIAR.socsyst10_codigo,
        GRID_MSGPOLI02_CONCONCILIAR.ID_MSGPOLI05
        FROM GRID_MSGPOLI02_CONCONCILIAR
    WHERE (RELA_SOCSYST01 = :EMPRESA AND RELA_SICCONT02 = :SICCONT02
        AND MSGPOLI02_ANO = :ANO AND MSGPOLI02_MES <= :MES)
        OR (RELA_SOCSYST01 = :EMPRESA AND RELA_SICCONT02 = :SICCONT02
        AND MSGPOLI02_ANO <= (:ANO - 1))
    order by  GRID_MSGPOLI02_CONCONCILIAR.socsyst10_codigo asc, GRID_MSGPOLI02_CONCONCILIAR.msgpoli01_docnro
    INTO :MSGPOLI01_DOCNRO,
         :MSGPOLI01_DESCRIPCION,
         :RELA_MSGPOLI01,
         :MSGPOLI01_FCTA,
         :RELA_SICCONT02,
         :ID_MSGPOLI02,
         :MSGPOLI02_DEBE,
         :MSGPOLI02_HABER,
         :SOCSYST10_FILTRO_DES,
         :socsyst10_codigo,
         :ID_MSGPOLI05
  DO
  BEGIN
        LOGENTRA = 0;

        SELECT GRID_MSGPOLI04_ULTSALDO.MSGPOLI03_SALDOFIN
        FROM GRID_MSGPOLI04_ULTSALDO(:RELA_SOCSYST01, :MSGPOLI04, :SICCONT02, :ANO, :MES)
        INTO :SALDOFIN;

        REFERENCIA = NULL;
        FECHA_REFERENCIA = NULL;
        CLIENTE = NULL;
        IMPORTE = NULL;

        FOR
           SELECT
               MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
               MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
               MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
               MSGPOLI10_MOV_CONCILIADAS.MSGPOLI10_IMPORTE
           FROM MSGPOLI10_MOV_CONCILIADAS
           INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
           WHERE MSGPOLI10_MOV_CONCILIADAS.RELA_MSGPOLI05 = :ID_MSGPOLI05
           INTO
               :REFERENCIA,
               :FECHA_REFERENCIA,
               :CLIENTE,
               :IMPORTE
        DO
        BEGIN
           LOGENTRA = 1;
           SUSPEND;
        END

     IF (LOGENTRA = 0) THEN
        SUSPEND;
  END
END
PRD_SOCUSUA41_LOCALIDADES      

BEGIN
  FOR
    SELECT SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI,
    SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20,
    SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA30,
    SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
    SOCUSUA41_DET_LOCALIDADES.ID_SOCUSUA41,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
    SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL
   FROM SOCUSUA41_DET_LOCALIDADES
       INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
   where     SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20 = :param_rela_socusua20
      INTO :SOCUSUA50_DESCRI,
         :RELA_SOCUSUA20,
         :RELA_SOCUSUA30,
         :RELA_SOCUSUA50,
         :ID_SOCUSUA41,
         :SOCUSUA41_CALLE,
         :SOCUSUA41_NRO,
         :SOCUSUA41_PISO,
         :SOCUSUA41_DEPTO,
         :SOCUSUA41_TELE_LINEA,
         :SOCUSUA41_TELE_CELU,
         :SOCUSUA41_TELE_FAX,
         :SOCUSUA41_MAIL_PERSO,
         :SOCUSUA41_CP,
         :SOCUSUA41_PRINCIPAL
  DO
  BEGIN
    SUSPEND;
  END
END
REP_SOCUSUA40_ALL              

DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
begin
    SELECT
    CBO_CLIENTES_EMPRESAS.rela_socusua02
    FROM CBO_CLIENTES_EMPRESAS
    WHERE CBO_CLIENTES_EMPRESAS.id_socsyst01 = :RELA_SOCSYST01
    INTO :RELA_SOCUSUA02;

    SELECT
    cbo_socusua02.rela_socusua20,
    cbo_socusua02.rela_socusua30
    FROM cbo_socusua02
    WHERE cbo_socusua02.id_socusua02 = :rela_socusua02
    into :rela_socusua20,
         :rela_socusua30;

    if (rela_socusua20 is not null) then
        FOR SELECT
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20,
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10,
        SOCUSUA40_DET_DOCUMENTOS.ID_SOCUSUA40,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_FAPL,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo
        FROM SOCUSUA40_DET_DOCUMENTOS
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        where SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20 = :rela_socusua20
        into :RELA_ENTIDAD,
             :RELA_SOCSYST10,
             :ID_SOCUSUA40,
             :SOCUSUA40_NUMERO,
             :SOCUSUA40_FAPL,
             :SOCSYST10_FILTRO_DES,
             :socsyst10_codigo
        do
            suspend;
    else
        FOR SELECT
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20,
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20,
        SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10,
        SOCUSUA40_DET_DOCUMENTOS.ID_SOCUSUA40,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO,
        SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_FAPL,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo
        FROM SOCUSUA40_DET_DOCUMENTOS
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        where SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA30 = :rela_socusua30
        into :RELA_SOCUSUA20,
             :RELA_ENTIDAD,
             :RELA_SOCSYST10,
             :ID_SOCUSUA40,
             :SOCUSUA40_NUMERO,
             :SOCUSUA40_FAPL,
             :SOCSYST10_FILTRO_DES,
             :socsyst10_codigo
        do
            suspend;
end
GRID_MSGPOLI01_SP              

DECLARE VARIABLE CODIGOREFERENCIAS VARCHAR(50);
DECLARE VARIABLE ID_MSGPOLI04 BIGINT;
begin
    if ((RELA_ARCO IS NULL) AND (RELA_ENTIDAD IS NULL) AND (RELA_REFERENCIA IS NULL) AND (REFERENCIA IS NULL)) then
      BEGIN
        FOR SELECT DISTINCT
        MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
        MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
        MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
        MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
        CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
        MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
        CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
        FROM MSGPOLI01_CAB_POLIZAS
        INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
        into :RELA_SOCWFLO01,
             :RELA_SOCSYST01,
             :RELA_SOCSYST10,
             :ID_MSGPOLI01,
             :ORIGEN,
             :MSGPOLI01_DOCNRO,
             :MSGPOLI01_DESCRIPCION,
             :MSGPOLI01_FCTA
        do
        BEGIN
            ID_MSGPOLI04 = null;
            Select max(ID_MSGPOLI04)
            from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
            into :ID_MSGPOLI04;

            if (ID_MSGPOLI04 is null) then
                CONCILIADO = 'No';
            else
                CONCILIADO = 'Si';

            MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

            SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
            FROM msgpoli02_det_polizas
            WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
            INTO MSGPOLI01_IMPORTE;
            suspend;
        end
      END
  else if ((RELA_ARCO IS NOT NULL) AND (RELA_ENTIDAD IS NOT NULL) AND (RELA_REFERENCIA IS NULL) AND (REFERENCIA IS NULL)) then
      BEGIN  
        select socsyst10_codigo
        from CBO_REFERENCIASPOLIZAS
        WHERE CBO_REFERENCIASPOLIZAS.id_socsyst10 = :RELA_ARCO
        into :codigoreferencias;

        if (codigoreferencias = 'CLIENTE') then
            begin
                FOR SELECT DISTINCT
                MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
                CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
                FROM MSGPOLI01_CAB_POLIZAS
                INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
                INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
                WHERE MSGPOLI02_DET_POLIZAS.rela_sicingr01 = :RELA_ENTIDAD
                into :RELA_SOCWFLO01,
                     :RELA_SOCSYST01,
                     :RELA_SOCSYST10,
                     :ID_MSGPOLI01,
                     :ORIGEN,
                     :MSGPOLI01_DOCNRO,
                     :MSGPOLI01_DESCRIPCION,
                     :MSGPOLI01_FCTA
                do
                BEGIN
                    ID_MSGPOLI04 = null;
                    Select max(ID_MSGPOLI04)
                    from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                    into :ID_MSGPOLI04;

                    if (ID_MSGPOLI04 is null) then
                        CONCILIADO = 'No';
                    else
                        CONCILIADO = 'Si';

                    MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                    SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                    FROM msgpoli02_det_polizas
                    WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                    INTO MSGPOLI01_IMPORTE;
                    suspend;
                end
            end
        else if (codigoreferencias = 'PROVEEDOR') then
            begin
                FOR SELECT DISTINCT
                MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
                CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
                FROM MSGPOLI01_CAB_POLIZAS
                INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
                INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
                WHERE MSGPOLI02_DET_POLIZAS.rela_sicegre01 = :RELA_ENTIDAD
                into :RELA_SOCWFLO01,
                     :RELA_SOCSYST01,
                     :RELA_SOCSYST10,
                     :ID_MSGPOLI01,
                     :ORIGEN,
                     :MSGPOLI01_DOCNRO,
                     :MSGPOLI01_DESCRIPCION,
                     :MSGPOLI01_FCTA
                do
                BEGIN
                    ID_MSGPOLI04 = null;
                    Select max(ID_MSGPOLI04)
                    from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                    into :ID_MSGPOLI04;

                    if (ID_MSGPOLI04 is null) then
                        CONCILIADO = 'No';
                    else
                        CONCILIADO = 'Si';

                    MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                    SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                    FROM msgpoli02_det_polizas
                    WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                    INTO MSGPOLI01_IMPORTE;
                    suspend;
                end
            end
        else if (codigoreferencias = 'OTROS') then
            begin
                FOR SELECT DISTINCT
                MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
                CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
                FROM MSGPOLI01_CAB_POLIZAS
                INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
                INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
                WHERE MSGPOLI02_DET_POLIZAS.rela_socusua02 = :RELA_ENTIDAD
                into :RELA_SOCWFLO01,
                     :RELA_SOCSYST01,
                     :RELA_SOCSYST10,
                     :ID_MSGPOLI01,
                     :ORIGEN,
                     :MSGPOLI01_DOCNRO,
                     :MSGPOLI01_DESCRIPCION,
                     :MSGPOLI01_FCTA
                do
                BEGIN
                    ID_MSGPOLI04 = null;
                    Select max(ID_MSGPOLI04)
                    from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                    into :ID_MSGPOLI04;

                    if (ID_MSGPOLI04 is null) then
                        CONCILIADO = 'No';
                    else
                        CONCILIADO = 'Si';

                    MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                    SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                    FROM msgpoli02_det_polizas
                    WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                    INTO MSGPOLI01_IMPORTE;
                    suspend;
                end
            end
        else if (codigoreferencias = 'EMPLEADO') then
            begin
                FOR SELECT DISTINCT
                MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
                CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
                FROM MSGPOLI01_CAB_POLIZAS
                INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
                INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
                WHERE MSGPOLI02_DET_POLIZAS.rela_srhmain10 = :RELA_ENTIDAD
                into :RELA_SOCWFLO01,
                     :RELA_SOCSYST01,
                     :RELA_SOCSYST10,
                     :ID_MSGPOLI01,
                     :ORIGEN,
                     :MSGPOLI01_DOCNRO,
                     :MSGPOLI01_DESCRIPCION,
                     :MSGPOLI01_FCTA
                do
                BEGIN
                    ID_MSGPOLI04 = null;
                    Select max(ID_MSGPOLI04)
                    from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                    into :ID_MSGPOLI04;

                    if (ID_MSGPOLI04 is null) then
                        CONCILIADO = 'No';
                    else
                        CONCILIADO = 'Si';

                    MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                    SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                    FROM msgpoli02_det_polizas
                    WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                    INTO MSGPOLI01_IMPORTE;
                    suspend;
                end
            end
      END
  else if ((RELA_ARCO IS NULL) AND (RELA_ENTIDAD IS NULL) AND (RELA_REFERENCIA IS NOT NULL) AND (REFERENCIA IS NOT NULL)) then
      BEGIN  
            FOR SELECT DISTINCT
            MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
            MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
            MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
            MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
            CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
            MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
            MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
            CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
            FROM MSGPOLI01_CAB_POLIZAS
            INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
            INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
            WHERE MSGPOLI02_DET_POLIZAS.rela_socsyst10_refe = :rela_referencia
              AND MSGPOLI02_DET_POLIZAS.msgpoli02_referencia like :referencia || '%'
            into :RELA_SOCWFLO01,
                 :RELA_SOCSYST01,
                 :RELA_SOCSYST10,
                 :ID_MSGPOLI01,
                 :ORIGEN,
                 :MSGPOLI01_DOCNRO,
                 :MSGPOLI01_DESCRIPCION,
                 :MSGPOLI01_FCTA
            do
            BEGIN
                ID_MSGPOLI04 = null;
                Select max(ID_MSGPOLI04)
                from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                into :ID_MSGPOLI04;

                if (ID_MSGPOLI04 is null) then
                    CONCILIADO = 'No';
                else
                    CONCILIADO = 'Si';

                MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                FROM msgpoli02_det_polizas
                WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                INTO MSGPOLI01_IMPORTE;
                suspend;
            end
      END
  else if ((RELA_ARCO IS NOT NULL) AND (RELA_ENTIDAD IS NOT NULL) AND (RELA_REFERENCIA IS NOT NULL) AND (REFERENCIA IS NOT NULL)) then
      BEGIN  
        select socsyst10_codigo
        from CBO_REFERENCIASPOLIZAS
        WHERE CBO_REFERENCIASPOLIZAS.id_socsyst10 = :RELA_ARCO
        into :codigoreferencias;

        if (codigoreferencias = 'CLIENTE') then
            begin
                FOR SELECT DISTINCT
                MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
                CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
                FROM MSGPOLI01_CAB_POLIZAS
                INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
                INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
                WHERE MSGPOLI02_DET_POLIZAS.rela_sicingr01 = :RELA_ENTIDAD
                  AND MSGPOLI02_DET_POLIZAS.rela_socsyst10_refe = :rela_referencia
                  AND MSGPOLI02_DET_POLIZAS.msgpoli02_referencia like :referencia || '%'
                into :RELA_SOCWFLO01,
                     :RELA_SOCSYST01,
                     :RELA_SOCSYST10,
                     :ID_MSGPOLI01,
                     :ORIGEN,
                     :MSGPOLI01_DOCNRO,
                     :MSGPOLI01_DESCRIPCION,
                     :MSGPOLI01_FCTA
                do
                BEGIN
                    ID_MSGPOLI04 = null;
                    Select max(ID_MSGPOLI04)
                    from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                    into :ID_MSGPOLI04;

                    if (ID_MSGPOLI04 is null) then
                        CONCILIADO = 'No';
                    else
                        CONCILIADO = 'Si';

                    MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                    SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                    FROM msgpoli02_det_polizas
                    WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                    INTO MSGPOLI01_IMPORTE;
                    suspend;
                end
            end
        else if (codigoreferencias = 'PROVEEDOR') then
            begin
                FOR SELECT DISTINCT
                MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
                CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
                FROM MSGPOLI01_CAB_POLIZAS
                INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
                INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
                WHERE MSGPOLI02_DET_POLIZAS.rela_sicegre01 = :RELA_ENTIDAD
                  AND MSGPOLI02_DET_POLIZAS.rela_socsyst10_refe = :rela_referencia
                  AND MSGPOLI02_DET_POLIZAS.msgpoli02_referencia like :referencia || '%'
                into :RELA_SOCWFLO01,
                     :RELA_SOCSYST01,
                     :RELA_SOCSYST10,
                     :ID_MSGPOLI01,
                     :ORIGEN,
                     :MSGPOLI01_DOCNRO,
                     :MSGPOLI01_DESCRIPCION,
                     :MSGPOLI01_FCTA
                do
                BEGIN
                    ID_MSGPOLI04 = null;
                    Select max(ID_MSGPOLI04)
                    from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                    into :ID_MSGPOLI04;

                    if (ID_MSGPOLI04 is null) then
                        CONCILIADO = 'No';
                    else
                        CONCILIADO = 'Si';

                    MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                    SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                    FROM msgpoli02_det_polizas
                    WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                    INTO MSGPOLI01_IMPORTE;
                    suspend;
                end
            end
        else if (codigoreferencias = 'OTROS') then
            begin
                FOR SELECT DISTINCT
                MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
                CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
                FROM MSGPOLI01_CAB_POLIZAS
                INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
                INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
                WHERE MSGPOLI02_DET_POLIZAS.rela_socusua02 = :RELA_ENTIDAD
                  AND MSGPOLI02_DET_POLIZAS.rela_socsyst10_refe = :rela_referencia
                  AND MSGPOLI02_DET_POLIZAS.msgpoli02_referencia like :referencia || '%'
                into :RELA_SOCWFLO01,
                     :RELA_SOCSYST01,
                     :RELA_SOCSYST10,
                     :ID_MSGPOLI01,
                     :ORIGEN,
                     :MSGPOLI01_DOCNRO,
                     :MSGPOLI01_DESCRIPCION,
                     :MSGPOLI01_FCTA
                do
                BEGIN
                    ID_MSGPOLI04 = null;
                    Select max(ID_MSGPOLI04)
                    from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                    into :ID_MSGPOLI04;

                    if (ID_MSGPOLI04 is null) then
                        CONCILIADO = 'No';
                    else
                        CONCILIADO = 'Si';

                    MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                    SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                    FROM msgpoli02_det_polizas
                    WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                    INTO MSGPOLI01_IMPORTE;
                    suspend;
                end
            end
        else if (codigoreferencias = 'EMPLEADO') then
            begin
                FOR SELECT DISTINCT
                MSGPOLI01_CAB_POLIZAS.RELA_SOCWFLO01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST01,
                MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10,
                MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01,
                CBO_TIPOACCIONPOLIZAS.SOCSYST10_FILTRO_DES,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DOCNRO,
                MSGPOLI01_CAB_POLIZAS.MSGPOLI01_DESCRIPCION,
                CAST(MSGPOLI01_CAB_POLIZAS.msgpoli01_fcta AS DATE)
                FROM MSGPOLI01_CAB_POLIZAS
                INNER JOIN MSGPOLI02_DET_POLIZAS ON (MSGPOLI01_CAB_POLIZAS.ID_MSGPOLI01 = MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01)
                INNER JOIN CBO_TIPOACCIONPOLIZAS ON (CBO_TIPOACCIONPOLIZAS.ID_SOCSYST10 = MSGPOLI01_CAB_POLIZAS.RELA_SOCSYST10_ACCION)
                WHERE MSGPOLI02_DET_POLIZAS.rela_srhmain10 = :RELA_ENTIDAD
                  AND MSGPOLI02_DET_POLIZAS.rela_socsyst10_refe = :rela_referencia
                  AND MSGPOLI02_DET_POLIZAS.msgpoli02_referencia like :referencia || '%'
                into :RELA_SOCWFLO01,
                     :RELA_SOCSYST01,
                     :RELA_SOCSYST10,
                     :ID_MSGPOLI01,
                     :ORIGEN,
                     :MSGPOLI01_DOCNRO,
                     :MSGPOLI01_DESCRIPCION,
                     :MSGPOLI01_FCTA
                do
                BEGIN
                    ID_MSGPOLI04 = null;
                    Select max(ID_MSGPOLI04)
                    from GRID_MSGPOLI04_MSGPOLI05 where RELA_MSGPOLI01 = :ID_MSGPOLI01
                    into :ID_MSGPOLI04;

                    if (ID_MSGPOLI04 is null) then
                        CONCILIADO = 'No';
                    else
                        CONCILIADO = 'Si';

                    MSGPOLI01_ANO = extractyear(MSGPOLI01_FCTA);

                    SELECT sum(msgpoli02_det_polizas.msgpoli02_debe)
                    FROM msgpoli02_det_polizas
                    WHERE msgpoli02_det_polizas.rela_msgpoli01 = :ID_MSGPOLI01
                    INTO MSGPOLI01_IMPORTE;
                    suspend;
                end
            end
      END
end
PRD_ARB_SOCSYST13              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from socsyst13_arb_reportes WHERE RELA_SOCSYST13 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT SOCSYST13_CODIGO, RELA_SOCSYST06 from socsyst13_arb_reportes WHERE ID_SOCSYST13=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
PRD_ARB_SOCUSUA04              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from socusua04_arb_menus   WHERE RELA_SOCUSUA04 IS NULL AND RELA_SOCUSUA03=:RELA_SOC03 INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT SOCUSUA04_CODIGO, RELA_SOCSYST06 from socusua04_arb_menus WHERE ID_SOCUSUA04=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
PRD_ARB_SOCUSUA50              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from socusua50_arb_localidades WHERE RELA_SOCUSUA50 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT SOCUSUA50_CODIGO, RELA_SOCSYST06 from socusua50_arb_localidades WHERE ID_SOCUSUA50=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
JAM$_LOGON_MENU                

DECLARE VARIABLE ID_SOCWFLO03 BIGINT;
DECLARE VARIABLE ID_SOCUSUA06 BIGINT;
DECLARE VARIABLE RELA_SOCSYST06 BIGINT;
begin
  SELECT
  vr_entidades_all.socusua02_usuario,
  vr_entidades_all.entidad,
  vr_entidades_all.id_socusua02
  FROM vr_entidades_all
  WHERE vr_entidades_all.socusua02_usuario = :USUARIO
  INTO :USUARIOID,
       :ENTIDAD,
       :ID_SOCUSUA02;

  select socusua02_mae_usuarios.rela_socsyst01
  from socusua02_mae_usuarios
  where socusua02_mae_usuarios.id_socusua02 = :id_socusua02
  into :RELA_SOCSYST01;

  select
  SOCWFLO03_MOV_USUARIOS.id_socwflo03,
  SOCWFLO03_MOV_USUARIOS.rela_socwflo01,
  SOCWFLO03_MOV_USUARIOS.rela_socwflo02
  from SOCWFLO03_MOV_USUARIOS
  where SOCWFLO03_MOV_USUARIOS.rela_socusua02 = :ID_SOCUSUA02
  into :ID_SOCWFLO03,
       :ID_SOCWFLO01,
       :ID_SOCWFLO02;


  if (ID_SOCWFLO03 is not null) then
      BEGIN
          select
          MIN(SOCWFLO04_MOV_PEFILES.rela_socusua03)
          from SOCWFLO04_MOV_PEFILES
          where SOCWFLO04_MOV_PEFILES.rela_socwflo01 = :ID_SOCWFLO01
          and SOCWFLO04_MOV_PEFILES.rela_socwflo02 = :ID_SOCWFLO02
          into :ID_SOCUSUA03;
          FLAG_MENU = 'W';

          select
          socwflo01_arb_organigrama.socwflo01_codigo,
          socwflo01_arb_organigrama.socwflo01_descri,
          socwflo01_arb_organigrama.rela_socusua50,
          socwflo01_arb_organigrama.rela_socsyst06
          from socwflo01_arb_organigrama
          where socwflo01_arb_organigrama.id_socwflo01 = :id_socwflo01
          into :socwflo01_codigo,
               :socwflo01_descri,
               :rela_socusua50,
               :rela_socsyst06;

          select
          socwflo02_tbl_cargos.socwflo02_descri
          from socwflo02_tbl_cargos
          where socwflo02_tbl_cargos.id_socwflo02 = :id_socwflo02
          into :socwflo02_descri;

          select
          SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL
          from SOCSYST06_DET_ARBNIVELES
          where SOCSYST06_DET_ARBNIVELES.id_socsyst06 = :rela_socsyst06
          into :nivel_seguridad;
      END
  else
      BEGIN
          select
          socusua06_mov_menus.rela_socusua03,
          socusua06_mov_menus.id_socusua06
          from socusua06_mov_menus
          where socusua06_mov_menus.rela_socusua02 = :ID_SOCUSUA02
          into :ID_SOCUSUA03,
               :id_socusua06;
          FLAG_MENU = 'Z';
      END

  for select
  socusua04_arb_menus.id_socusua04,
  SOCUSUA04_ARB_MENUS.socusua04_codigo,
  SOCUSUA04_ARB_MENUS.SOCUSUA04_DESCRI,
  SOCUSUA04_ARB_MENUS.RELA_SOCUSUA04
  from socusua04_arb_menus
  where socusua04_arb_menus.rela_socusua03 = :ID_SOCUSUA03
  order by socusua04_arb_menus.socusua04_codigo
  into :menuid,
       :SOCUSUA04_CODIGO,
       :MENUTITULO,
       :PADREID
  do
  begin
    ID_SOCUSUA05 = null;
    rela_socsyst14 = null;
    ID_SOCSYST04 = null;

    select
    SOCUSUA05_DEP_FUNCIONES.ID_SOCUSUA05,
    SOCUSUA05_DEP_FUNCIONES.rela_socsyst14,
    SOCUSUA05_DEP_FUNCIONES.rela_socsyst04
    from SOCUSUA05_DEP_FUNCIONES
    where SOCUSUA05_DEP_FUNCIONES.rela_socusua04 = :menuid
    into :ID_SOCUSUA05,
         :rela_socsyst14,
         :ID_SOCSYST04;

    nombreclase = null;

    select
    SOCSYST04_DET_FUNCIONES.rela_socsyst03,
    SOCSYST04_DET_FUNCIONES.SOCSYST04_FUNCION
    from socsyst04_det_funciones
    where socsyst04_det_funciones.id_socsyst04 = :id_socsyst04
    into :rela_socsyst03,
         :nombreclase;

    select socsyst03_det_sistemas.socsyst03_url_site
    from socsyst03_det_sistemas
    where socsyst03_det_sistemas.id_socsyst03 = :rela_socsyst03
    INTO :url_sistema;

    socsyst14_parametro = null;
    socsyst14_param_int = null;
    select
    socsyst14_det_parametros.socsyst14_parametro,
    socsyst14_det_parametros.socsyst14_param_int
    from socsyst14_det_parametros
    where socsyst14_det_parametros.id_socsyst14 = :rela_socsyst14
    into :socsyst14_parametro,
         :socsyst14_param_int;
    

    suspend;
  end
end
PRD_ARB_SOCWFLO01              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from socwflo01_arb_organigrama WHERE RELA_SOCWFLO01 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT SOCWFLO01_CODIGO, RELA_SOCSYST06 from socwflo01_arb_organigrama WHERE ID_SOCWFLO01=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
API_NUM_000D                   

DECLARE VARIABLE CNUM_RETO VARCHAR(200);
DECLARE VARIABLE CNUM_RETO_000 VARCHAR(200);
DECLARE VARIABLE CNUM_SEND NUMERIC(2,0);
begin
    if (NUMERO <= 99) then
        begin
            Select CNUMERO_00D FROM api_num_00D(:NUMERO, :FLAG) INTO :CNUM_RETO;
        end        
    else if (NUMERO = 100) then
        begin
            Select CNUMERO_000 FROM api_num_000(:NUMERO, 1) INTO :CNUM_RETO;
        end
    else if ((NUMERO-100) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(100, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 100;
        end
    else if ((NUMERO-200) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(200, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 200;
        end
    else if ((NUMERO-300) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(300, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 300;
        end
    else if ((NUMERO-400) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(400, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 400;
        end
    else if ((NUMERO-500) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(500, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 500;
        end
    else if ((NUMERO-600) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(600, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 600;
        end
    else if ((NUMERO-700) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(700, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 700;
        end
    else if ((NUMERO-800) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(800, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 800;
        end
    else if ((NUMERO-900) <= 99) then
        begin
            Select CNUMERO_000 FROM api_num_000(900, 0) INTO :CNUM_RETO_000;
            CNUM_SEND = NUMERO - 900;
        end

    if ((CNUM_SEND<>0) and (NUMERO > 100)) then
        begin
            Select CNUMERO_00D FROM api_num_00D(:CNUM_SEND, :FLAG) INTO :CNUM_RETO;
            CNUM_RETO = CNUM_RETO_000 || ' ' || :CNUM_RETO;
        end
    else if (NUMERO > 100) then
        begin
            CNUM_RETO = CNUM_RETO_000;
        end
    cnumero_000d = CNUM_RETO;
    SUSPEND;
end
API_NUM_00D                    

DECLARE VARIABLE CNUM_RETO VARCHAR(200);
DECLARE VARIABLE CNUM_RETO_0 VARCHAR(200);
DECLARE VARIABLE CNUM_SEND NUMERIC(1,0);
begin
    if (NUMERO <= 9) then
        begin
            Select CNUMERO_0 FROM api_num_0(:NUMERO, :FLAG) INTO :CNUM_RETO;
        end
    else if ((NUMERO >= 10) and (NUMERO <= 20)) then
        begin
            Select CNUMERO_00 FROM api_num_00(:NUMERO, 0) INTO :CNUM_RETO;
        end

    else if ((NUMERO >= 21) and (NUMERO <= 29)) then
        begin
            Select CNUMERO_00 FROM api_num_00(20, 1) INTO :CNUM_RETO;
            CNUM_SEND = NUMERO - 20;
            Select CNUMERO_0 FROM api_num_0(:CNUM_SEND, :FLAG) INTO :CNUM_RETO_0;
            CNUM_RETO = CNUM_RETO || CNUM_RETO_0;
        end

    else if ((NUMERO-30) <= 9) then
        begin
            Select CNUMERO_00 FROM api_num_00(30, 0) INTO :CNUM_RETO;
            CNUM_SEND = NUMERO - 30;
        end

    else if ((NUMERO-40) <= 9) then
        begin
            Select CNUMERO_00 FROM api_num_00(40, 0) INTO :CNUM_RETO;
            CNUM_SEND = NUMERO - 40;
        end

    else if ((NUMERO-50) <= 9) then
        begin
            Select CNUMERO_00 FROM api_num_00(50, 0) INTO :CNUM_RETO;
            CNUM_SEND = NUMERO - 50;
        end

    else if ((NUMERO-60) <= 9) then
        begin
            Select CNUMERO_00 FROM api_num_00(60, 0) INTO :CNUM_RETO;
            CNUM_SEND = NUMERO - 60;
        end

    else if ((NUMERO-70) <= 9) then
        begin
            Select CNUMERO_00 FROM api_num_00(70, 0) INTO :CNUM_RETO;
            CNUM_SEND = NUMERO - 70;
        end

    else if ((NUMERO-80) <= 9) then
        begin
            Select CNUMERO_00 FROM api_num_00(80, 0) INTO :CNUM_RETO;
            CNUM_SEND = NUMERO - 80;
        end

    else if ((NUMERO-90) <= 9) then
        begin
            Select CNUMERO_00 FROM api_num_00(90, 0) INTO :CNUM_RETO;
            CNUM_SEND = NUMERO - 90;
        end

    if ((CNUM_SEND<>0) and (NUMERO >= 30)) then
        begin
            Select CNUMERO_0 FROM api_num_0(:CNUM_SEND, :FLAG) INTO :CNUM_RETO_0;
            CNUM_RETO = CNUM_RETO || ' y ' || CNUM_RETO_0;
        end

    CNUMERO_00D = CNUM_RETO;
    SUSPEND;
end
API_NUM_JAM                    

DECLARE VARIABLE CNUM_RETO VARCHAR(1000);
DECLARE VARIABLE CNUM_RETO_MILES VARCHAR(1000);
DECLARE VARIABLE CNUM_RETO_MILLON VARCHAR(1000);
DECLARE VARIABLE CNUMERO_TMP VARCHAR(12);
DECLARE VARIABLE NLEN INTEGER;
DECLARE VARIABLE FLAG INTEGER;
DECLARE VARIABLE CNUMERO_MILES VARCHAR(12);
DECLARE VARIABLE NNUMERO_MILES NUMERIC(6,0);
begin
    if (NUMERO <=999999) then
        begin
            Select CNUMERO_MILES FROM api_num_miles(:NUMERO,0) INTO :CNUM_RETO;
        end
    else
        begin
            FLAG = 0;
            CNUMERO_TMP = NUMERO;
            NLEN = STRLEN(CNUMERO_TMP);
            begin
                CNUMERO_MILES = SUBSTR(cnumero_tmp,(NLEN-6)+1 ,NLEN);
                NNUMERO_MILES = CNUMERO_MILES;
                Select CNUMERO_MILES FROM api_num_miles(:NNUMERO_MILES,0) INTO :CNUM_RETO_MILES;

                CNUMERO_MILES = SUBSTR(cnumero_tmp,1 ,NLEN-6);
                NNUMERO_MILES = CNUMERO_MILES;

                CNUMERO_MILES = SUBSTR(CNUMERO_MILES,STRLEN(CNUMERO_MILES),STRLEN(CNUMERO_MILES));
                if (CNUMERO_MILES = '1') then
                    FLAG = 1;

                Select CNUMERO_MILES FROM api_num_miles(:NNUMERO_MILES, :FLAG) INTO :CNUM_RETO_MILLON;

                if (CNUM_RETO_MILES is null) then
                    CNUM_RETO = CNUM_RETO_MILLON || ' millones ';
                else
                    if (CNUM_RETO_MILLON='un') then
                        CNUM_RETO = trim(CNUM_RETO_MILLON) || ' millon ' || CNUM_RETO_MILES;
                    else
                        CNUM_RETO = trim(CNUM_RETO_MILLON) || ' millones ' || CNUM_RETO_MILES;
            end
        end
    CNUMERO_JAM = CNUM_RETO;
    SUSPEND;
end
API_NUM_MEXICO                 

DECLARE VARIABLE CENTERO VARCHAR(50);
DECLARE VARIABLE CDECIMAL VARCHAR(50);
DECLARE VARIABLE CNUMERO_TMP VARCHAR(50);
DECLARE VARIABLE NENTERO NUMERIC(12,0);
DECLARE VARIABLE NDECIMAL NUMERIC(2,0);
DECLARE VARIABLE CNUM_RETO_ENTERO VARCHAR(1000);
begin
    cnumero_tmp = NUMERO;
    CENTERO = SUBSTR(CNUMERO_TMP,1,StrPos('.', cnumero_tmp)-1);

    CDECIMAL = SUBSTR(CNUMERO_TMP, StrPos('.', cnumero_tmp)+1, strlen(cnumero_tmp));
    CDECIMAL = SUBSTR(CDECIMAL,1,2);

    NENTERO = CENTERO;
    NDECIMAL = 0;
    if (CDECIMAL<>'') then
        NDECIMAL = CDECIMAL;

    Select CNUMERO_JAM FROM API_NUM_JAM(:NENTERO) INTO CNUM_RETO_ENTERO;

    if (CDECIMAL='') then
        CDECIMAL='00';

    if (STRLEN(CDECIMAL)=1) then
        CDECIMAL='0' || CDECIMAL;

    if (PARAM_MONEDA='MXN') then
        cnumero = CNUM_RETO_ENTERO || ' pesos ' || CDECIMAL || '/100 M.N.';

    if (PARAM_MONEDA='USD') then
        cnumero = CNUM_RETO_ENTERO || ' dólares ' || CDECIMAL || '/100 DLLS.';

    if (PARAM_MONEDA='EUR') then
        cnumero = CNUM_RETO_ENTERO || ' euros ' || CDECIMAL || '/100 €.';

    SUSPEND;
end
API_NUM_MILES                  

DECLARE VARIABLE CNUM_RETO VARCHAR(1000);
DECLARE VARIABLE CNUM_RETO_000 VARCHAR(1000);
DECLARE VARIABLE CNUM_RETO_0000 VARCHAR(1000);
DECLARE VARIABLE CNUMERO_TMP VARCHAR(12);
DECLARE VARIABLE NLEN INTEGER;
DECLARE VARIABLE CNUMERO_000 VARCHAR(12);
DECLARE VARIABLE NNUMERO_000 NUMERIC(3,0);
DECLARE VARIABLE XFLAG SMALLINT;
begin
    if (NUMERO <=999) then
        begin
            Select CNUMERO_000D FROM api_num_000D(:NUMERO, :FLAG) INTO :CNUM_RETO;
        end
    else
        begin
            XFLAG = 0;
            CNUMERO_TMP = NUMERO;
            NLEN = STRLEN(CNUMERO_TMP);
            begin
                CNUMERO_000 = SUBSTR(cnumero_tmp,(NLEN-3)+1 ,NLEN);
                NNUMERO_000 = CNUMERO_000;
                Select CNUMERO_000D FROM api_num_000D(:NNUMERO_000, :FLAG) INTO :CNUM_RETO_000;

                CNUMERO_000 = SUBSTR(cnumero_tmp,1 ,NLEN-3);
                NNUMERO_000 = CNUMERO_000;

                CNUMERO_000 = SUBSTR(CNUMERO_000,STRLEN(CNUMERO_000),STRLEN(CNUMERO_000));
                if (CNUMERO_000 = '1') then
                    XFLAG = 1;

                Select CNUMERO_000D FROM api_num_000D(:NNUMERO_000, :XFLAG) INTO :CNUM_RETO_0000;

                if (CNUM_RETO_000 is null) then
                    CNUM_RETO = CNUM_RETO_0000 || ' mil ';
                else
                    CNUM_RETO = CNUM_RETO_0000 || ' mil ' || CNUM_RETO_000;
            end
        end
    CNUMERO_MILES = CNUM_RETO;
    SUSPEND;
end
CBO_CONTENEDORES               

BEGIN
  EXIT;
END
CBO_OPERACIONES_CON_SELLOS     

begin
    FOR SELECT
    SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10,
    SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
    SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo
    FROM SOCSYST10_TBL_LISTAESTADOS
    WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_COD = 'NE10'
    INTO :ID_SOCSYST10,
         :SOCSYST10_FILTRO_DES,
         :SOCSYST10_CODIGO
    DO
    BEGIN
        SELECT SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10
        FROM SOCSYST10_TBL_LISTAESTADOS
        WHERE SOCSYST10_TBL_LISTAESTADOS.id_socsyst10 <> :ID_SOCSYST10
        AND SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = :SOCSYST10_CODIGO
        into :ID_SOCSYST10SELLOS;
        suspend;
    END
end
GRID_SOCSYST13_SOCSYST04       

DECLARE VARIABLE USUARIO VARCHAR(20);
begin
    ID_SOCUSUA02 = :RELA_SOCUSUA02;
    select
    vr_entidades_all.socusua02_usuario
    from vr_entidades_all
    where vr_entidades_all.id_socusua02 = :RELA_SOCUSUA02
    into :usuario;

    for select
    jam$_logon_menu.menutitulo,
    jam$_logon_menu.id_socsyst04
    from jam$_logon_menu(:usuario)
    into :menutitulo,
         :RELA_SOCSYST04
    do
    begin
        ID_SOCSYST13 = null;
        for SELECT
        SOCSYST13_ARB_REPORTES.ID_SOCSYST13,
        SOCSYST13_ARB_REPORTES.SOCSYST13_DESCRI
        from SOCSYST13_ARB_REPORTES
        where SOCSYST13_ARB_REPORTES.rela_socsyst13 is null
        and SOCSYST13_ARB_REPORTES.RELA_SOCSYST04 = :RELA_SOCSYST04
        into :ID_SOCSYST13,
             :SOCSYST13_DESCRI
        do
        begin
            if (ID_SOCSYST13 is not null) then
                suspend;
        end
    end
end
VW_SRHMAIN10                   

begin
    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    1
    FROM CBO_SRHMAIN10
    WHERE ID_SOCUSUA02 = :FILTRO
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO
    begin
        SUSPEND;
    end

    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    0
    FROM vr_entidades_all
    WHERE vr_entidades_all.socsyst10_codigo = 'UE'
    and ID_SOCUSUA02 not in (select SRHMAIN10_CAB_EMPLEADO.rela_socusua02
                             from SRHMAIN10_CAB_EMPLEADO
                            )
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO
    begin
    SUSPEND;
    end
end
JAM$_COPYARBOL_SICCONT02       

DECLARE VARIABLE NDESDE INTEGER;
DECLARE VARIABLE DIGITO_ULT VARCHAR(50);
begin
  FOR select
      rela_siccont02,
      id_siccont02,
      siccont02_codigo
      from siccont02_arb_plancta_emp
      where siccont02_arb_plancta_emp.siccont02_flag = 1
      order by siccont02_codigo
      into :rela_siccont02,
           :id_siccont02,
           :siccont02_codigo
      do
      begin
        if (strpos('.',siccont02_codigo) <> 0) then
            begin
                NDESDE = STRLEN(TRIM(:siccont02_codigo));
                DIGITO_ULT = LONGSUBSTR(:siccont02_codigo,NDESDE,1);
                while (DIGITO_ULT <> '.') DO
                begin
                    NDESDE = NDESDE - 1;
                    DIGITO_ULT = LONGSUBSTR(:siccont02_codigo,NDESDE,1);
                    if (NDESDE<=0) then break;
                end
                DIGITO_ULT = TRIM(LONGSUBSTR(:siccont02_codigo,1,NDESDE-1));

                SELECT siccont02_arb_plancta_emp.id_siccont02
                FROM siccont02_arb_plancta_emp
                WHERE siccont02_arb_plancta_emp.siccont02_codigo = :DIGITO_ULT
                  AND siccont02_arb_plancta_emp.siccont02_flag = 1
                INTO :rela_siccont02;

                update siccont02_arb_plancta_emp set rela_siccont02 = :rela_siccont02
                where id_siccont02 = :id_siccont02;

                suspend;
            end
      end

      update siccont02_arb_plancta_emp set siccont02_arb_plancta_emp.siccont02_flag = 0
      where siccont02_arb_plancta_emp.siccont02_flag = 1;
end
JAM$_COPYARBOL_SICCONT02_INSERT

DECLARE VARIABLE YAEXISTE BIGINT;
begin
    select id_socsyst01
    from socsyst01_cab_clientes
    where socsyst01_cab_clientes.rela_socusua02 = :TARGET
    into :TARGET;

    YAEXISTE = null;
    select first 1 id_siccont02
    from siccont02_arb_plancta_emp
    where siccont02_arb_plancta_emp.rela_socsyst01 = :target
    into :YAEXISTE;

    if (YAEXISTE is null) then
    begin
        insert into siccont02_arb_plancta_emp(
        rela_socsyst01,
        rela_socsyst06,
        rela_siccont02,
        rela_siccont02_source,
        rela_socsyst10,
        siccont02_codigo,
        siccont02_codext,
        siccont02_descri,
        siccont02_tipo,
        siccont02_flag,
        siccont02_mayor,
        SICCONT02_CODAGRUP)
        select
        :TARGET,
        siccont02_arb_plancta_emp.rela_socsyst06,
        null,
        siccont02_arb_plancta_emp.id_siccont02,
        siccont02_arb_plancta_emp.rela_socsyst10,
        siccont02_arb_plancta_emp.siccont02_codigo,
        siccont02_arb_plancta_emp.siccont02_codext,
        siccont02_arb_plancta_emp.siccont02_descri,
        siccont02_arb_plancta_emp.siccont02_tipo,
        1,
        siccont02_arb_plancta_emp.siccont02_mayor,
        siccont02_arb_plancta_emp.siccont02_codagrup
        from siccont02_arb_plancta_emp
        where siccont02_arb_plancta_emp.rela_socsyst01 = :SOURCE
        order by siccont02_arb_plancta_emp.siccont02_codigo;

        /* aqui copio los relas padres del nuevo catalogo marcado por 1 */
        select count(id_siccont02)
        from JAM$_COPYARBOL_SICCONT02
        into :COUNT_SICCONT02;

        /* aqui copio los impuestos que se ven en el alta de empresas */
        select count(nok)
        from JAM$_COPYARBOL_SICCONT72(:source, :target)
        into :COUNT_SICCONT72;

        /* aqui copio los impuestos para generar las facturas de venta */
        select count(nok)
        from JAM$_COPYARBOL_MSGPOLI09(:source, :target,'VENTA')
        into :COUNT_MSGPOLI09_ING;

        /* aqui copio los impuestos de impuestos de las facturas de compra */
        select count(nok)
        from JAM$_COPYARBOL_MSGPOLI09(:source, :target,'COMPRA')
        into :COUNT_MSGPOLI09_EGR;

        /* aqui copio los impuestos de impuestos MENSUALES */
        select count(nok)
        from JAM$_COPYARBOL_MSGPOLI20(:source, :target, :areafiscal)
        into :COUNT_MSGPOLI20;
    
        /* aqui copio las cuentas parametrizadas de los Activos Fijos */
        select count(nok)
        from JAM$_COPYARBOL_MSGPOLI28(:source, :target)
        into :COUNT_MSGPOLI28;

        /* aqui copio las cuentas que parametrizan a los ACTIVOS FIJOS */
        select count(nok)
        from JAM$_COPYARBOL_MSGPOLI25(:source, :target)
        into :COUNT_MSGPOLI25;

        /* aqui copio los filtros de iimpuestos de la msgpoli09 */
        select count(nok)
        from JAM$_COPYARBOL_MSGPOLI12(:source, :target)
        into :COUNT_MSGPOLI12;

        /* aqui copio los conceptos de facturacion */
        /*
        select count(nok)
        from JAM$_COPYARBOL_PYMINGR10(:source, :target)
        into :COUNT_PYMINGR10;
        */
        suspend;
    end
end
PRD_ORDEN_SICGEST11            

BEGIN
  EXIT;
END
PRD_ORDEN_SOCSYST06            

DECLARE VARIABLE NORDEN INTEGER;
DECLARE VARIABLE RETO_ORDEN INTEGER;
begin
    if (ARG_ACCION=1) then
    begin
        if (ARG_NORDEN=1) then
            begin
                nOrden = ARG_NORDEN;
            end
        else
            begin            
                nOrden = ARG_NORDEN - 1;
                select SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL
                FROM SOCSYST06_DET_ARBNIVELES
                WHERE SOCSYST06_DET_ARBNIVELES.rela_SOCSYST05 = :nRELA
                AND SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL = :nOrden
                AND SOCSYST06_DET_ARBNIVELES.id_SOCSYST06 <> :nID
                INTO RETO_ORDEN;

                if ((ARG_NORDEN=1) and (RETO_ORDEN IS NOT NULL)) then
                    begin
                        EXCEPTION exception_sicgest11_orden;
                    end
                else
                    begin
                        if ((RETO_ORDEN IS null) or (RETO_ORDEN=0) ) then
                            nOrden = ARG_NORDEN + 1;
                            select SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL
                            FROM SOCSYST06_DET_ARBNIVELES
                            WHERE SOCSYST06_DET_ARBNIVELES.rela_SOCSYST05 = :nRELA
                            AND SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL = :nOrden
                            AND SOCSYST06_DET_ARBNIVELES.id_SOCSYST06 <> :nID
                            INTO RETO_ORDEN;
                            if ((RETO_ORDEN IS null) or (RETO_ORDEN=0) ) then
                                begin
                                    EXCEPTION exception_sicgest11_orden;
                                end
                    end
            end
    end
    else if (ARG_ACCION=0) then
        begin
            select MAX(SOCSYST06_DET_ARBNIVELES.SOCSYST06_nivel)
            FROM SOCSYST06_DET_ARBNIVELES
            WHERE SOCSYST06_DET_ARBNIVELES.rela_SOCSYST05 = :nRELA
            INTO RETO_ORDEN;
            if (RETO_ORDEN+1<>ARG_NORDEN) then
               EXCEPTION exception_sicgest11_orden_ins;
        end
    else
        begin
            select MAX(SOCSYST06_DET_ARBNIVELES.SOCSYST06_nivel)
            FROM SOCSYST06_DET_ARBNIVELES
            WHERE SOCSYST06_DET_ARBNIVELES.rela_SOCSYST05 = :nRELA
            INTO RETO_ORDEN;
            if (RETO_ORDEN<>ARG_NORDEN ) then
                select MIN(SOCSYST06_DET_ARBNIVELES.SOCSYST06_nivel)
                FROM SOCSYST06_DET_ARBNIVELES
                WHERE SOCSYST06_DET_ARBNIVELES.rela_SOCSYST05 = :nRELA
                INTO RETO_ORDEN;
            if (RETO_ORDEN<>ARG_NORDEN ) then
               EXCEPTION exception_sicgest11_orden_del;
        end
end
REP_MSGPOLI23                  

DECLARE VARIABLE MSGPOLI24_CODEXTX VARCHAR(50);
DECLARE VARIABLE MSGPOLI24_GRUPOX VARCHAR(50);
DECLARE VARIABLE TIPO CHAR(2);
BEGIN
  FOR
    SELECT
        CBO_CLIENTES_EMPRESAS.ENTIDAD,
        CBO_CLIENTES_EMPRESAS.SOCUSUA01_TIPO,
        MSGPOLI20_CAB_IMPUESTOS.RELA_MSGPOLI20,
        MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
        P1.RELA_MSGPOLI20,
        P1.RELA_SOCSYST10,
        P1.RELA_SOCSYST10_TABLA,
        P1.RELA_MSGPOLI01,
        P1.ID_MSGPOLI23,
        P1.MSGPOLI23_ANO,
        P1.MSGPOLI23_MES,
        P1.MSGPOLI23_IMPORTE,
        P1.MSGPOLI23_IMPORTE,
        P1.MSGPOLI23_IMPORTE_ACUMU,
        P1.MSGPOLI23_IMPORTE_ACUMU,
        P1.MSGPOLI23_IMPORTE_CARGO,
        P1.MSGPOLI23_IMPORTE_ABONO,
        P1.MSGPOLI23_IMPORTE_AFAVOR,
        P1.MSGPOLI23_IMPORTE_RING,
        P1.MSGPOLI23_IMPORTE_REGR,
        P1.MSGPOLI23_IMPORTE_INGRESOS,
        P1.MSGPOLI23_IMPORTE_SING,
        P1.MSGPOLI23_IMPORTE_EGRESOS,
        P1.MSGPOLI23_IMPORTE_SEGR,
        P1.MSGPOLI23_IMPORTE_SINMOD,
        P1.MSGPOLI23_IMPORTE_SINMOD,
        P1.MSGPOLI23_IMPORTE_USUARIO,
        P1.MSGPOLI23_IMPORTE_PERDIDA,
        P1.MSGPOLI23_DBLCUOT,
        P1.MSGPOLI23_DBLPORC,
        P1.MSGPOLI23_DBLLINF,
        P1.MSGPOLI23_DBLLSUP,
        P1.MSGPOLI23_NOTAS,
        P1.MSGPOLI23_FAPL,
        MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_DESCRI,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT,
        MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODIGO,
        (SELECT MAX(T1.MSGPOLI23_ANO)
         FROM MSGPOLI23_DET_BITACORA T1
         WHERE T1.RELA_MSGPOLI20 = P1.RELA_MSGPOLI20)MSGPOLI23_ULT_ANO,
        (SELECT MAX(T2.MSGPOLI23_MES)
         FROM MSGPOLI23_DET_BITACORA T2
         WHERE T2.RELA_MSGPOLI20 = P1.RELA_MSGPOLI20) MSGPOLI23_ULT_MES
    FROM MSGPOLI24_ARB_ORGANIZADOR
    INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = MSGPOLI20_CAB_IMPUESTOS.RELA_MSGPOLI24)
    INNER JOIN MSGPOLI23_DET_BITACORA P1 ON (MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20 = P1.RELA_MSGPOLI20)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (P1.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    INNER JOIN CBO_CLIENTES_EMPRESAS ON (MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01 = CBO_CLIENTES_EMPRESAS.ID_SOCSYST01)
    WHERE P1.MSGPOLI23_ANO = :ANO
      AND P1.MSGPOLI23_MES = :MES
      AND MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01 = :EMPRESA
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
    ORDER BY :MSGPOLI24_CODEXT
    INTO
        :ENTIDAD,
        :TIPO,
        :RELA_MSGPOLI20,
        :RELA_SOCSYST01,
        :SOCSYST10_CODIGO,
        :SOCSYST10_FILTRO_DES,
        :RELA_MSGPOLI201,
        :RELA_SOCSYST10,
        :RELA_SOCSYST10_TABLA,
        :RELA_MSGPOLI01,
        :ID_MSGPOLI23,
        :MSGPOLI23_ANO,
        :MSGPOLI23_MES,
        :MSGPOLI23_IMPORTE,
        :MSGPOLI23_IMPORTEA,
        :MSGPOLI23_IMPORTE_ACUMU,
        :MSGPOLI23_IMPORTE_ACUMUA,
        :MSGPOLI23_IMPORTE_CARGO,
        :MSGPOLI23_IMPORTE_ABONO,
        :MSGPOLI23_IMPORTE_AFAVOR,
        :MSGPOLI23_IMPORTE_RING,
        :MSGPOLI23_IMPORTE_REGR,
        :MSGPOLI23_IMPORTE_INGRESOS,
        :MSGPOLI23_IMPORTE_SING,
        :MSGPOLI23_IMPORTE_EGRESOS,
        :MSGPOLI23_IMPORTE_SEGR,
        :MSGPOLI23_IMPORTE_SINMOD,
        :MSGPOLI23_IMPORTE_SINMODA,
        :MSGPOLI23_IMPORTE_USUARIO,
        :MSGPOLI23_IMPORTE_PERDIDA,
        :MSGPOLI23_DBLCUOT,
        :MSGPOLI23_DBLPORC,
        :MSGPOLI23_DBLLINF,
        :MSGPOLI23_DBLLSUP,
        :MSGPOLI23_NOTAS,
        :MSGPOLI23_FAPL,
        :ID_MSGPOLI24,
        :MSGPOLI24_DESCRI,
        :MSGPOLI24_CODEXT,
        :MSGPOLI24_CODIGO,
        :MSGPOLI23_ULT_ANO,
        :MSGPOLI23_ULT_MES
  DO
  BEGIN
    SELECT MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_AFAVOR
    FROM MSGPOLI23_DET_BITACORA
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
    INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI20_CAB_IMPUESTOS.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
    WHERE MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01 = :EMPRESA
      AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :ANO
      AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :MES
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
      AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = :MSGPOLI24_CODEXT
    INTO :SALDO_AFAVOR;

    SELECT MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_AFAVOR
    FROM MSGPOLI23_DET_BITACORA
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    INNER JOIN MSGPOLI20_CAB_IMPUESTOS ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI20 = MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20)
    INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI20_CAB_IMPUESTOS.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
    WHERE MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01 = :EMPRESA
      AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :ANO
      AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :MES - 1
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
      AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = :MSGPOLI24_CODEXT
    INTO :SALDO_AFAVOR_ACUM;

    SALDO_AFAVOR = SALDO_AFAVOR - SALDO_AFAVOR_ACUM;

    IMPUESTORELACIONADO = '';
    TABLA = '';
    INGRESOSA = 0.00;
    EGRESOSA = 0.00;

    SELECT MSGPOLI20_CAB_IMPUESTOS.MSGPOLI20_DESCRI
    FROM MSGPOLI20_CAB_IMPUESTOS
    WHERE MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20 = :RELA_MSGPOLI20
    INTO :IMPUESTORELACIONADO;

    IF (:IMPUESTORELACIONADO IS NULL) THEN
      IMPUESTORELACIONADO = '';

    SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
    FROM SOCSYST10_TBL_LISTAESTADOS
    WHERE  SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = :RELA_SOCSYST10_TABLA
    INTO :TABLA;

    SELECT CBO_MESES.SOCSYST10_FILTRO_DES
    FROM CBO_MESES
    WHERE CBO_MESES.SOCSYST10_CODIGO =:MSGPOLI23_MES
    INTO :MESES;

    SELECT
        VW_MSGPOLI24.MSGPOLI24_DESCRI,
        VW_MSGPOLI24.MSGPOLI24_CODEXT
    FROM VW_MSGPOLI24(:ID_MSGPOLI24)
    WHERE VW_MSGPOLI24.SOCSYST06_NIVEL = 2
    INTO
        :MSGPOLI24_GRUPO,
        :MSGPOLI24_CODEXTX;

    MSGPOLI24_GRUPOX = '';

    IF (:MSGPOLI24_CODEXTX = '01.02') THEN
      SELECT VW_MSGPOLI24.MSGPOLI24_DESCRI
      FROM VW_MSGPOLI24(:ID_MSGPOLI24)
      WHERE VW_MSGPOLI24.SOCSYST06_NIVEL = 3
      INTO :MSGPOLI24_GRUPOX;

    IF (:MSGPOLI24_GRUPOX <> '') THEN
      MSGPOLI24_GRUPO = MSGPOLI24_GRUPO || ' - ' || MSGPOLI24_GRUPOX;

    SELECT MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_DESCRI
    FROM  MSGPOLI24_ARB_ORGANIZADOR
    WHERE MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24 = :ID_MSGPOLI24
    INTO :IMPUESTO;

    IF (:ID_MSGPOLI24 IS NULL) THEN
      IMPUESTO = '';

    IF (:MSGPOLI24_CODEXT LIKE 'MEX-F-IETU%' OR :MSGPOLI24_CODEXT LIKE 'MEX-F-ISR%') THEN
      BEGIN
        MSGPOLI23_IMPORTEA = 0.00;
        MSGPOLI23_IMPORTE_ACUMUA = 0.00;
        MSGPOLI23_IMPORTE_SINMODA = 0.00;
      END
    ELSE
      BEGIN
        MSGPOLI23_IMPORTE = 0.00;
        MSGPOLI23_IMPORTE_ACUMU = 0.00;
        MSGPOLI23_IMPORTE_SINMOD = 0.00;
      END

    IF (:TIPO = 'M'  AND :MSGPOLI24_CODEXT LIKE 'MEX-F-ISR%') THEN
      BEGIN
        SELECT
            GRID_MSGPOLI23.MSGPOLI23_IMPORTE_INGRESOS,
            GRID_MSGPOLI23.MSGPOLI23_IMPORTE_EGRESOS
        FROM GRID_MSGPOLI23
        WHERE GRID_MSGPOLI23.MSGPOLI23_ANO = :ANO
          AND GRID_MSGPOLI23.MSGPOLI23_MES = (:MES -1)
          AND GRID_MSGPOLI23.RELA_SOCSYST01 = :EMPRESA
          AND GRID_MSGPOLI23.RELA_MSGPOLI20 = :RELA_MSGPOLI201
          AND GRID_MSGPOLI23.RELA_SOCSYST10 = :RELA_SOCSYST10
        INTO
            :INGRESOSA,
            :EGRESOSA;

        MSGPOLI24_CODEXT = 'MEX-F-ISR';
      END

    SUSPEND;
  END
END
REP_MSGPOLI22_SP               

begin
  FOR
     select DISTINCT
     REP_MSGPOLI23.rela_msgpoli201,
     REP_MSGPOLI23.socsyst10_codigo,
     REP_MSGPOLI23.msgpoli24_grupo
     FROM REP_MSGPOLI23(:empresa, :ANO, :MES)
     INTO
     :ID_MSGPOLI20,
     :socsyst10_codigo,
     :msgpoli24_grupo

  DO
     BEGIN
        FOR SELECT
        PRD_MSGPOLI22.siccont02_codext,
        PRD_MSGPOLI22.siccont02_descri,
        PRD_MSGPOLI22.rela_siccont02,
        PRD_MSGPOLI22.socsyst10_filtro_des,
        sum(PRD_MSGPOLI22.msgpoli22_importe)
        FROM PRD_MSGPOLI22(:id_msgpoli20,:empresa,:ano, :mes, 'RET')

        group by
                PRD_MSGPOLI22.siccont02_codext,
                PRD_MSGPOLI22.siccont02_descri,
                PRD_MSGPOLI22.rela_siccont02,
                PRD_MSGPOLI22.socsyst10_filtro_des
        INTO
            :siccont02_codext,
            :siccont02_descri,
            :rela_siccont02,
            :socsyst10_filtro_des,
            :msgpoli22_importe
        DO
     suspend;
     END
end
PRD_PROPIETARIO_DATOS          

DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
DECLARE VARIABLE SOCUSUA41_CALLE VARCHAR(100);
DECLARE VARIABLE SOCUSUA41_NRO VARCHAR(100);
DECLARE VARIABLE SOCUSUA41_PISO VARCHAR(100);
DECLARE VARIABLE SOCUSUA41_DEPTO VARCHAR(100);
DECLARE VARIABLE SOCUSUA41_TELE_LINEA VARCHAR(100);
DECLARE VARIABLE SOCUSUA41_TELE_CELU VARCHAR(100);
DECLARE VARIABLE SOCUSUA41_TELE_FAX VARCHAR(100);
DECLARE VARIABLE SOCUSUA41_MAIL_PERSO VARCHAR(100);
DECLARE VARIABLE SOCUSUA41_CP VARCHAR(100);
DECLARE VARIABLE SOCUSUA50_DESCRI VARCHAR(100);
DECLARE VARIABLE SOCSYST06_DESCRI VARCHAR(100);
DECLARE VARIABLE LOCALIDAD VARCHAR(1000);
DECLARE VARIABLE DIRECCION VARCHAR(300);
DECLARE VARIABLE ENTIDAD VARCHAR(200);
DECLARE VARIABLE TELEFONOS VARCHAR(1000);
DECLARE VARIABLE MAILS VARCHAR(1000);
DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
DECLARE VARIABLE ID_SOCUSUA01 BIGINT;
DECLARE VARIABLE SOCUSUA01_TIPO VARCHAR(1);
DECLARE VARIABLE SOCUSUA02_USUARIO VARCHAR(50);
DECLARE VARIABLE SOCUSUA02_PASSWORD VARCHAR(50);
DECLARE VARIABLE SOCUSUA02_NIVELSEG INTEGER;
DECLARE VARIABLE SOCUSUA02_CODEXT VARCHAR(50);
DECLARE VARIABLE SOCSYST10_FILTRO_DES VARCHAR(100);
DECLARE VARIABLE SOCSYST10_CODIGO VARCHAR(50);
begin
    SELECT
    VR_ENTIDADES_ALL.RELA_SOCUSUA20,
    VR_ENTIDADES_ALL.RELA_SOCUSUA30,
    VR_ENTIDADES_ALL.ID_SOCUSUA01,
    VR_ENTIDADES_ALL.SOCUSUA01_TIPO,
    VR_ENTIDADES_ALL.ENTIDAD,
    VR_ENTIDADES_ALL.ID_SOCUSUA02,
    VR_ENTIDADES_ALL.SOCUSUA02_USUARIO,
    VR_ENTIDADES_ALL.SOCUSUA02_PASSWORD,
    VR_ENTIDADES_ALL.SOCUSUA02_NIVELSEG,
    VR_ENTIDADES_ALL.SOCUSUA02_CODEXT,
    VR_ENTIDADES_ALL.SOCSYST10_FILTRO_DES,
    VR_ENTIDADES_ALL.SOCSYST10_CODIGO
    FROM VR_ENTIDADES_ALL
    INNER JOIN SOCSYST01_CAB_CLIENTES ON (VR_ENTIDADES_ALL.ID_SOCUSUA02 = SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02)
    WHERE SOCSYST01_CAB_CLIENTES.socsyst01_propietario = 1
    INTO :RELA_SOCUSUA20,
         :RELA_SOCUSUA30,
         :ID_SOCUSUA01,
         :SOCUSUA01_TIPO,
         :ENTIDAD,
         :ID_SOCUSUA02,
         :SOCUSUA02_USUARIO,
         :SOCUSUA02_PASSWORD,
         :SOCUSUA02_NIVELSEG,
         :SOCUSUA02_CODEXT,
         :SOCSYST10_FILTRO_DES,
         :SOCSYST10_CODIGO;

    if (SOCUSUA01_TIPO = 'M') then
        BEGIN
            for select
            SOCUSUA41_DET_LOCALIDADES.rela_socusua50,
            SOCUSUA41_DET_LOCALIDADES.socusua41_calle,
            SOCUSUA41_DET_LOCALIDADES.socusua41_nro,
            SOCUSUA41_DET_LOCALIDADES.socusua41_piso,
            SOCUSUA41_DET_LOCALIDADES.socusua41_depto,
            SOCUSUA41_DET_LOCALIDADES.socusua41_tele_linea,
            SOCUSUA41_DET_LOCALIDADES.socusua41_tele_celu,
            SOCUSUA41_DET_LOCALIDADES.socusua41_tele_fax,
            SOCUSUA41_DET_LOCALIDADES.socusua41_mail_perso,
            SOCUSUA41_DET_LOCALIDADES.socusua41_cp
            FROM SOCUSUA41_DET_LOCALIDADES
            WHERE SOCUSUA41_DET_LOCALIDADES.socusua41_principal = 1
            AND SOCUSUA41_DET_LOCALIDADES.rela_socusua20 = :RELA_SOCUSUA20
            into
            :rela_socusua50,
            :socusua41_calle,
            :socusua41_nro,
            :socusua41_piso,
            :socusua41_depto,
            :socusua41_tele_linea,
            :socusua41_tele_celu,
            :socusua41_tele_fax,
            :socusua41_mail_perso,
            :socusua41_cp
            do
            begin
               LOCALIDAD = '';
               for select
               VW_SOCUSUA50.socusua50_descri,
               VW_SOCUSUA50.socsyst06_descri
               from VW_SOCUSUA50(:rela_socusua50)
               order by SOCUSUA50_CODIGO desc
               into
               :socusua50_descri,
               :socsyst06_descri
               do
               begin
                  LOCALIDAD = LOCALIDAD || TRIM(:socusua50_descri) || ', ';
               end

               select MAX(GRID_SOCUSUA40.socusua40_numero)
               from GRID_SOCUSUA40
               WHERE GRID_SOCUSUA40.socsyst10_codigo = 'PAAA'
                 AND GRID_SOCUSUA40.rela_socusua20 = :RELA_SOCUSUA20
                 INTO :OUT_PATENTE;

               select MAX(GRID_SOCUSUA40.socusua40_numero)
               from GRID_SOCUSUA40
               WHERE GRID_SOCUSUA40.socsyst10_codigo = 'CURP'
                 AND GRID_SOCUSUA40.rela_socusua20 = :RELA_SOCUSUA20
                 INTO :OUT_CURP;
            end
        END
    ELSE
        BEGIN
            for select
            SOCUSUA41_DET_LOCALIDADES.rela_socusua50,
            SOCUSUA41_DET_LOCALIDADES.socusua41_calle,
            SOCUSUA41_DET_LOCALIDADES.socusua41_nro,
            SOCUSUA41_DET_LOCALIDADES.socusua41_piso,
            SOCUSUA41_DET_LOCALIDADES.socusua41_depto,
            SOCUSUA41_DET_LOCALIDADES.socusua41_tele_linea,
            SOCUSUA41_DET_LOCALIDADES.socusua41_tele_celu,
            SOCUSUA41_DET_LOCALIDADES.socusua41_tele_fax,
            SOCUSUA41_DET_LOCALIDADES.socusua41_mail_perso,
            SOCUSUA41_DET_LOCALIDADES.socusua41_cp
            FROM SOCUSUA41_DET_LOCALIDADES
            WHERE SOCUSUA41_DET_LOCALIDADES.socusua41_principal = 1
            AND SOCUSUA41_DET_LOCALIDADES.rela_socusua30 = :RELA_SOCUSUA30
            into
            :rela_socusua50,
            :socusua41_calle,
            :socusua41_nro,
            :socusua41_piso,
            :socusua41_depto,
            :socusua41_tele_linea,
            :socusua41_tele_celu,
            :socusua41_tele_fax,
            :socusua41_mail_perso,
            :socusua41_cp
            do
            begin
               LOCALIDAD = '';
               for select
               VW_SOCUSUA50.socusua50_descri,
               VW_SOCUSUA50.socsyst06_descri
               from VW_SOCUSUA50(:rela_socusua50)
               order by SOCUSUA50_CODIGO desc
               into
               :socusua50_descri,
               :socsyst06_descri
               do
               begin
                  LOCALIDAD = LOCALIDAD || TRIM(:socusua50_descri) || ', ';
               end

               select MAX(GRID_SOCUSUA40.socusua40_numero)
               from GRID_SOCUSUA40
               WHERE GRID_SOCUSUA40.socsyst10_codigo = 'PAAA'
                 AND GRID_SOCUSUA40.rela_socusua30 = :RELA_SOCUSUA20
                 INTO :OUT_PATENTE;

               select MAX(GRID_SOCUSUA40.socusua40_numero)
               from GRID_SOCUSUA40
               WHERE GRID_SOCUSUA40.socsyst10_codigo = 'CURP'
                 AND GRID_SOCUSUA40.rela_socusua30 = :RELA_SOCUSUA20
                 INTO :OUT_CURP;
            end
        END

    LOCALIDAD = LOCALIDAD || ' CP: ' ||  TRIM(:socusua41_cp);
    DIRECCION = TRIM(:socusua41_nro) || ' ' || TRIM(:socusua41_calle) || ' ' ||  TRIM(:socusua41_piso) || ' ' || TRIM(:socusua41_depto);

    TELEFONOS = '';
    if (trim(:socusua41_tele_linea) <> '') then
       TELEFONOS = 'Línea : ' || trim(:socusua41_tele_linea);

    if (trim(:socusua41_tele_celu) <> '') then
       TELEFONOS = TELEFONOS || ' Celu. : ' || trim(:socusua41_tele_celu);

    if (trim(:socusua41_tele_celu) <> '') then
       TELEFONOS = TELEFONOS || ' Fax. : ' || trim(:socusua41_tele_fax);

     /* TELEFONOS = 'Línea : ' || trim(:socusua41_tele_linea) || ' Celu. : ' || trim(:socusua41_tele_celu) || ' Fax : ' || trim(:socusua41_tele_fax); */
    MAILS = trim(:socusua41_mail_perso);

    out_entidad = :ENTIDAD;
    out_localidad = LOCALIDAD;
    out_direccion = DIRECCION;
    out_telefonos = TELEFONOS;
    out_mails = MAILS;

    suspend;
end
API_NUM_0                      

DECLARE VARIABLE UN VARCHAR(20);
DECLARE VARIABLE UNO VARCHAR(20);
DECLARE VARIABLE DOS VARCHAR(20);
DECLARE VARIABLE TRES VARCHAR(20);
DECLARE VARIABLE CUATRO VARCHAR(20);
DECLARE VARIABLE CINCO VARCHAR(20);
DECLARE VARIABLE SEIS VARCHAR(20);
DECLARE VARIABLE SIETE VARCHAR(20);
DECLARE VARIABLE OCHO VARCHAR(20);
DECLARE VARIABLE NUEVE VARCHAR(20);
DECLARE VARIABLE CNUM_RETO VARCHAR(200);
begin
    un = 'un';
    uno = 'uno';
    dos = 'dos';
    tres = 'tres';
    cuatro = 'cuatro';
    cinco = 'cinco';
    seis = 'seis';
    siete = 'siete';
    ocho = 'ocho';
    nueve = 'nueve';

    if (NUMERO=1) then
        CNUM_RETO = UNO;
        if (FLAG=1) then
            CNUM_RETO = UN;
    else if (NUMERO=2) then
        CNUM_RETO = DOS;
    else if (NUMERO=3) then
        CNUM_RETO = TRES;
    else if (NUMERO=4) then
        CNUM_RETO = CUATRO;
    else if (NUMERO=5) then
        CNUM_RETO = CINCO;
    else if (NUMERO=6) then
        CNUM_RETO = SEIS;
    else if (NUMERO=7) then
        CNUM_RETO = SIETE;
    else if (NUMERO=8) then
        CNUM_RETO = OCHO;
    else if (NUMERO=9) then
        CNUM_RETO = NUEVE;
    CNUMERO_0 = CNUM_RETO;
    SUSPEND;
end
API_NUM_00                     

DECLARE VARIABLE DIEZ VARCHAR(20);
DECLARE VARIABLE ONCE VARCHAR(20);
DECLARE VARIABLE DOCE VARCHAR(20);
DECLARE VARIABLE TRECE VARCHAR(20);
DECLARE VARIABLE CATORCE VARCHAR(20);
DECLARE VARIABLE QUINCE VARCHAR(20);
DECLARE VARIABLE DIESCISEIS VARCHAR(20);
DECLARE VARIABLE DIESCISIETE VARCHAR(20);
DECLARE VARIABLE DIESCIOCHO VARCHAR(20);
DECLARE VARIABLE DIESCINUEVE VARCHAR(20);
DECLARE VARIABLE VEINTE VARCHAR(20);
DECLARE VARIABLE VEINTI VARCHAR(20);
DECLARE VARIABLE TREINTA VARCHAR(20);
DECLARE VARIABLE CUARENTA VARCHAR(20);
DECLARE VARIABLE CINCUENTA VARCHAR(20);
DECLARE VARIABLE SESENTA VARCHAR(20);
DECLARE VARIABLE SETENTA VARCHAR(20);
DECLARE VARIABLE OCHENTA VARCHAR(20);
DECLARE VARIABLE NOVENTA VARCHAR(20);
DECLARE VARIABLE CNUM_RETO VARCHAR(200);
begin
    diez = 'diez';
    once = 'once';
    doce = 'doce';
    trece = 'trece';
    catorce = 'catorce';
    quince = 'quince';
    diesciseis = 'dieciseis';
    diescisiete = 'diecisiete';
    diesciocho = 'dieciocho';
    diescinueve = 'diecinueve';
    veinte = 'veinte';
    veinti = 'veinti';
    treinta = 'treinta';
    cuarenta = 'cuarenta';
    cincuenta = 'cincuenta';
    sesenta = 'sesenta';
    setenta = 'setenta';
    ochenta = 'ochenta';
    noventa = 'noventa';

    if (NUMERO = 10) then
        CNUM_RETO = DIEZ;
    else if (NUMERO = 11) then
        CNUM_RETO = ONCE;
    else if (NUMERO = 12) then
        CNUM_RETO = DOCE;
    else if (NUMERO = 13) then
        CNUM_RETO = TRECE;
    else if (NUMERO = 14) then
        CNUM_RETO = CATORCE;
    else if (NUMERO = 15) then
        CNUM_RETO = QUINCE;
    else if (NUMERO = 16) then
        CNUM_RETO = DIESCISEIS;
    else if (NUMERO = 17) then
        CNUM_RETO = DIESCISIETE;
    else if (NUMERO = 18) then
        CNUM_RETO = DIESCIOCHO;
    else if (NUMERO = 19) then
        CNUM_RETO = DIESCINUEVE;
    else if (NUMERO = 20) then
        CNUM_RETO = VEINTE;
        if (FLAG=1) then
            CNUM_RETO = VEINTI;
    else if (NUMERO = 30) then
        CNUM_RETO = TREINTA;
    else if (NUMERO = 40) then
        CNUM_RETO = CUARENTA;
    else if (NUMERO = 50) then
        CNUM_RETO = CINCUENTA;
    else if (NUMERO = 60) then
        CNUM_RETO = SESENTA;
    else if (NUMERO = 70) then
        CNUM_RETO = SETENTA;
    else if (NUMERO = 80) then
        CNUM_RETO = OCHENTA;
    else if (NUMERO = 90) then
        CNUM_RETO = NOVENTA;

    CNUMERO_00 = CNUM_RETO;
    SUSPEND;
end
REP_MSGPOLI02                  

BEGIN
  FOR
    SELECT
        MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01,
        MSGPOLI02_DET_POLIZAS.RELA_SICCONT02,
        MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_COLUM,
        MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_ARCO,
        MSGPOLI02_DET_POLIZAS.RELA_SOCSYST10_REFE,
        MSGPOLI02_DET_POLIZAS.RELA_SICEGRE01,
        MSGPOLI02_DET_POLIZAS.RELA_SICINGR01,
        MSGPOLI02_DET_POLIZAS.RELA_SOCUSUA02,
        MSGPOLI02_DET_POLIZAS.RELA_SRHMAIN10,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODIGO,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_CODEXT,
        SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
        MSGPOLI02_DET_POLIZAS.ID_MSGPOLI02,
        MSGPOLI02_DET_POLIZAS.MSGPOLI02_DEBE,
        MSGPOLI02_DET_POLIZAS.MSGPOLI02_HABER,
        SNVL(MSGPOLI02_DET_POLIZAS.MSGPOLI02_REFERENCIA, 'Sin Asignar')
    FROM MSGPOLI02_DET_POLIZAS
    INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (MSGPOLI02_DET_POLIZAS.RELA_SICCONT02 = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
    WHERE MSGPOLI02_DET_POLIZAS.RELA_MSGPOLI01 = :PARAM
    INTO
        :RELA_MSGPOLI01,
        :RELA_SICCONT02,
        :RELA_SOCSYST10_COLUM,
        :RELA_SOCSYST10_ARCO,
        :RELA_SOCSYST10_REFE,
        :RELA_SICEGRE01,
        :RELA_SICINGR01,
        :RELA_SOCUSUA02,
        :RELA_SRHMAIN10,
        :SICCONT02_CODIGO,
        :SICCONT02_CODEXT,
        :SICCONT02_DESCRI,
        :ID_MSGPOLI02,
        :MSGPOLI02_DEBE,
        :MSGPOLI02_HABER,
        :MSGPOLI02_REFERENCIA
  DO
  BEGIN
    TIPO_ENTIDAD = '';
    TIPO_REFERENCIA = '';
    ENTIDAD = '';
    MSGPOLI13_UUID = '';
    MSGPOLI13_RFC = '';
    MSGPOLI13_MONTO = '';

    IF (:RELA_SOCSYST10_ARCO IS NOT NULL) THEN
      SELECT CBO_REFERENCIASPOLIZAS.SOCSYST10_FILTRO_DES
      FROM CBO_REFERENCIASPOLIZAS
      WHERE CBO_REFERENCIASPOLIZAS.ID_SOCSYST10 = :RELA_SOCSYST10_ARCO
      INTO :TIPO_ENTIDAD;

    IF (:RELA_SOCSYST10_REFE IS NOT NULL) THEN
      SELECT CBO_TIPOREFERENCIASPOLIZAS.SOCSYST10_CODIGO
      FROM CBO_TIPOREFERENCIASPOLIZAS
      WHERE CBO_TIPOREFERENCIASPOLIZAS.ID_SOCSYST10 = :RELA_SOCSYST10_REFE
      INTO :TIPO_REFERENCIA;

    IF (:RELA_SICEGRE01 IS NOT NULL) THEN
      SELECT GRID_SICEGRE01.ENTIDAD
      FROM GRID_SICEGRE01
      WHERE GRID_SICEGRE01.ID_SICEGRE01 = :RELA_SICEGRE01
      INTO :ENTIDAD;
    ELSE
      IF (:RELA_SICINGR01 IS NOT NULL) THEN
        SELECT GRID_SICINGR01.ENTIDAD
        FROM GRID_SICINGR01
        WHERE GRID_SICINGR01.ID_SICINGR01 = :RELA_SICINGR01
        INTO :ENTIDAD;
      ELSE
        IF (:RELA_SRHMAIN10 IS NOT NULL) THEN
          SELECT GRID_SRHMAIN10.ENTIDAD
          FROM GRID_SRHMAIN10
          WHERE GRID_SRHMAIN10.ID_SRHMAIN10 = :RELA_SRHMAIN10
          INTO :ENTIDAD;
        ELSE
          SELECT VR_ENTIDADES_ALL.ENTIDAD
          FROM VR_ENTIDADES_ALL
          WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02
          INTO :ENTIDAD;

    IF (:TIPO_REFERENCIA LIKE 'UUID%') THEN
      MSGPOLI02_REFERENCIA = 'Sin Asignar';

    SELECT MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA
    FROM MSGPOLI13_DET_REFERENCIAS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :ID_MSGPOLI02
      AND (SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'UUID-PROVE'
        OR SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'UUID-CLIENTE'
        OR SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'UUID-NOMI')
    INTO :MSGPOLI13_UUID;

    SELECT MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA
    FROM MSGPOLI13_DET_REFERENCIAS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :ID_MSGPOLI02
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'UUID-R'
    INTO :MSGPOLI13_RFC;

    SELECT MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA
    FROM MSGPOLI13_DET_REFERENCIAS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :ID_MSGPOLI02
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'UUID-M'
    INTO :MSGPOLI13_MONTO;

    SUSPEND;
  END
END
LOGON_SOCSYST31_CALLTRACE      

begin
    select vr_entidades_all.id_socusua02
    from vr_entidades_all
    where vr_entidades_all.socusua02_usuario = :usuario
    into :ID_SOCUSUA02;
    
    for SELECT
    SOCSYST31_MOV_OPENHISTORY.RELA_SOCSYST04,
    SOCSYST31_MOV_OPENHISTORY.ID_SOCSYST31,
    SOCSYST31_MOV_OPENHISTORY.SOCSYST31_FAPL
    from SOCSYST31_MOV_OPENHISTORY
    where SOCSYST31_MOV_OPENHISTORY.rela_socusua02 = :ID_SOCUSUA02
    into :RELA_SOCSYST04,
         :ID_SOCSYST31,
         :SOCSYST31_FAPL
    do
    begin
        select
        jam$_logon_menu.menuid,
        jam$_logon_menu.nombreclase,
        jam$_logon_menu.usuarioid
        from jam$_logon_menu(:USUARIO)
        into :menuid,
             :nombreclase,
             :usuarioid;
        suspend;
    end
end
PRD_SOCSYST20_MSGPOLI01        

DECLARE VARIABLE RELA_PADRE BIGINT;
begin
        

            SELECT
            SOCSYST21_MOV_CONTADORES_EMP.id_socsyst21,
            SOCSYST21_MOV_CONTADORES_EMP.socsyst21_contador,
            SOCSYST21_MOV_CONTADORES_EMP.socsyst21_mascara,
            snvl(SOCSYST21_MOV_CONTADORES_EMP.socsyst21_prefijo,'') socsyst21_prefijo,
            snvl(SOCSYST21_MOV_CONTADORES_EMP.socsyst21_posfijo,'') socsyst21_posfijo,
            SOCSYST21_MOV_CONTADORES_EMP.socsyst21_longitud
            FROM SOCSYST10_TBL_LISTAESTADOS
            INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
            where SOCSYST21_MOV_CONTADORES_EMP.rela_socsyst01 = :ARG_IDEMPRESA
            and SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo = :ARG_CODIGO
            INTO :XID_SOCSYST20,
                 :XSOCSYST20_CONTADOR,
                 :XSOCSYST20_MASCARA,
                 :XSOCSYST20_PREFIJO,
                 :XSOCSYST20_POSFIJO,
                 :XSOCSYST20_LONGITUD;
            SUSPEND;


end
REP_MSGPOLI01_GENERAL          

BEGIN
  FOR
    SELECT
        REP_MSGPOLI01.SOCWFLO01_DESCRI,
        REP_MSGPOLI01.SOCSYST10_FILTRO_DES,
        REP_MSGPOLI01.RELA_SOCSYST01,
        REP_MSGPOLI01.EMPRESA,
        REP_MSGPOLI01.TIPO_ACCION_CODIGO,
        REP_MSGPOLI01.TIPO_ACCION_POLIZA,
        REP_MSGPOLI01.ID_MSGPOLI01,
        REP_MSGPOLI01.MSGPOLI01_DOCNRO,
        REP_MSGPOLI01.MSGPOLI01_DESCRIPCION,
        REP_MSGPOLI01.MSGPOLI01_NOTAS,
        REP_MSGPOLI01.MSGPOLI01_FCTA
    FROM REP_MSGPOLI01
    WHERE REP_MSGPOLI01.ID_MSGPOLI01 = :INPUT_ID
    INTO
        :SOCWFLO01_DESCRI,
        :SOCSYST10_FILTRO_DES,
        :RELA_SOCSYST01,
        :EMPRESA,
        :TIPO_ACCION_CODIGO,
        :TIPO_ACCION_POLIZA,
        :ID_MSGPOLI01,
        :MSGPOLI01_DOCNRO,
        :MSGPOLI01_DESCRIPCION,
        :MSGPOLI01_NOTAS,
        :MSGPOLI01_FCTA
   DO
   BEGIN
     SELECT FIRST 1
         GRID_MSGPOLI04_MSGPOLI05.SICCONT02_DESCRI,
         GRID_MSGPOLI04_MSGPOLI05.MSGPOLI04_ANO,MSGPOLI04_MES
     FROM GRID_MSGPOLI04_MSGPOLI05
     WHERE GRID_MSGPOLI04_MSGPOLI05.RELA_MSGPOLI01 = :INPUT_ID
     INTO
         :BANCO_CONCILIA,
         :ANO_CONCILIA,
         :MES_CONCILIA;

     FOR
       SELECT
           REP_MSGPOLI02.SICCONT02_CODIGO,
           REP_MSGPOLI02.SICCONT02_CODEXT,
           REP_MSGPOLI02.SICCONT02_DESCRI,
           REP_MSGPOLI02.ID_MSGPOLI02,
           REP_MSGPOLI02.MSGPOLI02_DEBE,
           REP_MSGPOLI02.MSGPOLI02_HABER,
           REP_MSGPOLI02.TIPO_REFERENCIA,
           REP_MSGPOLI02.MSGPOLI02_REFERENCIA,
           REP_MSGPOLI02.TIPO_ENTIDAD,
           REP_MSGPOLI02.ENTIDAD,
           REP_MSGPOLI02.MSGPOLI13_UUID,
           REP_MSGPOLI02.MSGPOLI13_RFC,
           REP_MSGPOLI02.MSGPOLI13_MONTO
       FROM REP_MSGPOLI02(:INPUT_ID)
       INTO
           :SICCONT02_CODIGO,
           :SICCONT02_CODEXT,
           :SICCONT02_DESCRI,
           :ID_MSGPOLI02,
           :MSGPOLI02_DEBE,
           :MSGPOLI02_HABER,
           :TIPO_REFERENCIA,
           :MSGPOLI02_REFERENCIA,
           :TIPO_ENTIDAD,
           :ENTIDAD,
           :MSGPOLI13_UUID,
           :MSGPOLI13_RFC,
           :MSGPOLI13_MONTO
     DO
     BEGIN
       SUSPEND;
     END
   END
END
REP_MSGPOLI03_BALANCE_RESULTADO

DECLARE VARIABLE VTIPO VARCHAR(1);
DECLARE VARIABLE CLIKE VARCHAR(50);
DECLARE VARIABLE SICCONT02_MAYOR INTEGER;
DECLARE VARIABLE SICCONT02_CODIGO VARCHAR(50);
DECLARE VARIABLE MSGPOLI03_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE SICCONT02_TIPO VARCHAR(1);
DECLARE VARIABLE SUBGRUPO VARCHAR(50);
begin
    dblIngreso = 0;
    dblegreso = 0;

    EXECUTE PROCEDURE REP_ZTMPPOLI03_CREA(:empresa, :ano, :mes);

    FOR SELECT
    ztmppoli03_balanza.grupo1,
    ztmppoli03_balanza.siccont02_tipo,
    ztmppoli03_balanza.siccont02_codigo,
    ztmppoli03_balanza.siccont02_mayor
    FROM ztmppoli03_balanza
    WHERE ztmppoli03_balanza.ztmppoli03_user = current_user
      and (ztmppoli03_balanza.grupo1 = 'INGRESO' or (ztmppoli03_balanza.grupo1 = 'EGRESO'))
    order by ztmppoli03_balanza.siccont02_codigo
    into :subgrupo,
         :siccont02_tipo,
         :siccont02_codigo,
         :siccont02_mayor
    do
    begin
        msgpoli03_importe = 0;
        clike = trim(SICCONT02_CODIGO) || '%';

        if (siccont02_mayor = 1) then
            begin
                if ((siccont02_tipo = 'D')) then
                    select
                    sum(ztmppoli03_balanza.msgpoli03_dsaldofin)
                    from ztmppoli03_balanza
                    where ztmppoli03_balanza.ztmppoli03_user = current_user
                      and ztmppoli03_balanza.siccont02_codigo like :clike
                    into :msgpoli03_importe;
                else
                    select
                    sum(ztmppoli03_balanza.msgpoli03_hsaldofin)
                    from ztmppoli03_balanza
                    where ztmppoli03_balanza.ztmppoli03_user = current_user
                      and ztmppoli03_balanza.siccont02_codigo like :clike
                    into :msgpoli03_importe;

                SELECT rep_msgpoli03_titulo.reto_tipo
                FROM rep_msgpoli03_titulo(:siccont02_codigo, :empresa)
                INTO :vtipo;

                if (vtipo <>  siccont02_tipo) then
                    msgpoli03_importe = msgpoli03_importe * (-1);

                if (subgrupo = 'INGRESO') then
                    dblIngreso = dblIngreso + msgpoli03_importe;

                if (subgrupo = 'EGRESO') then
                    dblEgreso = dblEgreso + msgpoli03_importe;
            end
    end

    saldo = dblingreso - dblegreso;
    suspend;
end
API_NUM_000                    

DECLARE VARIABLE CIEN VARCHAR(20);
DECLARE VARIABLE CIENTO VARCHAR(20);
DECLARE VARIABLE DOSCIENTOS VARCHAR(20);
DECLARE VARIABLE TRESCIENTOS VARCHAR(20);
DECLARE VARIABLE CUATROCIENTOS VARCHAR(20);
DECLARE VARIABLE QUINIENTOS VARCHAR(20);
DECLARE VARIABLE SEISCIENTOS VARCHAR(20);
DECLARE VARIABLE SETECIENTOS VARCHAR(20);
DECLARE VARIABLE OCHOCIENTOS VARCHAR(20);
DECLARE VARIABLE NOVECIENTOS VARCHAR(20);
DECLARE VARIABLE CNUM_RETO VARCHAR(200);
begin
    cien = 'cien';
    ciento = 'ciento';
    doscientos = 'doscientos';
    trescientos = 'trescientos';
    cuatrocientos = 'cuatrocientos';
    quinientos = 'quinientos';
    seiscientos = 'seiscientos';
    setecientos = 'setecientos';
    ochocientos = 'ochocientos';
    novecientos = 'novecientos';
    if (NUMERO = 100) then
        CNUM_RETO = CIENTO;
        if (FLAG=1) then
            CNUM_RETO = CIEN;
    else if (NUMERO = 200) then
        CNUM_RETO = DOSCIENTOS;
    else if (NUMERO = 300) then
        CNUM_RETO = TRESCIENTOS;
    else if (NUMERO = 400) then
        CNUM_RETO = CUATROCIENTOS;
    else if (NUMERO = 500) then
        CNUM_RETO = QUINIENTOS;
    else if (NUMERO = 600) then
        CNUM_RETO = SEISCIENTOS;
    else if (NUMERO = 700) then
        CNUM_RETO = SETECIENTOS;
    else if (NUMERO = 800) then
        CNUM_RETO = OCHOCIENTOS;
    else if (NUMERO = 900) then
        CNUM_RETO = NOVECIENTOS;

    cnumero_000 = CNUM_RETO;
    SUSPEND;
end
REP_CBAR_TRAF                  

DECLARE VARIABLE ID_SIGSITA01 BIGINT;
DECLARE VARIABLE SIGSITA01_DOCNRO VARCHAR(50);
DECLARE VARIABLE SOCWFLO01_CODINT VARCHAR(50);
DECLARE VARIABLE COUNT_REGIS INTEGER;
DECLARE VARIABLE COUNT_FILA INTEGER;
DECLARE VARIABLE COUNT_TOTAL INTEGER;
DECLARE VARIABLE COUNT_COLUMNA INTEGER;
begin
    /* BUSCA LA ENTIDAD MORAL DEL CLIENTE */
    SELECT socsyst01_cab_clientes.socsyst01_descri
    FROM socsyst01_cab_clientes
    INTO :COMPANIA;

    /* INICIALIZO LA VARIABLES PARA GENERAR REGISTROS FANTASMAS */
    count_regis = 1;
    count_fila = 1;
    count_columna = 1;

    /* GENERO REGISTRO FANTASMA DE ACUERDO AL PARAMIENTRO POSICION */
    WHILE (POSICION > count_regis) DO
    BEGIN
        if (count_fila = 1) then
            BEGIN
            count_fila = count_fila + 1;
            if ((count_regis+1) = POSICION) then
                begin
                count_columna = 2;
                end
            ELSE
                BEGIN
                ID1 = NULL;
                TRAFICO1 = NULL;
                END
            END
        else
            BEGIN
            ID2 = NULL;
            TRAFICO2 = NULL;
            count_fila = 1;
            SUSPEND;
            END

        count_regis = count_regis + 1;
    END

    /* BUSCO CUANTOS REGISTROS SON EN TOTAL*/
    FOR EXECUTE STATEMENT 'SELECT COUNT(*) ' ||
                          'FROM SIGSITA01_CAB_TRAFICO WHERE ' || SQLRANGO
    INTO :COUNT_TOTAL
    DO
    BEGIN
        COUNT_TOTAL = :COUNT_TOTAL;
    END

    /* INICIALIZO LAS VARIABLES PARA CREAR EL CROSSTABB DE LOS CODIGOS */
    count_regis = 1;
    count_fila = 1;

    /* SI VIENE EL PARAMETRO DEL WFLOR ENTONCES LO FILTRO */
    if (ORGA IS NOT NULL) then
        BEGIN
            SQLRANGO = sqlrango || ' AND RELA_SOCWFLO01 = ' || ORGA;
        END

    FOR EXECUTE STATEMENT 'SELECT id_sigsita01, sigsita01_docnro, socwflo01_codint ' ||
                          'FROM REP_SIGSITA01_SOCWFLO01 ' ||
                          'WHERE ' || SQLRANGO ||
                          'ORDER BY socwflo01_codint, sigsita01_docnro'
    
    INTO :id_sigsita01,
         :sigsita01_docnro,
         :socwflo01_codint
    DO
    begin
        if (count_regis = count_fila) then
            if (COUNT_COLUMNA = 1) then
                BEGIN
                    ID1 = :id_sigsita01 || '.'; /* || count_regis; */
                    TRAFICO1 = :sigsita01_docnro;
                    OFICINA1 = :SOCWFLO01_CODINT;
                    count_fila = count_fila + 2;
                    if (count_regis = COUNT_TOTAL)  then
                        BEGIN
                            ID2 = NULL;
                            TRAFICO2 = NULL;
                            OFICINA2 = NULL;
                            SUSPEND;
                        END
                END
            else
                BEGIN
                    ID1 = NULL;
                    TRAFICO1 = NULL;
                    OFICINA1 = NULL;
                    ID2 = :id_sigsita01 || '.'; /* || count_regis; */
                    TRAFICO2 = :sigsita01_docnro;
                    OFICINA2 = :SOCWFLO01_CODINT;
                    count_fila = count_fila + 1;
                    COUNT_COLUMNA = 1;
                    SUSPEND;
                END
        else
            BEGIN
            ID2 = :id_sigsita01 || '.'; /* || count_regis; */
            TRAFICO2 = :sigsita01_docnro;
            OFICINA2 = :SOCWFLO01_CODINT;
            SUSPEND;
            END

        count_regis = count_regis + 1;
    END
end
REP_SICINGR01_ALL              

BEGIN
   FOR
     SELECT
        SICINGR01_CAB_CLIENTES.RELA_SOCSYST10_TIPO,
        SICINGR01_CAB_CLIENTES.ID_SICINGR01,
        SICINGR01_CAB_CLIENTES.SICINGR01_CODIGO,
        SICINGR01_CAB_CLIENTES.SICINGR01_DIAS_CREDITO,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
     FROM SICINGR01_CAB_CLIENTES
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICINGR01_CAB_CLIENTES.RELA_SOCSYST10_TIPO = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INTO
        :RELA_SOCSYST10,
        :ID_SICINGR01,
        :CODIGO,
        :DIAS_CREDITO,
        :TIPO
   DO
   BEGIN
      SELECT
          PRD_SICINGR01.SOCUSUA02_ENTIDAD,
          PRD_SICINGR01.GIRO,
          PRD_SICINGR01.SOCUSUA41_DOMICILIO || '  CP: ' || PRD_SICINGR01.SOCUSUA41_CP,
          PRD_SICINGR01.SOCUSUA41_COLONIA,
          PRD_SICINGR01.SOCUSUA41_TELEFONO,
          PRD_SICINGR01.SOCUSUA41_CORREO,
          PRD_SICINGR01.SOCUSUA50_CIUDAD,
          PRD_SICINGR01.CURP,
          PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC
      FROM PRD_SICINGR01(:ID_SICINGR01)
      INTO :USUARIO,
           :GIRO,
           :DIRECCION,
           :COLONIA,
           :TELEFONO,
           :CORREO,
           :CIUDAD,
           :CURP,
           :RFC;

      SUSPEND;
   END
END
JAM$_LOGON_MENU_FILTRO         

begin
    if (:PARAMETRO is not null) then
        begin
            for select
            jam$_logon_menu.SOCUSUA04_CODIGO,
            jam$_logon_menu.USUARIOID,
            jam$_logon_menu.ID_SOCUSUA02,
            jam$_logon_menu.MENUID,
            jam$_logon_menu.PADREID,
            jam$_logon_menu.MENUTITULO,
            jam$_logon_menu.NOMBRECLASE,
            jam$_logon_menu.ID_SOCSYST04,
            jam$_logon_menu.ID_SOCUSUA05,
            jam$_logon_menu.ID_SOCUSUA03,
            jam$_logon_menu.FLAG_MENU,
            jam$_logon_menu.RELA_SOCUSUA50,
            jam$_logon_menu.SOCWFLO01_CODIGO,
            jam$_logon_menu.NIVEL_SEGURIDAD,
            jam$_logon_menu.SOCWFLO01_DESCRI,
            jam$_logon_menu.SOCWFLO02_DESCRI,
            jam$_logon_menu.ID_SOCWFLO01,
            jam$_logon_menu.ID_SOCWFLO02,
            jam$_logon_menu.RELA_SOCSYST14,
            jam$_logon_menu.SOCSYST14_PARAMETRO,
            jam$_logon_menu.SOCSYST14_PARAM_INT,
            jam$_logon_menu.ENTIDAD,
            jam$_logon_menu.rela_socsyst03,
            jam$_logon_menu.url_sistema
            
            from  jam$_logon_menu(:usuario)
            WHERE jam$_logon_menu.nombreclase = :clase
            and jam$_logon_menu.socsyst14_parametro = :parametro
            INTO :SOCUSUA04_CODIGO,
                 :USUARIOID,
                 :ID_SOCUSUA02,
                 :MENUID,
                 :PADREID,
                 :MENUTITULO,
                 :NOMBRECLASE,
                 :ID_SOCSYST04,
                 :ID_SOCUSUA05,
                 :ID_SOCUSUA03,
                 :FLAG_MENU,
                 :RELA_SOCUSUA50,
                 :SOCWFLO01_CODIGO,
                 :NIVEL_SEGURIDAD,
                 :SOCWFLO01_DESCRI,
                 :SOCWFLO02_DESCRI,
                 :ID_SOCWFLO01,
                 :ID_SOCWFLO02,
                 :RELA_SOCSYST14,
                 :SOCSYST14_PARAMETRO,
                 :SOCSYST14_PARAM_INT,
                 :ENTIDAD,
                 :rela_socsyst03,
                 :url_sistema
            do
            begin
                suspend;
            end        
        end
    else if (:XMENUID is not null) then
        begin
            for select
            jam$_logon_menu.SOCUSUA04_CODIGO,
            jam$_logon_menu.USUARIOID,
            jam$_logon_menu.ID_SOCUSUA02,
            jam$_logon_menu.MENUID,
            jam$_logon_menu.PADREID,
            jam$_logon_menu.MENUTITULO,
            jam$_logon_menu.NOMBRECLASE,
            jam$_logon_menu.ID_SOCSYST04,
            jam$_logon_menu.ID_SOCUSUA05,
            jam$_logon_menu.ID_SOCUSUA03,
            jam$_logon_menu.FLAG_MENU,
            jam$_logon_menu.RELA_SOCUSUA50,
            jam$_logon_menu.SOCWFLO01_CODIGO,
            jam$_logon_menu.NIVEL_SEGURIDAD,
            jam$_logon_menu.SOCWFLO01_DESCRI,
            jam$_logon_menu.SOCWFLO02_DESCRI,
            jam$_logon_menu.ID_SOCWFLO01,
            jam$_logon_menu.ID_SOCWFLO02,
            jam$_logon_menu.RELA_SOCSYST14,
            jam$_logon_menu.SOCSYST14_PARAMETRO,
            jam$_logon_menu.SOCSYST14_PARAM_INT,
            jam$_logon_menu.ENTIDAD,
            jam$_logon_menu.rela_socsyst03,
            jam$_logon_menu.url_sistema
            
            from  jam$_logon_menu(:usuario)
            WHERE jam$_logon_menu.nombreclase = :clase
            and jam$_logon_menu.menuid = :xmenuid
            INTO :SOCUSUA04_CODIGO,
                 :USUARIOID,
                 :ID_SOCUSUA02,
                 :MENUID,
                 :PADREID,
                 :MENUTITULO,
                 :NOMBRECLASE,
                 :ID_SOCSYST04,
                 :ID_SOCUSUA05,
                 :ID_SOCUSUA03,
                 :FLAG_MENU,
                 :RELA_SOCUSUA50,
                 :SOCWFLO01_CODIGO,
                 :NIVEL_SEGURIDAD,
                 :SOCWFLO01_DESCRI,
                 :SOCWFLO02_DESCRI,
                 :ID_SOCWFLO01,
                 :ID_SOCWFLO02,
                 :RELA_SOCSYST14,
                 :SOCSYST14_PARAMETRO,
                 :SOCSYST14_PARAM_INT,
                 :ENTIDAD,
                 :rela_socsyst03,
                 :url_sistema
            do
            begin
                suspend;
            end                
        end
    else
        begin
            for select
            jam$_logon_menu.SOCUSUA04_CODIGO,
            jam$_logon_menu.USUARIOID,
            jam$_logon_menu.ID_SOCUSUA02,
            jam$_logon_menu.MENUID,
            jam$_logon_menu.PADREID,
            jam$_logon_menu.MENUTITULO,
            jam$_logon_menu.NOMBRECLASE,
            jam$_logon_menu.ID_SOCSYST04,
            jam$_logon_menu.ID_SOCUSUA05,
            jam$_logon_menu.ID_SOCUSUA03,
            jam$_logon_menu.FLAG_MENU,
            jam$_logon_menu.RELA_SOCUSUA50,
            jam$_logon_menu.SOCWFLO01_CODIGO,
            jam$_logon_menu.NIVEL_SEGURIDAD,
            jam$_logon_menu.SOCWFLO01_DESCRI,
            jam$_logon_menu.SOCWFLO02_DESCRI,
            jam$_logon_menu.ID_SOCWFLO01,
            jam$_logon_menu.ID_SOCWFLO02,
            jam$_logon_menu.RELA_SOCSYST14,
            jam$_logon_menu.SOCSYST14_PARAMETRO,
            jam$_logon_menu.SOCSYST14_PARAM_INT,
            jam$_logon_menu.ENTIDAD,
            jam$_logon_menu.rela_socsyst03,
            jam$_logon_menu.url_sistema
            
            from  jam$_logon_menu(:usuario)
            WHERE jam$_logon_menu.nombreclase = :clase
            INTO :SOCUSUA04_CODIGO,
                 :USUARIOID,
                 :ID_SOCUSUA02,
                 :MENUID,
                 :PADREID,
                 :MENUTITULO,
                 :NOMBRECLASE,
                 :ID_SOCSYST04,
                 :ID_SOCUSUA05,
                 :ID_SOCUSUA03,
                 :FLAG_MENU,
                 :RELA_SOCUSUA50,
                 :SOCWFLO01_CODIGO,
                 :NIVEL_SEGURIDAD,
                 :SOCWFLO01_DESCRI,
                 :SOCWFLO02_DESCRI,
                 :ID_SOCWFLO01,
                 :ID_SOCWFLO02,
                 :RELA_SOCSYST14,
                 :SOCSYST14_PARAMETRO,
                 :SOCSYST14_PARAM_INT,
                 :ENTIDAD,
                 :rela_socsyst03,
                 :url_sistema
            do
            begin
                if (SOCSYST14_PARAMETRO is null) then
                suspend;
            end                        
        end
end
REP_SICCONT02_CLIENTES         

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA01 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
DECLARE VARIABLE XENTIDAD VARCHAR(100) CHARACTER SET ASCII;
DECLARE VARIABLE XTIPO VARCHAR(100) CHARACTER SET ASCII;
DECLARE VARIABLE XGIRO VARCHAR(100) CHARACTER SET ASCII;
DECLARE VARIABLE ID_SOCSYST01 BIGINT;
begin
  id_socsyst01 = :rela_cliente;

  select RELA_SOCUSUA02
  FROM socsyst01_cab_clientes
  WHERE socsyst01_cab_clientes.id_socsyst01 = :RELA_CLIENTE
  INTO :RELA_SOCUSUA02;

  select RELA_SOCUSUA01
  FROM socusua02_mae_usuarios
  where socusua02_mae_usuarios.id_socusua02 = :rela_socusua02
  INTO :RELA_SOCUSUA01;

  SELECT RELA_SOCUSUA20, RELA_SOCUSUA30
  FROM socusua01_mae_entidades
  WHERE socusua01_mae_entidades.id_socusua01 = :rela_socusua01
  INTO :RELA_SOCUSUA20,
       :RELA_SOCUSUA30;

  if (RELA_SOCUSUA20 is not null) then
     BEGIN
        select SOCUSUA20_MAE_ENTMORALES.SOCUSUA20_DENOMINACION,
               SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES SOCIEDAD_TIPO,
               SOCSYST10_TBL_LISTAESTADOS1.SOCSYST10_FILTRO_DES SOCIEDAD_GIRO
        from SOCSYST10_TBL_LISTAESTADOS SOCSYST10_TBL_LISTAESTADOS1
        right outer join SOCUSUA20_MAE_ENTMORALES on (SOCSYST10_TBL_LISTAESTADOS1.ID_SOCSYST10 = SOCUSUA20_MAE_ENTMORALES.REFE_SOCSYST10_GIROSOC)
        left outer join SOCSYST10_TBL_LISTAESTADOS on (SOCUSUA20_MAE_ENTMORALES.REFE_SOCSYST10_SOCIEDAD = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        WHERE SOCUSUA20_MAE_ENTMORALES.id_socusua20 = :RELA_SOCUSUA20
        into :XENTIDAD,
             :XTIPO,
             :XGIRO;
        ENTIDAD = :XENTIDAD;
        TIPO = :XTIPO;
        GIRO = :XGIRO;
        ID_CLIENTE = :RELA_CLIENTE;

        FOR SELECT ID_SOCUSUA40,
                   SOCSYST10_FILTRO_DES,
                   SOCUSUA40_NUMERO
        FROM SOCSYST10_TBL_LISTAESTADOS
        INNER JOIN SOCUSUA40_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10)
        where SOCUSUA40_DET_DOCUMENTOS.rela_socusua20 = :rela_socusua20
        into :ID_SOCUSUA40,
             :SOCSYST10_FILTRO_DES,
             :SOCUSUA40_NUMERO
        DO
        SUSPEND;
     END
  else
     BEGIN
        select SOCUSUA30_MAE_ENTFISICAS.socusua30_ape_padre || ' ' ||
               SOCUSUA30_MAE_ENTFISICAS.socusua30_ape_madre || ', ' ||
               SOCUSUA30_MAE_ENTFISICAS.socusua30_nombres,
               '',''
        from SOCUSUA30_MAE_ENTFISICAS
        WHERE SOCUSUA30_MAE_ENTFISICAS.id_socusua30 = :rela_socusua30
        into :XENTIDAD,
             :XTIPO,
             :XGIRO;
        ENTIDAD = :XENTIDAD;
        TIPO = :XTIPO;
        GIRO = :XGIRO;
        ID_CLIENTE = :RELA_CLIENTE;

        FOR SELECT ID_SOCUSUA40,
                   SOCSYST10_FILTRO_DES,
                   SOCUSUA40_NUMERO
        FROM SOCSYST10_TBL_LISTAESTADOS
        INNER JOIN SOCUSUA40_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10)
        where SOCUSUA40_DET_DOCUMENTOS.rela_socusua30 = :rela_socusua30
        into :ID_SOCUSUA40,
             :SOCSYST10_FILTRO_DES,
             :SOCUSUA40_NUMERO
        DO
        SUSPEND;
     END
end
REP_SICCONT02_CLIENTES_OK      

begin
    FOR SELECT ID_SOCUSUA40,
           SOCSYST10_FILTRO_DES,
           SOCUSUA40_NUMERO,
           ENTIDAD,
           TIPO,
           GIRO,
           ID_CLIENTE
    FROM REP_SICCONT02_CLIENTES(:RELA_CLIENTE)
    WHERE (REP_SICCONT02_CLIENTES.id_socusua40 IS NOT NULL)
    ORDER BY SOCSYST10_FILTRO_DES
    INTO :ID_SOCUSUA40,
         :SOCSYST10_FILTRO_DES,
         :SOCUSUA40_NUMERO,
         :ENTIDAD,
         :TIPO,
         :GIRO,
         :ID_CLIENTE
    DO
    SUSPEND;

end
REP_SICCONT81                  

BEGIN
  EXIT;
END
REP_MSGPOLI01_SICINGR01_IMP    

DECLARE VARIABLE IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE RELA_SICCONT02IMP BIGINT;
begin
    IMPORTE_IIT = 0;
    for Select
    GRID_MSGPOLI09.rela_siccont02
    from GRID_MSGPOLI09
    WHERE GRID_MSGPOLI09.RELA_SOCSYST01 = :empresa
    AND GRID_MSGPOLI09.rela_socsyst10_tipo = :RELA_SOCSYST10_IMPUESTOS
    into :rela_siccont02imp
    do
        begin
            IMPORTE = 0;
            if (tipomovi = 'M') then
                select
                REP_MSGPOLI01_SICINGR01_MOV.importe
                from REP_MSGPOLI01_SICINGR01_MOV(:empresa, :ano, :mes, :ID_SICINGR01, :rela_siccont02imp)
                into :IMPORTE;
            else
                select
                REP_MSGPOLI01_SICINGR01_CON.importe
                from REP_MSGPOLI01_SICINGR01_CON(:empresa, :ano, :mes, :ID_SICINGR01, :rela_siccont02imp)
                into :IMPORTE;

            IMPORTE_IIT = IMPORTE_IIT + IMPORTE;
        end

    suspend;
end
VW_SICCONT40                   

begin
    FOR SELECT
    ID_SICCONT40,
    RELA_SICCONT40,
    SICCONT40_DESCRI,
    SICCONT40_CODIGO,
    SICCONT40_PHCC,
    RELA_SOCSYST06,
    SOCSYST06_NIVEL,
    SOCSYST06_MASCARA,
    SOCSYST06_DESCRI,
    SOCSYST06_ACCION,
    SOCSYST06_CANT_PARES

    FROM SICCONT40_ARB_CONCEPTOS
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
    ORDER BY SICCONT40_CODIGO
    INTO :ID_SICCONT40,
         :RELA_SICCONT40,
         :SICCONT40_DESCRI,
         :SICCONT40_CODIGO,
         :SICCONT40_PHCC,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES
    DO
    SUSPEND;
end
VW_SICCONT40_EGRESOS           

begin
    FOR SELECT
    ID_SICCONT40,
    RELA_SICCONT40,
    SICCONT40_DESCRI,
    SICCONT40_CODIGO,
    RELA_SOCSYST06,
    SOCSYST06_NIVEL,
    SOCSYST06_MASCARA,
    SOCSYST06_DESCRI,
    SOCSYST06_ACCION,
    SOCSYST06_CANT_PARES
    FROM SICCONT40_ARB_CONCEPTOS
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
    WHERE (SICCONT40_CODIGO LIKE '2%') or (SICCONT40_CODIGO LIKE '3%')
    ORDER BY SICCONT40_CODIGO
    INTO :ID_SICCONT40,
         :RELA_SICCONT40,
         :SICCONT40_DESCRI,
         :SICCONT40_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES
    DO
    SUSPEND;
end
GRID_MSGPOLI20                 

begin
    FOR SELECT
    cbo_clientes_empresas.entidad,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01,
    msgpoli24_arb_organizador.rela_socusua50,
    MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20,
    MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST10_TABLA,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_CARGO,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_ABONO,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_APAGAR,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_AFAVOR,
    MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_descri,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_coeficiente,
    MSGPOLI20_CAB_IMPUESTOS.MSGPOLI20_PORCENTUAL,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_parametros,
    MSGPOLI20_CAB_IMPUESTOS.MSGPOLI20_FAPL,
    t1.siccont02_codext,
    t1.siccont02_descri,
    t2.siccont02_codext,
    t2.siccont02_descri,
    b1.msgpoli24_descri,
    b1.msgpoli24_codext,
    b1.msgpoli24_clase
    FROM MSGPOLI20_CAB_IMPUESTOS
    INNER JOIN cbo_clientes_empresas ON (MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = cbo_clientes_empresas.id_socsyst01)
    INNER JOIN siccont02_arb_plancta_emp t1 ON (MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_cargo = t1.id_siccont02)
    INNER JOIN siccont02_arb_plancta_emp t2 ON (MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_abono = t2.id_siccont02)
    INNER JOIN msgpoli24_arb_organizador b1 ON (MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24 = b1.id_msgpoli24)
    WHERE MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :EMPRESA
    INTO :entidad,
         :RELA_SOCSYST01,
         :rela_socusua50,
         :rela_msgpoli20,
         :rela_msgpoli24,
         :RELA_SOCSYST10_TABLA,
         :RELA_SICCONT02_CARGO,
         :RELA_SICCONT02_ABONO,
         :RELA_SICCONT02_APAGAR,
         :RELA_SICCONT02_AFAVOR,
         :ID_MSGPOLI20,
         :msgpoli20_descri,
         :msgpoli20_coeficiente,
         :MSGPOLI20_PORCENTUAL,
         :msgpoli20_parametros,
         :MSGPOLI20_FAPL,
         :CARGO_CUENTA,
         :CARGO_CONCEPTO,
         :ABONO_CUENTA,
         :ABONO_CONCEPTO,
         :msgpoli24_descri,
         :msgpoli24_codext,
         :MSGPOLI24_CLASE
    DO
    BEGIN
        MSGPOLI24_AREA = null;

        if (rela_socusua50 is not null) then
            begin
                select SOCUSUA50_ARB_LOCALIDADES.socusua50_descri
                from SOCUSUA50_ARB_LOCALIDADES
                where SOCUSUA50_ARB_LOCALIDADES.id_socusua50 = :rela_socusua50
                into :MSGPOLI24_AREA;
            end
        else
            begin
                select VW_MSGPOLI24.msgpoli24_descri
                from VW_MSGPOLI24(:rela_msgpoli24)
                where VW_MSGPOLI24.socsyst06_nivel = 2
                into :MSGPOLI24_AREA;
            end

        if (RELA_SOCSYST10_TABLA is not null) then
            select CBO_TABLASIMPUESTOS.socsyst10_filtro_des
            from CBO_TABLASIMPUESTOS
            where CBO_TABLASIMPUESTOS.id_socsyst10 = :RELA_SOCSYST10_TABLA
            into :tabladeporcentajes;

        if (RELA_SICCONT02_APAGAR is not null) then
            select siccont02_arb_plancta_emp.siccont02_codext,
            siccont02_arb_plancta_emp.siccont02_descri
            from siccont02_arb_plancta_emp
            where siccont02_arb_plancta_emp.id_siccont02 = :RELA_SICCONT02_APAGAR
            into :apagar_cuenta,
                 :apagar_concepto;

        if (RELA_SICCONT02_AFAVOR is not null) then
            select siccont02_arb_plancta_emp.siccont02_codext,
            siccont02_arb_plancta_emp.siccont02_descri
            from siccont02_arb_plancta_emp
            where siccont02_arb_plancta_emp.id_siccont02 = :RELA_SICCONT02_AFAVOR
            into :afavor_cuenta,
                 :afavor_concepto;

        msgpoli20_descri_padre = 'N/A';
        if (rela_msgpoli20 is not null) then
            select msgpoli20_cab_impuestos.msgpoli20_descri
            from msgpoli20_cab_impuestos
            where msgpoli20_cab_impuestos.id_msgpoli20 = :rela_msgpoli20
            into :msgpoli20_descri_padre;
        
        CONMOVI_INGRESOS = null;
        CONMOVI_EGRESOS = null;
        SELECT first 1 msgpoli21_det_ingresos.id_msgpoli21
        FROM msgpoli21_det_ingresos
        WHERE msgpoli21_det_ingresos.rela_msgpoli20 = :ID_MSGPOLI20
        INTO :CONMOVI_INGRESOS;

        if (CONMOVI_INGRESOS IS NULL) then
            CONMOVI_INGRESOS = 0;
        else
            CONMOVI_INGRESOS = 1;

        SELECT first 1 msgpoli22_det_egresos.id_msgpoli22
        FROM msgpoli22_det_egresos
        WHERE msgpoli22_det_egresos.rela_msgpoli20 = :ID_MSGPOLI20
        INTO :CONMOVI_EGRESOS;

        if (CONMOVI_EGRESOS IS NULL) then
            CONMOVI_EGRESOS = 0;
        else
            CONMOVI_EGRESOS = 1;

        suspend;
    END
end
VW_SICCONT40_INGRESOS          

begin
    FOR SELECT
    ID_SICCONT40,
    RELA_SICCONT40,
    SICCONT40_DESCRI,
    SICCONT40_CODIGO,
    RELA_SOCSYST06,
    SOCSYST06_NIVEL,
    SOCSYST06_MASCARA,
    SOCSYST06_DESCRI,
    SOCSYST06_ACCION,
    SOCSYST06_CANT_PARES
    FROM SICCONT40_ARB_CONCEPTOS
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
    WHERE (SICCONT40_CODIGO LIKE '1%') or (SICCONT40_CODIGO LIKE '3%')
    ORDER BY SICCONT40_CODIGO
    INTO :ID_SICCONT40,
         :RELA_SICCONT40,
         :SICCONT40_DESCRI,
         :SICCONT40_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES
    DO
    SUSPEND;
end
GRID_MSGPOLI20_SP              

DECLARE VARIABLE MSGPOLI24_CODEXTX VARCHAR(50);
DECLARE VARIABLE MSGPOLI24_GRUPOX VARCHAR(50);
DECLARE VARIABLE MESANT INTEGER;
DECLARE VARIABLE ANOANT INTEGER;
begin
    for select
    cbo_clientes_empresas.entidad,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01,
    MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20,
    MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST10_TABLA,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_CARGO,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_ABONO,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_APAGAR,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_AFAVOR,
    MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_descri,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_coeficiente,
    MSGPOLI20_CAB_IMPUESTOS.MSGPOLI20_PORCENTUAL,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_parametros,
    MSGPOLI20_CAB_IMPUESTOS.MSGPOLI20_FAPL,
    t1.siccont02_codext,
    t1.siccont02_descri,
    t2.siccont02_codext,
    t2.siccont02_descri,
    b1.msgpoli24_descri,
    b1.msgpoli24_codext,
    b1.msgpoli24_clase
    from MSGPOLI20_CAB_IMPUESTOS
    inner join cbo_clientes_empresas on (MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = cbo_clientes_empresas.id_socsyst01)
    inner join siccont02_arb_plancta_emp t1 on (MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_cargo = t1.id_siccont02)
    inner join siccont02_arb_plancta_emp t2 on (MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_abono = t2.id_siccont02)
    inner join msgpoli24_arb_organizador b1 on (MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24 = b1.id_msgpoli24)
    where MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :EMPRESA
      and MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20 is null
    order by b1.msgpoli24_codigo
    into :entidad,
         :RELA_SOCSYST01,
         :rela_msgpoli20,
         :rela_msgpoli24,
         :RELA_SOCSYST10_TABLA,
         :RELA_SICCONT02_CARGO,
         :RELA_SICCONT02_ABONO,
         :RELA_SICCONT02_APAGAR,
         :RELA_SICCONT02_AFAVOR,
         :ID_MSGPOLI20,
         :msgpoli20_descri,
         :msgpoli20_coeficiente,
         :MSGPOLI20_PORCENTUAL,
         :msgpoli20_parametros,
         :MSGPOLI20_FAPL,
         :CARGO_CUENTA,
         :CARGO_CONCEPTO,
         :ABONO_CUENTA,
         :ABONO_CONCEPTO,
         :msgpoli24_descri,
         :msgpoli24_codext,
         :MSGPOLI24_CLASE
    do
    begin
        if (RELA_SOCSYST10_TABLA is not null) then
            select CBO_TABLASIMPUESTOS.socsyst10_filtro_des
            from CBO_TABLASIMPUESTOS
            where CBO_TABLASIMPUESTOS.id_socsyst10 = :RELA_SOCSYST10_TABLA
            into :tabladeporcentajes;

        if (RELA_SICCONT02_APAGAR is not null) then
            select siccont02_arb_plancta_emp.siccont02_codext,
            siccont02_arb_plancta_emp.siccont02_descri
            from siccont02_arb_plancta_emp
            where siccont02_arb_plancta_emp.id_siccont02 = :RELA_SICCONT02_APAGAR
            into :apagar_cuenta,
                 :apagar_concepto;

        if (RELA_SICCONT02_AFAVOR is not null) then
            select siccont02_arb_plancta_emp.siccont02_codext,
            siccont02_arb_plancta_emp.siccont02_descri
            from siccont02_arb_plancta_emp
            where siccont02_arb_plancta_emp.id_siccont02 = :RELA_SICCONT02_AFAVOR
            into :afavor_cuenta,
                 :afavor_concepto;

        CONMOVI_INGRESOS = null;
        CONMOVI_EGRESOS = null;
        select first 1 msgpoli21_det_ingresos.id_msgpoli21
        from msgpoli21_det_ingresos
        where msgpoli21_det_ingresos.rela_msgpoli20 = :ID_MSGPOLI20
        into :CONMOVI_INGRESOS;

        if (CONMOVI_INGRESOS is null) then
            CONMOVI_INGRESOS = 0;
        else
            CONMOVI_INGRESOS = 1;

        select first 1 msgpoli22_det_egresos.id_msgpoli22
        from msgpoli22_det_egresos
        where msgpoli22_det_egresos.rela_msgpoli20 = :ID_MSGPOLI20
        into :CONMOVI_EGRESOS;

        if (CONMOVI_EGRESOS is null) then
            CONMOVI_EGRESOS = 0;
        else
            CONMOVI_EGRESOS = 1;

        select
        VW_MSGPOLI24.msgpoli24_descri,
        VW_MSGPOLI24.msgpoli24_codext
        from VW_MSGPOLI24(:rela_msgpoli24)
        where VW_MSGPOLI24.socsyst06_nivel = 2
        into :msgpoli24_grupo,
             :msgpoli24_codextx;

        msgpoli24_grupox = '';
        if (msgpoli24_codextx = '01.02') then
            select
            VW_MSGPOLI24.msgpoli24_descri
            from VW_MSGPOLI24(:rela_msgpoli24)
            where VW_MSGPOLI24.socsyst06_nivel = 3
            into :msgpoli24_grupox;

        if (msgpoli24_grupox <> '') then
            msgpoli24_grupo = msgpoli24_grupo || ' - ' || msgpoli24_grupox;

        MSGPOLI23_IMPORTE = null;
        msgpoli23_IMPORTE_AFAVORANT = null;

        select grid_msgpoli23.msgpoli23_importe
        from grid_msgpoli23
        where grid_msgpoli23.rela_msgpoli20 = :id_msgpoli20
          and grid_msgpoli23.msgpoli23_ano = :ano
          and grid_msgpoli23.msgpoli23_mes = :mes
          and grid_msgpoli23.codigo_bitacora = 'MODIFICADO'
         into :MSGPOLI23_IMPORTE;

        if (MSGPOLI23_IMPORTE is null) then
            MSGPOLI23_IMPORTE = 0.0;

        mesant = mes - 1;
        anoant = ano;
        if (mesant = 0) then
            begin
            mesant = 12;
            anoant = ano - 1;
            end

        select grid_msgpoli23.msgpoli23_importe_afavor
        from grid_msgpoli23
        where grid_msgpoli23.rela_msgpoli20 = :id_msgpoli20
        and grid_msgpoli23.msgpoli23_ano = :anoant
        and grid_msgpoli23.msgpoli23_mes = :mesant
        and grid_msgpoli23.codigo_bitacora = 'MODIFICADO'
        into :msgpoli23_IMPORTE_AFAVORANT;

        if (msgpoli23_IMPORTE_AFAVORANT is null) then
            msgpoli23_IMPORTE_AFAVORANT = 0.0;

        suspend;
    end

end
JAM$_COPYARBOL_PYMINGR10       

DECLARE VARIABLE RELA_SICCONT02 BIGINT;
DECLARE VARIABLE RELA_SICCONT02_TARJET BIGINT;
DECLARE VARIABLE PYMINGR10_CODIGO VARCHAR(50);
DECLARE VARIABLE PYMINGR10_DESCRIPCION VARCHAR(200);
DECLARE VARIABLE PYMINGR10_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE ID_PYMINGR10 BIGINT;
begin
    NOK = 0;
    FOR SELECT
    PYMINGR10_CAB_CONCEPTOS.id_pymingr10,
    PYMINGR10_CAB_CONCEPTOS.rela_siccont02,
    PYMINGR10_CAB_CONCEPTOS.pymingr10_codigo,
    PYMINGR10_CAB_CONCEPTOS.pymingr10_descripcion,
    PYMINGR10_CAB_CONCEPTOS.pymingr10_importe
    FROM PYMINGR10_CAB_CONCEPTOS
    WHERE PYMINGR10_CAB_CONCEPTOS.rela_socsyst01 = :source
    INTO :ID_PYMINGR10,
         :rela_siccont02,
         :pymingr10_codigo,
         :pymingr10_descripcion,
         :pymingr10_importe
    DO
    BEGIN
        NOK = NOK + 1;
        rela_siccont02_tarjet = null;

        if (rela_siccont02 is not null) then
            select rela_siccont02_tarjet
            from jam$_copyarbol_iguales(:target, :rela_siccont02)
            into :rela_siccont02_tarjet;

        insert into PYMINGR10_CAB_CONCEPTOS (PYMINGR10_CAB_CONCEPTOS.rela_socsyst01,
                                             PYMINGR10_CAB_CONCEPTOS.rela_siccont02,
                                             PYMINGR10_CAB_CONCEPTOS.pymingr10_codigo,
                                             PYMINGR10_CAB_CONCEPTOS.pymingr10_descripcion,
                                             PYMINGR10_CAB_CONCEPTOS.pymingr10_importe)
        values(:target,
               :rela_siccont02,
               :pymingr10_codigo,
               :pymingr10_descripcion,
               :pymingr10_importe);

        insert into pymingr11_det_impuestos (pymingr11_det_impuestos.rela_pymingr10,
                                             pymingr11_det_impuestos.rela_msgpoli09)
        select pymingr11_det_impuestos.rela_pymingr10,
               pymingr11_det_impuestos.rela_msgpoli09
        from pymingr11_det_impuestos
        where pymingr11_det_impuestos.rela_pymingr10 = :ID_PYMINGR10;

    END

    suspend;
end
GRID_MSGPOLI20_SP_AUX          

begin
    FOR SELECT
    cbo_clientes_empresas.entidad,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST01,
    MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20,
    MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SOCSYST10_TABLA,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_CARGO,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_ABONO,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_APAGAR,
    MSGPOLI20_CAB_IMPUESTOS.RELA_SICCONT02_AFAVOR,
    MSGPOLI20_CAB_IMPUESTOS.ID_MSGPOLI20,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_descri,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_coeficiente,
    MSGPOLI20_CAB_IMPUESTOS.MSGPOLI20_PORCENTUAL,
    MSGPOLI20_CAB_IMPUESTOS.msgpoli20_parametros,
    MSGPOLI20_CAB_IMPUESTOS.MSGPOLI20_FAPL,
    t1.siccont02_codext,
    t1.siccont02_descri,
    t2.siccont02_codext,
    t2.siccont02_descri,
    b1.msgpoli24_descri,
    b1.msgpoli24_codext,
    b1.msgpoli24_clase
    FROM MSGPOLI20_CAB_IMPUESTOS
    INNER JOIN cbo_clientes_empresas ON (MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = cbo_clientes_empresas.id_socsyst01)
    INNER JOIN siccont02_arb_plancta_emp t1 ON (MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_cargo = t1.id_siccont02)
    INNER JOIN siccont02_arb_plancta_emp t2 ON (MSGPOLI20_CAB_IMPUESTOS.rela_siccont02_abono = t2.id_siccont02)
    INNER JOIN msgpoli24_arb_organizador b1 ON (MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli24 = b1.id_msgpoli24)
    WHERE MSGPOLI20_CAB_IMPUESTOS.rela_msgpoli20 = :ID_MSGPOLI20X
      and MSGPOLI20_CAB_IMPUESTOS.rela_socsyst01 = :ID_SOCSYST01X
    INTO :entidad,
         :RELA_SOCSYST01,
         :rela_msgpoli20,
         :rela_msgpoli24,
         :RELA_SOCSYST10_TABLA,
         :RELA_SICCONT02_CARGO,
         :RELA_SICCONT02_ABONO,
         :RELA_SICCONT02_APAGAR,
         :RELA_SICCONT02_AFAVOR,
         :ID_MSGPOLI20,
         :msgpoli20_descri,
         :msgpoli20_coeficiente,
         :MSGPOLI20_PORCENTUAL,
         :msgpoli20_parametros,
         :MSGPOLI20_FAPL,
         :CARGO_CUENTA,
         :CARGO_CONCEPTO,
         :ABONO_CUENTA,
         :ABONO_CONCEPTO,
         :msgpoli24_descri,
         :msgpoli24_codext,
         :MSGPOLI24_CLASE
    DO
    BEGIN
        if (RELA_SOCSYST10_TABLA is not null) then
            select CBO_TABLASIMPUESTOS.socsyst10_filtro_des
            from CBO_TABLASIMPUESTOS
            where CBO_TABLASIMPUESTOS.id_socsyst10 = :RELA_SOCSYST10_TABLA
            into :tabladeporcentajes;

        if (RELA_SICCONT02_APAGAR is not null) then
            select siccont02_arb_plancta_emp.siccont02_codext,
            siccont02_arb_plancta_emp.siccont02_descri
            from siccont02_arb_plancta_emp
            where siccont02_arb_plancta_emp.id_siccont02 = :RELA_SICCONT02_APAGAR
            into :apagar_cuenta,
                 :apagar_concepto;

        if (RELA_SICCONT02_AFAVOR is not null) then
            select siccont02_arb_plancta_emp.siccont02_codext,
            siccont02_arb_plancta_emp.siccont02_descri
            from siccont02_arb_plancta_emp
            where siccont02_arb_plancta_emp.id_siccont02 = :RELA_SICCONT02_AFAVOR
            into :afavor_cuenta,
                 :afavor_concepto;

        CONMOVI_INGRESOS = null;
        CONMOVI_EGRESOS = null;
        SELECT first 1 msgpoli21_det_ingresos.id_msgpoli21
        FROM msgpoli21_det_ingresos
        WHERE msgpoli21_det_ingresos.rela_msgpoli20 = :ID_MSGPOLI20
        INTO :CONMOVI_INGRESOS;

        if (CONMOVI_INGRESOS IS NULL) then
            CONMOVI_INGRESOS = 0;
        else
            CONMOVI_INGRESOS = 1;

        SELECT first 1 msgpoli22_det_egresos.id_msgpoli22
        FROM msgpoli22_det_egresos
        WHERE msgpoli22_det_egresos.rela_msgpoli20 = :ID_MSGPOLI20
        INTO :CONMOVI_EGRESOS;

        if (CONMOVI_EGRESOS IS NULL) then
            CONMOVI_EGRESOS = 0;
        else
            CONMOVI_EGRESOS = 1;

        select
        VW_MSGPOLI24.msgpoli24_descri
        from VW_MSGPOLI24(:rela_msgpoli24)
        where VW_MSGPOLI24.socsyst06_nivel = 2
        into :msgpoli24_grupo;

        MSGPOLI23_IMPORTE = null;
        msgpoli23_IMPORTE_AFAVORANT = null;

        select grid_msgpoli23.msgpoli23_importe,
               grid_msgpoli23.msgpoli23_importe_afavor
        from grid_msgpoli23
        where grid_msgpoli23.rela_msgpoli20 = :id_msgpoli20
          and grid_msgpoli23.msgpoli23_ano = :ano
          and grid_msgpoli23.msgpoli23_mes = :mes
          and grid_msgpoli23.codigo_bitacora = 'MODIFICADO'
         into :MSGPOLI23_IMPORTE,
              :msgpoli23_IMPORTE_AFAVORANT;

        if (MSGPOLI23_IMPORTE is null) then
            MSGPOLI23_IMPORTE = 0.0;

        if (msgpoli23_IMPORTE_AFAVORANT is null) then
            msgpoli23_IMPORTE_AFAVORANT = 0.0;
        suspend;
    END
end
PRD_ARB_MSGPOLI24              

DECLARE VARIABLE CODIGO_PADRE CHAR(50);
DECLARE VARIABLE NDESDE SMALLINT;
DECLARE VARIABLE DIGITO_ULT CHAR(50);
DECLARE VARIABLE NIVEL_MAS SMALLINT;
DECLARE VARIABLE RELA_CAB05 BIGINT;
DECLARE VARIABLE NIVEL_PADRE BIGINT;
DECLARE VARIABLE MASCARA CHAR(50);
begin
  if (:RELA_PADRE IS NULL AND NIVEL IS NULL) then
    begin
    SELECT DISTINCT RELA_SOCSYST06 from MSGPOLI24_ARB_ORGANIZADOR WHERE RELA_MSGPOLI24 IS NULL INTO :NIVEL;
    if (:NIVEL is null) then
      begin
        CODIGO_REAL = '-96';
        suspend;
      end
      SELECT SOCSYST06_MASCARA from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA;
    end
  else if (:RELA_PADRE IS NULL and NIVEL IS NOT NULL) then
    begin
      SELECT SOCSYST06_MASCARA, SOCSYST06_NIVEL from socsyst06_det_arbniveles WHERE ID_SOCSYST06=:NIVEL INTO :MASCARA, :NIVEL_MAS;
      if (:NIVEL_MAS<>1 or :NIVEL_MAS IS NULL )  then
         begin
           CODIGO_REAL = '-97';
           suspend;
         end
    end
  else if (:RELA_PADRE IS NOT NULL ) then
    begin
      SELECT MSGPOLI24_CODIGO, RELA_SOCSYST06 from MSGPOLI24_ARB_ORGANIZADOR WHERE ID_MSGPOLI24=:RELA_PADRE INTO :CODIGO_PADRE, :NIVEL_PADRE;
      SELECT SOCSYST06_NIVEL, RELA_SOCSYST05 from socsyst06_det_arbniveles where ID_SOCSYST06=:NIVEL_PADRE into :NIVEL_MAS, :RELA_CAB05;
      SELECT SOCSYST06_MASCARA, ID_SOCSYST06 from socsyst06_det_arbniveles WHERE rela_socsyst05=:RELA_CAB05 and SOCSYST06_NIVEL=:NIVEL_MAS+1 INTO :MASCARA, :NIVEL;
      if (:NIVEL is null) then
         begin
           CODIGO_REAL = '-98';
           suspend;
         end
    end

  MASCARA = TRIM(:MASCARA);
  NDESDE = STRLEN(TRIM(:CODIGO));
  DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
  while (DIGITO_ULT <> '.') DO
  begin
    NDESDE = NDESDE -1;
    DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
    if (nDESDE<=0) then break;
  end
  DIGITO_ULT = TRIM(LONGSUBSTR(:CODIGO,NDESDE+1,STRLEN(TRIM(:CODIGO))-NDESDE));

  if (STRLEN(TRIM(:MASCARA))<>STRLEN(TRIM(DIGITO_ULT))) then
    begin
      CODIGO_REAL = '-99';
      suspend;
    end

  if (:RELA_PADRE IS NULL ) then
     CODIGO_REAL = :CODIGO;
  else
     begin
       CODIGO_REAL = TRIM(:CODIGO_PADRE) || '.' || DIGITO_ULT;
     end

  RELA_NIVEL_H = :NIVEL;
  suspend;
end
PRD_MSGPOLI20                  

DECLARE VARIABLE SUMA_CARGOSX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_ABONOSX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_RETINGX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_RETEGRX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_INGRESOSX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_EGRESOSX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_INGRESOS_ACUMUX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_EGRESOS_ACUMUX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_IMPORTE_ACUMUX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_RETING_ACUMUX DOUBLE PRECISION;
DECLARE VARIABLE SUMA_RETEGR_ACUMUX DOUBLE PRECISION;
begin
  select sum(PRD_MSGPOLI21.msgpoli21_importe)
  from PRD_MSGPOLI21(:id_msgpoli20, :empresa, :ano, :mes, 'IMP')
  into :suma_cargosx;

  select sum(PRD_MSGPOLI22.msgpoli22_importe)
  from PRD_MSGPOLI22(:id_msgpoli20, :empresa, :ano, :mes, 'IMP')
  into :suma_abonosx;

  select sum(PRD_MSGPOLI21.msgpoli21_importe)
  from PRD_MSGPOLI21(:id_msgpoli20, :empresa, :ano, :mes, 'RET')
  into :suma_retingx;

  select sum(PRD_MSGPOLI22.msgpoli22_importe)
  from PRD_MSGPOLI22(:id_msgpoli20, :empresa, :ano, :mes, 'RET')
  into :suma_retegrx;

  select sum(PRD_MSGPOLI21.msgpoli21_importe)
  from PRD_MSGPOLI21(:id_msgpoli20, :empresa, :ano, :mes, 'IE')
  into :suma_ingresosx;

  select sum(PRD_MSGPOLI22.msgpoli22_importe)
  from PRD_MSGPOLI22(:id_msgpoli20, :empresa, :ano, :mes, 'IE')
  into :suma_egresosx;

  SUMA_INGRESOS_ACUMUX = :suma_ingresosx;
  SUMA_EGRESOS_ACUMUX = :suma_egresosx;
  SUMA_RETING_ACUMUX = :suma_retingx;
  SUMA_RETEGR_ACUMUX = :suma_retegrx;

  SUMA_IMPORTE_ACUMUX = 0;

  if (mes <> 1) then
     begin      
        mes = mes - 1;
        SUMA_INGRESOS_ACUMUX = NULL;
        SUMA_EGRESOS_ACUMUX = NULL;
        SUMA_RETING_ACUMUX = NULL;
        SUMA_RETEGR_ACUMUX = NULL;

        SUMA_IMPORTE_ACUMUX = NULL;
        
        select
        grid_msgpoli23.msgpoli23_importe_sing,
        grid_msgpoli23.msgpoli23_importe_segr,
        grid_msgpoli23.msgpoli23_importe_acumu,
        grid_msgpoli23.msgpoli23_importe_ring_acumu,
        grid_msgpoli23.msgpoli23_importe_regr_acumu
        from grid_msgpoli23
        where grid_msgpoli23.rela_socsyst01 = :empresa
          and grid_msgpoli23.rela_msgpoli20 = :id_msgpoli20
          and grid_msgpoli23.msgpoli23_ano = :ano
          and grid_msgpoli23.msgpoli23_mes = :mes
          and grid_msgpoli23.codigo_bitacora = 'MODIFICADO'
        into :SUMA_INGRESOS_ACUMUX,
             :SUMA_EGRESOS_ACUMUX,
             :SUMA_IMPORTE_ACUMUX,
             :SUMA_RETING_ACUMUX,
             :SUMA_RETEGR_ACUMUX;

        /* ----------------------------------------------------------------------------------------- */

        if (SUMA_INGRESOS_ACUMUX is not null) then
            SUMA_INGRESOS_ACUMUX = SUMA_INGRESOS_ACUMUX + suma_ingresosx;
        else
            SUMA_INGRESOS_ACUMUX = :suma_ingresosx;

        /* ----------------------------------------------------------------------------------------- */

        if (SUMA_EGRESOS_ACUMUX is not null) then
            SUMA_EGRESOS_ACUMUX = SUMA_EGRESOS_ACUMUX + suma_egresosx;
        else
            SUMA_EGRESOS_ACUMUX = :suma_egresosx;

        /* ----------------------------------------------------------------------------------------- */

        if (SUMA_RETING_ACUMUX is not null) then
            SUMA_RETING_ACUMUX = SUMA_RETING_ACUMUX + suma_retingx;
        else
            SUMA_RETING_ACUMUX = :suma_retingx;

        /* ----------------------------------------------------------------------------------------- */

        if (SUMA_RETEGR_ACUMUX is not null) then
            SUMA_RETEGR_ACUMUX = SUMA_RETEGR_ACUMUX + suma_retegrx;
        else
            SUMA_RETEGR_ACUMUX = :suma_retegrx;

        /* ----------------------------------------------------------------------------------------- */
        if (SUMA_IMPORTE_ACUMUX is null) then
            SUMA_IMPORTE_ACUMUX = 0;

     end

  IF (:SUMA_CARGOSX IS NULL) THEN
    SUMA_CARGOSX = 0;

  IF (:SUMA_ABONOSX IS NULL) THEN
    SUMA_ABONOSX = 0;

  IF (:SUMA_RETINGX IS NULL) THEN
    SUMA_RETINGX = 0;

  IF (:SUMA_RETEGRX IS NULL) THEN
    SUMA_RETEGRX = 0;

  IF (:SUMA_INGRESOSX IS NULL) THEN
    SUMA_INGRESOSX = 0;

  IF (:SUMA_EGRESOSX IS NULL) THEN
    SUMA_EGRESOSX = 0;

  IF (:SUMA_INGRESOS_ACUMUX IS NULL) THEN
    SUMA_INGRESOS_ACUMUX = 0;

  IF (:SUMA_EGRESOS_ACUMUX IS NULL) THEN
    SUMA_EGRESOS_ACUMUX = 0;

  IF (:SUMA_RETING_ACUMUX IS NULL) THEN
    SUMA_RETING_ACUMUX = 0;

  IF (:SUMA_RETEGR_ACUMUX IS NULL) THEN
    SUMA_RETEGR_ACUMUX = 0;

  IF (:SUMA_IMPORTE_ACUMUX IS NULL) THEN
    SUMA_IMPORTE_ACUMUX = 0;

  SUMA_CARGOS = CAST(SUMA_CARGOSX AS NUMERIC(15,2));
  SUMA_ABONOS = CAST(SUMA_ABONOSX AS NUMERIC(15,2));
  SUMA_RETING = CAST(SUMA_RETINGX AS NUMERIC(15,2));
  SUMA_RETEGR = CAST(SUMA_RETEGRX AS NUMERIC(15,2));
  SUMA_SALDO  = SUMA_CARGOS - SUMA_ABONOS;
  SUMA_INGRESOS = CAST(SUMA_INGRESOSX AS NUMERIC(15,2));
  SUMA_EGRESOS = CAST(SUMA_EGRESOSX AS NUMERIC(15,2));

  SUMA_INGRESOS_ACUMU = CAST(SUMA_INGRESOS_ACUMUX AS NUMERIC(15,2));
  SUMA_EGRESOS_ACUMU = CAST(SUMA_EGRESOS_ACUMUX AS NUMERIC(15,2));
  SUMA_RETING_ACUMU = CAST(SUMA_RETING_ACUMUX AS NUMERIC(15,2));
  SUMA_RETEGR_ACUMU = CAST(SUMA_RETEGR_ACUMUX AS NUMERIC(15,2));

  SUMA_IMPORTE_ACUMU = CAST(SUMA_IMPORTE_ACUMUX AS NUMERIC(15,2));
  suspend;
end
PRD_MSGPOLI20_PORCUENTA        

DECLARE VARIABLE TIPO VARCHAR(1);
DECLARE VARIABLE DEBE DOUBLE PRECISION;
DECLARE VARIABLE HABER DOUBLE PRECISION;
begin
  if (FILTROPOLIZAS = 'XBALANZA') then
        begin
            SELECT
            MSGPOLI03_MOV_SALDOS.msgpoli03_saldofin
            FROM MSGPOLI03_MOV_SALDOS
            where MSGPOLI03_MOV_SALDOS.rela_socsyst01 = :empresa
            and MSGPOLI03_MOV_SALDOS.MSGPOLI03_ANO = :ano
            and MSGPOLI03_MOV_SALDOS.MSGPOLI03_MES = :mes
            and MSGPOLI03_MOV_SALDOS.RELA_SICCONT02 = :RELA_SICCONT02
            into :SUMA_CUENTA;
        end
  else if (FILTROPOLIZAS = 'XCONCILIADO') then
        begin
            SELECT SUM(MSGPOLI06_MOV_CUENTAS.MSGPOLI06_SALDO)
            FROM MSGPOLI06_MOV_CUENTAS
            INNER JOIN MSGPOLI04_CAB_BANCOS ON (MSGPOLI06_MOV_CUENTAS.RELA_MSGPOLI04 = MSGPOLI04_CAB_BANCOS.ID_MSGPOLI04)
            where ( (MSGPOLI04_CAB_BANCOS.rela_socsyst01 = :empresa)
            and (MSGPOLI04_CAB_BANCOS.MSGPOLI04_ANO = :ano)
            and (MSGPOLI04_CAB_BANCOS.MSGPOLI04_MES = :mes)
            and (MSGPOLI06_MOV_CUENTAS.RELA_SICCONT02 = :RELA_SICCONT02) )
            into :SUMA_CUENTA;
        end
  else if (FILTROPOLIZAS = 'XMOVIMIENTO') then
        begin
            SELECT
            SICCONT02_ARB_PLANCTA_EMP.siccont02_tipo,
            MSGPOLI03_MOV_SALDOS.MSGPOLI03_DEBE,
            MSGPOLI03_MOV_SALDOS.MSGPOLI03_HABER
            FROM SICCONT02_ARB_PLANCTA_EMP
            INNER JOIN MSGPOLI03_MOV_SALDOS ON (SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02 = MSGPOLI03_MOV_SALDOS.RELA_SICCONT02)
            where MSGPOLI03_MOV_SALDOS.rela_socsyst01 = :empresa
            and MSGPOLI03_MOV_SALDOS.MSGPOLI03_ANO = :ano
            and MSGPOLI03_MOV_SALDOS.MSGPOLI03_MES = :mes
            and MSGPOLI03_MOV_SALDOS.RELA_SICCONT02 = :rela_siccont02
            into :tipo,
                 :debe,
                 :haber;

            if (tipo = 'D') then
                SUMA_CUENTA = (debe-haber);
            else
                SUMA_CUENTA = (haber-debe);
        end
end
PRD_MSGPOLI21                  

DECLARE VARIABLE IMPORTEX DOUBLE PRECISION;
begin
    for select
    grid_msgpoli21.SICCONT02_CODEXT,
    grid_msgpoli21.SICCONT02_DESCRI,
    grid_msgpoli21.RELA_MSGPOLI20,
    grid_msgpoli21.rela_socsyst10,
    grid_msgpoli21.rela_socsyst10_tsuma,
    grid_msgpoli21.RELA_SICCONT02,
    grid_msgpoli21.ID_MSGPOLI21,
    grid_msgpoli21.socsyst10_filtro_des,
    grid_msgpoli21.socsyst10_codigo,
    grid_msgpoli21.MSGPOLI21_FAPL
    from grid_msgpoli21
    where grid_msgpoli21.rela_msgpoli20 = :ID_MSGPOLI20
      and grid_msgpoli21.TIPO_SUMA_CODIGO = :FILTRO
    into :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :RELA_MSGPOLI20,
         :RELA_SOCSYST10,
         :rela_socsyst10_tsuma,
         :RELA_SICCONT02,
         :ID_MSGPOLI21,
         :socsyst10_filtro_des,
         :socsyst10_codigo,
         :MSGPOLI21_FAPL
    do
    begin
        IMPORTEX = 0;
        MSGPOLI21_IMPORTE = 0;
        EXECUTE PROCEDURE PRD_MSGPOLI20_PORCUENTA
                    :empresa,
                    :ano,
                    :mes,
                    :RELA_SICCONT02,
                    :socsyst10_codigo
        RETURNING_VALUES IMPORTEX;

        IF (IMPORTEX IS NULL) THEN
          IMPORTEX = 0;

        MSGPOLI21_IMPORTE = CAST(IMPORTEX AS NUMERIC(15,2));
        suspend;    
    end
end
PRD_MSGPOLI22                  

DECLARE VARIABLE IMPORTEX DOUBLE PRECISION;
begin
    for select
    grid_MSGPOLI22.SICCONT02_CODEXT,
    grid_MSGPOLI22.SICCONT02_DESCRI,
    grid_MSGPOLI22.RELA_MSGPOLI20,
    grid_MSGPOLI22.rela_socsyst10,
    grid_MSGPOLI22.rela_socsyst10_tsuma,
    grid_MSGPOLI22.RELA_SICCONT02,
    grid_MSGPOLI22.ID_MSGPOLI22,
    grid_MSGPOLI22.socsyst10_filtro_des,
    grid_MSGPOLI22.socsyst10_codigo,
    grid_MSGPOLI22.MSGPOLI22_FAPL
    from grid_MSGPOLI22
    where grid_MSGPOLI22.rela_msgpoli20 = :ID_MSGPOLI20
      and grid_MSGPOLI22.tipo_suma_codigo = :FILTRO
    into :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :RELA_MSGPOLI20,
         :RELA_SOCSYST10,
         :rela_socsyst10_tsuma,
         :RELA_SICCONT02,
         :ID_MSGPOLI22,
         :socsyst10_filtro_des,
         :socsyst10_codigo,
         :MSGPOLI22_FAPL
    do
    begin
        IMPORTEX = 0;
        MSGPOLI22_IMPORTE = 0;
        EXECUTE PROCEDURE PRD_MSGPOLI20_PORCUENTA
                    :empresa,
                    :ano,
                    :mes,
                    :RELA_SICCONT02,
                    :socsyst10_codigo
        RETURNING_VALUES IMPORTEX;

        IF (IMPORTEX IS NULL) THEN
          IMPORTEX = 0;

        MSGPOLI22_IMPORTE = CAST(IMPORTEX AS NUMERIC(15,2));
        suspend;    
    end
end
REP_MSGPOLI03_BALANZA_PREVIEW  

DECLARE VARIABLE MSGPOLI03_SALDOINI DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI03_SALDOFIN DOUBLE PRECISION;
DECLARE VARIABLE VID_SICCONT02 BIGINT;
DECLARE VARIABLE VTIPO VARCHAR(1);
begin
    select cbo_clientes_empresas.entidad
    from cbo_clientes_empresas
    where cbo_clientes_empresas.id_socsyst01 = :empresa
    into :entidad;

    FOR select
    grid_siccont02.rela_socsyst01,
    grid_siccont02.id_siccont02,
    grid_siccont02.siccont02_codigo,
    grid_siccont02.siccont02_codext,
    grid_siccont02.siccont02_descri,
    grid_siccont02.siccont02_tipo,
    grid_siccont02.socsyst06_accion,
    (select count(siccont02_arb_plancta_emp.rela_siccont02)
     from siccont02_arb_plancta_emp
     where siccont02_arb_plancta_emp.rela_siccont02 = grid_siccont02.id_siccont02
    ),
    grid_siccont02.socsyst06_nivel,
    grid_siccont02.socsyst10_codigo,
    grid_siccont02.socsyst10_codigo_ext1
    from grid_siccont02
    where grid_siccont02.rela_socsyst01 = :empresa
    INTO :rela_socsyst01,
         :id_siccont02,
         :siccont02_codigo,
         :siccont02_codext,
         :siccont02_descri,
         :siccont02_tipo,
         :siccont02_mayor,
         :tienehijos,
         :nivel,
         :GRUPO,
         :GRUPO1
    DO
    BEGIN
        RESULTADOS = 0;
        if (upper(trim(GRUPO)) = 'RESULTADO') then
            RESULTADOS = 1;

        vid_siccont02 = null;
        msgpoli03_neteado = 0;

        msgpoli03_debe = 0;
        msgpoli03_haber = 0;

        msgpoli03_saldoini = 0;
        msgpoli03_saldofin = 0;

        msgpoli03_hsaldoini = 0;
        msgpoli03_hsaldofin = 0;

        msgpoli03_dsaldoini = 0;
        msgpoli03_dsaldofin = 0;

        /*if (tienehijos = 0) then */
            begin
                select
                rep_msgpoli03_afectables.id_siccont02,
                rep_msgpoli03_afectables.msgpoli03_saldoini,
                rep_msgpoli03_afectables.msgpoli03_debe,
                rep_msgpoli03_afectables.msgpoli03_haber,
                rep_msgpoli03_afectables.msgpoli03_saldofin
                from rep_msgpoli03_afectables
                WHERE rep_msgpoli03_afectables.rela_socsyst01 = :empresa
                  and rep_msgpoli03_afectables.id_siccont02 =  :id_siccont02
                  and rep_msgpoli03_afectables.msgpoli03_ano = :ano
                  and rep_msgpoli03_afectables.msgpoli03_mes = :mes
                INTO :vid_siccont02,
                     :msgpoli03_saldoini,
                     :msgpoli03_debe,
                     :msgpoli03_haber,
                     :msgpoli03_saldofin;

                if (siccont02_tipo = 'D') then
                    msgpoli03_saldo = msgpoli03_debe - msgpoli03_haber;
                else
                    msgpoli03_saldo = msgpoli03_haber - msgpoli03_debe;

                SELECT rep_msgpoli03_titulo.reto_tipo
                FROM rep_msgpoli03_titulo(:siccont02_codigo, :empresa)
                INTO :vtipo;

                if ((siccont02_tipo = 'D') and (vid_siccont02 is not null)) then
                    begin
                        msgpoli03_dsaldoini = msgpoli03_saldoini;
                        msgpoli03_dsaldofin = msgpoli03_saldofin;
                        if (vtipo <> siccont02_tipo) then
                            begin
                                msgpoli03_neteado = 1;
                                msgpoli03_hsaldoini = msgpoli03_dsaldoini * (-1);
                                msgpoli03_hsaldofin = msgpoli03_dsaldofin * (-1);
                            end
                    end
                else if ((siccont02_tipo = 'H') and (vid_siccont02 is not null)) then
                    begin
                        msgpoli03_hsaldoini = msgpoli03_saldoini;
                        msgpoli03_hsaldofin = msgpoli03_saldofin;
                        if (vtipo <> siccont02_tipo) then
                            begin
                                msgpoli03_neteado = 1;
                                msgpoli03_dsaldoini = msgpoli03_hsaldoini * (-1);
                                msgpoli03_dsaldofin = msgpoli03_hsaldofin * (-1);
                            end
                    end
            end

        if (mes = 0) then
            FECHA = 'Cierre de Ejercicio al 31 de Diciembre del ' || ano;
        else
            begin
                Select cbo_meses_maximosdias.socsyst10_maximo_dia ||
                ' de ' || cbo_meses_maximosdias.socsyst10_filtro_des
                from cbo_meses_maximosdias(:ano)
                where cbo_meses_maximosdias.socsyst10_codigo = :mes
                into :FECHA;
                FECHA = FECHA || ' del ' || cast(ano as Varchar(4));
           end

        if (msgpoli03_saldo is null) then
            msgpoli03_saldo = 0;

        suspend;
    end
end
VW_SICEGRE01                   

begin
    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    1
    FROM CBO_SICEGRE01
    WHERE ID_SOCUSUA02 = :FILTRO
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO

    begin
        SUSPEND;
    end

    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    0
    FROM vr_entidades_all
    WHERE vr_entidades_all.socsyst10_codigo = 'UP'
    and ID_SOCUSUA02 not in (select SICEGRE01_CAB_PROVEEDORES.rela_socusua02
                             from SICEGRE01_CAB_PROVEEDORES
                            )
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO
    SUSPEND;


end
VW_SICGEST10_SICGEST11         

BEGIN
  EXIT;
END
VW_SICGEST20                   

begin
    FOR SELECT
    ID_SICGEST20,
    RELA_SICGEST20,
    SICGEST20_DESCRI,
    SICGEST20_CODIGO,
    RELA_SOCSYST06,
    SOCSYST06_NIVEL,
    SOCSYST06_MASCARA,
    SOCSYST06_DESCRI,
    SOCSYST06_ACCION,
    SOCSYST06_CANT_PARES
    FROM SICGEST20_ARB_SERVICIOS
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
    ORDER BY SICGEST20_CODIGO
    INTO :ID_SICGEST20,
         :RELA_SICGEST20,
         :SICGEST20_DESCRI,
         :SICGEST20_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES
    DO
    SUSPEND;
end
VW_SICGEST30                   

BEGIN
   FOR SELECT
    ID_SICGEST30,
    RELA_SICGEST30,
    SICGEST30_DESCRI,
    SICGEST30_CODIGO,
    RELA_SOCSYST06,
    SOCSYST06_NIVEL,
    SOCSYST06_MASCARA,
    SOCSYST06_DESCRI,
    SOCSYST06_ACCION,
    SOCSYST06_CANT_PARES

    FROM VW_SICGEST30_FILTRO(:FILTRO) t1
    ORDER BY SICGEST30_CODIGO
    INTO :ID_SICGEST30,
         :RELA_SICGEST30,
         :SICGEST30_DESCRI,
         :SICGEST30_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES
    DO
    SUSPEND;
END
VW_SICGEST30_FILTRO            

DECLARE VARIABLE RELA_PADRE BIGINT;
DECLARE VARIABLE VAR_LIKE VARCHAR(50);
begin
    SELECT
    RELA_SICGEST30
    FROM SICGEST30_ARB_BIENES
    WHERE SICGEST30_CODIGO = :FILTRO
    INTO :RELA_PADRE;

    while (RELA_PADRE is not null) DO
        begin
            FOR SELECT
            SICGEST30_ARB_BIENES.id_sicgest30,
            SICGEST30_ARB_BIENES.rela_sicgest30,
            SICGEST30_ARB_BIENES.sicgest30_descri,
            SICGEST30_ARB_BIENES.sicgest30_codigo,
            SICGEST30_ARB_BIENES.rela_socsyst06,
            SOCSYST06_DET_ARBNIVELES.socsyst06_nivel,
            SOCSYST06_DET_ARBNIVELES.socsyst06_mascara,
            SOCSYST06_DET_ARBNIVELES.socsyst06_descri,
            SOCSYST06_DET_ARBNIVELES.socsyst06_accion,
            SOCSYST06_DET_ARBNIVELES.socsyst06_cant_pares
            FROM SICGEST30_ARB_BIENES
            INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SICGEST30_ARB_BIENES.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
            WHERE ID_sicgest30 = :RELA_PADRE
            INTO id_sicgest30,
                 :rela_sicgest30,
                 :sicgest30_descri,
                 :sicgest30_codigo,
                 :rela_socsyst06,
                 :socsyst06_nivel,
                 :socsyst06_mascara,
                 :socsyst06_descri,
                 :socsyst06_accion,
                 :socsyst06_cant_pares
            DO
            SUSPEND;
            RELA_PADRE = :rela_sicgest30;
        end

    VAR_LIKE = FILTRO || '%';
    FOR SELECT
    ID_SICGEST30,
    RELA_SICGEST30,
    SICGEST30_DESCRI,
    SICGEST30_CODIGO,
    RELA_SOCSYST06,
    SOCSYST06_NIVEL,
    SOCSYST06_MASCARA,
    SOCSYST06_DESCRI,
    SOCSYST06_ACCION,
    SOCSYST06_CANT_PARES
    FROM SICGEST30_ARB_BIENES
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SICGEST30_ARB_BIENES.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
    WHERE SICGEST30_CODIGO LIKE :VAR_LIKE
    ORDER BY SICGEST30_CODIGO
    INTO :ID_SICGEST30,
         :RELA_SICGEST30,
         :SICGEST30_DESCRI,
         :SICGEST30_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES
    DO
    SUSPEND;
end
VW_SICGEST30_INSUMOS           

begin
    FOR SELECT
    SICGEST30_ARB_BIENES.ID_SICGEST30,
    SICGEST30_ARB_BIENES.RELA_SICGEST30,
    SICGEST30_ARB_BIENES.SICGEST30_DESCRI,
    SICGEST30_ARB_BIENES.SICGEST30_CODIGO,
    SICGEST30_ARB_BIENES.RELA_SOCSYST06,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_MASCARA,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_DESCRI,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_ACCION,
    SOCSYST06_DET_ARBNIVELES.SOCSYST06_CANT_PARES,
    VR_SICCONT62_PRECIOS.id_siccont62,
    DNVL(VR_SICCONT62_PRECIOS.siccont62_importe,0) siccont62_importe,
    DNVL(VR_SICCONT62_PRECIOS.siccont62_impuestos,0) siccont62_impuestos,
    DNVL(VR_SICCONT62_PRECIOS.siccont62_importe,0) +
    (DNVL(VR_SICCONT62_PRECIOS.siccont62_importe,0) * DNVL(VR_SICCONT62_PRECIOS.siccont62_impuestos,1))/100 TOTAL_COSTO
    FROM SICGEST30_ARB_BIENES
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
    LEFT OUTER JOIN VR_SICCONT62_PRECIOS ON (SICGEST30_ARB_BIENES.ID_SICGEST30 = VR_SICCONT62_PRECIOS.RELA_SICGEST30)
    WHERE SICGEST30_CODIGO LIKE '2%'
    ORDER BY SICGEST30_CODIGO
    INTO :ID_SICGEST30,
         :RELA_SICGEST30,
         :SICGEST30_DESCRI,
         :SICGEST30_CODIGO,
         :RELA_SOCSYST06,
         :SOCSYST06_NIVEL,
         :SOCSYST06_MASCARA,
         :SOCSYST06_DESCRI,
         :SOCSYST06_ACCION,
         :SOCSYST06_CANT_PARES,
         :id_siccont62,
         :siccont62_importe,
         :siccont62_impuestos,
         :TOTAL_COSTO
    DO
    SUSPEND;
end
VW_SICINGR01                   

begin
    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    1
    FROM CBO_SICINGR01
    WHERE ID_SOCUSUA02 = :FILTRO
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO
    begin
        SUSPEND;
    end

    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    0
    FROM vr_entidades_all
    WHERE vr_entidades_all.socsyst10_codigo = 'UC'
    and ID_SOCUSUA02 not in (select SICINGR01_CAB_CLIENTES.rela_socusua02
                             from SICINGR01_CAB_CLIENTES
                            )
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO
    begin
    SUSPEND;
    end
end
API_NRO_WEEK                   

DECLARE VARIABLE W INTEGER; /* week number */
DECLARE VARIABLE Y INTEGER; /* year the week belongs to */
BEGIN
  D = D - EXTRACT(WEEKDAY FROM D-1) + 3;  /* move to thursday */

  W = (EXTRACT(YEARDAY FROM D) - EXTRACT(WEEKDAY FROM D-1) + 7) / 7e0;
  Y = EXTRACT(YEAR FROM D);

  /* This is just formatting; you may prefer to make W and Y return parameters instead. */
  /*
  IF (W<10) THEN
    WEEK_NO = '0';
  ELSE
    WEEK_NO = '';
   WEEK_NO = Y || '/' || WEEK_NO || W; */

  /* PARA MEXICO HAY QUE AGREGAR UNA SEMANA MAS */
  /* PARA ESTADOS UNIDOS HAY QUE SACARLO */
  WEEK_NO = W + 1;

  SUSPEND;
END
REP_SOCUSUA50                  

begin
    FOR SELECT
    ID_SOCUSUA50,
    RELA_SOCUSUA50,
    SOCUSUA50_DESCRI,
    SOCUSUA50_CODIGO,
    SOCSYST06_NIVEL,
    SOCSYST06_ACCION,
    SOCSYST06_DESCRI
    FROM VW_SOCUSUA50(:RELA_PADRE)
    ORDER BY SOCUSUA50_CODIGO
    INTO :ID_SOCUSUA50,
         :RELA_SOCUSUA50,
         :SOCUSUA50_DESCRI,
         :SOCUSUA50_CODIGO,
         :SOCSYST06_NIVEL,
         :SOCSYST06_ACCION,
         :SOCSYST06_DESCRI
    DO
    SUSPEND;
end
SOC$_SOCUSUA02_LICENCIA        

DECLARE VARIABLE IDSOCUSUA30_ULT BIGINT;
DECLARE VARIABLE IDSOCUSUA01_ULT BIGINT;
begin
  /* agrego la entidad fisica */
  INSERT INTO socusua30_mae_entfisicas
  (socusua30_nombres, socusua30_ape_padre, socusua30_ape_madre, socusua30_fnac)
  values (:nombre, :apelli_padre, :apelli_madre, current_date);

  /* tomo el ultimo id del usuario que grabo la tabla anterior */
  select socutil02_ultid
  from socutil02_tbl_ultids
  where socutil02_usuario = current_user
  INTO :IDSOCUSUA30_ULT;

  /* aqui agrego en la tabla de documentos el numero de licencia */
  INSERT INTO socusua40_det_documentos
  (rela_socusua30, rela_socsyst10, socusua40_numero)
  VALUES (:IDSOCUSUA30_ULT,12,:licencia);

  /* inserto en la tabla general del maestro de entidades */
  insert into socusua01_mae_entidades
  (rela_socusua30, socusua01_tipo)
  values(:IDSOCUSUA30_ULT,'F');

  /* tomo el ultimo id del usuario que grabo la tabla anterior */
  select socutil02_ultid
  from socutil02_tbl_ultids
  where socutil02_usuario = current_user
  INTO :IDSOCUSUA01_ULT;

  insert into socusua02_mae_usuarios
  (rela_socusua01,
   rela_socsyst10_activo,
   rela_socsyst10_tipo,
   socusua02_usuario,
   socusua02_password,
   socusua02_nivelseg)
  values
  (:IDSOCUSUA01_ULT,
   2,
   432,
   substr(:apelli_padre || :apelli_madre,1,20),
   'AUTO',
   3);

   /* tomo el ultimo id del usuario que grabo la tabla anterior */
  select socutil02_ultid
  from socutil02_tbl_ultids
  where socutil02_usuario = current_user
  INTO :IDSOCUSUA02_ULT;
  suspend;
end
SOC$_SQLDINAMIC_SIGSEP21_M     

BEGIN
    FOR EXECUTE STATEMENT 'Select Distinct ' ||
                          TextField ||
                          ' , MAX(JAMID_SIGSCEP30) JAMID_SIGSCEP30 from ' ||
                          TableName ||
                          ' group BY 1'
    INTO :descri,
         :id
    DO
        begin
            SUSPEND;
        end
END
SOC$_TMPCOMP01_IMPORTACION     

DECLARE VARIABLE CNIVEL01 VARCHAR(10);
DECLARE VARIABLE CNIVEL02 VARCHAR(10);
DECLARE VARIABLE CNIVEL03 VARCHAR(10);
DECLARE VARIABLE CNIVEL04 VARCHAR(10);
DECLARE VARIABLE CNIVEL05 VARCHAR(10);
DECLARE VARIABLE NNIVEL01 INTEGER;
DECLARE VARIABLE NNIVEL02 INTEGER;
DECLARE VARIABLE NNIVEL03 INTEGER;
DECLARE VARIABLE NNIVEL04 INTEGER;
DECLARE VARIABLE NNIVEL05 INTEGER;
DECLARE VARIABLE RELA_SOCSYST06 BIGINT;
DECLARE VARIABLE RELA01 BIGINT;
DECLARE VARIABLE RELA02 BIGINT;
DECLARE VARIABLE RELA03 BIGINT;
DECLARE VARIABLE RELA04 BIGINT;
DECLARE VARIABLE RELA05 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10 BIGINT;
DECLARE VARIABLE RELA_TMP01 BIGINT;
DECLARE VARIABLE RELA_TMP02 BIGINT;
DECLARE VARIABLE RELA_TMP03 BIGINT;
DECLARE VARIABLE RELA_TMP04 BIGINT;
DECLARE VARIABLE RELA_TMP05 BIGINT;
DECLARE VARIABLE RELA_PADRE BIGINT;
DECLARE VARIABLE TIPOCUENTA VARCHAR(1);
DECLARE VARIABLE MAYOR INTEGER;
begin
    NNIVEL01 = 0;
    NNIVEL02 = 0;
    NNIVEL03 = 0;
    NNIVEL04 = 0;
    NNIVEL05 = 0;

    RELA01 = 0;
    RELA02 = 0;
    RELA03 = 0;
    RELA04 = 0;
    RELA05 = 0;

    FOR SELECT
    SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06
    FROM SOCSYST06_DET_ARBNIVELES
    INNER JOIN SOCSYST05_CAB_ARBCABECERAS ON (SOCSYST06_DET_ARBNIVELES.RELA_SOCSYST05 = SOCSYST05_CAB_ARBCABECERAS.ID_SOCSYST05)
    WHERE (SOCSYST05_CAB_ARBCABECERAS.SOCSYST05_GRUPO = 'CTA')
    order by SOCSYST06_DET_ARBNIVELES.socsyst06_nivel
    INTO :RELA_SOCSYST06
    DO
    BEGIN
        if (RELA01 = 0) then
            RELA01 = :RELA_SOCSYST06;
        else if (RELA02 = 0) then
            RELA02 = :RELA_SOCSYST06;
        else if (RELA03 = 0) then
            RELA03 = :RELA_SOCSYST06;
        else if (RELA04 = 0) then
            RELA04 = :RELA_SOCSYST06;
        else if (RELA05 = 0) then
            RELA05 = :RELA_SOCSYST06;
    END

    FOR select
    ID_TMPCONT01,
    TMPCONT01_NIVEL01,
    TMPCONT01_NIVEL02,
    TMPCONT01_NIVEL03,
    TMPCONT01_NIVEL04,
    TMPCONT01_NIVEL05,
    TMPCONT01_CODIGO,
    TMPCONT01_DESCRIPCION,
    TMPCONT01_TIPO,
    TMPCONT01_ACCION
    from ztmpcont01_importacion
    ORDER BY ztmpcont01_importacion.id_tmpcont01
    INTO :ID_TMPCONT01,
         :TMPCONT01_NIVEL01,
         :TMPCONT01_NIVEL02,
         :TMPCONT01_NIVEL03,
         :TMPCONT01_NIVEL04,
         :TMPCONT01_NIVEL05,
         :TMPCONT01_CODIGO,
         :TMPCONT01_DESCRIPCION,
         :TMPCONT01_TIPO,
         :TMPCONT01_ACCION
      DO
      begin
         if (:TMPCONT01_NIVEL01 is not null) then
            BEGIN
                MAYOR = 0;
                NNIVEL02 = 0;
                NNIVEL03 = 0;
                NNIVEL04 = 0;
                NNIVEL05 = 0;
                NNIVEL01 = NNIVEL01 + 1;
                CNIVEL01 = NNIVEL01;
                CNIVEL01 = strrepeat('0',4-STRLEN(CNIVEL01)) || CNIVEL01;
                TMPCONT01_CODIGONEW = CNIVEL01;
                RELA_SOCSYST06 = RELA01;
                RELA_TMP01 = :ID_TMPCONT01;
                RELA_PADRE = NULL;
            END
         else if (:TMPCONT01_NIVEL02 is not null) then
            BEGIN
                MAYOR = 0;
                NNIVEL03 = 0;
                NNIVEL04 = 0;
                NNIVEL05 = 0;
                NNIVEL02 = NNIVEL02 + 1;
                CNIVEL02 = NNIVEL02;
                CNIVEL02 = strrepeat('0',4-STRLEN(CNIVEL02)) || CNIVEL02;
                TMPCONT01_CODIGONEW = CNIVEL01 || '.' || CNIVEL02;
                RELA_SOCSYST06 = RELA02;
                RELA_TMP02 = :ID_TMPCONT01;
                RELA_PADRE = RELA_TMP01;
            END
         else if (:TMPCONT01_NIVEL03 is not null) then
            BEGIN
                MAYOR = 1;
                NNIVEL04 = 0;
                NNIVEL05 = 0;
                NNIVEL03 = NNIVEL03 + 1;
                CNIVEL03 = NNIVEL03;
                CNIVEL03 = strrepeat('0',4-STRLEN(CNIVEL03)) || CNIVEL03;
                TMPCONT01_CODIGONEW = CNIVEL01 || '.' || CNIVEL02 || '.' || CNIVEL03  ;
                RELA_SOCSYST06 = RELA03;
                RELA_TMP03 = :ID_TMPCONT01;
                RELA_PADRE = RELA_TMP02;
            END
         else if (:TMPCONT01_NIVEL04 is not null) then
            BEGIN
                MAYOR = 0;
                NNIVEL05 = 0;
                NNIVEL04 = NNIVEL04 + 1;
                CNIVEL04 = NNIVEL04;
                CNIVEL04 = strrepeat('0',4-STRLEN(CNIVEL04)) || CNIVEL04;
                TMPCONT01_CODIGONEW = CNIVEL01 || '.' || CNIVEL02 || '.' || CNIVEL03 || '.' || CNIVEL04 ;
                RELA_SOCSYST06 = RELA04;
                RELA_TMP04 = :ID_TMPCONT01;
                RELA_PADRE = RELA_TMP03;
            END
         else if (:TMPCONT01_NIVEL05 is not null) then
            BEGIN
                MAYOR = 0;
                NNIVEL05 = NNIVEL05 + 1;
                CNIVEL05 = NNIVEL05;
                CNIVEL05 = strrepeat('0',4-STRLEN(CNIVEL05)) || CNIVEL05;
                TMPCONT01_CODIGONEW = CNIVEL01 || '.' || CNIVEL02 || '.' || CNIVEL03 || '.' || CNIVEL04 || '.' || CNIVEL05 ;
                RELA_SOCSYST06 = RELA05;
                RELA_TMP05 = :ID_TMPCONT01;
                RELA_PADRE = RELA_TMP04;
            END

         SELECT cbo_categorias_ctas.id_socsyst10
         FROM cbo_categorias_ctas
         WHERE rupper(cbo_categorias_ctas.socsyst10_filtro_des) = rupper(:TMPCONT01_TIPO)
         into :RELA_SOCSYST10;

         if (STRPOS('DEUDORA',rupper(:TMPCONT01_TIPO)) !=  0) then
            tipocuenta = 'D';
         else if (STRPOS('ACREEDORA',rupper(:TMPCONT01_TIPO)) !=  0) then
            tipocuenta = 'H';
         else
            tipocuenta = 'X';
            

         UPDATE ztmpcont01_importacion set ztmpcont01_importacion.tmpcont01_codigonew = :TMPCONT01_CODIGONEW,
                                           ztmpcont01_importacion.rela_socsyst06 = :RELA_SOCSYST06,
                                           ztmpcont01_importacion.rela_socsyst10 = :RELA_SOCSYST10,
                                           ztmpcont01_importacion.rela_siccont01 = :RELA_PADRE,
                                           ztmpcont01_importacion.tmpcont01_tipoaccion = :tipocuenta,
                                           ztmpcont01_importacion.tmpcont01_mayor = :MAYOR
         WHERE ztmpcont01_importacion.id_tmpcont01 = :ID_TMPCONT01;

         SUSPEND;
      end
end
VW_SOCUSUA02                   

begin
    FOR SELECT
    ID_SOCUSUA02,
    TRIM(SOCUSUA02_USUARIO) || ' - ' || ENTIDAD
    FROM VR_ENTIDADES_ALL
    ORDER BY SOCUSUA02_USUARIO
    INTO :ID_SOCUSUA02,
         :DESCRIPCION
    DO
    SUSPEND;
end
VW_SOCUSUA02_FILTRO            

begin
    if (TRIM(FILTRO)='-1') then
        FOR SELECT
        ID_SOCUSUA02,
        ENTIDAD,
        SOCUSUA01_TIPO,
        SOCUSUA02_NIVELSEG,
        SOCSYST10_FILTRO_DES,
        SOCSYST10_CODIGO
        FROM VR_ENTIDADES_ALL
        ORDER BY ENTIDAD
        INTO :ID_SOCUSUA02,
             :ENTIDAD,
             :SOCUSUA01_TIPO,
             :SOCUSUA02_NIVELSEG,
             :SOCSYST10_FILTRO_DES,
             :SOCSYST10_CODIGO
        DO
        SUSPEND;
    else if (TRIM(FILTRO)='US') then
        FOR SELECT
        ID_SOCUSUA02,
        ENTIDAD,
        SOCUSUA01_TIPO,
        SOCUSUA02_NIVELSEG,
        SOCSYST10_FILTRO_DES,
        SOCSYST10_CODIGO
        FROM VR_ENTIDADES_ALL
        where SOCSYST10_CODIGO = 'UO' OR SOCSYST10_CODIGO = 'UA'
        ORDER BY ENTIDAD
        INTO :ID_SOCUSUA02,
             :ENTIDAD,
             :SOCUSUA01_TIPO,
             :SOCUSUA02_NIVELSEG,
             :SOCSYST10_FILTRO_DES,
             :SOCSYST10_CODIGO
        DO
        SUSPEND;
    else
        FOR SELECT
        ID_SOCUSUA02,
        ENTIDAD,
        SOCUSUA01_TIPO,
        SOCUSUA02_NIVELSEG,
        SOCSYST10_FILTRO_DES,
        SOCSYST10_CODIGO
        FROM VR_ENTIDADES_ALL
        where SOCSYST10_CODIGO = :FILTRO
        ORDER BY ENTIDAD
        INTO :ID_SOCUSUA02,
             :ENTIDAD,
             :SOCUSUA01_TIPO,
             :SOCUSUA02_NIVELSEG,
             :SOCSYST10_FILTRO_DES,
             :SOCSYST10_CODIGO
        DO
        SUSPEND;
end
VW_SOCUSUA20_ORDER             

BEGIN
    FOR
      SELECT
          GRID_ENTMORALES.REFE_SOCSYST10_SOCIEDAD,
          GRID_ENTMORALES.REFE_SOCSYST10_GIROSOC,
          GRID_ENTMORALES.ID_SOCUSUA20,
          GRID_ENTMORALES.SOCUSUA20_DENOMINACION,
          GRID_ENTMORALES.TIPO_SOC,
          GRID_ENTMORALES.GIRO_SOC,
          RUPPER(GRID_ENTMORALES.SOCUSUA20_DENOMINACION) || ' ' || RUPPER(GRID_ENTMORALES.TIPO_SOC) || ' ' || RUPPER(GRID_ENTMORALES.GIRO_SOC)
      FROM GRID_ENTMORALES
      ORDER BY GRID_ENTMORALES.SOCUSUA20_DENOMINACION
      INTO
          :REFE_SOCSYST10_SOCIEDAD,
          :REFE_SOCSYST10_GIROSOC,
          :ID_SOCUSUA20,
          :SOCUSUA20_DENOMINACION,
          :TIPO_SOC,
          :GIRO_SOC,
          :BUSQUEDA
    DO
    SUSPEND;
END
VW_SOCUSUA30_ORDER             

BEGIN
    FOR
      SELECT
          SOCUSUA30_MAE_ENTFISICAS.ID_SOCUSUA30,
          SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_PADRE,
          SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_MADRE,
          SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_NOMBRES,
          SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_FNAC,
          SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_CORREO,
          RUPPER(SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_PADRE) || ' ' || RUPPER(SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_MADRE) || ' ' || RUPPER(SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_NOMBRES)
      FROM SOCUSUA30_MAE_ENTFISICAS
      ORDER BY
          SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_PADRE,
          SOCUSUA30_MAE_ENTFISICAS.SOCUSUA30_APE_MADRE
      INTO
          :ID_SOCUSUA30,
          :SOCUSUA30_APE_PADRE,
          :SOCUSUA30_APE_MADRE,
          :SOCUSUA30_NOMBRES,
          :SOCUSUA30_FNAC,
          :SOCUSUA30_CORREO,
          :BUSQUEDA
    DO
    SUSPEND;
END
VW_SOCUSUA50                   

begin
    if (RELA_PADRE IS NULL) then
        FOR SELECT
        ID_SOCUSUA50,
        RELA_SOCUSUA50,
        SOCUSUA50_DESCRI,
        SOCUSUA50_CODIGO,
        socusua50_codaduana,
        RELA_SOCSYST06,
        SOCSYST06_NIVEL,
        SOCSYST06_MASCARA,
        SOCSYST06_DESCRI,
        SOCSYST06_ACCION,
        SOCSYST06_CANT_PARES
        FROM SOCUSUA50_ARB_LOCALIDADES
        INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
        WHERE SOCSYST06_NIVEL <> 5
        ORDER BY SOCUSUA50_CODIGO
        INTO :ID_SOCUSUA50,
             :RELA_SOCUSUA50,
             :SOCUSUA50_DESCRI,
             :SOCUSUA50_CODIGO,
             :socusua50_codaduana,
             :RELA_SOCSYST06,
             :SOCSYST06_NIVEL,
             :SOCSYST06_MASCARA,
             :SOCSYST06_DESCRI,
             :SOCSYST06_ACCION,
             :SOCSYST06_CANT_PARES
        DO
        SUSPEND;
    ELSE if (RELA_PADRE = -1) then
        FOR SELECT
        ID_SOCUSUA50,
        RELA_SOCUSUA50,
        SOCUSUA50_DESCRI,
        SOCUSUA50_CODIGO,
        socusua50_codaduana,
        RELA_SOCSYST06,
        SOCSYST06_NIVEL,
        SOCSYST06_MASCARA,
        SOCSYST06_DESCRI,
        SOCSYST06_ACCION,
        SOCSYST06_CANT_PARES
        FROM SOCUSUA50_ARB_LOCALIDADES
        INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
        ORDER BY SOCUSUA50_CODIGO
        INTO :ID_SOCUSUA50,
             :RELA_SOCUSUA50,
             :SOCUSUA50_DESCRI,
             :SOCUSUA50_CODIGO,
             :socusua50_codaduana,
             :RELA_SOCSYST06,
             :SOCSYST06_NIVEL,
             :SOCSYST06_MASCARA,
             :SOCSYST06_DESCRI,
             :SOCSYST06_ACCION,
             :SOCSYST06_CANT_PARES
        DO
        SUSPEND;
    ELSE if (RELA_PADRE = -64) then
        FOR SELECT
        ID_SOCUSUA50,
        RELA_SOCUSUA50,
        SOCUSUA50_DESCRI,
        SOCUSUA50_CODIGO,
        socusua50_codaduana,
        RELA_SOCSYST06,
        SOCSYST06_NIVEL,
        SOCSYST06_MASCARA,
        SOCSYST06_DESCRI,
        SOCSYST06_ACCION,
        SOCSYST06_CANT_PARES
        FROM SOCUSUA50_ARB_LOCALIDADES
        INNER JOIN SOCSYST06_DET_ARBNIVELES ON (RELA_SOCSYST06 = ID_SOCSYST06)
        WHERE SOCSYST06_NIVEL <= 2
        ORDER BY SOCUSUA50_CODIGO
        INTO :ID_SOCUSUA50,
             :RELA_SOCUSUA50,
             :SOCUSUA50_DESCRI,
             :SOCUSUA50_CODIGO,
             :socusua50_codaduana,
             :RELA_SOCSYST06,
             :SOCSYST06_NIVEL,
             :SOCSYST06_MASCARA,
             :SOCSYST06_DESCRI,
             :SOCSYST06_ACCION,
             :SOCSYST06_CANT_PARES
        DO
        SUSPEND;
    ELSE
        while (RELA_PADRE is not null) DO
        begin
            FOR SELECT
            ID_SOCUSUA50,
            RELA_SOCUSUA50,
            SOCUSUA50_DESCRI,
            SOCUSUA50_CODIGO,
            socusua50_codaduana,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION,
            SOCSYST06_DESCRI
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN socusua50_arb_localidades ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = socusua50_arb_localidades.RELA_SOCSYST06)
            WHERE ID_SOCUSUA50 = :RELA_PADRE
            INTO :ID_SOCUSUA50,
                 :RELA_SOCUSUA50,
                 :SOCUSUA50_DESCRI,
                 :SOCUSUA50_CODIGO,
                 :socusua50_codaduana,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION,
                 :SOCSYST06_DESCRI
            DO
            SUSPEND;
            RELA_PADRE = :RELA_SOCUSUA50;
        end
end
VW_SOCUSUA50_DN                

DECLARE VARIABLE JAM$V_01_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_01_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_02_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_02_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_03_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_03_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_04_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_04_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_05_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_05_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_06_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_06_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_07_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_07_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_08_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_08_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_09_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_09_VALOR VARCHAR(200);
DECLARE VARIABLE JAM$V_10_DESCRI VARCHAR(200) CHARACTER SET ASCII;
DECLARE VARIABLE JAM$V_10_VALOR VARCHAR(200);
DECLARE VARIABLE MAXNIVEL INTEGER;
DECLARE VARIABLE RELA_PADRE BIGINT;
DECLARE VARIABLE SOCSYST06_DESCRI VARCHAR(200);
DECLARE VARIABLE SOCUSUA50_DESCRI VARCHAR(200);
DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
begin
    for select
    RELA_SOCUSUA50,
    SOCSYST06_NIVEL,
    SOCUSUA50_DESCRI,
    SOCSYST06_DESCRI,
    ID_SOCUSUA50,
    SOCUSUA50_CODIGO,
    SOCUSUA50_CODADUANA
    from SOCSYST06_DET_ARBNIVELES A1
    INNER JOIN SOCUSUA50_ARB_LOCALIDADES L1 ON (A1.ID_SOCSYST06 = L1.RELA_SOCSYST06)
    order by SOCUSUA50_CODIGO
    into RELA_SOCUSUA50,
         MAXNIVEL,
         SOCUSUA50_DESCRI,
         SOCSYST06_DESCRI,
         :ID_SOCUSUA50,
         :SOCUSUA50_CODIGO,
         :SOCUSUA50_CODADUANA
    do
    begin
        JAM$_01_DESCRI = NULL;
        JAM$_01_VALOR = NULL;
        JAM$_02_DESCRI = NULL;
        JAM$_02_VALOR = NULL;
        JAM$_03_DESCRI = NULL;
        JAM$_03_VALOR = NULL;
        JAM$_04_DESCRI = NULL;
        JAM$_04_VALOR = NULL;
        JAM$_05_DESCRI = NULL;
        JAM$_05_VALOR = NULL;
        JAM$_06_DESCRI = NULL;
        JAM$_06_VALOR = NULL;
        JAM$_07_DESCRI = NULL;
        JAM$_07_VALOR = NULL;
        JAM$_08_DESCRI = NULL;
        JAM$_08_VALOR = NULL;
        JAM$_09_DESCRI = NULL;
        JAM$_09_VALOR = NULL;
        JAM$_10_DESCRI = NULL;
        JAM$_10_VALOR = NULL;

        RELA_PADRE = :RELA_SOCUSUA50;

        while (MAXNIVEL <> 0) DO
        begin
          if (MAXNIVEL=1) then
               begin
                JAM$_01_DESCRI = SOCSYST06_DESCRI;
                JAM$_01_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=2) then
               begin
                JAM$_02_DESCRI = SOCSYST06_DESCRI;
                JAM$_02_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=3) then
               begin
                JAM$_03_DESCRI = SOCSYST06_DESCRI;
                JAM$_03_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=4) then
               begin
                JAM$_04_DESCRI = SOCSYST06_DESCRI;
                JAM$_04_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=5) then
               begin
                JAM$_05_DESCRI = SOCSYST06_DESCRI;
                JAM$_05_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=6) then
               begin
                JAM$_06_DESCRI = SOCSYST06_DESCRI;
                JAM$_06_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=7) then
               begin
                JAM$_07_DESCRI = SOCSYST06_DESCRI;
                JAM$_07_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=8) then
               begin
                JAM$_08_DESCRI = SOCSYST06_DESCRI;
                JAM$_08_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=9) then
               begin
                JAM$_09_DESCRI = SOCSYST06_DESCRI;
                JAM$_09_VALOR = SOCUSUA50_DESCRI;
               end
          if (MAXNIVEL=10) then
               begin
                JAM$_10_DESCRI = SOCSYST06_DESCRI;
                JAM$_10_VALOR = SOCUSUA50_DESCRI;
               end


          if (MAXNIVEL>1) then
               begin
                   select
                   RELA_SOCUSUA50,
                   SOCSYST06_NIVEL,
                   SOCSYST06_DESCRI,
                   SOCUSUA50_DESCRI
                   from SOCSYST06_DET_ARBNIVELES A1
                   INNER JOIN SOCUSUA50_ARB_LOCALIDADES L1 ON (A1.ID_SOCSYST06 = L1.RELA_SOCSYST06)
                   where ID_SOCUSUA50 = :RELA_PADRE
                   into RELA_SOCUSUA50,
                        MAXNIVEL,
                        SOCSYST06_DESCRI,
                        SOCUSUA50_DESCRI;
                               RELA_PADRE = :RELA_SOCUSUA50;
               end
          else
               begin
                   MAXNIVEL = 0;
               end
        end
        suspend;
    end
end
VW_SOCUSUA50_FILTRO            

begin
        FOR SELECT
        ID_SOCUSUA50,
        RELA_SOCUSUA50,
        SOCUSUA50_DESCRI,
        SOCUSUA50_CODIGO,
        socusua50_codaduana,
        RELA_SOCSYST06,
        SOCSYST06_NIVEL,
        SOCSYST06_MASCARA,
        SOCSYST06_DESCRI,
        SOCSYST06_ACCION,
        SOCSYST06_CANT_PARES
        FROM VW_SOCUSUA50(:RELA_PADRE)
        WHERE SOCSYST06_NIVEL = :RELA_NIVEL
        ORDER BY SOCUSUA50_CODIGO
        INTO :ID_SOCUSUA50,
             :RELA_SOCUSUA50,
             :SOCUSUA50_DESCRI,
             :SOCUSUA50_CODIGO,
             :socusua50_codaduana,
             :RELA_SOCSYST06,
             :SOCSYST06_NIVEL,
             :SOCSYST06_MASCARA,
             :SOCSYST06_DESCRI,
             :SOCSYST06_ACCION,
             :SOCSYST06_CANT_PARES
        DO
        BEGIN
        SUSPEND;
        END

end
VW_SOCUSUA50_ORDER             

begin
        FOR SELECT
        ID_SOCUSUA50,
        RELA_SOCUSUA50,
        SOCUSUA50_DESCRI,
        SOCUSUA50_CODIGO,
        socusua50_codaduana,
        RELA_SOCSYST06,
        SOCSYST06_NIVEL,
        SOCSYST06_MASCARA,
        SOCSYST06_DESCRI,
        SOCSYST06_ACCION,
        SOCSYST06_CANT_PARES
        FROM VW_SOCUSUA50(:RELA_PADRE)
        ORDER BY SOCUSUA50_CODIGO
        INTO :ID_SOCUSUA50,
             :RELA_SOCUSUA50,
             :SOCUSUA50_DESCRI,
             :SOCUSUA50_CODIGO,
             :socusua50_codaduana,
             :RELA_SOCSYST06,
             :SOCSYST06_NIVEL,
             :SOCSYST06_MASCARA,
             :SOCSYST06_DESCRI,
             :SOCSYST06_ACCION,
             :SOCSYST06_CANT_PARES
        DO
        BEGIN
        SUSPEND;
        END
end
VW_SOCUSUA50_SOCWFLO01         

DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
DECLARE VARIABLE CODIGO VARCHAR(50);
DECLARE VARIABLE MAXNIVEL INTEGER;
begin
  SELECT socwflo01_arb_organigrama.rela_socusua50
  FROM socwflo01_arb_organigrama
  WHERE socwflo01_arb_organigrama.id_socwflo01 = :id_socwflo01
  INTO :RELA_SOCUSUA50;

  select socusua50_arb_localidades.socusua50_codigo
  FROM socusua50_arb_localidades
  WHERE socusua50_arb_localidades.id_socusua50 = :RELA_SOCUSUA50
  INTO :CODIGO;

  SELECT MAX( SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL ) MAXNIVEL
  FROM SOCSYST05_CAB_ARBCABECERAS
  INNER JOIN SOCSYST06_DET_ARBNIVELES ON (SOCSYST05_CAB_ARBCABECERAS.ID_SOCSYST05 = SOCSYST06_DET_ARBNIVELES.RELA_SOCSYST05)
  WHERE SOCSYST05_CAB_ARBCABECERAS.SOCSYST05_GRUPO = 'LOC'
  into :MAXNIVEL;

  CODIGO = TRIM(CODIGO) || '%';

  if (CODIGO <> '%') then
      begin
          BEGIN
              FOR SELECT vw_socusua50.id_socusua50,
              vw_socusua50.socusua50_codigo,
              vw_socusua50.socusua50_descri,
              vw_socusua50.socusua50_codaduana
              from vw_socusua50(-1)
              where vw_socusua50.socusua50_codigo like :CODIGO
              and vw_socusua50.socsyst06_nivel = :MAXNIVEL
              INTO :ID_SOCUSUA50,
                   :socusua50_codigo,
                   :socusua50_descri,
                   :socusua50_codaduana
              DO
              suspend;
          END
      end
end
VW_SOCWFLO01                   

DECLARE VARIABLE RELA_PADRE BIGINT;
DECLARE VARIABLE XFILTRO VARCHAR(100);
begin
    XFILTRO = TRIM(:filtro);
    if (XFILTRO='-1' or  XFILTRO='') then
        BEGIN
            FOR SELECT
            rela_socsyst01,
            ID_SOCWFLO01,
            RELA_SOCWFLO01,
            SOCWFLO01_DESCRI,
            SOCWFLO01_CODIGO,
            socwflo01_codint,
            RELA_SOCUSUA50,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCSYST06)
            ORDER BY SOCWFLO01_CODIGO
            INTO :rela_socsyst01,
                 :ID_SOCWFLO01,
                 :RELA_SOCWFLO01,
                 :SOCWFLO01_DESCRI,
                 :SOCWFLO01_CODIGO,
                 :socwflo01_codint,
                 :RELA_SOCUSUA50,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION
            DO
            SUSPEND;
        END
    else
        SELECT
        RELA_SOCWFLO01
        FROM SOCWFLO01_ARB_ORGANIGRAMA
        WHERE SOCWFLO01_CODIGO = :XFILTRO
        INTO :RELA_PADRE;

        while (RELA_PADRE is not null) DO
        begin
            FOR SELECT
            rela_socsyst01,
            ID_SOCWFLO01,
            RELA_SOCWFLO01,
            SOCWFLO01_DESCRI,
            SOCWFLO01_CODIGO,
            socwflo01_codint,
            RELA_SOCUSUA50,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCSYST06)
            WHERE ID_SOCWFLO01 = :RELA_PADRE
            INTO :rela_socsyst01,
                 :ID_SOCWFLO01,
                 :RELA_SOCWFLO01,
                 :SOCWFLO01_DESCRI,
                 :SOCWFLO01_CODIGO,
                 :socwflo01_codint,
                 :RELA_SOCUSUA50,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION
            DO
            SUSPEND;
            RELA_PADRE = :RELA_SOCWFLO01;                
        end

        FOR SELECT
        rela_socsyst01,
        ID_SOCWFLO01,
        RELA_SOCWFLO01,
        SOCWFLO01_DESCRI,
        SOCWFLO01_CODIGO,
        socwflo01_codint,
        RELA_SOCUSUA50,
        SOCSYST06_NIVEL,
        SOCSYST06_ACCION
        FROM SOCSYST06_DET_ARBNIVELES
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCSYST06)
        WHERE SOCWFLO01_CODIGO LIKE :XFILTRO || '%'
        ORDER BY SOCWFLO01_CODIGO
        INTO :rela_socsyst01,
             :ID_SOCWFLO01,
             :RELA_SOCWFLO01,
             :SOCWFLO01_DESCRI,
             :SOCWFLO01_CODIGO,
             :socwflo01_codint,
             :RELA_SOCUSUA50,
             :SOCSYST06_NIVEL,
             :SOCSYST06_ACCION
        DO
        SUSPEND;

end
VW_SOCWFLO01_ID                

DECLARE VARIABLE CDESCRI01 VARCHAR(200);
DECLARE VARIABLE CDESCRI02 VARCHAR(200);
begin
    if (:FILTRO IS NULL) then
        BEGIN
            FOR SELECT
            ID_SOCWFLO01,
            RELA_SOCWFLO01,
            SOCWFLO01_DESCRI,
            SOCWFLO01_CODIGO,
            socwflo01_codint,
            RELA_SOCUSUA50,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCSYST06)
            ORDER BY SOCWFLO01_CODIGO
            INTO :ID_SOCWFLO01,
                 :RELA_SOCWFLO01,
                 :SOCWFLO01_DESCRI,
                 :SOCWFLO01_CODIGO,
                 :socwflo01_codint,
                 :RELA_SOCUSUA50,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION
            DO

            BEGIN
                Select socusua50_descri
                FROM vw_socusua50_filtro(:RELA_SOCUSUA50,3)
                INTO :cDescri01;

                Select socusua50_descri
                FROM vw_socusua50_filtro(:RELA_SOCUSUA50,2)
                INTO :cDescri02;

                LOCALIDAD = :cDescri01 || ', ' || :cDescri02;
                SUSPEND;
            END
        END
    else
        BEGIN
            FOR SELECT
            ID_SOCWFLO01,
            RELA_SOCWFLO01,
            SOCWFLO01_DESCRI,
            SOCWFLO01_CODIGO,
            socwflo01_codint,
            RELA_SOCUSUA50,
            SOCSYST06_NIVEL,
            SOCSYST06_ACCION
            FROM SOCSYST06_DET_ARBNIVELES
            INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06 = SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCSYST06)
            WHERE SOCWFLO01_ARB_ORGANIGRAMA.id_socwflo01 = :FILTRO
            ORDER BY SOCWFLO01_CODIGO
            INTO :ID_SOCWFLO01,
                 :RELA_SOCWFLO01,
                 :SOCWFLO01_DESCRI,
                 :SOCWFLO01_CODIGO,
                 :socwflo01_codint,
                 :RELA_SOCUSUA50,
                 :SOCSYST06_NIVEL,
                 :SOCSYST06_ACCION
            DO
            
            BEGIN
                Select socusua50_descri
                FROM vw_socusua50_filtro(:RELA_SOCUSUA50,3)
                INTO :cDescri01;

                Select socusua50_descri
                FROM vw_socusua50_filtro(:RELA_SOCUSUA50,2)
                INTO :cDescri02;

                LOCALIDAD = :cDescri01 || ', ' || :cDescri02;
                SUSPEND;
            END
        END

end
VW_SOCWFLO01_ORDER             

begin
    FOR SELECT
    rela_socsyst01,
    ID_SOCWFLO01,
    RELA_SOCWFLO01,
    SOCWFLO01_DESCRI,
    SOCWFLO01_CODIGO,
    socwflo01_codint,
    RELA_SOCUSUA50,
    SOCSYST06_NIVEL,
    SOCSYST06_ACCION
    FROM VW_SOCWFLO01(:XFILTRO)
    ORDER BY SOCWFLO01_CODIGO
    INTO :rela_socsyst01,
         :ID_SOCWFLO01,
         :RELA_SOCWFLO01,
         :SOCWFLO01_DESCRI,
         :SOCWFLO01_CODIGO,
         :socwflo01_codint,
         :RELA_SOCUSUA50,
         :SOCSYST06_NIVEL,
         :SOCSYST06_ACCION
    DO
    SUSPEND;
end
CBO_MESES_MAXIMOSDIAS          

DECLARE VARIABLE NMOD DOUBLE PRECISION;
begin
  FOR SELECT
  cbo_meses.id_socsyst10,
  cast(cbo_meses.socsyst10_filtro_des as varchar(20)),
  cast(cbo_meses.socsyst10_codigo as varchar(2))
  FROM cbo_meses
  INTO :id_socsyst10,
       :socsyst10_filtro_des,
       :socsyst10_codigo
  DO
  BEGIN
    if (cast(socsyst10_codigo as integer) = 0) then
        SOCSYST10_MAXIMO_DIA = 31;
    else if (cast(socsyst10_codigo as integer) = 1) then
        SOCSYST10_MAXIMO_DIA = 31;
    else if (cast(socsyst10_codigo as integer) = 2) then
        begin
            if (ano is null) then
                nmod = mod(extractyear(current_date),4);
            else
                nmod = mod(ano,4);

            if (nmod = 0) then
                SOCSYST10_MAXIMO_DIA = 29;
            else
                SOCSYST10_MAXIMO_DIA = 28;
        end
    else if (cast(socsyst10_codigo as integer) = 3) then
        SOCSYST10_MAXIMO_DIA = 31;
    else if (cast(socsyst10_codigo as integer) = 4) then
        SOCSYST10_MAXIMO_DIA = 30;
    else if (cast(socsyst10_codigo as integer) = 5) then
        SOCSYST10_MAXIMO_DIA = 31;
    else if (cast(socsyst10_codigo as integer) = 6) then
        SOCSYST10_MAXIMO_DIA = 30;
    else if (cast(socsyst10_codigo as integer) = 7) then
        SOCSYST10_MAXIMO_DIA = 31;
    else if (cast(socsyst10_codigo as integer) = 8) then
        SOCSYST10_MAXIMO_DIA = 31;
    else if (cast(socsyst10_codigo as integer) = 9) then
        SOCSYST10_MAXIMO_DIA = 30;
    else if (cast(socsyst10_codigo as integer) = 10) then
        SOCSYST10_MAXIMO_DIA = 31;
    else if (cast(socsyst10_codigo as integer) = 11) then
        SOCSYST10_MAXIMO_DIA = 30;
    else if (cast(socsyst10_codigo as integer) = 12) then
        SOCSYST10_MAXIMO_DIA = 31;
    suspend;
  END
end
REP_MSGPOLI03_TITULO           

declare variable digito_ult varchar(50);
declare variable ndesde integer;
declare variable reto_codigo varchar(50);
begin
    DIGITO_ULT = '';
    NDESDE = 0;
    while (DIGITO_ULT <> '.') DO
    begin
        NDESDE = NDESDE + 1;
        DIGITO_ULT = LONGSUBSTR(:CODIGO,NDESDE,1);
        if (NDESDE > STRLEN(:CODIGO)) then
            break;
    end

    RETO_CODIGO = longsubstr(:codigo, 1, NDESDE-1);

    Select siccont02_arb_plancta_emp.siccont02_tipo
    from siccont02_arb_plancta_emp
    where siccont02_arb_plancta_emp.siccont02_codigo = :RETO_CODIGO
      and siccont02_arb_plancta_emp.rela_socsyst01 = :empresa
    INTO :RETO_TIPO;

  suspend;
end
REP_MSGPOLI03_BALANZA          

DECLARE VARIABLE CLIKE VARCHAR(50);
DECLARE VARIABLE DSUMATODOS DOUBLE PRECISION;
DECLARE VARIABLE NIVELMAYOR INTEGER;
begin
    nivelmayor = 100;

    EXECUTE PROCEDURE REP_ZTMPPOLI03_CREA(:empresa, :ano, :mes);

    FOR select
    ENTIDAD,
    FECHA,
    RELA_SOCSYST01,
    ID_SICCONT02,
    SICCONT02_CODIGO,
    SICCONT02_CODEXT,
    SICCONT02_DESCRI,
    SICCONT02_TIPO,
    SICCONT02_MAYOR,
    MSGPOLI03_DSALDOINI,
    MSGPOLI03_HSALDOINI,
    MSGPOLI03_DEBE,
    MSGPOLI03_HABER,
    MSGPOLI03_DSALDOFIN,
    MSGPOLI03_HSALDOFIN,
    TIENEHIJOS,
    MSGPOLI03_NETEADO,
    NIVEL,
    resultados,
    grupo,
    grupo1
    from ztmppoli03_balanza
    WHERE ztmppoli03_balanza.ztmppoli03_user = current_user
    order by ztmppoli03_balanza.siccont02_codigo
    INTO :ENTIDAD,
         :FECHA,
         :RELA_SOCSYST01,
         :ID_SICCONT02,
         :SICCONT02_CODIGO,
         :SICCONT02_CODEXT,
         :SICCONT02_DESCRI,
         :SICCONT02_TIPO,
         :SICCONT02_MAYOR,
         :MSGPOLI03_DSALDOINI,
         :MSGPOLI03_HSALDOINI,
         :MSGPOLI03_DEBE,
         :MSGPOLI03_HABER,
         :MSGPOLI03_DSALDOFIN,
         :MSGPOLI03_HSALDOFIN,
         :TIENEHIJOS,
         :MSGPOLI03_NETEADO,
         :NIVEL,
         :resultados,
         :grupo,
         :subgrupo
    DO
    BEGIN
        if (siccont02_mayor = 1 and nivelmayor = 100) then
            nivelmayor = nivel;

        clike = trim(SICCONT02_CODIGO) || '%';
        if (TIENEHIJOS <> 0) then
            begin
                if ((siccont02_tipo = 'D')) then
                    select
                    sum(ztmppoli03_balanza.msgpoli03_dsaldoini),
                    sum(ztmppoli03_balanza.msgpoli03_debe),
                    sum(ztmppoli03_balanza.msgpoli03_haber),
                    sum(ztmppoli03_balanza.msgpoli03_dsaldofin)
                    from ztmppoli03_balanza
                    where ztmppoli03_balanza.ztmppoli03_user = current_user
                      and ztmppoli03_balanza.siccont02_codigo like :clike
                    into :msgpoli03_dsaldoini,
                         :msgpoli03_debe,
                         :msgpoli03_haber,
                         :msgpoli03_dsaldofin;
                else
                    select
                    sum(ztmppoli03_balanza.msgpoli03_hsaldoini),
                    sum(ztmppoli03_balanza.msgpoli03_debe),
                    sum(ztmppoli03_balanza.msgpoli03_haber),
                    sum(ztmppoli03_balanza.msgpoli03_hsaldofin)
                    from ztmppoli03_balanza
                    where ztmppoli03_balanza.ztmppoli03_user = current_user
                      and ztmppoli03_balanza.siccont02_codigo like :clike
                    into :msgpoli03_hsaldoini,
                         :msgpoli03_debe,
                         :msgpoli03_haber,
                         :msgpoli03_hsaldofin;
            end
        else
            begin
                if (msgpoli03_neteado = 1) then
                    if ((siccont02_tipo = 'D')) then
                        begin
                            msgpoli03_hsaldoini = 0;
                            msgpoli03_hsaldofin = 0;
                        end
                    else
                        begin
                            msgpoli03_dsaldoini = 0;
                            msgpoli03_dsaldofin = 0;
                        end
            end

        DSUMATODOS = msgpoli03_debe+msgpoli03_haber+
                     msgpoli03_dsaldoini+msgpoli03_dsaldofin+
                     msgpoli03_hsaldoini+msgpoli03_hsaldofin;

        if (SINMOVIMIENTO = 0) then
            suspend;
        else if (not (SINMOVIMIENTO = 1 and tienehijos = 0 and DSUMATODOS = 0)) then
            begin
                if (SINMOVIMIENTO = 1) then
                    suspend;
                else if (SINMOVIMIENTO = 2 and nivel <= nivelmayor) then
                    begin
                        if (not (nivel = nivelmayor and DSUMATODOS = 0)) then
                            suspend;
                    end
                else if (SINMOVIMIENTO = 3 and nivel <= nivelmayor) then
                    suspend;
                    
            end

    end
end
PRD_MSGPOLI30                  

begin
  INSERT INTO msgpoli30_mov_activos (msgpoli30_mov_activos.rela_msgpoli29,
                                        msgpoli30_mov_activos.rela_msgpoli01,
                                        msgpoli30_mov_activos.rela_msgpoli02,
                                        msgpoli30_mov_activos.msgpoli30_importe,
                                        msgpoli30_mov_activos.msgpoli30_fadj,
                                        msgpoli30_mov_activos.msgpoli30_porcdepre
                                        )

                                    select
                                        grid_msgpoli30_sin.id_msgpoli29,
                                        grid_msgpoli30_sin.id_msgpoli01,
                                        grid_msgpoli30_sin.id_msgpoli02,
                                        grid_msgpoli30_sin.importe,
                                        grid_msgpoli30_sin.msgpoli01_fcta,
                                        grid_msgpoli30_sin.msgpoli28_depreciacion
                                    from grid_msgpoli30_sin
                                        WHERE grid_msgpoli30_sin.rela_socsyst01 = :EMPRESA;
    suspend;
end
PRD_MSGPOLI30_FALTA_DEPRECIAR  

DECLARE VARIABLE MSGPOLI30_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI33_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI30_PORCDEPRE DOUBLE PRECISION;
DECLARE VARIABLE MSGPOLI33_FPOL TIMESTAMP;
DECLARE VARIABLE ANO_DIF INTEGER;
DECLARE VARIABLE MES_DIF INTEGER;
DECLARE VARIABLE ANO_ADJ INTEGER;
DECLARE VARIABLE MES_ADJ INTEGER;
DECLARE VARIABLE MESES INTEGER;
begin
    SELECT
    MAX(GRID_SICCONT72_CTAS.rela_siccont02),
    GRID_SICCONT72_CTAS.siccont02_codext,
    GRID_SICCONT72_CTAS.siccont02_descri
    FROM GRID_SICCONT72_CTAS
    WHERE GRID_SICCONT72_CTAS.rela_socsyst01 = :empresa
    AND GRID_SICCONT72_CTAS.socsyst10_codigo_ext1 = 'AMOR'
    AND GRID_SICCONT72_CTAS.socsyst10_codigo = 'GASTO'
    GROUP BY
    GRID_SICCONT72_CTAS.siccont02_codext,
    GRID_SICCONT72_CTAS.siccont02_descri
    into :rela_siccont02_gasto,
         :GASTO_DESCRI,
         :GASTO_CUENTA;

    FOR SELECT
    vw_msgpoli30_falta_depreciar.rela_siccont02,
    vw_msgpoli30_falta_depreciar.id_msgpoli30,
    vw_msgpoli30_falta_depreciar.msgpoli30_importe,
    vw_msgpoli30_falta_depreciar.msgpoli30_porcdepre,
    vw_msgpoli30_falta_depreciar.msgpoli30_fadj,
    vw_msgpoli30_falta_depreciar.siccont02_codext,
    vw_msgpoli30_falta_depreciar.siccont02_descri,
    vw_msgpoli30_falta_depreciar.msgpoli01_docnro,
    vw_msgpoli30_falta_depreciar.activo_cuenta,
    vw_msgpoli30_falta_depreciar.activo_concepto
    FROM vw_msgpoli30_falta_depreciar
    WHERE vw_msgpoli30_falta_depreciar.rela_socsyst01 = :EMPRESA
    INTO :rela_siccont02,
         :id_msgpoli30,
         :msgpoli30_importe,
         :msgpoli30_porcdepre,
         :msgpoli30_fadj,
         :DEPRE_CUENTA,
         :DEPRE_DESCRI,
         :POLIZA,
         :ACTIVO_CUENTA,
         :ACTIVO_DESCRI
    DO
    BEGIN
        meses = 0;
        meses_alafecha = 0;
        msgpoli33_importe = null;
        importe_diferencia = null;
        msgpoli33_fpol = null;

        importe_original = msgpoli30_importe;
        msgpoli30_porcdepre = msgpoli30_porcdepre / 12;
        importe_depreciar = ((importe_original * msgpoli30_porcdepre) / 100);
        anos_x_depreciar = (importe_original/importe_depreciar) / 12;
        meses_x_depreciar = cast(softround(importe_original/importe_depreciar, 0) as integer);

        SELECT
        vw_msgpoli33.msgpoli33_importe,
        vw_msgpoli33.msgpoli33_fpol
        FROM vw_msgpoli33
        WHERE vw_msgpoli33.rela_msgpoli30 = :id_msgpoli30
        INTO :msgpoli33_importe,
             :msgpoli33_fpol;

        /* ------------------------------------------- */
        /* CALCULA LOS MESES QUE FALTAN PARA DEPRECIAR */
        /* ------------------------------------------- */

        ANO_ADJ = extractyear(msgpoli30_fadj);
        MES_ADJ = extractmonth(msgpoli30_fadj);

        if (msgpoli33_importe is null) then
            begin
                ANO_ULT = ANO_ADJ;
                MES_ULT = MES_ADJ;
                importe_diferencia = msgpoli30_importe;
            end
        else
            begin
                ANO_ULT = extractyear(msgpoli33_fpol);
                MES_ULT = extractmonth(msgpoli33_fpol);
                importe_diferencia = msgpoli30_importe - msgpoli33_importe;
            end

        ANO_DIF = ANO_ULT - ANO_ADJ;
        MES_DIF = MES_ULT - MES_ADJ;

        if (ANO_DIF > 0) then MESES = ANO_DIF * 12;

        MESES = MESES + MES_DIF;
        MESES_X_DEPRECIAR = MESES_X_DEPRECIAR - MESES;

        if ((extractyear(current_date) - ANO_ULT) <> 0) then
            meses_alafecha = (extractyear(current_date) - ANO_ULT) * 12;
        
        meses_alafecha =  meses_alafecha + (extractmonth(current_date) - mes_ult);

        if (meses_alafecha > meses_x_depreciar) then
            meses_alafecha = meses_x_depreciar;
        
        /* ------------------------------------------- */
        /* FINALIZA CALCULA MESES DE DEPRECIACION      */
        /* ------------------------------------------- */

        if (importe_diferencia > 0 and meses_alafecha > 0) then
            suspend;
        else
            if (importe_diferencia <= 0) then
                begin
                    update MSGPOLI30_MOV_ACTIVOS set MSGPOLI30_MOV_ACTIVOS.msgpoli30_depreciado = 1
                    where MSGPOLI30_MOV_ACTIVOS.id_msgpoli30 = :id_msgpoli30
                    and MSGPOLI30_MOV_ACTIVOS.msgpoli30_depreciado = 0;
                end
    END
end
REP_SICEGRE01_CARTERA          

DECLARE VARIABLE IMPORTE_PARCIAL DOUBLE PRECISION;
DECLARE VARIABLE SQLUSER VARCHAR(2000);
BEGIN
  DELETE FROM ZTMPEGRE10_CHEQUES
  WHERE ZTMPEGRE10_CHEQUES.USUARIO = CURRENT_USER;

  IF (:PARAM_FLAG = 0) THEN
    INSERT INTO ZTMPEGRE10_CHEQUES
      SELECT
        CURRENT_USER,
        PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02,
        NULL,
        SUM(PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE)
      FROM PYMEGRE10_CAB_CHEQUES
      INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10)
      WHERE PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO IS NULL
        AND PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      GROUP BY PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02;
  ELSE
    INSERT INTO ZTMPEGRE10_CHEQUES
      SELECT
        CURRENT_USER,
        PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02,
        PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
        PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE
      FROM PYMEGRE10_CAB_CHEQUES
      INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10)
      WHERE PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO IS NULL
        AND PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA;

  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :ENTIDAD;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :SUCURSAL;

  SQLUSER = 'SELECT
                 PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_PROVEEDOR,
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
                 INVL(SICEGRE01_CAB_PROVEEDORES.SICEGRE01_DIAS_CREDITO, 0),
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC + INVL(SICEGRE01_CAB_PROVEEDORES.SICEGRE01_DIAS_CREDITO, 0),
                 PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL
             FROM PYMEGRE02_CAB_FACTURAS
             INNER JOIN SICEGRE01_CAB_PROVEEDORES ON (PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = SICEGRE01_CAB_PROVEEDORES.ID_SICEGRE01)
             WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             '  AND PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA;

  IF (:PARAM_ID != -1) THEN
    SQLUSER = SQLUSER || ' AND PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = ' || :PARAM_ID;

  FOR EXECUTE STATEMENT :SQLUSER
  INTO
       :ID_PYMEGRE02,
       :PROVEEDOR,
       :DOCNRO,
       :FECHA,
       :DIASCREDITO,
       :FECHAPAGO,
       :IMPORTE_REAL
  DO
  BEGIN
    FECHACHEQUE = NULL;
    IMPORTE_CHEQUE = 0;
    IMPORTE_PARCIAL = 0;
    ALCORRIENTE = 0;
    MENOS30 = 0;
    MENOS60 = 0;
    MENOS90 = 0;
    MAS90 = 0;

    IF (:PARAM_FLAG = 0) THEN
      BEGIN
        SELECT ZTMPEGRE10_CHEQUES.IMPORTE
        FROM ZTMPEGRE10_CHEQUES
        WHERE ZTMPEGRE10_CHEQUES.ID_PYMEGRE02 = :ID_PYMEGRE02
          AND ZTMPEGRE10_CHEQUES.USUARIO = CURRENT_USER
        INTO :IMPORTE_CHEQUE;

        IF (:IMPORTE_CHEQUE IS NULL) THEN
          IMPORTE_CHEQUE = 0;

        IF (:IMPORTE_REAL != IMPORTE_CHEQUE) THEN
          BEGIN
            DIAS = DAYSBETWEEN(:FECHA, 'NOW') - DIASCREDITO;

            IF (:DIAS < 0) THEN
              ALCORRIENTE = IMPORTE_REAL;
            ELSE
              IF (:DIAS < 30) THEN
                MENOS30 = IMPORTE_REAL;
              ELSE
                IF (:DIAS >= 30 AND :DIAS < 60) THEN
                  MENOS60 = IMPORTE_REAL;
                ELSE
                  IF (:DIAS >= 60 AND :DIAS < 90) THEN
                    MENOS90 = IMPORTE_REAL;
                  ELSE
                    MAS90 = IMPORTE_REAL;

            SUSPEND;
          END
      END
    ELSE
      BEGIN
        FOR
          SELECT
              ZTMPEGRE10_CHEQUES.FECHA,
              ZTMPEGRE10_CHEQUES.IMPORTE
          FROM ZTMPEGRE10_CHEQUES
          WHERE ZTMPEGRE10_CHEQUES.ID_PYMEGRE02 = :ID_PYMEGRE02
            AND ZTMPEGRE10_CHEQUES.USUARIO = CURRENT_USER
          INTO
              :FECHACHEQUE,
              :IMPORTE_PARCIAL
        DO
        BEGIN
          IMPORTE_CHEQUE = IMPORTE_CHEQUE + IMPORTE_PARCIAL;
          DIAS = DAYSBETWEEN(:FECHA,:FECHACHEQUE) - DIASCREDITO;

          IF (:DIAS < 0) THEN
            ALCORRIENTE = IMPORTE_PARCIAL;
          ELSE
            IF (:DIAS < 30) THEN
              MENOS30 = IMPORTE_PARCIAL;
            ELSE
              IF (:DIAS >= 30 AND :DIAS < 60) THEN
                MENOS60 = IMPORTE_PARCIAL;
              ELSE
                IF (:DIAS >= 60 AND :DIAS < 90) THEN
                  MENOS90 = IMPORTE_PARCIAL;
                ELSE
                  MAS90 = IMPORTE_PARCIAL;
        END

        IF (:IMPORTE_REAL != IMPORTE_CHEQUE) THEN
          SUSPEND;
      END
  END
END
REP_PYMINVE40_ALMACENES        

BEGIN
  FOR
    SELECT
        PYMINVE40_ARB_LOCACIONES.RELA_SOCSYST06,
        PYMINVE40_ARB_LOCACIONES.RELA_PYMINVE40,
        PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40,
        SOCSYST06_DET_ARBNIVELES.SOCSYST06_NIVEL,
        PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI
    FROM PYMINVE40_ARB_LOCACIONES
    INNER JOIN SOCSYST06_DET_ARBNIVELES ON (PYMINVE40_ARB_LOCACIONES.RELA_SOCSYST06 = SOCSYST06_DET_ARBNIVELES.ID_SOCSYST06)
    WHERE PYMINVE40_ARB_LOCACIONES.RELA_SOCSYST01 = :EMPRESA
      AND PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40 = :LOCACION
    INTO
        :RELA_SOCSYST06,
        :RELA_PYMINVE40,
        :ID_PYMINVE40,
        :SOCSYST06_NIVEL,
        :PYMINVE40_DESCRI
  DO
  BEGIN





    SUSPEND;
  END
END
REP_PYMVENT20_CONCEPTOS        

BEGIN
  SELECT
       PRD_PYMVENT20_PYMVENT01.PORCENTAJE
   FROM PRD_PYMVENT20_PYMVENT01(:EMPRESA,:PARAM_TICKET)
   INTO :PORCENTAJE;

  FOR
    SELECT
        PYMVENT21_DET_TICKETS.RELA_PYMVENT20,
        PYMVENT21_DET_TICKETS.ID_PYMVENT21,
        PYMVENT21_DET_TICKETS.RELA_PYMVENT21,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE,
        SUM(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD),
        PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
        PYMVENT21_DET_TICKETS.PYMVENT21_PORCENTAJE,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
    FROM PYMVENT21_DET_TICKETS
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_MEDIDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
    WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = :PARAM_TICKET
    GROUP BY
        PYMVENT21_DET_TICKETS.RELA_PYMVENT20,
        PYMVENT21_DET_TICKETS.ID_PYMVENT21,
        PYMVENT21_DET_TICKETS.RELA_PYMVENT21,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE,
        PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
        PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
        PYMVENT21_DET_TICKETS.PYMVENT21_PORCENTAJE,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
    INTO
        :RELA_PYMVENT20,
        :ID_PYMVENT21,
        :RELA_PYMVENT21,
        :RELA_PYMINVE10,
        :RELA_PYMINVE30_NOSERIE,
        :CANTIDAD,
        :IMPORTE_UNITARIO,
        :DESCUENTO,
        :DESCPORC,
        :CODIGO,
        :CONCEPTO,
        :MEDIDA
  DO
  BEGIN
    PYMINVE31_NROLOTE = '';

    IF (:RELA_PYMINVE30_NOSERIE IS NOT NULL) THEN
      SELECT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
      FROM PYMINVE31_DEP_PROVEEDORES
      WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :RELA_PYMINVE30_NOSERIE
      INTO :PYMINVE31_NROLOTE;

    IF (:IVA = 0) THEN
      BEGIN
        IMPORTE_UNITARIO = IMPORTE_UNITARIO / (1 + (PORCENTAJE / 100));
        IMPORTE = CANTIDAD * IMPORTE_UNITARIO;
        DESCUENTO = IMPORTE * (DESCPORC / 100);
      END
    ELSE
        IMPORTE = CANTIDAD * IMPORTE_UNITARIO;

    SUSPEND;
  END
END
CBO_TIPOFACTURASVENTAS         

DECLARE VARIABLE ID_SOCSYST10X BIGINT;
BEGIN
    SELECT CBO_TIPO_ASIENTOS.ID_SOCSYST10
    FROM CBO_TIPO_ASIENTOS
    WHERE CBO_TIPO_ASIENTOS.SOCSYST10_CODIGO = 'TRASLADA'
      AND CBO_TIPO_ASIENTOS.SOCSYST10_CODIGO_EXT1 = 'IMPUESTO'
    INTO :ID_SOCSYST10X;


    FOR
      SELECT
          CBO_TIPOFACTURAS.ID_SOCSYST10,
          CBO_TIPOFACTURAS.SOCSYST10_FILTRO_DES,
          CBO_TIPOFACTURAS.SOCSYST10_CODIGO
      FROM CBO_TIPOFACTURAS
      INTO :ID_SOCSYST10,
           :SOCSYST10_FILTRO_DES,
           :SOCSYST10_CODIGO
    DO
    BEGIN
        PORCENTAJE = NULL;

        SELECT FIRST 1 MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE
        FROM MSGPOLI09_CAB_IMPUESTOS
        INNER JOIN MSGPOLI12_MOV_FILTROIMPUESTOS ON (MSGPOLI09_CAB_IMPUESTOS.ID_MSGPOLI09 = MSGPOLI12_MOV_FILTROIMPUESTOS.RELA_MSGPOLI09)
        WHERE MSGPOLI12_MOV_FILTROIMPUESTOS.RELA_SOCSYST01 = :ID_SOCSYST01
        AND MSGPOLI12_MOV_FILTROIMPUESTOS.RELA_SOCSYST10_MODO = :ID_SOCSYST10X
        AND MSGPOLI12_MOV_FILTROIMPUESTOS.RELA_SOCSYST10 = :ID_SOCSYST10
        INTO :PORCENTAJE;

        IF (:PORCENTAJE IS NOT NULL) THEN
          SUSPEND;
    END
END
PRD_PYMVENT20_PYMVENT01        

BEGIN
  SELECT
      PYMVENT01_CAB_CAJAS.RELA_SOCSYST10_IMPUESTOS
  FROM PYMVENT20_CAB_TICKETS
  INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
  INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
  WHERE PYMVENT20_cAB_TICKETS.ID_PYMVENT20 = :ID_PYMVENT20
  INTO :RELA_IMPUESTOS;

  FOR
    SELECT
        CBO_TIPOFACTURASVENTAS.ID_SOCSYST10,
        CBO_TIPOFACTURASVENTAS.SOCSYST10_FILTRO_DES,
        CBO_TIPOFACTURASVENTAS.SOCSYST10_CODIGO,
        CBO_TIPOFACTURASVENTAS.PORCENTAJE
    FROM CBO_TIPOFACTURASVENTAS(:ID_EMPRESA)
    WHERE CBO_TIPOFACTURASVENTAS.ID_SOCSYST10 = :RELA_IMPUESTOS
    INTO
       :ID_SOCSYST10,
       :SOCSYST10_FILTRO_DES,
       :SOCSYST10_CODIGO,
       :PORCENTAJE
  DO
  BEGIN
    SUSPEND;
  END
END
REP_SICEGRE01_ALL              

BEGIN
   FOR
     SELECT
        SICEGRE01_CAB_PROVEEDORES.RELA_SOCSYST10,
        SICEGRE01_CAB_PROVEEDORES.ID_SICEGRE01,
        SICEGRE01_CAB_PROVEEDORES.SICEGRE01_NOMCOMERCIAL,
        SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
     FROM SICEGRE01_CAB_PROVEEDORES
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICEGRE01_CAB_PROVEEDORES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INTO
        :RELA_SOCSYST10,
        :ID_SICEGRE01,
        :NOMCOMERCIAL,
        :TIPO
   DO
   BEGIN
      SELECT
          PRD_SICEGRE01.SOCUSUA02_ENTIDAD,
          PRD_SICEGRE01.GIRO,
          PRD_SICEGRE01.SOCUSUA41_DOMICILIO || '  CP: ' || PRD_SICEGRE01.SOCUSUA41_CP,
          PRD_SICEGRE01.SOCUSUA41_TELEFONO,
          PRD_SICEGRE01.SOCUSUA41_CORREO,
          PRD_SICEGRE01.SOCUSUA50_CIUDAD,
          PRD_SICEGRE01.CURP,
          PRD_SICEGRE01.SOCUSUA20_SOCUSUA30_RFC
      FROM PRD_SICEGRE01(:ID_SICEGRE01)
      INTO :USUARIO,
           :GIRO,
           :DIRECCION,
           :TELEFONO,
           :CORREO,
           :CIUDAD,
           :CURP,
           :RFC;

      SUSPEND;
   END
END
REP_PYMEGRE10_CHEQUESALL       

DECLARE VARIABLE RELA_MSGPOLI01_SINCANCELAR BIGINT;
DECLARE VARIABLE RELA_MSGPOLI01_CANCELADO BIGINT;
DECLARE VARIABLE MODALIDAD INTEGER;
DECLARE VARIABLE CODIGO VARCHAR(50);
BEGIN
  SELECT CBO_CLIENTES_EMPRESAS_PYMES.SOCSYST01_DESCRI
  FROM CBO_CLIENTES_EMPRESAS_PYMES
  WHERE CBO_CLIENTES_EMPRESAS_PYMES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :CODIGO;

 IF (:PARAM_BANCO = -1) THEN
   FOR
     SELECT /* Devuelve todas las notas de gasto */
         PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
         PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
         PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO,
         PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
         PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
         SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
         SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
         GRID_SRHMAIN10.ENTIDAD,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
         PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
     FROM PYMEGRE10_CAB_CHEQUES
     INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
     INNER JOIN GRID_SRHMAIN10 ON (PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10 = GRID_SRHMAIN10.ID_SRHMAIN10)
     INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
     WHERE PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
       AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
       AND PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA

     UNION

     SELECT /* Devuelve todas las facturas */
         PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
         PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
         PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO,
         PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
         PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
         SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
         SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
         GRID_SICEGRE01.ENTIDAD,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
         PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
     FROM PYMEGRE10_CAB_CHEQUES
     INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
     INNER JOIN GRID_SICEGRE01 ON (PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01 = GRID_SICEGRE01.ID_SICEGRE01)
     INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
     WHERE PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
       AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
       AND PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA

     UNION

     SELECT /* Devuelve todas los saldos */
         PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
         PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
         PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO,
         PYMEGRE10_CAB_CHEQUES.RELA_SICINGR01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
         PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
         SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
         SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
         GRID_SICINGR01.ENTIDAD,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
         PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
     FROM PYMEGRE10_CAB_CHEQUES
     INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
     INNER JOIN GRID_SICINGR01 ON (PYMEGRE10_CAB_CHEQUES.RELA_SICINGR01 = GRID_SICINGR01.ID_SICINGR01)
     INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
     WHERE PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
       AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
       AND PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
     INTO
         :RELA_SOCSYST01,
         :RELA_SOCWFLO01,
         :RELA_SICCONT02_BANCO,
         :RELA_ENTIDAD,
         :RELA_MSGPOLI01_SINCANCELAR,
         :RELA_MSGPOLI01_CANCELADO,
         :ID_PYMEGRE10,
         :SUCURSAL,
         :BANCO,
         :PYMEGRE10_DOCNRO,
         :PYMEGRE10_TRANSFERENCIA,
         :PYMEGRE10_FCHE,
         :ENTIDAD,
         :PYMEGRE10_IMPORTE,
         :PYMEGRE10_IMPCANT,
         :MODALIDAD
   DO
     BEGIN
        ESTADO = '';

        IF (MODALIDAD = 1) THEN
          ORIGEN = 'Nro. Transferencia - ' || PYMEGRE10_TRANSFERENCIA;
        ELSE
          ORIGEN = 'Nro. Cheque - ' || PYMEGRE10_DOCNRO;

        IF (RELA_MSGPOLI01_CANCELADO IS NOT NULL) THEN
           ESTADO = 'Cancelado';
        ELSE
           IF (:PYMEGRE10_IMPCANT != 0) THEN
              ESTADO = 'Impreso';
           ELSE
              ESTADO = 'Vigente';

        FOR
          SELECT
              CAST(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO AS VARCHAR(50)),
              PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
              PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
          FROM PYMEGRE11_DET_FACTURASNOTAS
          INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10

          UNION

          SELECT
              CAST(PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_DOCNRO AS VARCHAR(50)),
              PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_FECHA,
              PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
          FROM PYMEGRE11_DET_FACTURASNOTAS
          INNER JOIN PYMEGRE06_CAB_NOTASGASTOS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE06 = PYMEGRE06_CAB_NOTASGASTOS.ID_PYMEGRE06)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10

          UNION

          SELECT
              MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
              MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
              PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
          FROM PYMEGRE11_DET_FACTURASNOTAS
          INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36)
          INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10
          INTO
              :DOCNRO,
              :FECHA_FACT,
              :IMPORTE
        DO
        BEGIN
          SUSPEND;
        END
     END
 ELSE
   FOR
     SELECT /* Devuelve todas las notas de gasto */
         PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
         PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
         PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO,
         PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
         PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
         SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
         SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
         GRID_SRHMAIN10.ENTIDAD,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
         PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
     FROM PYMEGRE10_CAB_CHEQUES
     INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
     INNER JOIN GRID_SRHMAIN10 ON (PYMEGRE10_CAB_CHEQUES.RELA_SRHMAIN10 = GRID_SRHMAIN10.ID_SRHMAIN10)
     INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
     WHERE PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
       AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
       AND PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = :PARAM_BANCO
       AND PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA

     UNION

     SELECT /* Devuelve todas las facturas */
         PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
         PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
         PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO,
         PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
         PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
         SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
         SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
         GRID_SICEGRE01.ENTIDAD,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
         PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
     FROM PYMEGRE10_CAB_CHEQUES
     INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
     INNER JOIN GRID_SICEGRE01 ON (PYMEGRE10_CAB_CHEQUES.RELA_SICEGRE01 = GRID_SICEGRE01.ID_SICEGRE01)
     INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
     WHERE PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
       AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
       AND PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = :PARAM_BANCO
       AND PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA

     UNION

     SELECT /* Devuelve todas los saldos */
         PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01,
         PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01,
         PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO,
         PYMEGRE10_CAB_CHEQUES.RELA_SICINGR01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01,
         PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO,
         PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10,
         SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
         SICCONT02_ARB_PLANCTA_EMP.SICCONT02_DESCRI,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_DOCNRO,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_TRANSFERENCIA,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
         GRID_SICINGR01.ENTIDAD,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPORTE,
         PYMEGRE10_CAB_CHEQUES.PYMEGRE10_IMPCANT,
         PYMEGRE10_cAB_CHEQUES.PYMEGRE10_MODALIDAD
     FROM PYMEGRE10_CAB_CHEQUES
     INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMEGRE10_CAB_CHEQUES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
     INNER JOIN GRID_SICINGR01 ON (PYMEGRE10_CAB_CHEQUES.RELA_SICINGR01 = GRID_SICINGR01.ID_SICINGR01)
     INNER JOIN SICCONT02_ARB_PLANCTA_EMP ON (PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = SICCONT02_ARB_PLANCTA_EMP.ID_SICCONT02)
     WHERE PYMEGRE10_CAB_CHEQUES.RELA_SOCSYST01 = :PARAM_EMPRESA
       AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
       AND PYMEGRE10_CAB_CHEQUES.RELA_SICCONT02_BANCO = :PARAM_BANCO
       AND PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
     INTO
         :RELA_SOCSYST01,
         :RELA_SOCWFLO01,
         :RELA_SICCONT02_BANCO,
         :RELA_ENTIDAD,
         :RELA_MSGPOLI01_SINCANCELAR,
         :RELA_MSGPOLI01_CANCELADO,
         :ID_PYMEGRE10,
         :SUCURSAL,
         :BANCO,
         :PYMEGRE10_DOCNRO,
         :PYMEGRE10_TRANSFERENCIA,
         :PYMEGRE10_FCHE,
         :ENTIDAD,
         :PYMEGRE10_IMPORTE,
         :PYMEGRE10_IMPCANT,
         :MODALIDAD
   DO
     BEGIN
        ESTADO = '';

        IF (MODALIDAD = 1) THEN
          ORIGEN = 'Nro. Transferencia - ' || PYMEGRE10_TRANSFERENCIA;
        ELSE
          ORIGEN = 'Nro. Cheque - ' || PYMEGRE10_DOCNRO;

        IF (RELA_MSGPOLI01_CANCELADO IS NOT NULL) THEN
           ESTADO = 'Cancelado';
        ELSE
           IF (:PYMEGRE10_IMPCANT != 0) THEN
              ESTADO = 'Impreso';
           ELSE
              ESTADO = 'Vigente';

        FOR
          SELECT
              CAST(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO AS VARCHAR(50)),
              PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
              PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
          FROM PYMEGRE11_DET_FACTURASNOTAS
          INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10

          UNION

          SELECT
              CAST(PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_DOCNRO AS VARCHAR(50)),
              PYMEGRE06_CAB_NOTASGASTOS.PYMEGRE06_FECHA,
              PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
          FROM PYMEGRE11_DET_FACTURASNOTAS
          INNER JOIN PYMEGRE06_CAB_NOTASGASTOS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE06 = PYMEGRE06_CAB_NOTASGASTOS.ID_PYMEGRE06)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10

          UNION

          SELECT
              MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
              MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
              PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL
          FROM PYMEGRE11_DET_FACTURASNOTAS
          INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMINGR36 = PYMINGR36_DET_FACTURAS.ID_PYMINGR36)
          INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = :ID_PYMEGRE10
          INTO
              :DOCNRO,
              :FECHA_FACT,
              :IMPORTE
        DO
        BEGIN
          SUSPEND;
        END
     END
END
REP_PYMVENT20_PYMVENT24        

BEGIN
   SELECT
       PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
       SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
       PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
       PYMVENT24_CAB_CLIENTES.RELA_SICINGR01,
       PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
       PYMVENT24_CAB_CLIENTES.RELA_SOCSYST10_SOCIEDAD,
       PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
       SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
       CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE),
       PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_DIRECCION || ' # ' || PYMVENT24_CAB_CLIENTES.PYMVENT24_NROEXT || ' ' || SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_NROINT,'') || ' ' || SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_PISO,'') || ' ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO_TIPO || ' ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_DIRECCION,
       SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_NROEXT,''),
       SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_NROINT,''),
       SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_PISO,''),
       PYMVENT24_CAB_CLIENTES.PYMVENT24_TELEFONOS,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_CODPOSTAL,
       SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO || ', ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA,
       SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO,
       SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_DOCUMENTOS,
       PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
       PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_DESCUENTO,
       DNVL((SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS)
             FROM PYMVENT21_DET_TICKETS
             WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20), PYMVENT20_CAB_TICKETS.PYMVENT20_DESCUENTOS),
       PYMVENT20_CAB_TICKETS.PYMVENT20_NOTAS,
       PYMVENT20_CAB_TICKETS.PYMVENT20_NOTAS_PRINTER,
       SNVL((SELECT FIRST 1 SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1
             FROM PYMVENT22_MOV_CAMBIOS
             INNER JOIN PYMVENT11_DET_RENDICIONES ON (PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11)
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
             WHERE PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20
               AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1 = 'CREDITO'), 'CONTADO'),
       SNVL((SELECT FIRST 1 PYMVENT22_MOV_CAMBIOS.PYMVENT22_NOTAS
             FROM PYMVENT22_MOV_CAMBIOS
             WHERE PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20), ''),
       PYMVENT24_CAB_CLIENTES.PYMVENT24_USUARIO
   FROM PYMVENT20_CAB_TICKETS
   INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
   INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
   INNER JOIN SOCUSUA42_TBL_CODPOSTALES ON (PYMVENT24_CAB_CLIENTES.RELA_SOCUSUA42 = SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42)
   WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :PARAM_TICKET
   INTO
       :RELA_SOCSYST01,
       :RELA_SOCUSUA02,
       :RELA_SOCWFLO01,
       :RELA_SICINGR01,
       :RELA_PYMVENT24,
       :RELA_SOCSYST10_SOC,
       :ID_PYMVENT20,
       :EMPRESA,
       :FECHA,
       :CLIENTE,
       :DIRECCION,
       :CALLE,
       :NROEXT,
       :NROINT,
       :PISO,
       :TELEFONO,
       :CODPOSTAL,
       :CIUDAD,
       :MUNICIPIO,
       :ESTADO,
       :RFC,
       :TICKET,
       :SUBTOTAL,
       :PYMVENT24_DESCUENTO,
       :DESCUENTOS,
       :NOTAS,
       :NOTAS_PRINTER,
       :CONDICION,
       :NROCTA,
       :USUARIO;

   IF (:RELA_SOCSYST10_SOC IS NOT NULL) THEN
     BEGIN
       SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
       FROM SOCSYST10_TBL_LISTAESTADOS
       WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = :RELA_SOCSYST10_SOC
       INTO :SOCIEDAD;

       CLIENTE = :CLIENTE || ' ' || :SOCIEDAD;
     END

   SELECT FIRST 1 SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
   FROM PYMVENT22_MOV_CAMBIOS
   INNER JOIN PYMVENT11_DET_RENDICIONES ON (PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11)
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
   WHERE PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20 = :ID_PYMVENT20
   INTO :TIPOPAGO;

   /* DATOS PRINCIPALES DE LA MATRIZ Y SUCURSAL */

   SELECT
       PRD_DATOS_ENTIDADES.CALLE,
       PRD_DATOS_ENTIDADES.NRO,
       PRD_DATOS_ENTIDADES.PISO,
       PRD_DATOS_ENTIDADES.NROINT,
       PRD_DATOS_ENTIDADES.CP,
       PRD_DATOS_ENTIDADES.TELEFONOS,
       PRD_DATOS_ENTIDADES.CELULAR,
       PRD_DATOS_ENTIDADES.FAX,
       PRD_DATOS_ENTIDADES.EMAIL,
       PRD_DATOS_ENTIDADES.LOCALIDAD,
       PRD_DATOS_ENTIDADES.ESTADO,
       PRD_DATOS_ENTIDADES.CIUDAD,
       PRD_DATOS_ENTIDADES.PAIS,
       PRD_DATOS_ENTIDADES.DIRECCION,
       PRD_DATOS_ENTIDADES.LUGAR
   FROM PRD_DATOS_ENTIDADES(:RELA_SOCUSUA02, -1)
   INTO
       :CALLE_MATRIZ,
       :NRO_MATRIZ,
       :PISO_MATRIZ,
       :NROINT_MATRIZ,
       :CP_MATRIZ,
       :TELEFONOS_MATRIZ,
       :CELULAR_MATRIZ,
       :FAX_MATRIZ,
       :EMAIL_MATRIZ,
       :LOCALIDAD_MATRIZ,
       :ESTADO_MATRIZ,
       :CIUDAD_MATRIZ,
       :PAIS_MATRIZ,
       :DIRECCION_MATRIZ,
       :LUGAR_MATRIZ;

   SELECT
       PRD_DATOS_ENTIDADES.CALLE,
       PRD_DATOS_ENTIDADES.NRO,
       PRD_DATOS_ENTIDADES.PISO,
       PRD_DATOS_ENTIDADES.NROINT,
       PRD_DATOS_ENTIDADES.CP,
       PRD_DATOS_ENTIDADES.TELEFONOS,
       PRD_DATOS_ENTIDADES.CELULAR,
       PRD_DATOS_ENTIDADES.FAX,
       PRD_DATOS_ENTIDADES.EMAIL,
       PRD_DATOS_ENTIDADES.LOCALIDAD,
       PRD_DATOS_ENTIDADES.ESTADO,
       PRD_DATOS_ENTIDADES.CIUDAD,
       PRD_DATOS_ENTIDADES.PAIS,
       PRD_DATOS_ENTIDADES.DIRECCION,
       PRD_DATOS_ENTIDADES.LUGAR
   FROM PRD_DATOS_ENTIDADES(:RELA_SOCUSUA02, :RELA_SOCWFLO01)
   INTO
       :CALLE_SUCURSAL,
       :NRO_SUCURSAL,
       :PISO_SUCURSAL,
       :NROINT_SUCURSAL,
       :CP_SUCURSAL,
       :TELEFONOS_SUCURSAL,
       :CELULAR_SUCURSAL,
       :FAX_SUCURSAL,
       :EMAIL_SUCURSAL,
       :LOCALIDAD_SUCURSAL,
       :ESTADO_SUCURSAL,
       :CIUDAD_SUCURSAL,
       :PAIS_SUCURSAL,
       :DIRECCION_SUCURSAL,
       :LUGAR_SUCURSAL;

   IF (:USUARIO IS NOT NULL) THEN
     BEGIN
       SELECT SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02
       FROM SOCUSUA02_MAE_USUARIOS
       WHERE SOCUSUA02_MAE_USUARIOS.SOCUSUA02_USUARIO = :USUARIO
       INTO :ID_SOCUSUA02_CLI;

       SELECT CBO_SICINGR01.ENTIDAD
       FROM CBO_SICINGR01
       WHERE CBO_SICINGR01.ID_SOCUSUA02 = :ID_SOCUSUA02_CLI
       INTO :CLIENTE;

       SELECT
           PRD_DATOS_ENTIDADES.RFC,
           PRD_DATOS_ENTIDADES.DIRECCION,
           PRD_DATOS_ENTIDADES.CALLE,
           PRD_DATOS_ENTIDADES.NRO,
           PRD_DATOS_ENTIDADES.PISO,
           PRD_DATOS_ENTIDADES.NROINT,
           PRD_DATOS_ENTIDADES.CP,
           PRD_DATOS_ENTIDADES.TELEFONOS,
           PRD_DATOS_ENTIDADES.ESTADO,
           PRD_DATOS_ENTIDADES.CIUDAD || ', ' || PRD_DATOS_ENTIDADES.ESTADO || ', ' || PRD_DATOS_ENTIDADES.PAIS
       FROM PRD_DATOS_ENTIDADES(:ID_SOCUSUA02_CLI, -1)
       INTO
           :RFC,
           :DIRECCION,
           :CALLE,
           :NROEXT,
           :PISO,
           :NROINT,
           :CODPOSTAL,
           :TELEFONO,
           :ESTADO,
           :CIUDAD;
     END

   SELECT
       SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
       STRREPEAT('0', 8 - STRLEN(INTTOSTR(:RELA_SOCSYST01,:RELA_SOCSYST01))),
       STRREPEAT('$', 12 - (SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD + STRLEN(SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'')))),
       SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO,''),
       SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_FONDO,''),
       SNVL((SELECT SOCSYST08_DET_REGFISCALES.SOCSYST08_REGFISCAL
             FROM SOCSYST08_DET_REGFISCALES
             WHERE SOCSYST08_DET_REGFISCALES.RELA_SOCSYST01 = :RELA_SOCSYST01), ''),
       EXTRACTDAY(SOCSYST20_DET_FACTELECT.SOCSYST20_FECHA_APROBA) || '/' || EXTRACTMONTH(SOCSYST20_DET_FACTELECT.SOCSYST20_FECHA_APROBA) || '/' || EXTRACTYEAR(SOCSYST20_DET_FACTELECT.SOCSYST20_FECHA_APROBA)
   FROM SOCSYST21_MOV_CONTADORES_EMP
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
   INNER JOIN SOCSYST20_DET_FACTELECT ON (SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21 = SOCSYST20_DET_FACTELECT.RELA_SOCSYST21)
   INNER JOIN SOCSYST01_CAB_CLIENTES ON (SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = SOCSYST21_MOV_CONTADORES_EMP.rela_socsyst01)
   WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :RELA_SOCSYST01
     AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :RELA_SOCWFLO01
     AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'CFD'
   INTO :ID_SOCSYST21,
        :FORMATO_EMPRESA,
        :FORMATO,
        :LOGO,
        :FONDO,
        :REGFISCAL,
        :FECHA_APROBA;

   IF (:ID_SOCSYST21 IS NOT NULL) THEN
     BEGIN
       SELECT
           PRD_CFD.ULTID_FOLIO,
           INTTOSTR(PRD_CFD.SOCSYST20_ANO_APROBA,PRD_CFD.SOCSYST20_ANO_APROBA) || INTTOSTR(PRD_CFD.SOCSYST20_NRO_APROBA,PRD_CFD.SOCSYST20_NRO_APROBA),
           PRD_CFD.SOCSYST01_NROCERTIFICADO,
           PRD_CFD.SOCSYST20_FOLIO_SERIE,
           PRD_CFD.SOCSYST20_FOLIO_DESDE,
           PRD_CFD.SOCSYST20_FOLIO_HASTA,
           PRD_CFD.FOLIO_FECHA,
           PRD_CFD.EMISOR_RFC,
           PRD_CFD.EMISOR_CURP,
           PRD_CFD.EMISOR_TIPO,
           PRD_CFD.EMISOR_CALLE || ' # ' || SNVL(PRD_CFD.EMISOR_NRO_EXTERIOR,'') || ' ' || SNVL(PRD_CFD.EMISOR_NRO_INTERIOR,'') || ' C.P. ' || PRD_CFD.EMISOR_CP,
           PRD_CFD.EMISOR_LOCALIDAD,
           PRD_CFD.EMISOR_MUNICIPIO || ', ' || PRD_CFD.EMISOR_ESTADO || ', ' || PRD_CFD.EMISOR_PAIS,
           PRD_CFD.EMISOR_TELEFONOS
       FROM PRD_CFD(1,:ID_PYMVENT20, -1)
       INTO
           :ULTID_FOLIO,
           :ANOYNUMERO,
           :NROCERTIFICADO,
           :FOLIO_SERIE,
           :FOLIO_DESDE,
           :FOLIO_HASTA,
           :FOLIO_FECHA,
           :EMISOR_RFC,
           :EMISOR_CURP,
           :EMISOR_TIPO,
           :EMISOR_DIRECCION,
           :EMISOR_COLONIA,
           :EMISOR_CIUDAD,
           :EMISOR_TELEFONOS;

       EXECUTE PROCEDURE API_FECHA_CADENA :FOLIO_FECHA, 1 RETURNING_VALUES FOLIO_FECHA_CADENA;

       SELECT
           PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_CADENAORIGINAL,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_SELLO,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID_CANCELA,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID_FECHA,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_UUID_VER,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_SELLOSAT,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_NOCERTSAT
       FROM PYMVENT28_DEP_FACTELECT
       WHERE PYMVENT28_DEP_FACTELECT.ID_PYMVENT28 = :ULTID_FOLIO
       INTO
          :DOCNRO,
          :CADENA,
          :SELLO,
          :UUID,
          :UUID_CANCELA,
          :UUID_FECHA,
          :UUID_VER,
          :SELLOSAT,
          :NOCERTSAT;
     END

   SELECT DNVL(PRD_PYMVENT20_PYMVENT01.PORCENTAJE,0)
   FROM PRD_PYMVENT20_PYMVENT01(:RELA_SOCSYST01,:ID_PYMVENT20)
   INTO :PORCENTAJE;

   IF (PARAM_IVA = 0) THEN
     BEGIN
        SUBTOTAL = SUBTOTAL / (1 + (PORCENTAJE / 100));

        IF (DESCUENTOS != 0) THEN
            DESCUENTOS = DESCUENTOS / (1 + (PORCENTAJE / 100));

        IF (DESCUENTOS != 0 AND PYMVENT24_DESCUENTO != 0) THEN
            DESCUENTOS = SUBTOTAL * (PYMVENT24_DESCUENTO / 100);

        IMPUESTOS = ((SUBTOTAL - DESCUENTOS) * PORCENTAJE) / 100;
        TOTAL = (SUBTOTAL - DESCUENTOS) + IMPUESTOS;
     END
   ELSE
     BEGIN
        IMPUESTOS = ((SUBTOTAL - DESCUENTOS) * PORCENTAJE) / 100;
        TOTAL = (SUBTOTAL - DESCUENTOS) + IMPUESTOS;
     END

   SELECT API_NUM_MEXICO.CNUMERO
   FROM API_NUM_MEXICO(:TOTAL,'MXN')
   INTO :TOTAL_LETRA;

   SUSPEND;
END
REP_PYMINGR01_TICKETS          

DECLARE VARIABLE CODIGO VARCHAR(50);
BEGIN
  SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
  FROM CBO_CLIENTES_EMPRESAS_ALL
  WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :CODIGO;

  IF (:PARAM_CLIENTE != -1) THEN
    FOR
      SELECT
          CBO_TIPOFACTURAS.SOCSYST10_FILTRO_DES,
          PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
          PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
          PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
          PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
          PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO,
          PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          CBO_SICINGR01.ENTIDAD,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
          (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
          FROM PYMINGR18_DEP_FACTELECT
          WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
          PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC
        FROM PYMINGR01_CAB_FACTURAS
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
        INNER JOIN CBO_TIPOFACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = CBO_TIPOFACTURAS.ID_SOCSYST10)
        WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
          AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
          AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
            :TIPO_FACTURA,
            :RELA_SOCSYST01,
            :RELA_SOCWFLO01,
            :RELA_SICINGR01,                                                                                    
            :RELA_MSGPOLI01,
            :RELA_MSGPOLI01_CANCELADO,
            :ID_PYMINGR01,
            :SUCURSAL,
            :CLIENTE,
            :DOCNRO,
            :FOLIO_ELECT,
            :TOTAL,
            :FECHA
    DO
    BEGIN
       FOR
         SELECT DISTINCT
             PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
             PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
             PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL,
             PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL
         FROM PYMINGR06_DET_ITEMS
         INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINGR06_DET_ITEMS.RELA_PYMVENT21 = PYMVENT21_DET_TICKETS.ID_PYMVENT21)
         INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
         WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :ID_PYMINGR01
         INTO
             :ID_PYMVENT20,
             :NUM_TICKET,
             :TOTAL_TICKET,
             :FECHA_TICKET
       DO
       BEGIN
         SUSPEND;
       END
    END
  ELSE
    FOR
      SELECT
          CBO_TIPOFACTURAS.SOCSYST10_FILTRO_DES,
          PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
          PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
          PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
          PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
          PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO,
          PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          CBO_SICINGR01.ENTIDAD,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
          (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
           FROM PYMINGR18_DEP_FACTELECT
           WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
          PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
          PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC
      FROM PYMINGR01_CAB_FACTURAS
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
      INNER JOIN CBO_TIPOFACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = CBO_TIPOFACTURAS.ID_SOCSYST10)
      WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
        AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
      INTO
          :TIPO_FACTURA,
          :RELA_SOCSYST01,
          :RELA_SOCWFLO01,
          :RELA_SICINGR01,
          :RELA_MSGPOLI01,
          :RELA_MSGPOLI01_CANCELADO,
          :ID_PYMINGR01,
          :SUCURSAL,
          :CLIENTE,
          :DOCNRO,
          :FOLIO_ELECT,
          :TOTAL,
          :FECHA

    DO
    BEGIN
       FOR
         SELECT DISTINCT
             PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
             PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
             PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL,
             PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL
         FROM PYMINGR06_DET_ITEMS
         INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINGR06_DET_ITEMS.RELA_PYMVENT21 = PYMVENT21_DET_TICKETS.ID_PYMVENT21)
         INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
         WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :ID_PYMINGR01
         INTO
             :ID_PYMVENT20,
             :NUM_TICKET,
             :TOTAL_TICKET,
             :FECHA_TICKET
      DO
      BEGIN
        SUSPEND;
      END
    END
END
GRID_PYMINVE10_PYMINVE301_PROVE

DECLARE VARIABLE COSTO_PROVEEDOR DOUBLE PRECISION;
begin
    for SELECT 0,
    T00.RELA_SOCSYST01,
    CAT.SOCSYST10_FILTRO_DES,
    FAM.SOCSYST10_FILTRO_DES,
    T00.PYMINVE10_CODIGO,
    T00.PYMINVE10_DESCRIPCION,
    T00.pyminve10_maxdesc,
    T00.ID_PYMINVE10,
    T00.PYMINVE10_PCOSTO,
    T00.PYMINVE10_UTILIDAD,
    CAT.SOCSYST10_FILTRO_DES ||
    FAM.SOCSYST10_FILTRO_DES ||
    T00.PYMINVE10_CODIGO ||
    T00.PYMINVE10_DESCRIPCION,
    dnvl(STK.pyminve30_cantidad,0),
    T00.pyminve10_mtc,
    T00.pyminve10_utilidad_x_empq,
    T00.pyminve10_lotesize,
    T00.pyminve10_modeloregalo

    FROM PYMINVE10_CAB_PRODUCTOS T00
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS CAT ON (T00.RELA_SOCSYST10 = CAT.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAM ON (T00.RELA_SOCSYST10_FAMILIA = FAM.ID_SOCSYST10)
    INNER JOIN VW_PYMINVE30_STOCK_ALL STK ON (T00.id_pyminve10 = STK.rela_pyminve10)
    where PYMINVE10_CAB_PRODUCTOS.rela_socsyst01 = :RELA_SOCSYST01x
/*      AND PYMINVE10_CAB_PRODUCTOS.PYMINVE10_NOACTIVO = 0    */

    UNION ALL

    SELECT 0,
    T00.RELA_SOCSYST01,
    CAT.SOCSYST10_FILTRO_DES,
    FAM.SOCSYST10_FILTRO_DES,
    T00.PYMINVE10_CODIGO,
    T00.PYMINVE10_DESCRIPCION,
    T00.pyminve10_maxdesc,
    T00.ID_PYMINVE10,
    T00.PYMINVE10_PCOSTO,
    T00.PYMINVE10_UTILIDAD,
    CAT.SOCSYST10_FILTRO_DES ||
    FAM.SOCSYST10_FILTRO_DES ||
    T00.PYMINVE10_CODIGO ||
    T00.PYMINVE10_DESCRIPCION,
    CAST(0 AS DOUBLE PRECISION),
    T00.pyminve10_mtc,
    T00.pyminve10_utilidad_x_empq,
    T00.pyminve10_lotesize,
    T00.pyminve10_modeloregalo

    FROM PYMINVE10_CAB_PRODUCTOS T00
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS CAT ON (T00.RELA_SOCSYST10 = CAT.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAM ON (T00.RELA_SOCSYST10_FAMILIA = FAM.ID_SOCSYST10)
    WHERE not EXISTS (SELECT FIRST 1 pyminve30_mov_stock.id_pyminve30
                      FROM pyminve30_mov_stock
                      WHERE pyminve30_mov_stock.rela_pyminve10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      AND PYMINVE10_CAB_PRODUCTOS.rela_socsyst01 = :RELA_SOCSYST01x
/*      AND PYMINVE10_CAB_PRODUCTOS.PYMINVE10_NOACTIVO = 0              */

    INTO :MARCA,
         :RELA_SOCSYST01,
         :CATEGORIA,
         :FAMILIA,
         :PYMINVE10_CODIGO,
         :PYMINVE10_DESCRIPCION,
         :PYMINVE10_MAXDESC,
         :ID_PYMINVE10,
         :PYMINVE10_PCOSTO,
         :PYMINVE10_UTILIDAD,
         :BUSQUEDA,
         :STOCK,
         :MTC,
         :pyminve10_utilidad_x_empq,
         :pyminve10_lotesize,
         :pyminve10_modeloregalo
    DO
    BEGIN
        select first 1 PYMINVE20_MOV_UPLOADS.id_pyminve20
        from PYMINVE20_MOV_UPLOADS
        where PYMINVE20_MOV_UPLOADS.rela_pyminve10 = :ID_PYMINVE10
        into :CONIMAGENES;

        if (CONIMAGENES is null) then
            CONIMAGENES = 0;

        SELECT FIRST 1 PYMINVE15_DET_PRECIOS.ID_PYMINVE15
        FROM PYMINVE15_DET_PRECIOS
        WHERE PYMINVE15_DET_PRECIOS.RELA_PYMINVE10 = :ID_PYMINVE10
        INTO :CONPRECIOS;

        IF (:CONPRECIOS IS NULL) THEN
            CONPRECIOS = 0;

        costo_proveedor = null;
        select PYMINVE12_DET_PROVEEDORES.pyminve12_importe
        from PYMINVE12_DET_PROVEEDORES
        where PYMINVE12_DET_PROVEEDORES.rela_pyminve10 = :ID_PYMINVE10
        and PYMINVE12_DET_PROVEEDORES.rela_sicegre01 = :RELA_SICEGRE01X
        into :costo_proveedor;

        if (costo_proveedor is not null) then
            PYMINVE10_PCOSTO = costo_proveedor;

        PYMINVE10_PVENTA = PYMINVE10_PCOSTO + ((PYMINVE10_PCOSTO * PYMINVE10_UTILIDAD) / 100);
        
        if (pyminve10_utilidad_x_empq = 1) then
            PYMINVE10_PVENTA = PYMINVE10_PVENTA * pyminve10_lotesize;

        suspend;
    END
end
ARB_PYMVENT21_VENTAS           

DECLARE VARIABLE ID_PADRE_1 BIGINT;
DECLARE VARIABLE ID_PADRE_2 BIGINT;
begin
    ID_HIJO = 0;
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    if (PARAM = 0) then
    BEGIN
        for select
        SOCWFLO01_ARB_ORGANIGRAMA.id_socwflo01,
        SOCWFLO01_ARB_ORGANIGRAMA.socwflo01_descri,
        sum(PYMVENT21_DET_TICKETS.pymvent21_total),
        max(Cast(PYMVENT21_DET_TICKETS.pymvent21_fapl as date)),
        sum(PYMVENT21_DET_TICKETS.pymvent21_cantidad)
        FROM PYMINVE10_CAB_PRODUCTOS
        INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMVENT21_DET_TICKETS.RELA_PYMINVE10)
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        where PYMINVE10_CAB_PRODUCTOS.rela_socsyst10 = :categoria
        AND SOCWFLO01_ARB_ORGANIGRAMA.rela_socsyst01 = :rela_socsyst01
        AND CAST(PYMVENT21_DET_TICKETS.pymvent21_fapl AS DATE) between :FDESDE and :FHASTA
        group by
        SOCWFLO01_ARB_ORGANIGRAMA.id_socwflo01,
        SOCWFLO01_ARB_ORGANIGRAMA.socwflo01_descri
        into :RELA_SOCWFLO01,
             :hijo_descripcion,
             :hijo_importe,
             :hijo_ultfecha,
             :hijo_canti
        DO
        BEGIN
            RELA_PADRE = NULL;
            rela_pyminve10 = NULL;
            hijo_codprod = NULL;
            HIJO_STOCK = NULL;
            RELA_PYMINVE40 = NULL;
            ID_HIJO = ID_HIJO + 1;
            suspend;
        
            ID_PADRE_1 = ID_HIJO;
            for select
            PYMVENT21_DET_TICKETS.rela_pyminve10,
            PYMVENT21_DET_TICKETS.pymvent21_codigo,
            PYMVENT21_DET_TICKETS.pymvent21_descripcion,
            sum(PYMVENT21_DET_TICKETS.pymvent21_total),
            max(Cast(PYMVENT21_DET_TICKETS.pymvent21_fapl as date)),
            sum(PYMVENT21_DET_TICKETS.pymvent21_cantidad)
            FROM PYMINVE10_CAB_PRODUCTOS
            INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMVENT21_DET_TICKETS.RELA_PYMINVE10)
            INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
            where PYMINVE10_CAB_PRODUCTOS.rela_socsyst10 = :categoria
            AND SOCWFLO01_ARB_ORGANIGRAMA.rela_socsyst01 = :rela_socsyst01
            and SOCWFLO01_ARB_ORGANIGRAMA.id_socwflo01 = :RELA_SOCWFLO01
            AND CAST(PYMVENT21_DET_TICKETS.pymvent21_fapl AS DATE) between :FDESDE and :FHASTA
            group by
            PYMVENT21_DET_TICKETS.rela_pyminve10,
            PYMVENT21_DET_TICKETS.pymvent21_codigo,
            PYMVENT21_DET_TICKETS.pymvent21_descripcion
            INTO :rela_pyminve10,
                 :hijo_codprod,
                 :hijo_descripcion,
                 :hijo_importe,
                 :hijo_ultfecha,
                 :hijo_canti
            do
            begin
                RELA_PADRE = ID_PADRE_1;
                ID_HIJO = ID_HIJO + 1;
                HIJO_STOCK = 0;
                suspend;
            
                ID_PADRE_2 = ID_HIJO;
                FOR SELECT
                PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE40,
                PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
                PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD,
                cast(PYMINVE36_MOV_CANTIDADES.pyminve36_fapl as date)
                FROM PYMINVE40_ARB_LOCACIONES
                INNER JOIN PYMINVE36_MOV_CANTIDADES ON (PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40 = PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE40)
                INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE36_MOV_CANTIDADES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
                WHERE SOCWFLO01_ARB_ORGANIGRAMA.rela_socsyst01 = :rela_socsyst01
                and PYMINVE40_ARB_LOCACIONES.rela_socsyst01 = :rela_socsyst01
                and PYMINVE36_MOV_CANTIDADES.rela_pyminve10 = :rela_pyminve10
                AND PYMINVE36_MOV_CANTIDADES.rela_socwflo01 = :rela_socwflo01
                INTO :RELA_PYMINVE40,
                     :HIJO_DESCRIPCION,
                     :hijo_stock,
                     :hijo_ultfecha
                DO
                BEGIN
                    RELA_PADRE = ID_PADRE_2;
                    ID_HIJO = ID_HIJO + 1;                
                    suspend;
                END
            end
        END
    END
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    ELSE if (PARAM = -1) then
    BEGIN
      FOR
        SELECT
            PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            SUM(PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL),
            MAX(CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE)),
            SUM(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD)
        FROM PYMVENT21_DET_TICKETS
        INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :RELA_SOCSYST01
          AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :CATEGORIA
          AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :FDESDE AND :FHASTA
        GROUP BY
            PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
        INTO
            :RELA_SOCWFLO01,
            :HIJO_DESCRIPCION,
            :HIJO_IMPORTE,
            :HIJO_ULTFECHA,
            :HIJO_CANTI
      DO
      BEGIN
        ID_HIJO = ID_HIJO + 1;

        SELECT SUM(PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD)
        FROM PYMINVE36_MOV_CANTIDADES
        INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
        WHERE PYMINVE36_MOV_CANTIDADES.RELA_SOCWFLO01 = :RELA_SOCWFLO01
          AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :RELA_SOCSYST01
          AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :CATEGORIA
        INTO :HIJO_STOCK;

        SUSPEND;
      END
    END
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    ELSE if (PARAM = -2) then
    begin
        for SELECT
        PYMVENT21_DET_TICKETS.rela_socwflo01,
        SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
        SUM( PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL ),
        sum(PYMVENT21_DET_TICKETS.pymvent21_cantidad),
        cast( max( PYMVENT21_DET_TICKETS.pymvent21_fapl ) as date)
        FROM PYMVENT21_DET_TICKETS
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        WHERE PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = :rela_pyminve10x
        AND CAST(PYMVENT21_DET_TICKETS.pymvent21_fapl AS DATE) between :FDESDE and :FHASTA
        GROUP BY
        PYMVENT21_DET_TICKETS.rela_socwflo01,
        SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
        into:rela_socwflo01,
             :HIJO_DESCRIPCION,
             :HIJO_IMPORTE,
             :hijo_canti,
             :hijo_ultfecha
        do
        begin
            ID_HIJO = ID_HIJO + 1;
            rela_pyminve10 = rela_pyminve10x;

            SELECT
            sum(PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD)
            FROM PYMINVE40_ARB_LOCACIONES
            INNER JOIN PYMINVE36_MOV_CANTIDADES ON (PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40 = PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE40)
            INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE36_MOV_CANTIDADES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
            WHERE SOCWFLO01_ARB_ORGANIGRAMA.rela_socsyst01 = :rela_socsyst01
            and PYMINVE40_ARB_LOCACIONES.rela_socsyst01 = :rela_socsyst01
            and PYMINVE36_MOV_CANTIDADES.rela_pyminve10 = :rela_pyminve10x
            AND PYMINVE36_MOV_CANTIDADES.rela_socwflo01 = :rela_socwflo01
            INTO :hijo_stock;
            suspend;
        end
    end
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    /* ------------------------------------------------------------------------------------------------------------------------------------ */
    ELSE if (PARAM > 0) then
    BEGIN
        DELETE FROM ZTMPYMVENT21_PRODUCTOS
        WHERE ZTMPYMVENT21_PRODUCTOS.USUARIO = CURRENT_USER;

        INSERT INTO ZTMPYMVENT21_PRODUCTOS
        select
        cast(current_user as varchar(100)),
        PYMVENT21_DET_TICKETS.rela_pyminve10,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        sum(PYMVENT21_DET_TICKETS.pymvent21_total),
        max(Cast(PYMVENT21_DET_TICKETS.pymvent21_fapl as date)),
        sum(PYMVENT21_DET_TICKETS.pymvent21_cantidad)
        FROM PYMINVE10_CAB_PRODUCTOS
        INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMVENT21_DET_TICKETS.RELA_PYMINVE10)
        INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
        where PYMINVE10_CAB_PRODUCTOS.rela_socsyst10 = :categoria
        AND PYMVENT20_CAB_TICKETS.rela_socsyst01 = :rela_socsyst01
        AND PYMVENT21_DET_TICKETS.rela_socwflo01 = :param
        AND CAST(PYMVENT21_DET_TICKETS.pymvent21_fapl AS DATE) between :FDESDE and :FHASTA
        group by
        PYMVENT21_DET_TICKETS.rela_pyminve10,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION;

        for select
        ZTMPYMVENT21_PRODUCTOS.rela_pyminve10,
        cast(ZTMPYMVENT21_PRODUCTOS.hijo_codprod as varchar(50)),
        ZTMPYMVENT21_PRODUCTOS.hijo_descripcion,
        ZTMPYMVENT21_PRODUCTOS.hijo_importe,
        ZTMPYMVENT21_PRODUCTOS.hijo_ultfecha,
        ZTMPYMVENT21_PRODUCTOS.hijo_canti
        FROM ZTMPYMVENT21_PRODUCTOS
        where ZTMPYMVENT21_PRODUCTOS.usuario =  current_user

        UNION ALL

        select
        PYMVENT21_DET_TICKETS.rela_pyminve10,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        cast(0 as double precision),
        max(Cast(PYMVENT21_DET_TICKETS.pymvent21_fapl as date)),
        cast(0 as double precision)
        FROM PYMINVE10_CAB_PRODUCTOS
        INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMVENT21_DET_TICKETS.RELA_PYMINVE10)
        INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
        where PYMINVE10_CAB_PRODUCTOS.rela_socsyst10 = :categoria
        AND PYMVENT20_CAB_TICKETS.rela_socsyst01 = :rela_socsyst01
        AND PYMVENT21_DET_TICKETS.rela_socwflo01 <> :param
        AND CAST(PYMVENT21_DET_TICKETS.pymvent21_fapl AS DATE) between :FDESDE and :FHASTA
        AND not exists (SELECT ZTMPYMVENT21_PRODUCTOS.rela_pyminve10
                        FROM ZTMPYMVENT21_PRODUCTOS
                        WHERE ZTMPYMVENT21_PRODUCTOS.usuario = current_user
                        AND ZTMPYMVENT21_PRODUCTOS.rela_pyminve10 = PYMVENT21_DET_TICKETS.rela_pyminve10)
        group by
        PYMVENT21_DET_TICKETS.rela_pyminve10,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION

        INTO :rela_pyminve10,
             :hijo_codprod,
             :hijo_descripcion,
             :hijo_importe,
             :hijo_ultfecha,
             :hijo_canti
        do
        begin
            RELA_SOCWFLO01 = :param;
            ID_HIJO = ID_HIJO + 1;

            SELECT
            sum(PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD)
            FROM PYMINVE40_ARB_LOCACIONES
            INNER JOIN PYMINVE36_MOV_CANTIDADES ON (PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40 = PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE40)
            INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE36_MOV_CANTIDADES.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
            WHERE SOCWFLO01_ARB_ORGANIGRAMA.rela_socsyst01 = :rela_socsyst01
            and PYMINVE40_ARB_LOCACIONES.rela_socsyst01 = :rela_socsyst01
            and PYMINVE36_MOV_CANTIDADES.rela_pyminve10 = :rela_pyminve10
            AND PYMINVE36_MOV_CANTIDADES.rela_socwflo01 = :rela_socwflo01
            INTO :hijo_stock;

            if (hijo_stock is null) then
                hijo_stock = 0;
            suspend;
        end
    end
end
REP_PYMVENT21_CONSOLIDADO      

BEGIN
  IF (:PARAM_TIPO IS NOT NULL) THEN
    FOR
      SELECT 
          ZTMPYMVENT21_RESURTIDO.RELA_PYMINVE10,
          ZTMPYMVENT21_RESURTIDO.CODIGO,
          ZTMPYMVENT21_RESURTIDO.PRODUCTO,
          ZTMPYMVENT21_RESURTIDO.STOCK_BODEGA,
          ZTMPYMVENT21_RESURTIDO.STOCK,
          ZTMPYMVENT21_RESURTIDO.RESURTIDO
      FROM ZTMPYMVENT21_RESURTIDO
      WHERE ZTMPYMVENT21_RESURTIDO.USUARIO = CURRENT_USER
        AND ZTMPYMVENT21_RESURTIDO.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND ZTMPYMVENT21_RESURTIDO.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      INTO
          :RELA_PYMINVE10,
          :CODIGO,
          :PRODUCTO,
          :STOCK_BODEGA,
          :STOCK,
          :RESURTIDO
    DO
    BEGIN
      SUSPEND;
    END
  ELSE
    FOR
      SELECT 
          ZTMPYMVENT21_RESURTIDO.RELA_PYMINVE10,
          ZTMPYMVENT21_RESURTIDO.CODIGO,
          ZTMPYMVENT21_RESURTIDO.PRODUCTO,
          ZTMPYMVENT21_RESURTIDO.STOCK_BODEGA,
          SUM(ZTMPYMVENT21_RESURTIDO.STOCK),
          SUM(ZTMPYMVENT21_RESURTIDO.RESURTIDO)
      FROM ZTMPYMVENT21_RESURTIDO
      WHERE ZTMPYMVENT21_RESURTIDO.USUARIO = CURRENT_USER
        AND ZTMPYMVENT21_RESURTIDO.RELA_SOCSYST01 = :PARAM_EMPRESA
      GROUP BY
          ZTMPYMVENT21_RESURTIDO.RELA_PYMINVE10,
          ZTMPYMVENT21_RESURTIDO.CODIGO,
          ZTMPYMVENT21_RESURTIDO.PRODUCTO,
          ZTMPYMVENT21_RESURTIDO.STOCK_BODEGA
      INTO
          :RELA_PYMINVE10,
          :CODIGO,
          :PRODUCTO,
          :STOCK_BODEGA,
          :STOCK,
          :RESURTIDO
    DO
    BEGIN
      SUSPEND;
    END
END
PRD_MEDDOCT01_ALL              

BEGIN
    FOR
      SELECT
          SICCONT75_MOV_SICEGRE01.RELA_SOCSYST01,
          GRID_MEDDOCT01.RELA_SOCUSUA02,
          GRID_MEDDOCT01.ID_SICEGRE01,
          CAST('Capturado' AS VARCHAR(12)),
          GRID_MEDDOCT01.SICEGRE01_CODIGO,
          GRID_MEDDOCT01.ENTIDAD,
          GRID_MEDDOCT01.SOCSYST10_FILTRO_DES,
          RUPPER(GRID_MEDDOCT01.SICEGRE01_CODIGO) || ' ' || RUPPER(GRID_MEDDOCT01.ENTIDAD) || ' ' || RUPPER(CAST('Capturado' AS VARCHAR(12)))
      FROM SICCONT75_MOV_SICEGRE01
      INNER JOIN GRID_MEDDOCT01 ON (SICCONT75_MOV_SICEGRE01.RELA_SICEGRE01 = GRID_MEDDOCT01.ID_SICEGRE01)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT75_MOV_SICEGRE01.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
        AND SICCONT75_MOV_SICEGRE01.RELA_SOCSYST01 = :PARAM_SOCSYST01

      UNION

      SELECT
          CAST(NULL AS BIGINT),
          GRID_MEDDOCT01.RELA_SOCUSUA02,
          GRID_MEDDOCT01.ID_SICEGRE01,
          CAST('Sin Capturar' AS VARCHAR(12)),
          GRID_MEDDOCT01.SICEGRE01_CODIGO,
          GRID_MEDDOCT01.ENTIDAD,
          GRID_MEDDOCT01.SOCSYST10_FILTRO_DES,
          RUPPER(GRID_MEDDOCT01.SICEGRE01_CODIGO) || ' ' || RUPPER(GRID_MEDDOCT01.ENTIDAD) || ' ' || RUPPER(CAST('Sin Capturar' AS VARCHAR(12)))
      FROM GRID_MEDDOCT01
      WHERE GRID_MEDDOCT01.ID_SICEGRE01 NOT IN (SELECT SICCONT75_MOV_SICEGRE01.RELA_SICEGRE01
                                                FROM SICCONT75_MOV_SICEGRE01
                                                INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT75_MOV_SICEGRE01.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                                                WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
                                                  AND SICCONT75_MOV_SICEGRE01.RELA_SOCSYST01 = :PARAM_SOCSYST01)
    INTO
        :RELA_SOCSYST01,
        :RELA_SOCUSUA02,
        :ID_SICEGRE01,
        :TIPO,
        :SICEGRE01_CODIGO,
        :ENTIDAD,
        :SOCSYST10_GIRO,
        :BUSQUEDA
    DO
    BEGIN
        SUSPEND;
    END
END
PRD_RASURADORA                 

DECLARE VARIABLE CORTEVALIDO DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_RASURAR DOUBLE PRECISION;
DECLARE VARIABLE TOTAL_ALCORTE_SINDESC DOUBLE PRECISION;
DECLARE VARIABLE ID_PYMVENT20 BIGINT;
DECLARE VARIABLE ID_PYMVENT21 BIGINT;
DECLARE VARIABLE PYMVENT21_TOTAL DOUBLE PRECISION;
DECLARE VARIABLE DESCUENTO_APLICADO DOUBLE PRECISION;
DECLARE VARIABLE TOTAL_APLICADO DOUBLE PRECISION;
DECLARE VARIABLE OK_PYMVENT10 BIGINT;
begin
    ID_PYMVENT61 = NULL;
    ok_pymvent10 = null;
        
    Select
    PYMVENT61_MOV_RASURADORA.ID_PYMVENT61,
    PYMVENT61_MOV_RASURADORA.PYMVENT61_IMPORTE
    FROM PYMVENT61_MOV_RASURADORA
    where PYMVENT61_MOV_RASURADORA.RELA_SOCSYST01 = :RELA_SOCSYST01
    and PYMVENT61_MOV_RASURADORA.RELA_PYMVENT01 = :RELA_PYMVENT01
    and PYMVENT61_MOV_RASURADORA.PYMVENT61_FECHA = :FECHA
    and PYMVENT61_MOV_RASURADORA.pymvent61_procesado = 0
    INTO :ID_PYMVENT61,
         :importe_rasurar;

    select pymvent10_cab_aperturacierre.id_pymvent10
    from pymvent10_cab_aperturacierre
    where pymvent10_cab_aperturacierre.id_pymvent10 = :id_pymvent10
    and pymvent10_cab_aperturacierre.pymvent10_hcierre is null
    into :ok_pymvent10;

    if (ID_PYMVENT61 is not null and ok_pymvent10 is not null) then
    BEGIN
        delete from pymvent62_det_restaurar
        where pymvent62_det_restaurar.rela_pymvent61 = :ID_PYMVENT61;

        select
        sum(pymvent20_cab_tickets.pymvent20_total),
        sum(pymvent20_cab_tickets.pymvent20_descuentos),
        sum(( SELECT
              sum(PYMVENT21_DET_TICKETS.pymvent21_total)
              FROM PYMVENT21_DET_TICKETS
              WHERE PYMVENT21_DET_TICKETS.rela_pymvent20 = pymvent20_cab_tickets.id_pymvent20
              and PYMVENT21_DET_TICKETS.pymvent21_descuentos = 0
              and PYMVENT21_DET_TICKETS.pymvent21_descuenta_stock = 1))
        from pymvent20_cab_tickets
        where pymvent20_cab_tickets.rela_pymvent10 = :id_pymvent10
        and pymvent20_cab_tickets.pymvent20_presupuesto = 0
        and pymvent20_cab_tickets.pymvent20_cancelado = 0
        and pymvent20_cab_tickets.pymvent20_acredito = 0
        and pymvent20_cab_tickets.pymvent20_devolucion = 0
        into :total_alcorte_condesc,
             :DESCUANTO_ALCORTE,
             :total_alcorte_sindesc;

        cortevalido = total_alcorte_sindesc * 50 / 100;

        if (importe_rasurar < cortevalido) then
        begin
            descuento_rasurar = (importe_rasurar / total_alcorte_sindesc * 100);
            suspend;

            FOR SELECT
            pymvent20_cab_tickets.id_pymvent20
            FROM pymvent20_cab_tickets
            WHERE pymvent20_cab_tickets.rela_pymvent10 = :ID_PYMVENT10
                and pymvent20_cab_tickets.pymvent20_presupuesto = 0
                and pymvent20_cab_tickets.pymvent20_cancelado = 0
                and pymvent20_cab_tickets.pymvent20_acredito = 0
                and pymvent20_cab_tickets.pymvent20_devolucion = 0
            into :id_pymvent20
            DO
            BEGIN
                FOR SELECT
                PYMVENT21_DET_TICKETS.id_pymvent21,
                PYMVENT21_DET_TICKETS.pymvent21_total
                FROM PYMVENT21_DET_TICKETS
                WHERE PYMVENT21_DET_TICKETS.rela_pymvent20 = :id_pymvent20
                and PYMVENT21_DET_TICKETS.pymvent21_descuentos = 0
                and PYMVENT21_DET_TICKETS.pymvent21_descuenta_stock = 1
                INTO :id_pymvent21,
                     :pymvent21_total
                do
                BEGIN
                    DESCUENTO_APLICADO = pymvent21_total * descuento_rasurar / 100;
                    TOTAL_APLICADO = pymvent21_total - DESCUENTO_APLICADO;

                    insert into pymvent62_det_restaurar(pymvent62_det_restaurar.rela_pymvent61,
                                                            pymvent62_det_restaurar.rela_pymvent20,
                                                            pymvent62_det_restaurar.rela_pymvent21,
                                                            pymvent62_det_restaurar.pymvent21_total,
                                                            pymvent62_det_restaurar.descuento_aplicado,
                                                            pymvent62_det_restaurar.total_aplicado)
                    values(:ID_PYMVENT61,
                           :id_pymvent20,
                           :id_pymvent21,
                           :pymvent21_total,
                           :DESCUENTO_APLICADO,
                           :TOTAL_APLICADO);

                    DESCUENTO_APLICADO = 0;
                    TOTAL_APLICADO = 0;
                end
            END
        end
    END
end
PRD_RASURADORA_ACTUALIZA       

DECLARE VARIABLE PYMVENT20_DESCUENTOS DOUBLE PRECISION;
DECLARE VARIABLE PYMVENT20_TOTAL DOUBLE PRECISION;
DECLARE VARIABLE IMPORTE_ALCORTE DOUBLE PRECISION;
DECLARE VARIABLE DESCUENTO_ALCORTE DOUBLE PRECISION;
DECLARE VARIABLE DESCUENTO_RASURAR DOUBLE PRECISION;
begin
    Select
    PRD_RASURADORA.id_pymvent61,
    PRD_RASURADORA.total_alcorte_condesc,
    PRD_RASURADORA.descuanto_alcorte,
    PRD_RASURADORA.descuento_rasurar
    from PRD_RASURADORA(:rela_socsyst01, :rela_pymvent01, :id_pymvent10, :fecha)
    into :ID_PYMVENT61,
         :IMPORTE_ALCORTE,
         :DESCUENTO_ALCORTE,
         :DESCUENTO_RASURAR;

    for select
    pymvent62_det_restaurar.rela_pymvent61,
    pymvent62_det_restaurar.rela_pymvent20,
    pymvent62_det_restaurar.rela_pymvent21,
    pymvent62_det_restaurar.pymvent21_total,
    pymvent62_det_restaurar.descuento_aplicado,
    pymvent62_det_restaurar.total_aplicado
    from pymvent62_det_restaurar
    where pymvent62_det_restaurar.rela_pymvent61 = :ID_PYMVENT61
    into :id_pymvent61,
         :id_pymvent20,
         :id_pymvent21,
         :pymvent21_total,
         :descuento_aplicado,
         :total_aplicado
    do
    begin
        if (actualiza = 1) then
        begin
            update pymvent21_det_tickets
            set pymvent21_det_tickets.pymvent21_descuentos = :descuento_aplicado,
                pymvent21_det_tickets.pymvent21_total = :total_aplicado,
                pymvent21_det_tickets.pymvent21_porcentaje = :descuento_rasurar
            where pymvent21_det_tickets.id_pymvent21 = :id_pymvent21;
        end
    end

    if (actualiza = 1) then
        update pymvent61_mov_rasuradora
        set pymvent61_mov_rasuradora.pymvent61_procesado = 1,
            pymvent61_mov_rasuradora.pymvent61_importe_al_corte = :importe_alcorte,
            pymvent61_mov_rasuradora.pymvent61_importe_descuento = :descuento_alcorte
        where pymvent61_mov_rasuradora.id_pymvent61 = :id_pymvent61;

    for select distinct
    pymvent62_det_restaurar.rela_pymvent20
    from pymvent62_det_restaurar
    where pymvent62_det_restaurar.rela_pymvent61 = :ID_PYMVENT61
    into :ID_PYMVENT20
    do
    begin
        select
        sum(pymvent21_det_tickets.pymvent21_descuentos),
        sum(pymvent21_det_tickets.pymvent21_total)
        from pymvent21_det_tickets
        where pymvent21_det_tickets.rela_pymvent20 = :id_pymvent20
        into :PYMVENT20_DESCUENTOS,
             :PYMVENT20_TOTAL;

        if (actualiza = 1) then
            UPDATE pymvent20_cab_tickets
            SET pymvent20_cab_tickets.pymvent20_descuentos = :PYMVENT20_DESCUENTOS,
                pymvent20_cab_tickets.pymvent20_total = :PYMVENT20_TOTAL
            WHERE pymvent20_cab_tickets.id_pymvent20 = :id_pymvent20;
    end

    suspend;
end
REP_PYMINVE45_TRANSFERENCIAS   

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM PYMINVE45_CAB_TRANSFERENCIAS
  INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE45_CAB_TRANSFERENCIAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
  INNER JOIN SOCSYST01_CAB_CLIENTES ON (SOCWFLO01_ARB_ORGANIGRAMA.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
  WHERE PYMINVE45_CAB_TRANSFERENCIAS.ID_PYMINVE45 = :PARAM_PYMINVE45
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  FOR
    SELECT
        PYMINVE45_CAB_TRANSFERENCIAS.RELA_SOCWFLO01,
        PYMINVE45_CAB_TRANSFERENCIAS.RELA_SOCWFLO01_DESTINO,
        PYMINVE45_CAB_TRANSFERENCIAS.RELA_PYMINVE40,
        PYMINVE45_CAB_TRANSFERENCIAS.RELA_PYMINVE40_DESTINO,
        PYMINVE45_CAB_TRANSFERENCIAS.ID_PYMINVE45,
        SUCURSAL_ORIGEN.SOCWFLO01_DESCRI,
        SUCURSAL_DESTINO.SOCWFLO01_DESCRI,
        ALMACEN_ORIGEN.PYMINVE40_DESCRI,
        ALMACEN_DESTINO.PYMINVE40_DESCRI,
        RESPONSABLE.ENTIDAD,
        ELABORO.ENTIDAD,
        PYMINVE45_CAB_TRANSFERENCIAS.PYMINVE45_DESCRIPCION,
        CAST(PYMINVE45_CAB_TRANSFERENCIAS.PYMINVE45_FAPL AS DATE),
        PYMINVE45_CAB_TRANSFERENCIAS.PYMINVE45_NOTAS,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        PYMINVE46_DET_TRANSFERENCIAS.PYMINVE46_CANTIDAD,
        SNVL((SELECT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
              FROM PYMINVE31_DEP_PROVEEDORES
              WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30), '')
    FROM PYMINVE45_CAB_TRANSFERENCIAS
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA SUCURSAL_ORIGEN ON (PYMINVE45_CAB_TRANSFERENCIAS.RELA_SOCWFLO01 = SUCURSAL_ORIGEN.ID_SOCWFLO01)
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA SUCURSAL_DESTINO ON (PYMINVE45_CAB_TRANSFERENCIAS.RELA_SOCWFLO01_DESTINO = SUCURSAL_DESTINO.ID_SOCWFLO01)
    INNER JOIN PYMINVE40_ARB_LOCACIONES ALMACEN_ORIGEN ON (PYMINVE45_CAB_TRANSFERENCIAS.RELA_PYMINVE40 = ALMACEN_ORIGEN.ID_PYMINVE40)
    INNER JOIN PYMINVE40_ARB_LOCACIONES ALMACEN_DESTINO ON (PYMINVE45_CAB_TRANSFERENCIAS.RELA_PYMINVE40_DESTINO = ALMACEN_DESTINO.ID_PYMINVE40)
    INNER JOIN VR_ENTIDADES_ALL RESPONSABLE ON (PYMINVE45_CAB_TRANSFERENCIAS.RELA_SOCUSUA02 = RESPONSABLE.ID_SOCUSUA02)
    INNER JOIN PYMINVE46_DET_TRANSFERENCIAS ON (PYMINVE45_CAB_TRANSFERENCIAS.ID_PYMINVE45 = PYMINVE46_DET_TRANSFERENCIAS.RELA_PYMINVE45)
    INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE46_DET_TRANSFERENCIAS.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
    INNER JOIN VR_ENTIDADES_ALL ELABORO ON (PYMINVE30_MOV_STOCK.RELA_SOCUSUA02 = ELABORO.ID_SOCUSUA02)
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    WHERE PYMINVE45_CAB_TRANSFERENCIAS.ID_PYMINVE45 = :PARAM_PYMINVE45
    INTO
        :RELA_SOCWFLO01,
        :RELA_SOCWFLO01_DESTINO,
        :RELA_PYMINVE40,
        :RELA_PYMINVE40_DESTINO,
        :ID_PYMINVE45,
        :SUCURSAL_ORIGEN,
        :SUCURSAL_DESTINO,
        :ALMACEN_ORIGEN,
        :ALMACEN_DESTINO,
        :RESPONSABLE,
        :ELABORO,
        :DESCRIPCION,
        :FECHA,
        :NOTAS,
        :CODIGO,
        :PRODUCTO,
        :CANTIDAD,
        :NROLOTE
  DO
  BEGIN
    SUSPEND;
  END
END
JAM$_ON2CFDS10                 

DECLARE VARIABLE ID_SOCSYST10 BIGINT;
DECLARE VARIABLE ID_SOCSYST20 BIGINT;
DECLARE VARIABLE ID_ON2CFDS18 BIGINT;
DECLARE VARIABLE ID_ON2CFDS15 BIGINT;
DECLARE VARIABLE ID_ON2CFDS10 BIGINT;
DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
DECLARE VARIABLE ID_MSGPOLI26 BIGINT;
DECLARE VARIABLE FOLIOFORMATO VARCHAR(50);
DECLARE VARIABLE FOLIOFECHA TIMESTAMP;
DECLARE VARIABLE CANCELADO TIMESTAMP;
DECLARE VARIABLE ON2CFDS13_PEDIMENTO VARCHAR(200);
DECLARE VARIABLE ON2CFDS13_FECHA DATE;
DECLARE VARIABLE ON2CFDS13_ADUANA VARCHAR(200);
DECLARE VARIABLE LOGENTRAPEDI INTEGER;
DECLARE VARIABLE ON2CFDS14_COTIZACION DOUBLE PRECISION;
begin
    select socsyst01_cab_clientes.rela_socusua02
    from socsyst01_cab_clientes
    where socsyst01_cab_clientes.id_socsyst01 = :empresa
    into :id_socusua02;

    SELECT
    StrReplace(REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,'-','')
    FROM REP_SOCUSUA40_SOCUSUA02(:id_socusua02)
    WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
    INTO :ARCHIVO_NOMBRE;

    ARCHIVO_NOMBRE = '1' || trim(ARCHIVO_NOMBRE) || trim(PadLeft(MES, 2, '0')) || ANO || '.TXT';

    select SOCSYST10_TBL_LISTAESTADOS.id_socsyst10
    from SOCSYST10_TBL_LISTAESTADOS
    where SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_COD = 'SC30'
    and SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'CFD'
    into :id_socsyst10;

    for select
    socsyst20_det_factelect.id_socsyst20,
    socsyst20_det_factelect.SOCSYST20_FOLIO_SERIE,
    CAST(socsyst20_det_factelect.socsyst20_ano_aproba AS VARCHAR(4)) || CAST(socsyst20_det_factelect.socsyst20_nro_aproba AS VARCHAR(14))
    from SOCSYST21_MOV_CONTADORES_EMP
    inner join socsyst20_det_factelect on (socsyst20_det_factelect.rela_socsyst21 = SOCSYST21_MOV_CONTADORES_EMP.id_socsyst21)
    where SOCSYST21_MOV_CONTADORES_EMP.rela_socsyst01 = :empresa
    and SOCSYST21_MOV_CONTADORES_EMP.rela_socsyst10 = :id_socsyst10

    union all

    select
    socsyst20_det_factelect.id_socsyst20,
    socsyst20_det_factelect.SOCSYST20_FOLIO_SERIE,
    CAST(socsyst20_det_factelect.socsyst20_ano_aproba AS VARCHAR(4)) || CAST(socsyst20_det_factelect.socsyst20_nro_aproba AS VARCHAR(14))
    from socsyst20_det_factelect
    where socsyst20_det_factelect.rela_socsyst21 is null
      and socsyst20_det_factelect.rela_socsyst01 = :empresa

    into :id_socsyst20,
         :SOCSYST20_FOLIO_SERIE,
         :SOCSYST20_NRO_APROBA

    do
    begin
        /*------------------------------------------------------------------------------------------------- */
        for select
        on2cfds18_dep_factelect.on2cfds18_docnro,
        on2cfds18_dep_factelect.on2cfds18_fapl,
        on2cfds18_dep_factelect.id_on2cfds18,
        pymvent24_cab_clientes.pymvent24_documentos,
        on2cfds10_cab_facturas.on2cfds10_total,
        on2cfds10_cab_facturas.on2cfds10_total_itrasladados,
        RUPPER(SUBSTR(socsyst10_tbl_listaestados.socsyst10_codigo_ext1,1,1)),
        on2cfds18_dep_factelect.on2cfds18_cancelado,
        on2cfds10_cab_facturas.id_on2cfds10,
        ON2CFDS14_DEP_ADDENDAS.on2cfds14_cotizacion
        FROM ON2CFDS14_DEP_ADDENDAS
        INNER JOIN ON2CFDS10_CAB_FACTURAS ON (ON2CFDS14_DEP_ADDENDAS.RELA_ON2CFDS10 = ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10)
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (ON2CFDS10_CAB_FACTURAS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        INNER JOIN ON2CFDS18_DEP_FACTELECT ON (ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = ON2CFDS18_DEP_FACTELECT.RELA_ON2CFDS10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        where on2cfds10_cab_facturas.rela_socsyst01 = :empresa
        and on2cfds10_cab_facturas.rela_socsyst20 = :id_socsyst20
        and ExtractYear(on2cfds18_dep_factelect.on2cfds18_fapl) = :ano
        and ExtractMonth(on2cfds18_dep_factelect.on2cfds18_fapl) = :mes
        order by on2cfds18_dep_factelect.on2cfds18_docnro
        into :FOLIOFORMATO,
             :FOLIOFECHA,
             :id_on2cfds18,
             :rfc,
             :IMPORTE_TOTAL,
             :IMPORTE_TOTAL_IMPUESTOS,
             :TIPO_COMPROBANTE,
             :CANCELADO,
             :ID_ON2CFDS10,
             :on2cfds14_cotizacion
        DO
        BEGIN
        RFC = trim(StrReplace(rfc,'-',''));

        IF (:SOCSYST20_FOLIO_SERIE != '') THEN
          FOLIOFORMATO = StrReplace(:FOLIOFORMATO,:SOCSYST20_FOLIO_SERIE,'');

        FOLIO = CAST(FOLIOFORMATO AS BIGINT);

        FOLIO_FECHA = PadLeft(extractday(FOLIOFECHA), 2, '0') || '/' ||
                      PadLeft(extractmonth(FOLIOFECHA), 2, '0') || '/' ||
                      extractyear(FOLIOFECHA) || ' ' || SUBSTR(CAST(:FOLIOFECHA AS TIME),1,8);

        id_on2cfds15 = null;
        select on2cfds15_mov_sat.id_on2cfds15
        from on2cfds15_mov_sat
        where on2cfds15_mov_sat.rela_on2cfds18 = :id_on2cfds18
        into :id_on2cfds15;
        
        if (id_on2cfds15 is not null) then
            FECHA = 'Si';
        else
            FECHA = 'Pendiente';

        if (cancelado is not null) then
            ESTADO = '0';
        else
            ESTADO = '1';

        LOGENTRAPEDI = 0;
        PEDIMENTOS_NROS = null;
        PEDIMENTOS_FECHAS = null;
        PEDIMENTOS_ADUANAS = null;

        for select
        ON2CFDS13_DET_PEDIMENTOS.on2cfds13_pedimento,
        ON2CFDS13_DET_PEDIMENTOS.on2cfds13_fecha,
        ON2CFDS13_DET_PEDIMENTOS.on2cfds13_aduana
        from ON2CFDS13_DET_PEDIMENTOS
        inner join on2cfds11_det_facturas on (on2cfds11_det_facturas.id_on2cfds11 = ON2CFDS13_DET_PEDIMENTOS.rela_on2cfds11)
        where on2cfds11_det_facturas.rela_on2cfds10 = :id_on2cfds10
        into :on2cfds13_pedimento,
             :on2cfds13_fecha,
             :on2cfds13_aduana
        do
        begin
            if (LOGENTRAPEDI = 0) then
                 begin
                 LOGENTRAPEDI = 1;
                 PEDIMENTOS_NROS = '';
                 PEDIMENTOS_ADUANAS = '';
                 PEDIMENTOS_FECHAS = '';
                 end

            PEDIMENTOS_NROS =  PEDIMENTOS_NROS || on2cfds13_pedimento || ',';
            PEDIMENTOS_ADUANAS = PEDIMENTOS_ADUANAS || on2cfds13_aduana || ',';
            PEDIMENTOS_FECHAS = PEDIMENTOS_FECHAS || DateToStr(on2cfds13_fecha, '%d/%m/%Y') || ',';
        end

        if (LOGENTRAPEDI = 1) then
            begin
            PEDIMENTOS_NROS = substr1024(PEDIMENTOS_NROS,1, strlen(PEDIMENTOS_NROS)-1);
            PEDIMENTOS_ADUANAS = substr1024(PEDIMENTOS_ADUANAS,1, strlen(PEDIMENTOS_ADUANAS)-1);
            PEDIMENTOS_FECHAS = substr1024(PEDIMENTOS_FECHAS,1, strlen(PEDIMENTOS_FECHAS)-1);
            end

        if (UPDATEACTION = 1 and FECHA = 'Pendiente') then
        begin
            select MSGPOLI26_CAB_INTERFACES.ID_MSGPOLI26
            from MSGPOLI26_CAB_INTERFACES
            where MSGPOLI26_CAB_INTERFACES.MSGPOLI26_PROCESO = 'JAM$_ON2CFDS10'
            INTO :ID_MSGPOLI26;

            insert into ON2CFDS15_MOV_SAT(ON2CFDS15_MOV_SAT.rela_on2cfds18,
                                          ON2CFDS15_MOV_SAT.RELA_MSGPOLI26)

            values(:id_on2cfds18, :id_msgpoli26);
        end
        else
        begin
            select CAST(CAST(ON2CFDS15_MOV_SAT.on2cfds15_fapl AS DATE) AS VARCHAR(10))
            from ON2CFDS15_MOV_SAT
            where ON2CFDS15_MOV_SAT.rela_on2cfds18 = :id_on2cfds18
            into :fecha;
        end

        if (on2cfds14_cotizacion = 0) then on2cfds14_cotizacion = 1;
        if (on2cfds14_cotizacion is null) then on2cfds14_cotizacion = 1;

        IMPORTE_TOTAL = IMPORTE_TOTAL * on2cfds14_cotizacion;
        IMPORTE_TOTAL_IMPUESTOS = IMPORTE_TOTAL_IMPUESTOS * on2cfds14_cotizacion;

        suspend;

        IF (ESTADO = '0') THEN
          BEGIN
            ESTADO = '1';
            SUSPEND;
          END

        ARCHIVO_NOMBRE = NULL;

        END
        /*------------------------------------------------------------------------------------------------- */
    end
end
PRD_PYMINVE10_STOCKMIN         

BEGIN
  FOR
    SELECT
        PYMINVE12_DET_PROVEEDORES.RELA_PYMINVE10,
        CAST(NULL AS BIGINT),
        CAST(NULL AS BIGINT),
        CAST(NULL AS BIGINT),
        PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12,
        CAST('' AS VARCHAR(50)),
        CAST('' AS VARCHAR(50)),
        CAST('' AS VARCHAR(50)),
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        PYMINVE12_DET_PROVEEDORES.PYMINVE12_CODIGO,
        PYMINVE12_DET_PROVEEDORES.PYMINVE12_DESCRIPCION,
        PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_REORDER,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_MTC,
        PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE + (PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD / 100),
        DNVL(SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD),0.00)
    FROM PYMINVE10_CAB_PRODUCTOS
    INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMINVE12_DET_PROVEEDORES.RELA_PYMINVE10)
    INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMINVE30_MOV_STOCK.RELA_PYMINVE10)
    WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :PARAM_ORGA
      AND PYMINVE12_DET_PROVEEDORES.RELA_SICEGRE01 = :PARAM_PROVEEDOR
    GROUP BY
        PYMINVE12_DET_PROVEEDORES.RELA_PYMINVE10,
        PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        PYMINVE12_DET_PROVEEDORES.PYMINVE12_CODIGO,
        PYMINVE12_DET_PROVEEDORES.PYMINVE12_DESCRIPCION,
        PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMIN,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_STOCKMAX,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_REORDER,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_MTC
    INTO
        :RELA_PYMINVE10,
        :RELA_SOCSYST10_MODELO,
        :RELA_SOCSYST10_TALLA,
        :RELA_SOCSYST10_COLOR,
        :ID_PYMINVE12,
        :MODELO,
        :TALLA,
        :COLOR,
        :PYMINVE10_CODIGO,
        :PYMINVE10_DESCRIPCION,
        :PYMINVE12_CODIGO,
        :PYMINVE12_DESCRIPCION,
        :PYMINVE12_IMPORTE,
        :PYMINVE10_STOCKMIN,
        :PYMINVE10_STOCKMAX,
        :PYMINVE10_REORDER,
        :PYMINVE10_PCOSTO,
        :PYMINVE10_UTILIDAD,
        :PYMINVE10_MTC,
        :PYMINVE10_PVENTA,
        :EXISTENCIA
  DO
  BEGIN
       CANTIDAD = 0;

       IF (EXISTENCIA = 0) THEN
         BEGIN
            CANTIDAD = PYMINVE10_REORDER;
            SUSPEND;
         END
       ELSE
          IF (EXISTENCIA < PYMINVE10_REORDER) THEN
            BEGIN
               CANTIDAD = PYMINVE10_REORDER - EXISTENCIA;
               SUSPEND;
            END
  END
END
REP_MSGPOLI23_IVA              

BEGIN
  SELECT
      CBO_CLIENTES_EMPRESAS.ID_SOCSYST01,
      CBO_CLIENTES_EMPRESAS.SOCSYST01_DESCRI
  FROM CBO_CLIENTES_EMPRESAS
  WHERE CBO_CLIENTES_EMPRESAS.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :RELA_SOCSYST01,
     :EMPRESA;

  FOR
    SELECT
        CBO_MESES.SOCSYST10_FILTRO_DES,
        CBO_MESES.ID_SOCSYST10
    FROM CBO_MESES
    WHERE CBO_MESES.SOCSYST10_CODIGO = :PARAM_MES
    INTO
       :MES,
       :ID_SOCSYST10
  DO
  BEGIN
     SELECT
        SUM(MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_CARGO),
        SUM(MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_RING),
        SUM(MSGPOLI23_DET_BITACORA.MSGPOLI23_IMPORTE_ABONO)
     FROM MSGPOLI23_DET_BITACORA
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (MSGPOLI23_DET_BITACORA.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INNER JOIN MSGPOLI24_ARB_ORGANIZADOR ON (MSGPOLI23_DET_BITACORA.RELA_MSGPOLI24 = MSGPOLI24_ARB_ORGANIZADOR.ID_MSGPOLI24)
     WHERE MSGPOLI23_DET_BITACORA.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_ANO = :PARAM_ANIO
        AND MSGPOLI23_DET_BITACORA.MSGPOLI23_MES = :PARAM_MES
        AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'MODIFICADO'
        AND MSGPOLI24_ARB_ORGANIZADOR.MSGPOLI24_CODEXT = 'MEX-F-IVA'
     INTO
        :IMPUESTO_CAUSADO,
        :IVA_RETENIDO,
        :IVA_ACREDITABLE;

     IF (IMPUESTO_CAUSADO IS NULL) THEN
        IMPUESTO_CAUSADO = 0;

     IF (IVA_RETENIDO IS NULL) THEN
        IVA_RETENIDO = 0;

     IF (IVA_ACREDITABLE IS NULL) THEN
        IVA_ACREDITABLE = 0;

     CANTIDAD_ACARGO = IMPUESTO_CAUSADO - (IVA_RETENIDO + IVA_ACREDITABLE);

     IF (IMPUESTO_CAUSADO > CANTIDAD_ACARGO) THEN
        IF (CANTIDAD_ACARGO < 0) THEN
          BEGIN
             SALDO_AFAVOR = CANTIDAD_ACARGO * -1;
             CANTIDAD_ACARGO = 0;
          END
        ELSE
            SALDO_AFAVOR = 0;
     ELSE
        SALDO_AFAVOR = (IVA_RETENIDO + IVA_ACREDITABLE) - IMPUESTO_CAUSADO;

     IF (SALDO_AFAVOR < 0) THEN
        SALDO_AFAVOR = 0;

     IF (IMPUESTO_CAUSADO < SALDO_AFAVOR) THEN
       CANTIDAD_ACARGO = 0;

     ACREDITAMIENTO_AFAVOR = CANTIDAD_ACARGO;

     CANTIDAD_PAGADA = CANTIDAD_ACARGO - ACREDITAMIENTO_AFAVOR;

     SUSPEND;
  END
END
REP_PYMINGR01_FACTURA_AUTO     

DECLARE VARIABLE CODIGO VARCHAR(10);
BEGIN
   /*********** DATOS DE LA EMPRESA ***********/

   SELECT
      CBO_CLIENTES_EMPRESAS_PYMES.SOCSYST01_DESCRI
   FROM CBO_CLIENTES_EMPRESAS_PYMES
   WHERE CBO_CLIENTES_EMPRESAS_PYMES.ID_SOCSYST01 = :PARAM_EMPRESA
   INTO :EMPRESA;

   /*********** DATOS DE LA CABECERA DE AUTOMATIZACION ***********/

   FOR
     SELECT
        PYMINGR41_DET_ACTAUTO.RELA_PYMINGR01,
        PYMINGR45_CAB_FACTMASTERS.RELA_SICINGR01,
        PYMINGR41_DET_ACTAUTO.PYMINGR41_CODBAR
     FROM PYMINGR41_DET_ACTAUTO
     INNER JOIN PYMINGR45_CAB_FACTMASTERS ON (PYMINGR41_DET_ACTAUTO.RELA_PYMINGR45 = PYMINGR45_CAB_FACTMASTERS.ID_PYMINGR45)
     WHERE PYMINGR41_DET_ACTAUTO.RELA_PYMINGR40 = :PARAM_PYMINGR40
     INTO
        :ID_PYMINGR01,
        :RELA_SICINGR01,
        :CODIGO_BAR
   DO
   BEGIN
     /*********** DATOS DEL CLIENTE ***********/

     SELECT
         PRD_SICINGR01.SOCUSUA02_ENTIDAD,
         PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC,
         PRD_SICINGR01.SOCUSUA41_DOMICILIO,
         PRD_SICINGR01.SOCUSUA41_COLONIA,
         PRD_SICINGR01.SOCUSUA41_TELEFONO,
         PRD_SICINGR01.SOCUSUA41_CP,
         PRD_SICINGR01.SOCUSUA50_CIUDAD
     FROM PRD_SICINGR01(:RELA_SICINGR01)
     INTO
         :CLIENTE,
         :RFC,
         :DIRECCION,
         :COLONIA,
         :TELEFONO,
         :CP,
         :CIUDAD;

     /*********** DATOS ORIGEN ***********/

     SELECT
         PRD_PYMINGR01_ORIGENDESTINO.ENTIDAD,
         PRD_PYMINGR01_ORIGENDESTINO.RFC,
         PRD_PYMINGR01_ORIGENDESTINO.DIRECCION,
         PRD_PYMINGR01_ORIGENDESTINO.COLONIA,
         PRD_PYMINGR01_ORIGENDESTINO.TELEFONO,
         PRD_PYMINGR01_ORIGENDESTINO.CP,
         PRD_PYMINGR01_ORIGENDESTINO.CIUDAD
     FROM PRD_PYMINGR01_ORIGENDESTINO(:ID_PYMINGR01,'ORIGEN')
     INTO
         :ORIGEN,
         :RFC_ORIGEN,
         :DIRECCION_ORIGEN,
         :COLONIA_ORIGEN,
         :TELEFONO_ORIGEN,
         :CP_ORIGEN,
         :CIUDAD_ORIGEN;

     /*********** DATOS DESTINO ***********/

     SELECT
         PRD_PYMINGR01_ORIGENDESTINO.ENTIDAD,
         PRD_PYMINGR01_ORIGENDESTINO.RFC,
         PRD_PYMINGR01_ORIGENDESTINO.DIRECCION,
         PRD_PYMINGR01_ORIGENDESTINO.COLONIA,
         PRD_PYMINGR01_ORIGENDESTINO.TELEFONO,
         PRD_PYMINGR01_ORIGENDESTINO.CP,
         PRD_PYMINGR01_ORIGENDESTINO.CIUDAD
     FROM PRD_PYMINGR01_ORIGENDESTINO(:ID_PYMINGR01,'DESTINO')
     INTO
         :DESTINO,
         :RFC_DESTINO,
         :DIRECCION_DESTINO,
         :COLONIA_DESTINO,
         :TELEFONO_DESTINO,
         :CP_DESTINO,
         :CIUDAD_DESTINO;

     /*********** DATOS DE LA FACTURA ***********/

     SELECT
         PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
         PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
         PYMINGR01_CAB_FACTURAS.PYMINGR01_CONCEPTO,
         PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
         PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
         PYMINGR01_cAB_FACTURAS.PYMINGR01_FVTO,
         EXTRACTDAY(PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC),
         EXTRACTMONTH(PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC),
         EXTRACTYEAR(PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC),
         B_SUBSTR(PYMINGR01_CAB_FACTURAS.PYMINGR01_NOTAS,1,1000),
         PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL,
         PYMINGR01_CAB_FACTURAS.PYMINGR01_DESCUENTOS,
         PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS,
         PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
         PYMINGR01_CAB_FACTURAS.PYMINGR01_EXTEMPORANEO,
         CODIGO.SOCSYST10_CODIGO,
         MONEDA.SOCSYST10_CODIGO
     FROM PYMINGR01_CAB_FACTURAS
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS CODIGO ON (CODIGO.ID_SOCSYST10 = PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10)
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
     WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :ID_PYMINGR01
     INTO
         :RELA_MSGPOLI01,
         :RELA_SOCWFLO01,
         :CONCEPTO,
         :DOCNRO,
         :FECHA,
         :FECHA_VTO,
         :DIA,
         :MES,
         :ANO,
         :NOTAS,
         :SUBTOTAL,
         :DESCUENTOS,
         :IMPUESTOS,
         :TOTAL,
         :PAGO_EXT,
         :CODIGO,
         :CODIGO_MONEDA;

     IF (:CODIGO = 'IVA10') THEN
       PORCENTAJE = 11;
     ELSE
       IF (:CODIGO = 'IVA15') THEN
         PORCENTAJE = 16;

     SELECT
         SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
         SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO,''),
         SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_FONDO,'')
     FROM SOCSYST21_MOV_CONTADORES_EMP
     INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
     INNER JOIN SOCSYST20_DET_FACTELECT ON (SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21 = SOCSYST20_DET_FACTELECT.RELA_SOCSYST21)
     INNER JOIN SOCSYST01_CAB_CLIENTES ON (SOCSYST21_MOV_CONTADORES_EMP.rela_socsyst01 = SOCSYST01_CAB_CLIENTES.id_socsyst01)
     WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :PARAM_EMPRESA
       AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :RELA_SOCWFLO01
       AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'CFD'
     INTO :ID_SOCSYST21,
          :LOGO,
          :FONDO;

     /*********** DATOS DE LA FACTURA ELECTRONICA ***********/

     IF (:ID_SOCSYST21 IS NOT NULL) THEN
       BEGIN
         SELECT
             PRD_CFD.ULTID_FOLIO,
             INTTOSTR(PRD_CFD.SOCSYST20_ANO_APROBA,PRD_CFD.SOCSYST20_ANO_APROBA) || INTTOSTR(PRD_CFD.SOCSYST20_NRO_APROBA,PRD_CFD.SOCSYST20_NRO_APROBA),
             PRD_CFD.SOCSYST01_NROCERTIFICADO,
             PRD_CFD.FOLIO_FECHA,
             PRD_CFD.EMISOR_RFC,
             PRD_CFD.EMISOR_TIPO,
             PRD_CFD.EMISOR_CALLE || ' Nro. ' || SNVL(PRD_CFD.EMISOR_NRO_EXTERIOR,'') || ' ' || SNVL(PRD_CFD.EMISOR_NRO_INTERIOR,'') || ' C.P. ' || PRD_CFD.EMISOR_CP,
             PRD_CFD.EMISOR_MUNICIPIO || ', ' || PRD_CFD.EMISOR_ESTADO || ', ' || PRD_CFD.EMISOR_PAIS
         FROM PRD_CFD(0,:ID_PYMINGR01,:RELA_MSGPOLI01)
         INTO
             :ULTID_FOLIO,
             :ANOYNUMERO,
             :NROCERTIFICADO,
             :FOLIO_FECHA,
             :EMISOR_RFC,
             :EMISOR_TIPO,
             :EMISOR_DIRECCION,
             :EMISOR_CIUDAD;

         EXECUTE PROCEDURE API_FECHA_CADENA :FOLIO_FECHA, 0 RETURNING_VALUES FOLIO_FECHA_CADENA;

         SELECT
             PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,
             PYMINGR18_DEP_FACTELECT.PYMINGR18_CADENAORIGINAL,
             PYMINGR18_DEP_FACTELECT.PYMINGR18_SELLO
         FROM PYMINGR18_DEP_FACTELECT
         WHERE PYMINGR18_DEP_FACTELECT.ID_PYMINGR18 = :ULTID_FOLIO
         INTO
            :DOCNRO,
            :CADENA,
            :SELLO;
       END

     /*********** DATOS DE LA MERCANCIA ***********/

     SELECT
         GRID_PYMINGR07_DOCUMENTOS.RELA_SOCUSUA50_MERCANCIA,
         GRID_PYMINGR07_DOCUMENTOS.RELA_SOCUSUA50_REEXPEDICION,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_CONTENIDO,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_FACTURA,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_VALOR,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_BULTOS,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_PESO,
         GRID_PYMINGR07_DOCUMENTOS.UNIDAD,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_REMITENTE,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_REFERENCIA,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_PEDIMENTO,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_FECHAPED,
         GRID_PYMINGR07_DOCUMENTOS.TIPO_PEDIMENTO,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_EMBARCADO,
         GRID_PYMINGR07_DOCUMENTOS.PYMINGR07_CONOCIMIENTO,
         GRID_PYMINGR07_DOCUMENTOS.TIPO_FLETE
     FROM GRID_PYMINGR07_DOCUMENTOS
     WHERE GRID_PYMINGR07_DOCUMENTOS.RELA_PYMINGR01 = :ID_PYMINGR01
     INTO
         :RELA_SOCUSUA50_MERCANCIA,
         :RELA_SOCUSUA50_REEXPEDICION,
         :CONTENIDO,
         :FACTURA,
         :VALOR,
         :BULTOS,
         :PESO,
         :UNIDAD,
         :REMITENTE,
         :REFERENCIA,
         :PEDIMENTO,
         :FECHAPED,
         :TIPOPED,
         :EMBARCADO,
         :CONOCIMIENTO,
         :TIPOFLETE;

     IF (:RELA_SOCUSUA50_MERCANCIA IS NOT NULL) THEN
        SELECT FIRST 1 SNVL(VW_SOCUSUA50_CONCAT.CONCAT,'')
        FROM VW_SOCUSUA50_CONCAT(:RELA_SOCUSUA50_MERCANCIA)
        ORDER BY VW_SOCUSUA50_CONCAT.CONCAT DESC
        INTO :CIUDAD_MERCANCIA;

     IF (:RELA_SOCUSUA50_REEXPEDICION IS NOT NULL) THEN
        SELECT FIRST 1 SNVL(VW_SOCUSUA50_CONCAT.CONCAT,'')
        FROM VW_SOCUSUA50_CONCAT(:RELA_SOCUSUA50_REEXPEDICION)
        ORDER BY VW_SOCUSUA50_CONCAT.CONCAT DESC
        INTO :CIUDAD_REEXPEDICION;

     /*********** HONORARIOS ***********/

     SELECT
         GRID_PYMINGR08_HONORARIOS.PYMINGR08_PORC,
         GRID_PYMINGR08_HONORARIOS.PYMINGR08_HONORARIOS,
         GRID_PYMINGR08_HONORARIOS.PYMINGR08_PORCIVA,
         GRID_PYMINGR08_HONORARIOS.PYMINGR08_IVA,
         GRID_PYMINGR08_HONORARIOS.PYMINGR08_VALORNORMAL,
         GRID_PYMINGR08_HONORARIOS.PYMINGR08_GASTOS,
         GRID_PYMINGR08_HONORARIOS.PYMINGR08_SUBSIDIADOS,
         GRID_PYMINGR08_HONORARIOS.PYMINGR08_BASE
     FROM GRID_PYMINGR08_HONORARIOS
     WHERE GRID_PYMINGR08_HONORARIOS.RELA_PYMINGR01 = :ID_PYMINGR01
     INTO
         :PORC_HON,
         :HONORARIOS,
         :PORC_IVA,
         :IVA,
         :VALORNORMAL,
         :GASTOS,
         :SUBSIDIADOS,
         :BASE;

     /*********** ANTICIPOS ***********/

     SELECT DNVL(SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE),0.00)
     FROM PYMINGR16_MOV_ANTICIPOS
     WHERE PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = :ID_PYMINGR01
     INTO :ANTICIPO;

     IF (:GASTOS IS NULL) THEN
        GASTOS = 0;

     IF (ANTICIPO IS NOT NULL) THEN
        SALDO = (TOTAL + GASTOS) - ANTICIPO;
     ELSE
       BEGIN
          ANTICIPO = 0;
          SALDO = TOTAL;
       END

     IF (:SALDO > 0) THEN
       SELECT API_NUM_MEXICO.CNUMERO
       FROM API_NUM_MEXICO(:SALDO,:CODIGO_MONEDA)
       INTO :TOTAL_LETRA;

     SUSPEND;
   END
END
PRD_PYMVENT27                  

begin
    FOR
    SELECT
    PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
    PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
    PYMVENT21_DET_TICKETS.PYMVENT21_PCOSTO,
    PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
    cast(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL as date),
    PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
    FROM PYMINVE31_DEP_PROVEEDORES
    INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
    INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINVE30_MOV_STOCK.ID_PYMINVE30 = PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE)
    where PYMVENT21_DET_TICKETS.rela_pyminve10 = :id_pyminve10
    and cast(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL as date) between :fecha_desde and :fecha_hasta
    INTO :PYMVENT21_CODIGO,
         :PYMVENT21_DESCRIPCION,
         :PYMVENT21_PCOSTO,
         :PYMVENT21_IMPOUNITARIO,
         :PYMVENT21_FAPL,
         :PYMINVE31_NROLOTE
    do
    begin
        SELECT
        max(PYMINVE24_CAB_RECEPCION.pyminve24_docnro),
        max(PYMINVE24_CAB_RECEPCION.pyminve24_fecnro),
        max(PYMINVE26_DET_PEDIDOS.pyminve26_impcostouni)
        FROM PYMINVE24_CAB_RECEPCION
        INNER JOIN PYMINVE27_DET_RECEPCION ON (PYMINVE24_CAB_RECEPCION.ID_PYMINVE24 = PYMINVE27_DET_RECEPCION.RELA_PYMINVE24)
        INNER JOIN PYMINVE26_DET_PEDIDOS ON (PYMINVE27_DET_RECEPCION.RELA_PYMINVE26 = PYMINVE26_DET_PEDIDOS.ID_PYMINVE26)
        where PYMINVE27_DET_RECEPCION.pyminve27_nrolote = :PYMINVE31_NROLOTE
        into :pyminve24_docnro,
             :pyminve24_fecnro,
             :pyminve26_impcostouni;
        suspend;
    end
end
PRD_PYMINGR01_IMPUESTOS        

BEGIN
  SELECT
      PRD_PYMINGR02_IMPUESTOS.IMPORTE,
      PRD_PYMINGR02_IMPUESTOS.PORCENTAJE
  FROM PRD_PYMINGR02_IMPUESTOS(:PARAM_ID,:PARAM_CODIGO,'IVA%')
  INTO
      :IVA,
      :PIVA;

  SELECT
      PRD_PYMINGR02_IMPUESTOS.IMPORTE,
      PRD_PYMINGR02_IMPUESTOS.PORCENTAJE
  FROM PRD_PYMINGR02_IMPUESTOS(:PARAM_ID,:PARAM_CODIGO,'%IEPS%')
  INTO
      :IEPS,
      :PIEPS;

  SELECT
      PRD_PYMINGR02_IMPUESTOS.IMPORTE,
      PRD_PYMINGR02_IMPUESTOS.PORCENTAJE
  FROM PRD_PYMINGR02_IMPUESTOS(:PARAM_ID,:PARAM_CODIGO,'RETISR%')
  INTO
      :RETISR,
      :PRETISR;

  SELECT
      PRD_PYMINGR02_IMPUESTOS.IMPORTE,
      PRD_PYMINGR02_IMPUESTOS.PORCENTAJE
  FROM PRD_PYMINGR02_IMPUESTOS(:PARAM_ID,:PARAM_CODIGO,'RETIVA%')
  INTO
      :RETIVA,
      :PRETIVA;

  SELECT
      PRD_PYMINGR02_IMPUESTOS.IMPORTE,
      PRD_PYMINGR02_IMPUESTOS.PORCENTAJE
  FROM PRD_PYMINGR02_IMPUESTOS(:PARAM_ID,:PARAM_CODIGO,'IMPLOCISH')
  INTO
      :HOSP,
      :PHOSP;

  /*SELECT
      PRD_PYMINGR02_IMPUESTOS.IMPORTE,
      PRD_PYMINGR02_IMPUESTOS.PORCENTAJE
  FROM PRD_PYMINGR02_IMPUESTOS(:PARAM_ID,:PARAM_CODIGO,'RETLOC%')
  INTO
      :RETIVA,
      :PRETIVA;*/

  SUSPEND;
END
REP_SICINGR01_CTAGASTOS        
BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  IF (:PARAM_CLIENTE = -1) THEN
    BEGIN
       FOR
         SELECT
             PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
             MSGPOLI07_DET_FACTURAS.RELA_SICINGR01,
             MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE
         FROM PYMINGR01_CAB_FACTURAS
         INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01)
         GROUP BY
             PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
             MSGPOLI07_DET_FACTURAS.RELA_SICINGR01,
             MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE
         INTO
            :RELA_SOCWFLO01,
            :RELA_SICINGR01,
            :CLIENTE
       DO
       BEGIN
          SELECT
              PRD_SICINGR01_SALDOS.TOTAL_DEPOSITOS,
              PRD_SICINGR01_SALDOS.TOTAL_GASTOS,
              PRD_SICINGR01_SALDOS.TOTAL_HONORARIOS,
              PRD_SICINGR01_SALDOS.TOTAL_SERVCOMP,
              PRD_SICINGR01_SALDOS.TOTAL_IVA,
              PRD_SICINGR01_SALDOS.TOTAL_DEPOSITOS - PRD_SICINGR01_SALDOS.TOTAL_GASTOS - PRD_SICINGR01_SALDOS.TOTAL_HONORARIOS - PRD_SICINGR01_SALDOS.TOTAL_SERVCOMP - PRD_SICINGR01_SALDOS.TOTAL_IVA
          FROM PRD_SICINGR01_SALDOS(:RELA_SOCSYST01,:RELA_SOCWFLO01,:RELA_SICINGR01)
          INTO
              :TOTAL_DEPOSITOS,
              :TOTAL_GASTOS,
              :TOTAL_HONORARIOS,
              :TOTAL_SERVCOMP,
              :TOTAL_IVA,
              :TOTAL_SALDO;
          SUSPEND;
       END
    END
  ELSE
    BEGIN
       FOR
         SELECT
             MSGPOLI07_DET_FACTURAS.RELA_SICINGR01,
             MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
             MSGPOLI07_DET_FACTURAS.MSGPOLI07_NROFACTURA,
             MSGPOLI07_DET_FACTURAS.MSGPOLI07_FFACT,
             DNVL((SELECT SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE)
                   FROM PYMINGR16_MOV_ANTICIPOS
                   WHERE PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),0.00),
             DNVL((SELECT PYMINGR08_DEP_HONORARIOS.PYMINGR08_GASTOS
                   FROM PYMINGR08_DEP_HONORARIOS
                   WHERE PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),0.00),
             DNVL((SELECT PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS
                   FROM PYMINGR08_DEP_HONORARIOS
                   WHERE PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),0.00),
             DNVL((SELECT SUM(PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD * PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE)
                   FROM PYMINGR02_DET_CONCEPTOS
                   WHERE PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),0.00),
             PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS
         FROM PYMINGR01_CAB_FACTURAS
         INNER JOIN MSGPOLI07_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01)
         WHERE PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
         INTO
             :RELA_SICINGR01,
             :CLIENTE,
             :NROFACTURA,
             :FECHA,
             :TOTAL_DEPOSITOS,
             :TOTAL_GASTOS,
             :TOTAL_HONORARIOS,
             :TOTAL_SERVCOMP,
             :TOTAL_IVA
       DO
       BEGIN
          IF (:TOTAL_GASTOS > 1) THEN
            BEGIN
              TOTAL_SALDO = TOTAL_DEPOSITOS - TOTAL_GASTOS - TOTAL_HONORARIOS - TOTAL_SERVCOMP - TOTAL_IVA;
              SUSPEND;
            END
       END
    END
END
JAM$_PYMINGR01                 

DECLARE VARIABLE ID_SOCSYST10 BIGINT;
DECLARE VARIABLE ID_SOCSYST20 BIGINT;
DECLARE VARIABLE ID_PYMINGR18 BIGINT;
DECLARE VARIABLE ID_ON2CFDS15 BIGINT;
DECLARE VARIABLE ID_PYMINGR01 BIGINT;
DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
DECLARE VARIABLE ID_MSGPOLI26 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_TIPO BIGINT;
DECLARE VARIABLE RELA_SICINGR01 BIGINT;
DECLARE VARIABLE FOLIOFECHA TIMESTAMP;
DECLARE VARIABLE CANCELADO TIMESTAMP;
DECLARE VARIABLE PORCENTAJE NUMERIC(12,2);
DECLARE VARIABLE TIPOCAMBIO NUMERIC(12,2);
DECLARE VARIABLE CODIGO VARCHAR(20);
DECLARE VARIABLE FOLIOFORMATO VARCHAR(50);
DECLARE VARIABLE VAR_SUBTOTAL NUMERIC(15,2);
DECLARE VARIABLE CODIGO_CFD VARCHAR(10);
BEGIN
  SELECT SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :EMPRESA
  INTO :ID_SOCUSUA02;

  SELECT STRREPLACE(REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,'-','')
  FROM REP_SOCUSUA40_SOCUSUA02(:ID_SOCUSUA02)
  WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
  INTO :ARCHIVO_NOMBRE;

  ARCHIVO_NOMBRE = '1' || TRIM(:ARCHIVO_NOMBRE) || TRIM(PADLEFT(:MES, 2, '0')) || :ANO || '.TXT';

  SELECT SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10
  FROM SOCSYST10_TBL_LISTAESTADOS
  WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_COD = 'SC30'
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'CFD'
  INTO :ID_SOCSYST10;

  FOR
    SELECT
        SOCSYST20_DET_FACTELECT.ID_SOCSYST20,
        SOCSYST20_DET_FACTELECT.SOCSYST20_FOLIO_SERIE,
        CAST(SOCSYST20_DET_FACTELECT.SOCSYST20_ANO_APROBA AS VARCHAR(4)) || CAST(SOCSYST20_DET_FACTELECT.SOCSYST20_NRO_APROBA AS VARCHAR(14))
    FROM SOCSYST21_MOV_CONTADORES_EMP
    INNER JOIN SOCSYST20_DET_FACTELECT ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :EMPRESA
      AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10 = :ID_SOCSYST10

    UNION

    SELECT
        SOCSYST20_DET_FACTELECT.ID_SOCSYST20,
        SOCSYST20_DET_FACTELECT.SOCSYST20_FOLIO_SERIE,
    CAST(SOCSYST20_DET_FACTELECT.SOCSYST20_ANO_APROBA AS VARCHAR(4)) || CAST(SOCSYST20_DET_FACTELECT.SOCSYST20_NRO_APROBA AS VARCHAR(14))
    FROM SOCSYST20_DET_FACTELECT
    WHERE SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 IS NULL
      AND SOCSYST20_DET_FACTELECT.RELA_SOCSYST01 = :EMPRESA
    INTO :ID_SOCSYST20,
         :SOCSYST20_FOLIO_SERIE,
         :SOCSYST20_NRO_APROBA
  DO
  BEGIN
     FOR
       SELECT
           PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_FAPL,
           PYMINGR18_DEP_FACTELECT.ID_PYMINGR18,
           PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_TIPO,
           PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
           PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL * PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
           PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL - PYMINGR01_CAB_FACTURAS.PYMINGR01_DESCUENTOS,
           PYMINGR18_DEP_FACTELECT.PYMINGR18_CANCELADO,
           PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
           PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
           CATEGORIA.SOCSYST10_CODIGO
       FROM PYMINGR01_CAB_FACTURAS
       INNER JOIN SOCSYST20_DET_FACTELECT ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST20_DET_FACTELECT.RELA_SOCSYST01)
       INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
       INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
       INNER JOIN PYMINGR18_DEP_FACTELECT ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01)
       WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :EMPRESA
         AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01
         AND SOCSYST20_DET_FACTELECT.ID_SOCSYST20 = :ID_SOCSYST20
         AND EXTRACTYEAR(PYMINGR18_DEP_FACTELECT.PYMINGR18_FAPL) = :ANO
         AND EXTRACTMONTH(PYMINGR18_DEP_FACTELECT.PYMINGR18_FAPL) = :MES
       ORDER BY PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
       INTO
           :FOLIOFORMATO,
           :FOLIOFECHA,
           :ID_PYMINGR18,
           :RELA_SOCSYST10_TIPO,
           :RELA_SICINGR01,
           :IMPORTE_TOTAL,
           :VAR_SUBTOTAL,
           :CANCELADO,
           :ID_PYMINGR01,
           :TIPOCAMBIO,
           :CODIGO
     DO
     BEGIN
        TIPO_COMPROBANTE = 'I';

        IF (:RELA_SOCSYST10_TIPO IS NOT NULL) THEN
          SELECT RUPPER(SUBSTR(CBO_CFDS_TIPOS.SOCSYST10_CODIGO_EXT1,1,1))
          FROM CBO_CFDS_TIPOS
          WHERE CBO_CFDS_TIPOS.ID_SOCSYST10 = :RELA_SOCSYST10_TIPO
          INTO TIPO_COMPROBANTE;

        SELECT PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC
        FROM PRD_SICINGR01(:RELA_SICINGR01)
        INTO :RFC;

        SELECT FIRST 1 MSGPOLI09_CAB_IMPUESTOS.MSGPOLI09_PORCENTAJE
        FROM MSGPOLI12_MOV_FILTROIMPUESTOS
        INNER JOIN MSGPOLI09_CAB_IMPUESTOS ON (MSGPOLI12_MOV_FILTROIMPUESTOS.RELA_MSGPOLI09 = MSGPOLI09_CAB_IMPUESTOS.ID_MSGPOLI09)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS MODO ON (MSGPOLI12_MOV_FILTROIMPUESTOS.RELA_SOCSYST10_MODO = MODO.ID_SOCSYST10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO ON (MSGPOLI12_MOV_FILTROIMPUESTOS.RELA_SOCSYST10 = TIPO.ID_SOCSYST10)
        WHERE MSGPOLI12_MOV_FILTROIMPUESTOS.RELA_SOCSYST01 = :EMPRESA
          AND MODO.SOCSYST10_CODIGO = 'TRASLADA'
          AND TIPO.SOCSYST10_CODIGO = :CODIGO
        INTO :PORCENTAJE;

        IMPORTE_TOTAL_IMPUESTOS = :VAR_SUBTOTAL * (:PORCENTAJE / 100);

        RFC = TRIM(STRREPLACE(:RFC,'-',''));

        IF (:SOCSYST20_FOLIO_SERIE != '') THEN
          FOLIOFORMATO = STRREPLACE(:FOLIOFORMATO,:SOCSYST20_FOLIO_SERIE,'');

        FOLIO = CAST(:FOLIOFORMATO AS BIGINT);

        FOLIO_FECHA = PADLEFT(EXTRACTDAY(:FOLIOFECHA), 2, '0') || '/' ||
                      PADLEFT(EXTRACTMONTH(:FOLIOFECHA), 2, '0') || '/' ||
                      EXTRACTYEAR(:FOLIOFECHA) || ' ' || SUBSTR(CAST(:FOLIOFECHA AS TIME),1,8);

        ID_ON2CFDS15 = NULL;

        SELECT FIRST 1 ON2CFDS15_MOV_SAT.ID_ON2CFDS15
        FROM ON2CFDS15_MOV_SAT
        WHERE ON2CFDS15_MOV_SAT.RELA_PYMINGR18 = :ID_PYMINGR18
        INTO :ID_ON2CFDS15;
        
        IF (:ID_ON2CFDS15 IS NOT NULL) THEN
          FECHA = 'Si';
        ELSE
          FECHA = 'Pendiente';

        IF (:CANCELADO IS NOT NULL) THEN
          ESTADO = '0';
        ELSE
          ESTADO = '1';

        IF (:UPDATEACTION = 1 AND :FECHA = 'Pendiente') THEN
          BEGIN
             SELECT MSGPOLI26_CAB_INTERFACES.ID_MSGPOLI26
             FROM MSGPOLI26_CAB_INTERFACES
             WHERE MSGPOLI26_CAB_INTERFACES.MSGPOLI26_PROCESO = 'JAM$_PYMINGR01'
             INTO :ID_MSGPOLI26;

             INSERT INTO ON2CFDS15_MOV_SAT(ON2CFDS15_MOV_SAT.RELA_PYMINGR18,
                                           ON2CFDS15_MOV_SAT.RELA_MSGPOLI26)
             VALUES(:ID_PYMINGR18, :ID_MSGPOLI26);
          END
        ELSE
          BEGIN
             SELECT FIRST 1 CAST(CAST(ON2CFDS15_MOV_SAT.ON2CFDS15_FAPL AS DATE) AS VARCHAR(10))
             FROM ON2CFDS15_MOV_SAT
             WHERE ON2CFDS15_MOV_SAT.RELA_PYMINGR18 = :ID_PYMINGR18
             INTO :FECHA;
          END

        SUSPEND;

        IF (ESTADO = '0') THEN
          BEGIN
            ESTADO = '1';
            SUSPEND;
          END

        ARCHIVO_NOMBRE = NULL;

     END
  END
END
REP_PYMINVE10_PRODUCTOSXSERIE  

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  IF (:PARAM_PYMINVE10 != -1) THEN
    FOR
      SELECT
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD)
      FROM PYMINVE30_MOV_STOCK
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = :PARAM_PYMINVE10
      GROUP BY
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION
      HAVING SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD) > 0
      INTO
          :RELA_SOCWFLO01,
          :RELA_PYMINVE10,
          :SUCURSAL,
          :CODIGO_PRODUCTO,
          :DESCRIPCION,
          :CANTIDAD
    DO
    BEGIN
      FOR
        SELECT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
        FROM PYMINVE31_DEP_PROVEEDORES
        INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
        WHERE NOT EXISTS (SELECT PYMVENT21_DET_TICKETS.ID_PYMVENT21
                          FROM PYMVENT21_DET_TICKETS
                          WHERE PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
          AND NOT EXISTS (SELECT PYMINVE29_DEP_STOCK.ID_PYMINVE29
                          FROM PYMINVE29_DEP_STOCK
                          WHERE PYMINVE29_DEP_STOCK.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
          AND PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = :PARAM_PYMINVE10
          AND PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :RELA_SOCWFLO01
        INTO :NROLOTE
      DO
      BEGIN
        SUSPEND;
      END

      IF (:CANTIDAD != 0) THEN
        SUSPEND;
    END
  ELSE
    FOR
      SELECT
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD)
      FROM PYMINVE30_MOV_STOCK
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      GROUP BY
          PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
          PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION
      HAVING SUM(PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD) > 0
      INTO
          :RELA_SOCWFLO01,
          :RELA_PYMINVE10,
          :SUCURSAL,
          :CODIGO_PRODUCTO,
          :DESCRIPCION,
          :CANTIDAD
    DO
    BEGIN
      FOR
        SELECT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
        FROM PYMINVE31_DEP_PROVEEDORES
        INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
        WHERE NOT EXISTS (SELECT PYMVENT21_DET_TICKETS.ID_PYMVENT21
                          FROM PYMVENT21_DET_TICKETS
                          WHERE PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
          AND NOT EXISTS (SELECT PYMINVE29_DEP_STOCK.ID_PYMINVE29
                          FROM PYMINVE29_DEP_STOCK
                          WHERE PYMINVE29_DEP_STOCK.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
          AND PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = :RELA_PYMINVE10
          AND PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :RELA_SOCWFLO01
        INTO :NROLOTE
      DO
      BEGIN
        SUSPEND;
      END

      IF (:CANTIDAD != 0) THEN
        SUSPEND;
    END
END
REP_PYMINGR01_EDOCUENTA        

DECLARE VARIABLE ID_PYMINGR36 BIGINT;
DECLARE VARIABLE SALDO_CHEQUES DECIMAL(15,2);
BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA,
      :LOGO;

  FOR
    SELECT
        PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
        PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
        MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07,
        PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
        SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
        TIPO.SOCSYST10_FILTRO_DES,
        MONEDA.SOCSYST10_CODIGO,
        MSGPOLI07_DET_FACTURAS.MSGPOLI07_CLIENTE,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_CONCEPTO,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
        (SELECT PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
         FROM PYMINGR18_DEP_FACTELECT
         WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
        (SELECT FIRST 1 PYMINGR07_DEP_FACTURAS.PYMINGR07_PEDIMENTO
         FROM PYMINGR07_DEP_FACTURAS
         WHERE PYMINGR07_DEP_FACTURAS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
        PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_IMPUESTOS,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
        (SELECT FIRST 1 PYMINGR07_DEP_FACTURAS.PYMINGR07_REFERENCIA
         FROM PYMINGR07_DEP_FACTURAS
         WHERE PYMINGR07_DEP_FACTURAS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
        B_SUBSTR(PYMINGR01_CAB_FACTURAS.PYMINGR01_NOTAS,1,1000)
    FROM PYMINGR01_CAB_FACTURAS
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
    INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01 = MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = TIPO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
    WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
      AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    INTO
        :RELA_SOCWFLO01,
        :RELA_SICINGR01,
        :RELA_MSGPOLI07,
        :ID_PYMINGR01,
        :SUCURSAL,
        :TIPO,
        :MONEDA,
        :CLIENTE,
        :CONCEPTO,
        :FOLIO,
        :FOLIO_ELECT,
        :PEDIMENTO,
        :FECHA,
        :SUBTOTAL,
        :IMPUESTOS,
        :TOTAL,
        :TIPOCAMBIO,
        :REFERENCIA,
        :NOTAS
  DO
  BEGIN
     ANTICIPO = 0;
     HONORARIOS = 0;
     GASTOS = 0;
     SALDO = 0;
     SALDO_CHEQUES = 0;
     ID_PYMINGR36 = NULL;

     SELECT SUM(PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL)
     FROM PYMINGR15_MOV_GASTOS
     INNER JOIN PYMEGRE02_CAB_FACTURAS ON (PYMINGR15_MOV_GASTOS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
     WHERE PYMINGR15_MOV_GASTOS.RELA_PYMINGR01 = :ID_PYMINGR01
     INTO :GASTOS;

     IF (:GASTOS IS NULL) THEN
       GASTOS = 0;

     SELECT SUM(PYMINGR37_MOV_ANTICIPOS.PYMINGR37_IMPORTE)
     FROM PYMINGR37_MOV_ANTICIPOS
     INNER JOIN PYMINGR36_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.ID_PYMINGR36 = PYMINGR37_MOV_ANTICIPOS.RELA_PYMINGR36)
     WHERE PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = :RELA_MSGPOLI07
     INTO :ANTICIPO;

     IF (:ANTICIPO IS NULL) THEN
       BEGIN
         SELECT SUM(PYMINGR16_MOV_ANTICIPOS.PYMINGR16_IMPORTE)
         FROM PYMINGR16_MOV_ANTICIPOS
         WHERE PYMINGR16_MOV_ANTICIPOS.RELA_PYMINGR01 = :ID_PYMINGR01
         INTO :ANTICIPO;
    
         IF (:ANTICIPO IS NULL) THEN
           ANTICIPO = 0;
       END

     SELECT SUM(PYMINGR08_DEP_HONORARIOS.PYMINGR08_HONORARIOS)
     FROM PYMINGR08_DEP_HONORARIOS
     WHERE PYMINGR08_DEP_HONORARIOS.RELA_PYMINGR01 = :ID_PYMINGR01
     INTO :HONORARIOS;

     IF (:HONORARIOS IS NULL) THEN
       HONORARIOS = 0;

     EROGACIONES = SUBTOTAL - HONORARIOS;
     AFAVOR = TOTAL;

     IF (GASTOS != 0) THEN
       BEGIN
         SUBTOTAL = SUBTOTAL + GASTOS + IMPUESTOS;
         TOTAL = SUBTOTAL - ANTICIPO;
         AFAVOR = TOTAL;
       END

     SELECT FIRST 1
         PYMINGR36_DET_FACTURAS.ID_PYMINGR36,
         SUM(PYMINGR36_DET_FACTURAS.PYMINGR36_SALDO)
     FROM PYMINGR36_DET_FACTURAS
     INNER JOIN MSGPOLI07_DET_FACTURAS ON (PYMINGR36_DET_FACTURAS.RELA_MSGPOLI07 = MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07)
     INNER JOIN PYMINGR01_CAB_FACTURAS ON (MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01)
     WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :ID_PYMINGR01
     GROUP BY PYMINGR36_DET_FACTURAS.ID_PYMINGR36
     ORDER BY PYMINGR36_DET_FACTURAS.ID_PYMINGR36 DESC
     INTO
         :ID_PYMINGR36,
         :SALDO;
    
     IF (:ID_PYMINGR36 IS NOT NULL) THEN
       BEGIN
         SELECT SUM(PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTEPARCIAL)
         FROM PYMEGRE11_DET_FACTURASNOTAS
         INNER JOIN PYMEGRE10_CAB_CHEQUES ON (PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10 = PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10)
         WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMINGR36 = :ID_PYMINGR36
           AND PYMEGRE10_CAB_CHEQUES.RELA_MSGPOLI01_CANCELADO IS NULL
         INTO :SALDO_CHEQUES;

         IF (:SALDO_CHEQUES IS NOT NULL) THEN
           AFAVOR = (SALDO * -1) - SALDO_CHEQUES;
         ELSE
           AFAVOR = SALDO;

         TOTAL = AFAVOR;
       END

     DIAS = DAYSBETWEEN(:FECHA,:PARAM_FECHAHASTA);

     MENOS30 = 0;
     MENOS60 = 0;
     MENOS90 = 0;
     MAS90 = 0;

     IF (:DIAS < 30) THEN
        MENOS30 = AFAVOR;
     ELSE
        IF (:DIAS < 60 AND :DIAS >= 30) THEN
           MENOS60 = AFAVOR;
        ELSE
           IF (:DIAS < 90 AND :DIAS >= 60 ) THEN
              MENOS90 = AFAVOR;
           ELSE
              MAS90 = AFAVOR;

     SUSPEND;
  END
END
JAM$_PYMVENT20                 

DECLARE VARIABLE ID_SOCSYST10 BIGINT;
DECLARE VARIABLE ID_SOCSYST20 BIGINT;
DECLARE VARIABLE ID_PYMVENT28 BIGINT;
DECLARE VARIABLE ID_ON2CFDS15 BIGINT;
DECLARE VARIABLE ID_PYMVENT20 BIGINT;
DECLARE VARIABLE ID_SOCUSUA02 BIGINT;
DECLARE VARIABLE ID_MSGPOLI26 BIGINT;
DECLARE VARIABLE FOLIOFORMATO VARCHAR(50);
DECLARE VARIABLE FOLIOFECHA TIMESTAMP;
DECLARE VARIABLE CANCELADO TIMESTAMP;
DECLARE VARIABLE PORCENTAJE NUMERIC(12,2);
DECLARE VARIABLE TOTAL NUMERIC(12,2);
BEGIN
  SELECT SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :EMPRESA
  INTO :ID_SOCUSUA02;

  SELECT STRREPLACE(REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,'-','')
  FROM REP_SOCUSUA40_SOCUSUA02(:ID_SOCUSUA02)
  WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
  INTO :ARCHIVO_NOMBRE;

  ARCHIVO_NOMBRE = '1' || TRIM(:ARCHIVO_NOMBRE) || TRIM(PADLEFT(:MES, 2, '0')) || :ANO || '.TXT';

  SELECT SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10
  FROM SOCSYST10_TBL_LISTAESTADOS
  WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_COD = 'SC30'
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'CFD'
  INTO :ID_SOCSYST10;

  FOR
    SELECT
        SOCSYST20_DET_FACTELECT.ID_SOCSYST20,
        SOCSYST20_DET_FACTELECT.SOCSYST20_FOLIO_SERIE,
        CAST(SOCSYST20_DET_FACTELECT.SOCSYST20_ANO_APROBA AS VARCHAR(4)) || CAST(SOCSYST20_DET_FACTELECT.SOCSYST20_NRO_APROBA AS VARCHAR(14))
    FROM SOCSYST21_MOV_CONTADORES_EMP
    INNER JOIN SOCSYST20_DET_FACTELECT ON (SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 = SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21)
    WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :EMPRESA
      AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10 = :ID_SOCSYST10

    UNION

    SELECT
        SOCSYST20_DET_FACTELECT.ID_SOCSYST20,
        SOCSYST20_DET_FACTELECT.SOCSYST20_FOLIO_SERIE,
    CAST(SOCSYST20_DET_FACTELECT.SOCSYST20_ANO_APROBA AS VARCHAR(4)) || CAST(SOCSYST20_DET_FACTELECT.SOCSYST20_NRO_APROBA AS VARCHAR(14))
    FROM SOCSYST20_DET_FACTELECT
    WHERE SOCSYST20_DET_FACTELECT.RELA_SOCSYST21 IS NULL
      AND SOCSYST20_DET_FACTELECT.RELA_SOCSYST01 = :EMPRESA
    INTO :ID_SOCSYST20,
         :SOCSYST20_FOLIO_SERIE,
         :SOCSYST20_NRO_APROBA
  DO
  BEGIN
     FOR
       SELECT
           PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL,
           PYMVENT28_DEP_FACTELECT.ID_PYMVENT28,
           PYMVENT24_CAB_CLIENTES.PYMVENT24_DOCUMENTOS,
           PYMVENT20_CAB_TICKETS.PYMVENT20_TOTAL,
           PYMVENT28_DEP_FACTELECT.PYMVENT28_CANCELADO,
           PYMVENT20_CAB_TICKETS.ID_PYMVENT20
       FROM PYMVENT20_CAB_TICKETS
       INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
       INNER JOIN PYMVENT28_DEP_FACTELECT ON (PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20)
       INNER JOIN SOCSYST20_DET_FACTELECT ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = SOCSYST20_DET_FACTELECT.RELA_SOCSYST01)
       WHERE PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :EMPRESA
         AND SOCSYST20_DET_FACTELECT.ID_SOCSYST20 = :ID_SOCSYST20
         AND EXTRACTYEAR(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL) = :ANO
         AND EXTRACTMONTH(PYMVENT28_DEP_FACTELECT.PYMVENT28_FAPL) = :MES
       ORDER BY PYMVENT28_DEP_FACTELECT.PYMVENT28_DOCNRO
       INTO
           :FOLIOFORMATO,
           :FOLIOFECHA,
           :ID_PYMVENT28,
           :RFC,
           :IMPORTE_TOTAL,
           :CANCELADO,
           :ID_PYMVENT20
     DO
     BEGIN
        TIPO_COMPROBANTE = 'I';

        SELECT PRD_PYMVENT20_PYMVENT01.PORCENTAJE
        FROM PRD_PYMVENT20_PYMVENT01(:EMPRESA,:ID_PYMVENT20)
        INTO :PORCENTAJE;

        SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL)
        FROM PYMVENT21_DET_TICKETS
        WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = :ID_PYMVENT20
        INTO :TOTAL;

        IMPORTE_TOTAL_IMPUESTOS = :TOTAL * (:PORCENTAJE / 100);

        RFC = TRIM(STRREPLACE(:RFC,'-',''));

        IF (:SOCSYST20_FOLIO_SERIE != '') THEN
          FOLIOFORMATO = SUBSTR(:FOLIOFORMATO,STRLEN(:SOCSYST20_FOLIO_SERIE)+1,STRLEN(:FOLIOFORMATO));

        FOLIO = CAST(:FOLIOFORMATO AS BIGINT);

        FOLIO_FECHA = PADLEFT(EXTRACTDAY(:FOLIOFECHA), 2, '0') || '/' ||
                      PADLEFT(EXTRACTMONTH(:FOLIOFECHA), 2, '0') || '/' ||
                      EXTRACTYEAR(:FOLIOFECHA) || ' ' || SUBSTR(CAST(:FOLIOFECHA AS TIME),1,8);

        ID_ON2CFDS15 = NULL;

        SELECT ON2CFDS15_MOV_SAT.ID_ON2CFDS15
        FROM ON2CFDS15_MOV_SAT
        WHERE ON2CFDS15_MOV_SAT.RELA_PYMVENT28 = :ID_PYMVENT28
        INTO :ID_ON2CFDS15;
        
        IF (:ID_ON2CFDS15 IS NOT NULL) THEN
          FECHA = 'Si';
        ELSE
          FECHA = 'Pendiente';

        IF (:CANCELADO IS NOT NULL) THEN
          ESTADO = '0';
        ELSE
          ESTADO = '1';

        IF (:UPDATEACTION = 1 AND :FECHA = 'Pendiente') THEN
          BEGIN
             SELECT MSGPOLI26_CAB_INTERFACES.ID_MSGPOLI26
             FROM MSGPOLI26_CAB_INTERFACES
             WHERE MSGPOLI26_CAB_INTERFACES.MSGPOLI26_PROCESO = 'JAM$_PYMVENT20'
             INTO :ID_MSGPOLI26;

             INSERT INTO ON2CFDS15_MOV_SAT(ON2CFDS15_MOV_SAT.RELA_PYMVENT28,
                                           ON2CFDS15_MOV_SAT.RELA_MSGPOLI26)
             VALUES(:ID_PYMVENT28, :ID_MSGPOLI26);
          END
        ELSE
          BEGIN
             SELECT CAST(CAST(ON2CFDS15_MOV_SAT.ON2CFDS15_FAPL AS DATE) AS VARCHAR(10))
             FROM ON2CFDS15_MOV_SAT
             WHERE ON2CFDS15_MOV_SAT.RELA_PYMVENT28 = :ID_PYMVENT28
             INTO :FECHA;
          END

        SUSPEND;

        IF (ESTADO = '0') THEN
          BEGIN
            ESTADO = '1';
            SUSPEND;
          END

        ARCHIVO_NOMBRE = NULL;
     END
  END
END
PRD_PYMINGR05_IMPUESTOS        

BEGIN
  FOR
    SELECT PYMINGR02_DET_CONCEPTOS.ID_PYMINGR02
    FROM PYMINGR01_CAB_FACTURAS
    INNER JOIN PYMINGR02_DET_CONCEPTOS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01)
    WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :PARAM_ID
    INTO :ID_DETALLE
  DO
  BEGIN
    FOR
      SELECT
          'I',
          CAST('IVA' AS VARCHAR(6)),
          PRD_PYMINGR01_IMPUESTOS.PIVA,
          PRD_PYMINGR01_IMPUESTOS.IVA
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_DETALLE, 'CONCEPTOS')
      WHERE PRD_PYMINGR01_IMPUESTOS.PIVA IS NOT NULL

      UNION

      SELECT
          'R',
          CAST('RETIVA' AS VARCHAR(6)),
          PRD_PYMINGR01_IMPUESTOS.PRETIVA,
          PRD_PYMINGR01_IMPUESTOS.RETIVA
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_DETALLE, 'CONCEPTOS')
      WHERE PRD_PYMINGR01_IMPUESTOS.PRETIVA IS NOT NULL

      UNION

      SELECT
          'R',
          CAST('RETISR' AS VARCHAR(6)),
          PRD_PYMINGR01_IMPUESTOS.PRETISR,
          PRD_PYMINGR01_IMPUESTOS.RETISR
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_DETALLE, 'CONCEPTOS')
      WHERE PRD_PYMINGR01_IMPUESTOS.PRETISR IS NOT NULL
      INTO
        :TIPO,
        :IMPUESTO,
        :TASA,
        :IMPORTE
    DO
    BEGIN
      SUSPEND;
    END
  END

  FOR
    SELECT PYMINGR06_DET_ITEMS.ID_PYMINGR06
    FROM PYMINGR01_CAB_FACTURAS
    INNER JOIN PYMINGR06_DET_ITEMS ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR06_DET_ITEMS.RELA_PYMINGR01)
    WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :PARAM_ID
    INTO :ID_DETALLE
  DO
  BEGIN
    FOR
      SELECT
          'I',
          CAST('IVA' AS VARCHAR(6)),
          PRD_PYMINGR01_IMPUESTOS.PIVA,
          PRD_PYMINGR01_IMPUESTOS.IVA
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_DETALLE, 'ITEMS')
      WHERE PRD_PYMINGR01_IMPUESTOS.PIVA IS NOT NULL

      UNION

      SELECT
          'R',
          CAST('RETIVA' AS VARCHAR(6)),
          PRD_PYMINGR01_IMPUESTOS.PRETIVA,
          PRD_PYMINGR01_IMPUESTOS.RETIVA
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_DETALLE, 'ITEMS')
      WHERE PRD_PYMINGR01_IMPUESTOS.PRETIVA IS NOT NULL

      UNION

      SELECT
          'R',
          CAST('RETISR' AS VARCHAR(6)),
          PRD_PYMINGR01_IMPUESTOS.PRETISR,
          PRD_PYMINGR01_IMPUESTOS.RETISR
      FROM PRD_PYMINGR01_IMPUESTOS(:ID_DETALLE, 'ITEMS')
      WHERE PRD_PYMINGR01_IMPUESTOS.PRETISR IS NOT NULL
      INTO
        :TIPO,
        :IMPUESTO,
        :TASA,
        :IMPORTE
    DO
    BEGIN
      SUSPEND;
    END
  END
END
PRD_ADDENDA_AUTOZONE           

DECLARE VARIABLE RELA_SOCUSUA02_EMISOR BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_RECEPTOR BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_CONTACTO BIGINT;
BEGIN
  IF (:PARAM_TIPO = 0) THEN
    BEGIN
      SELECT
          SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
          SICINGR01_CAB_CLIENTES.RELA_SOCUSUA02,
          SICINGR02_DET_REFERENTES.RELA_SOCUSUA02,
          SICINGR01_CAB_CLIENTES.SICINGR01_NOTAS
      FROM PYMINGR01_CAB_FACTURAS
      INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
      INNER JOIN SICINGR01_CAB_CLIENTES ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = SICINGR01_CAB_CLIENTES.ID_SICINGR01)
      INNER JOIN SICINGR02_DET_REFERENTES ON (SICINGR01_CAB_CLIENTES.ID_SICINGR01 = SICINGR02_DET_REFERENTES.RELA_SICINGR01)
      WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :PARAM_ID
      INTO
          :RELA_SOCUSUA02_EMISOR,
          :RELA_SOCUSUA02_RECEPTOR,
          :RELA_SOCUSUA02_CONTACTO,
          :BUYER;

      SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_CODEXT
      FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02_RECEPTOR)
      WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
      INTO :DEPTID;

      SELECT REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_MAIL_PERSO
      FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02_CONTACTO)
      INTO :EMAIL;
    END
  ELSE
    IF (:PARAM_TIPO = 1) THEN
      SELECT
          SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CORRERO
      FROM PYMVENT20_CAB_TICKETS
      INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
      INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
      WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :PARAM_ID
      INTO
          :RELA_SOCUSUA02_EMISOR,
          :BUYER,
          :EMAIL;
    ELSE
      IF (:PARAM_TIPO = 2) THEN
        SELECT
            SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CORRERO
        FROM ON2CFDS10_CAB_FACTURAS
        INNER JOIN SOCSYST01_CAB_CLIENTES ON (ON2CFDS10_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (ON2CFDS10_CAB_FACTURAS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        WHERE ON2CFDS10_CAB_FACTURAS.ID_ON2CFDS10 = :PARAM_ID
        INTO
            :RELA_SOCUSUA02_EMISOR,
            :BUYER,
            :EMAIL;

  SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_CODEXT
  FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02_EMISOR)
  WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
  INTO :VENDOR_ID;
                                       
  SUSPEND;
END
REP_PYMVENT20_VENTAS           

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :ID_SOCSYST01,
     :EMPRESA;

  IF (:PARAM_SOCWFLO01 != -1) THEN
    FOR
      SELECT
          PYMVENT21_DET_TICKETS.RELA_PYMVENT20,
          PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
          PYMVENT21_DET_TICKETS.ID_PYMVENT21,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_TOPREGALO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
          PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
          PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
          PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
          PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL,
          PYMVENT21_DET_TICKETS.PYMVENT21_TOPREGALO,
          SNVL((SELECT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
                FROM PYMINVE31_DEP_PROVEEDORES
                WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE), '')
      FROM PYMVENT21_DET_TICKETS
      INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
      WHERE PYMVENT20_CAB_TICKETS.PYMVENT20_CANCELADO = 0
        AND PYMVENT21_DET_TICKETS.RELA_PYMVENT21 IS NULL
        AND PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = :PARAM_SOCWFLO01
        AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
      INTO
          :RELA_PYMVENT20,
          :RELA_PYMINVE10,
          :ID_PYMVENT21,
          :SUCURSAL,
          :CATEGORIA,
          :FAMILIA,
          :CODIGO,
          :PRODUCTO,
          :MAXREGALO,
          :PRECIO_COSTO,
          :CANTIDAD,
          :IMPOUNITARIO,
          :IMPOSUBTOTAL,
          :DESCUENTOS,
          :TOTAL,
          :REGALOS,
          :NROLOTE
    DO
    BEGIN
      IMPORTE_REGALOS = 0;
      UTILIDAD = 0;
      PORCENTAJE = 0;

      IF (:REGALOS != 0) THEN
        SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL)
        FROM PYMVENT21_DET_TICKETS
        WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = :RELA_PYMVENT20
          AND PYMVENT21_DET_TICKETS.PYMVENT21_PORCENTAJE = 100
        INTO :IMPORTE_REGALOS;

      UTILIDAD = TOTAL - PRECIO_COSTO - DESCUENTOS - IMPORTE_REGALOS;
      PORCENTAJE = (UTILIDAD / PRECIO_COSTO) * 100;

      SUSPEND;
    END
  ELSE
    FOR
      SELECT
          PYMVENT21_DET_TICKETS.RELA_PYMVENT20,
          PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
          PYMVENT21_DET_TICKETS.ID_PYMVENT21,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          CATEGORIA.SOCSYST10_FILTRO_DES,
          FAMILIA.SOCSYST10_FILTRO_DES,
          PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_TOPREGALO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
          PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
          PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
          PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS,
          PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL,
          PYMVENT21_DET_TICKETS.PYMVENT21_TOPREGALO,
          SNVL((SELECT PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
                FROM PYMINVE31_DEP_PROVEEDORES
                WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = PYMVENT21_DET_TICKETS.RELA_PYMINVE30_NOSERIE), '')
      FROM PYMVENT21_DET_TICKETS
      INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS FAMILIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_FAMILIA = FAMILIA.ID_SOCSYST10)
      WHERE PYMVENT20_CAB_TICKETS.PYMVENT20_CANCELADO = 0
        AND PYMVENT21_DET_TICKETS.RELA_PYMVENT21 IS NULL
        AND PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
      INTO
          :RELA_PYMVENT20,
          :RELA_PYMINVE10,
          :ID_PYMVENT21,
          :SUCURSAL,
          :CATEGORIA,
          :FAMILIA,
          :CODIGO,
          :PRODUCTO,
          :MAXREGALO,
          :PRECIO_COSTO,
          :CANTIDAD,
          :IMPOUNITARIO,
          :IMPOSUBTOTAL,
          :DESCUENTOS,
          :TOTAL,
          :REGALOS,
          :NROLOTE
    DO
    BEGIN
      IMPORTE_REGALOS = 0;
      UTILIDAD = 0;
      PORCENTAJE = 0;

      IF (:REGALOS != 0) THEN
        SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL)
        FROM PYMVENT21_DET_TICKETS
        WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = :RELA_PYMVENT20
          AND PYMVENT21_DET_TICKETS.PYMVENT21_PORCENTAJE = 100
        INTO :IMPORTE_REGALOS;

      UTILIDAD = TOTAL - PRECIO_COSTO - DESCUENTOS - IMPORTE_REGALOS;
      PORCENTAJE = (UTILIDAD / PRECIO_COSTO) * 100;

      SUSPEND;
    END
END
REP_SICINGR01_FACTURAS         

DECLARE VARIABLE DBL_SALDO DOUBLE PRECISION;
DECLARE VARIABLE CODIGO VARCHAR(50);
BEGIN
  SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
  FROM CBO_CLIENTES_EMPRESAS_ALL
  WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :CODIGO;

  IF (:PARAM_CLIENTE != -1) THEN
    BEGIN
      FOR
        SELECT
            PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
            PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
            PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
            PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
            PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO,
            PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            CBO_SICINGR01.ENTIDAD,
            TIPO_FACTURA.SOCSYST10_FILTRO_DES,
            MONEDA.SOCSYST10_CODIGO,
            PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
            (SELECT FIRST 1 PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
             FROM PYMINGR18_DEP_FACTELECT
             WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
            PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
            PYMINGR01_CAB_FACTURAS.PYMINGR01_FVTO,
            PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
            PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
            (SELECT CASE WHEN SUM(PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE) IS NULL THEN 0.00 END
             FROM MSGPOLI07_DET_FACTURAS
             INNER JOIN PYMINGR31_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07)
             WHERE MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01),
            (SELECT FIRST 1 PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
             FROM PYMINGR03_DET_REFERENCIAS
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
             WHERE PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01
               AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'REFERENCIAS')
        FROM PYMINGR01_CAB_FACTURAS
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
        INNER JOIN CBO_TIPOFACTURAS TIPO_FACTURA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = TIPO_FACTURA.ID_SOCSYST10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
        WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
          AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = :PARAM_CLIENTE
          AND PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = :PARAM_MONEDA
          AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
            :RELA_SOCSYST01,
            :RELA_SOCWFLO01,
            :RELA_SICINGR01,
            :RELA_MSGPOLI01,
            :RELA_MSGPOLI01_CANCELADO,
            :ID_PYMINGR01,
            :SUCURSAL,
            :CLIENTE,
            :TIPO_FACTURA,
            :MONEDA,
            :DOCNRO,
            :FOLIO_ELECT,
            :MSGPOLI07_FFACT,
            :FECHAVTO,
            :TIPOCAMBIO,
            :TOTAL,
            :TOTAL_DEPOSITO,
            :REFERENCIAS
      DO
      BEGIN
        DBL_SALDO = 0.00;
        FECHA_PAGO = NULL;
        IMPORTE = NULL;
        SALDO = NULL;

        FOR
          SELECT
              PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP,
              PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE
          FROM MSGPOLI07_DET_FACTURAS
          INNER JOIN PYMINGR31_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07)
          INNER JOIN PYMINGR30_CAB_DEPOSITOS ON (PYMINGR31_DET_FACTURAS.RELA_PYMINGR30 = PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30)
          WHERE MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = :RELA_MSGPOLI01
          INTO
              :FECHA_PAGO,
              :IMPORTE
        DO
        BEGIN
          DBL_SALDO = DBL_SALDO + IMPORTE;
          SALDO = TOTAL - DBL_SALDO;

          SUSPEND;
        END

        IF (:FECHA_PAGO IS NULL) THEN
          SUSPEND;
      END
    END
  ELSE
    BEGIN
      FOR
        SELECT
            PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
            PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01,
            PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
            PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
            PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO,
            PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            CBO_SICINGR01.ENTIDAD,
            TIPO_FACTURA.SOCSYST10_FILTRO_DES,
            MONEDA.SOCSYST10_CODIGO,
            PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
            (SELECT FIRST 1 PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
             FROM PYMINGR18_DEP_FACTELECT
             WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
            PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
            PYMINGR01_CAB_FACTURAS.PYMINGR01_FVTO,
            PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
            PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
            (SELECT CASE WHEN SUM(PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE) IS NULL THEN 0.00 END
             FROM MSGPOLI07_DET_FACTURAS
             INNER JOIN PYMINGR31_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07)
             WHERE MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01),
            (SELECT FIRST 1 PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
             FROM PYMINGR03_DET_REFERENCIAS
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
             WHERE PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01
               AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'REFERENCIAS')
        FROM PYMINGR01_CAB_FACTURAS
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
        INNER JOIN CBO_TIPOFACTURAS TIPO_FACTURA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = TIPO_FACTURA.ID_SOCSYST10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
        WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
          AND PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = :PARAM_MONEDA
          AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
            :RELA_SOCSYST01,
            :RELA_SOCWFLO01,
            :RELA_SICINGR01,
            :RELA_MSGPOLI01,
            :RELA_MSGPOLI01_CANCELADO,
            :ID_PYMINGR01,
            :SUCURSAL,
            :CLIENTE,
            :TIPO_FACTURA,
            :MONEDA,
            :DOCNRO,
            :FOLIO_ELECT,
            :MSGPOLI07_FFACT,
            :FECHAVTO,
            :TIPOCAMBIO,
            :TOTAL,
            :TOTAL_DEPOSITO,
            :REFERENCIAS
      DO
      BEGIN
        DBL_SALDO = 0.00;
        FECHA_PAGO = NULL;
        IMPORTE = NULL;
        SALDO = NULL;

        FOR
          SELECT
              PYMINGR30_CAB_DEPOSITOS.PYMINGR30_FDEP,
              PYMINGR31_DET_FACTURAS.PYMINGR31_IMPORTE
          FROM MSGPOLI07_DET_FACTURAS
          INNER JOIN PYMINGR31_DET_FACTURAS ON (MSGPOLI07_DET_FACTURAS.ID_MSGPOLI07 = PYMINGR31_DET_FACTURAS.RELA_MSGPOLI07)
          INNER JOIN PYMINGR30_CAB_DEPOSITOS ON (PYMINGR31_DET_FACTURAS.RELA_PYMINGR30 = PYMINGR30_CAB_DEPOSITOS.ID_PYMINGR30)
          WHERE MSGPOLI07_DET_FACTURAS.RELA_MSGPOLI01 = :RELA_MSGPOLI01
          INTO
              :FECHA_PAGO,
              :IMPORTE
        DO
        BEGIN
          DBL_SALDO = DBL_SALDO + IMPORTE;
          SALDO = TOTAL - DBL_SALDO;

          SUSPEND;
        END

        IF (:FECHA_PAGO IS NULL) THEN
          SUSPEND;
      END
    END
END
REP_PYMINGR01_FACTURAS         

DECLARE VARIABLE SQLUSER VARCHAR(2000);
DECLARE VARIABLE SQLWHERE VARCHAR(500);
BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  SQLUSER = 'SELECT
                 PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
                 PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
                 PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO,
                 PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
                 SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
                 TIPO.SOCSYST10_FILTRO_DES,
                 MONEDA.SOCSYST10_CODIGO,
                 CBO_SICINGR01.SOCUSUA02_USUARIO,
                 CBO_SICINGR01.ENTIDAD,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_CONCEPTO,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
                 (SELECT FIRST 1 PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
                  FROM PYMINGR18_DEP_FACTELECT
                  WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
                 PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO
             FROM PYMINGR01_CAB_FACTURAS
             INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
             INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = TIPO.ID_SOCSYST10)
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
             WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = ' || :PARAM_EMPRESA ||
             ' AND PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = ' || :PARAM_ORGANIGRAMA ||
             ' AND PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = ' || :PARAM_MONEDA ||
             ' AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN ''' || :PARAM_FECHADESDE || ''' AND ''' || :PARAM_FECHAHASTA || '''';

  SQLWHERE = '';
  IF (:PARAM_CLIENTE != -1) THEN
    SQLWHERE = ' AND PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = ' || :PARAM_CLIENTE;

  FOR EXECUTE STATEMENT :SQLUSER || :SQLWHERE
  INTO
      :RELA_SICINGR01,
      :RELA_MSGPOLI01,
      :RELA_MSGPOLI01_CANCELADO,
      :ID_PYMINGR01,
      :SUCURSAL,
      :TIPO,
      :MONEDA,
      :CODIGO_USUARIO,
      :CLIENTE,
      :CONCEPTO,
      :FOLIO,
      :FOLIO_ELECT,
      :FECHA,
      :SUBTOTAL,
      :TOTAL,
      :TIPOCAMBIO
  DO
  BEGIN
    IF (:RELA_MSGPOLI01_CANCELADO IS NOT NULL) THEN
      BEGIN
        SUBTOTAL = 0;
        TOTAL = 0;
        IVA = 0;
        IEPS = 0;
        RETISR = 0;
        RETIVA = 0;
      END
    ELSE
      SELECT
          SUM(REP_PYMINGR02_PYMINGR06.IVA),
          SUM(REP_PYMINGR02_PYMINGR06.IEPS),
          SUM(REP_PYMINGR02_PYMINGR06.RETISR),
          SUM(REP_PYMINGR02_PYMINGR06.RETIVA)
      FROM REP_PYMINGR02_PYMINGR06(:ID_PYMINGR01)
      WHERE REP_PYMINGR02_PYMINGR06.CODIGO != 'GASTOS'
      INTO
         :IVA,
         :IEPS,
         :RETISR,
         :RETIVA;

      SUSPEND;
  END
END
VW_PYMINVE30_CARGARAPIDA       

DECLARE VARIABLE CODIGO_MOV VARCHAR(10);
DECLARE VARIABLE PRECIO_PROVEEDOR DOUBLE PRECISION;
BEGIN
    SELECT PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO
    FROM PYMINVE50_CAB_CONCEPTOS
    WHERE PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50 = :PARAM_PYMINVE50
    INTO :CODIGO_MOV;
    
    IF (:CODIGO_MOV != 'TR-SA') THEN
      FOR
        SELECT 
            PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE41,
            PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE30
        FROM PYMINVE42_MOV_CARGARAPIDA
        WHERE PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE41 = :PARAM_PYMINVE41
        INTO
            :ID_PYMINVE41,
            :ID_PYMINVE30
      DO
      BEGIN
        FOR
          SELECT
              PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
              PYMINVE30_MOV_STOCK.RELA_PYMINVE30,
              SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
              PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
              PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
              PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
              PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO
          FROM PYMINVE30_MOV_STOCK
          INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
          INNER JOIN PYMINVE40_ARB_LOCACIONES ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
          INNER JOIN PYMINVE50_CAB_CONCEPTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
          INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
          WHERE PYMINVE30_MOV_STOCK.ID_PYMINVE30 = :ID_PYMINVE30
            AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50 = :PARAM_PYMINVE50
          INTO
              :RELA_SOCWFLO01,
              :RELA_PYMINVE30,
              :SUCURSAL,
              :ALMACEN,
              :CONCEPTO,
              :CODIGO,
              :PRODUCTO,
              :CANTIDAD,
              :IMPORTE,
              :TOTAL
        DO
        BEGIN
          IF (:CODIGO_MOV = 'SA-NU') THEN
            BEGIN
              CANTIDAD = CANTIDAD * -1;
              TOTAL = CANTIDAD * IMPORTE;
            END

          SERIE_LOTE = '';
          PROVEEDOR = '';
          PRECIO_PROVEEDOR = 0;

          SELECT
              PYMINVE12_DET_PROVEEDORES.PYMINVE12_PROVEEDOR,
              PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
              PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
          FROM PYMINVE31_DEP_PROVEEDORES
          INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
          WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :ID_PYMINVE30
          INTO
              :PROVEEDOR,
              :PRECIO_PROVEEDOR,
              :SERIE_LOTE;

          IF (PRECIO_PROVEEDOR != 0) THEN
            BEGIN
              IMPORTE = PRECIO_PROVEEDOR;
              TOTAL = CANTIDAD * IMPORTE;
            END

          SUSPEND;
        END
      END
    ELSE
      FOR
        SELECT 
            PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE41,
            PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE30
        FROM PYMINVE42_MOV_CARGARAPIDA
        WHERE PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE41 = :PARAM_PYMINVE41
        INTO
            :ID_PYMINVE41,
            :ID_PYMINVE30
      DO
      BEGIN
        FOR
          SELECT
              PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
              PYMINVE30_MOV_STOCK.RELA_PYMINVE30,
              SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
              PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
              PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
              PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
              PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO
          FROM PYMINVE30_MOV_STOCK
          INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
          INNER JOIN PYMINVE40_ARB_LOCACIONES ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
          INNER JOIN PYMINVE50_CAB_CONCEPTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
          INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
          WHERE PYMINVE30_MOV_STOCK.ID_PYMINVE30 = :ID_PYMINVE30
            AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND (PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO = 'TR-EN'
             OR PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO = 'TR-SA')
          INTO
              :RELA_SOCWFLO01,
              :RELA_PYMINVE30,
              :SUCURSAL,
              :ALMACEN,
              :CONCEPTO,
              :CODIGO,
              :PRODUCTO,
              :CANTIDAD,
              :IMPORTE,
              :TOTAL
        DO
        BEGIN
          IF (:CODIGO_MOV = 'SA-NU') THEN
            BEGIN
              CANTIDAD = CANTIDAD * -1;
              TOTAL = CANTIDAD * IMPORTE;
            END

          SERIE_LOTE = '';
          PROVEEDOR = '';
          PRECIO_PROVEEDOR = 0;

          SELECT
              PYMINVE12_DET_PROVEEDORES.PYMINVE12_PROVEEDOR,
              PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
              PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
          FROM PYMINVE31_DEP_PROVEEDORES
          INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
          WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :ID_PYMINVE30
          INTO
              :PROVEEDOR,
              :PRECIO_PROVEEDOR,
              :SERIE_LOTE;

          IF (PRECIO_PROVEEDOR != 0) THEN
            BEGIN
              IMPORTE = PRECIO_PROVEEDOR;
              TOTAL = CANTIDAD * IMPORTE;
            END

          SUSPEND;
        END
      END
END
VW_PYMINVE41_CARGARAPIDA       

DECLARE VARIABLE RELA_PYMINVE30 BIGINT;
DECLARE VARIABLE RELA_PYMINVE50 BIGINT;
BEGIN
  FOR
    SELECT
        PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41,
        PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_NROFACTURA,
        PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_FECHA,
        PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_IMPORTE,
        PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_NOTAS
    FROM PYMINVE41_CAB_CARGARAPIDA
    WHERE PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_FECHA BETWEEN :PARAM_FDESDE AND :PARAM_FHASTA
    INTO
        :ID_PYMINVE41,
        :NRO_FACTURA,
        :FECHA,
        :IMPORTE,
        :NOTAS
  DO
  BEGIN
    FOR
      SELECT PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE30
      FROM PYMINVE42_MOV_CARGARAPIDA
      WHERE PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE41 = :ID_PYMINVE41
      INTO :RELA_PYMINVE30
    DO
    BEGIN
      RELA_PYMINVE50 = NULL;

      SELECT FIRST 1 PYMINVE30_MOV_STOCK.RELA_PYMINVE50
      FROM PYMINVE30_MOV_STOCK
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = :PARAM_SOCWFLO01
        AND PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = :PARAM_PYMINVE40
        AND PYMINVE30_MOV_STOCK.RELA_PYMINVE50 = :PARAM_PYMINVE50
        AND PYMINVE30_MOV_STOCK.ID_PYMINVE30 = :RELA_PYMINVE30
      INTO :RELA_PYMINVE50;

      IF (:RELA_PYMINVE50 IS NOT NULL) THEN
        BEGIN
          SUSPEND;
          BREAK;
        END
    END
  END
END
PRD_DATOS_ENTIDADES            

DECLARE VARIABLE RELA_SOCUSUA20 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA42 BIGINT;
DECLARE VARIABLE SOCUSUA50_DESCRI VARCHAR(100);
DECLARE VARIABLE SOCSYST06_NIVEL INTEGER;
BEGIN
   SELECT SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA20
   FROM SOCUSUA02_MAE_USUARIOS
   INNER JOIN SOCUSUA01_MAE_ENTIDADES ON (SOCUSUA02_MAE_USUARIOS.RELA_SOCUSUA01 = SOCUSUA01_MAE_ENTIDADES.ID_SOCUSUA01)
   WHERE SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02 = :PARAM_ENTIDAD
   INTO :RELA_SOCUSUA20;

   IF (:RELA_SOCUSUA20 IS NULL) THEN
     BEGIN
       SELECT SOCUSUA01_MAE_ENTIDADES.RELA_SOCUSUA30
       FROM SOCUSUA02_MAE_USUARIOS
       INNER JOIN SOCUSUA01_MAE_ENTIDADES ON (SOCUSUA02_MAE_USUARIOS.RELA_SOCUSUA01 = SOCUSUA01_MAE_ENTIDADES.ID_SOCUSUA01)
       WHERE SOCUSUA02_MAE_USUARIOS.ID_SOCUSUA02 = :PARAM_ENTIDAD
       INTO :RELA_SOCUSUA30;

       SELECT SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO
       FROM SOCSYST10_TBL_LISTAESTADOS
       INNER JOIN SOCUSUA40_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10)
       WHERE SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA30 = :RELA_SOCUSUA30
         AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'RFC'
       INTO :RFC;

       SELECT SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO
       FROM SOCSYST10_TBL_LISTAESTADOS
       INNER JOIN SOCUSUA40_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10)
       WHERE SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA30 = :RELA_SOCUSUA30
         AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'CURP'
       INTO :CURP;

       IF (:PARAM_SOCWFLO01 != -1) THEN
         BEGIN
           SELECT FIRST 1
               SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
               SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA42,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO
           FROM SOCUSUA41_DET_LOCALIDADES
           WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA30 = :RELA_SOCUSUA30
             AND SOCUSUA41_DET_LOCALIDADES.RELA_SOCWFLO01 = :PARAM_SOCWFLO01
           INTO
               :RELA_SOCUSUA50,
               :RELA_SOCUSUA42,
               :CALLE,
               :NRO,
               :PISO,
               :NROINT,
               :CP,
               :TELEFONOS,
               :CELULAR,
               :FAX,
               :EMAIL;
         END
       ELSE
         BEGIN
           SELECT FIRST 1
               SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
               SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA42,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO
           FROM SOCUSUA41_DET_LOCALIDADES
           WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA30 = :RELA_SOCUSUA30
             AND SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL = 1
           INTO
               :RELA_SOCUSUA50,
               :RELA_SOCUSUA42,
               :CALLE,
               :NRO,
               :PISO,
               :NROINT,
               :CP,
               :TELEFONOS,
               :CELULAR,
               :FAX,
               :EMAIL;
         END
     END
   ELSE
     BEGIN
       SELECT SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO
       FROM SOCSYST10_TBL_LISTAESTADOS
       INNER JOIN SOCUSUA40_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10)
       WHERE SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20 = :RELA_SOCUSUA20
         AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'RFC'
       INTO :RFC;

       SELECT SOCUSUA40_DET_DOCUMENTOS.SOCUSUA40_NUMERO
       FROM SOCSYST10_TBL_LISTAESTADOS
       INNER JOIN SOCUSUA40_DET_DOCUMENTOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCUSUA40_DET_DOCUMENTOS.RELA_SOCSYST10)
       WHERE SOCUSUA40_DET_DOCUMENTOS.RELA_SOCUSUA20 = :RELA_SOCUSUA20
         AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'CURP'
       INTO :CURP;

       IF (:PARAM_SOCWFLO01 != -1) THEN
         BEGIN
           SELECT FIRST 1
               SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
               SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA42,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO
           FROM SOCUSUA41_DET_LOCALIDADES
           WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20 = :RELA_SOCUSUA20
             AND SOCUSUA41_DET_LOCALIDADES.RELA_SOCWFLO01 = :PARAM_SOCWFLO01
           INTO
               :RELA_SOCUSUA50,
               :RELA_SOCUSUA42,
               :CALLE,
               :NRO,
               :PISO,
               :NROINT,
               :CP,
               :TELEFONOS,
               :CELULAR,
               :FAX,
               :EMAIL;
         END
       ELSE
         BEGIN
           SELECT FIRST 1
               SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA50,
               SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA42,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CALLE,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_NRO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PISO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_DEPTO,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_CP,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_LINEA,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_CELU,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_TELE_FAX,
               SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_MAIL_PERSO
           FROM SOCUSUA41_DET_LOCALIDADES
           WHERE SOCUSUA41_DET_LOCALIDADES.RELA_SOCUSUA20 = :RELA_SOCUSUA20
             AND SOCUSUA41_DET_LOCALIDADES.SOCUSUA41_PRINCIPAL = 1
           INTO
               :RELA_SOCUSUA50,
               :RELA_SOCUSUA42,
               :CALLE,
               :NRO,
               :PISO,
               :NROINT,
               :CP,
               :TELEFONOS,
               :CELULAR,
               :FAX,
               :EMAIL;
         END
     END

   DIRECCION = CALLE || ' No. ' || NRO;

   IF (:NROINT != '') THEN
     DIRECCION = DIRECCION || ' Int. ' || NROINT;

   IF (:PISO != '') THEN
     DIRECCION = DIRECCION || ' Piso ' || PISO;

   IF (:RELA_SOCUSUA42 IS NOT NULL) THEN
     SELECT
         SNVL(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO, ''),
         SNVL(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CIUDAD, ''),
         SNVL(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA, ''),
         SNVL(SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI, '')
     FROM SOCUSUA42_TBL_CODPOSTALES
     INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
     WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :RELA_SOCUSUA42
     INTO
         :LOCALIDAD,
         :CIUDAD,
         :ESTADO,
         :PAIS;
   ELSE
     BEGIN
       FOR
         SELECT
             REP_SOCUSUA50.SOCUSUA50_DESCRI,
             REP_SOCUSUA50.SOCSYST06_NIVEL
         FROM REP_SOCUSUA50(:RELA_SOCUSUA50)
         INTO
             :SOCUSUA50_DESCRI,
             :SOCSYST06_NIVEL
       DO
       BEGIN
         IF (:SOCSYST06_NIVEL = 1) THEN
           PAIS = SNVL(SOCUSUA50_DESCRI, '');
         ELSE
           IF (:SOCSYST06_NIVEL = 2) THEN
             ESTADO = SNVL(SOCUSUA50_DESCRI, '');
           ELSE
             IF (:SOCSYST06_NIVEL = 3) THEN
               CIUDAD = SNVL(SOCUSUA50_DESCRI, '');
             ELSE
               IF (:SOCSYST06_NIVEL = 4) THEN
                 LOCALIDAD = SNVL(SOCUSUA50_DESCRI, '');
       END
     END

   IF (:LOCALIDAD != '') THEN
     DIRECCION = DIRECCION || ' ' || LOCALIDAD;

   DIRECCION = DIRECCION || ' CP. ' || CP;
   LUGAR = CIUDAD || ', ' || ESTADO || ', ' || PAIS;

   SUSPEND;
END
PRD_DOCUMENTOS_EMPLEADO        

DECLARE VARIABLE RELA_SOCUSUA01 BIGINT;
DECLARE VARIABLE ID_SOCUSUA40 BIGINT;
DECLARE VARIABLE VALORUPDATE VARCHAR(50);
begin
    select socusua02_mae_usuarios.rela_socusua01
    from socusua02_mae_usuarios
    where socusua02_mae_usuarios.id_socusua02 = :rela_socusua02
    into :rela_socusua01;

    select socusua01_mae_entidades.rela_socusua30
    from socusua01_mae_entidades
    where socusua01_mae_entidades.id_socusua01 = :rela_socusua01
    into :rela_socusua30;

    for select
    cbo_documentos.id_socsyst10,
    cbo_documentos.socsyst10_codigo,
    cbo_documentos.socsyst10_filtro_des
    from cbo_documentos
    where (cbo_documentos.socsyst10_codigo = 'CURP' OR
           cbo_documentos.socsyst10_codigo = 'RFC' OR
           cbo_documentos.socsyst10_codigo = 'NSS')
    into :id_socsyst10,
         :socsyst10_codigo,
         :socsyst10_filtro_des
    do
    begin
        socusua40_numero = null;

        select first 1
        socusua40_det_documentos.id_socusua40,
        socusua40_det_documentos.socusua40_numero
        from socusua40_det_documentos
        where socusua40_det_documentos.rela_socsyst10 = :id_socsyst10
        and socusua40_det_documentos.rela_socusua30 = :rela_socusua30
        into :id_socusua40,
             :socusua40_numero;

        if ((:modo = 0) or (modo is null) ) then
            begin
                suspend;
            end
        else
            begin
                if (socusua40_numero is null) then
                    begin
                        if (socsyst10_codigo = 'CURP') then
                            valorupdate = zcurp;
                        else if (socsyst10_codigo = 'RFC') then
                            valorupdate = zrfc;
                        else if (socsyst10_codigo = 'NSS') then
                            valorupdate = znss;

                        insert into socusua40_det_documentos( socusua40_det_documentos.rela_socusua30,
                                                              socusua40_det_documentos.rela_socsyst10,
                                                              socusua40_det_documentos.socusua40_numero)
                        values(:rela_socusua30,:id_socsyst10,:valorupdate);
                    end
                else
                    begin
                        if (socsyst10_codigo = 'CURP') then
                            valorupdate = zcurp;
                        else if (socsyst10_codigo = 'RFC') then
                            valorupdate = zrfc;
                        else if (socsyst10_codigo = 'NSS') then
                            valorupdate = znss;
                                
                        update socusua40_det_documentos set socusua40_det_documentos.socusua40_numero = :valorupdate
                        where socusua40_det_documentos.id_socusua40 = :id_socusua40;
                    end
            end
    end
end
REP_PYMVENT21_VENTAS           

DECLARE VARIABLE CANTIDAD_TOT DOUBLE PRECISION;
DECLARE VARIABLE CANTIDAD_SUC DOUBLE PRECISION;
DECLARE VARIABLE RELA_SOCWFLO01X BIGINT;
DECLARE VARIABLE CANTIDAD DOUBLE PRECISION;
DECLARE VARIABLE PORCENTAJE DOUBLE PRECISION;
BEGIN
  DELETE FROM ZTMPYMVENT21_CANT
  WHERE ZTMPYMVENT21_CANT.USUARIO = CURRENT_USER;

  INSERT INTO ZTMPYMVENT21_CANT
    SELECT
        CURRENT_USER,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        SUM(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD)
    FROM PYMVENT21_DET_TICKETS
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :CATEGORIA
      AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :RELA_SOCSYST01
      AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :FDESDE AND :FHASTA
    GROUP BY PYMVENT21_DET_TICKETS.RELA_PYMINVE10;

  CANTIDAD_TOT = 0;

  FOR
    SELECT
        ARB_PYMVENT21_VENTAS.RELA_SOCWFLO01,
        ARB_PYMVENT21_VENTAS.HIJO_CANTI
    FROM ARB_PYMVENT21_VENTAS(:RELA_SOCSYST01,
                              :CATEGORIA,
                              :FDESDE,
                              :FHASTA,
                              -1,
                              NULL)
    INTO
        :RELA_SOCWFLO01X,
        :CANTIDAD
  DO
  BEGIN
    CANTIDAD_TOT = CANTIDAD_TOT + CANTIDAD;

    IF (RELA_SOCWFLO01X = :RELA_SOCWFLO01) THEN
      CANTIDAD_SUC = CANTIDAD;
  END

  PORCENTAJE = CANTIDAD_SUC / CANTIDAD_TOT * 100;

  FOR
    SELECT
        ARB_PYMVENT21_VENTAS.RELA_PYMINVE10,
        ARB_PYMVENT21_VENTAS.HIJO_CODPROD,
        ARB_PYMVENT21_VENTAS.HIJO_DESCRIPCION,
        ARB_PYMVENT21_VENTAS.HIJO_CANTI,
        ARB_PYMVENT21_VENTAS.HIJO_IMPORTE,
        ARB_PYMVENT21_VENTAS.HIJO_STOCK,
        ARB_PYMVENT21_VENTAS.HIJO_ULTFECHA
    FROM ARB_PYMVENT21_VENTAS(:RELA_SOCSYST01,
                              :CATEGORIA,
                              :FDESDE,
                              :FHASTA,
                              :RELA_SOCWFLO01,
                              NULL)
    ORDER BY HIJO_IMPORTE DESC
    INTO
        :RELA_PYMINVE10,
        :HIJO_CODPROD,
        :HIJO_DESCRIPCION,
        :HIJO_CANTI,
        :HIJO_IMPORTE,
        :HIJO_STOCK,
        :HIJO_ULTFECHA
  DO
  BEGIN
    SELECT ZTMPYMVENT21_CANT.TOT_CANTIDAD
    FROM ZTMPYMVENT21_CANT
    WHERE ZTMPYMVENT21_CANT.USUARIO = CURRENT_USER
      AND ZTMPYMVENT21_CANT.RELA_PYMINVE10 = :RELA_PYMINVE10
    INTO :HIJO_CANTI_ALL;

    AJUSTE = HIJO_CANTI_ALL * PORCENTAJE / 100;
    RESURTIDO = AJUSTE - HIJO_STOCK;

    SUSPEND;
  END
END
CBO_SGPINGR01_SGPINGR04        

begin
    ID_ARBOL = 0;
    FOR SELECT
    CBO_SGPINGR01.id_sgpingr01,
    CBO_SGPINGR01.rela_sicingr01,
    CBO_SGPINGR01.id_sgpingr01 || ' ' ||CBO_SGPINGR01.sgpingr01_resumen
    FROM CBO_SGPINGR01
    WHERE CBO_SGPINGR01.rela_socsyst01 = :RELA_SOCSYST01 ORDER BY CBO_SGPINGR01.id_sgpingr01
    into :ID_SGPINGR01,
         :id_sicingr01,
         :SGPINGR04_DESCRIPCION
    DO
    BEGIN
        RELA_PADRE = NULL;
        id_sgpingr04 = NULL;
        ID_ARBOL = ID_ARBOL + 1;
        suspend;

        FOR SELECT
        sgpingr04_cab_cotizacion.id_sgpingr04,
        TRIM(sgpingr04_cab_cotizacion.sgpingr04_docnro) || ' - ' || TRIM(sgpingr04_cab_cotizacion.sgpingr04_resumen)
        FROM sgpingr04_cab_cotizacion
        WHERE sgpingr04_cab_cotizacion.rela_sgpingr01 = :ID_SGPINGR01
        INTO :id_sgpingr04,
             :SGPINGR04_DESCRIPCION
        DO
        BEGIN
            RELA_PADRE = ID_ARBOL;
            ID_ARBOL = ID_ARBOL + 1;
            suspend;
        END
    END
end
PRD_PYMINGR01                  

BEGIN
  SELECT
      PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01,
      PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
      PYMINGR18_DEP_FACTELECT.PYMINGR18_VERSION,
      PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO,
      'Factura',
      'Ingreso',
      PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
      MONEDA.SOCSYST10_FILTRO_DES,
      MONEDA.SOCSYST10_CODIGO_EXT1,
      PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO,
      PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL,
      PYMINGR01_CAB_FACTURAS.PYMINGR01_DESCUENTOS,
      PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
      PYMINGR01_CAB_FACTURAS.PYMINGR01_NOTAS
  FROM PYMINGR01_CAB_FACTURAS
  INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
  INNER JOIN PYMINGR18_DEP_FACTELECT ON (PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01)
  WHERE PYMINGR01_CAB_FACTURAS.ID_PYMINGR01 = :PARAM_ID
  INTO
      :RELA_SOCSYST01,
      :RELA_SICINGR01,
      :RELA_SOCUSUA02,
      :FOLIO,
      :VERSION,
      :FOLIO_ELECT,
      :DOCUMENTO,
      :TIPO,
      :FECHA,
      :MONEDA,
      :CODIGO_MONEDA,
      :COTIZACION,
      :SUBTOTAL,
      :DESCUENTO,
      :TOTAL,
      :NOTAS;

   SELECT
       PRD_SICINGR01.SOCUSUA02_ENTIDAD,
       PRD_SICINGR01.SOCUSUA20_SOCUSUA30_CODEXT,
       PRD_SICINGR01.SOCUSUA41_CALLE,
       PRD_SICINGR01.SOCUSUA41_NRODOMICILIO,
       PRD_SICINGR01.SOCUSUA41_DEPTO,
       PRD_SICINGR01.SOCUSUA41_PISO,
       PRD_SICINGR01.SOCUSUA41_CORREO,
       PRD_SICINGR01.SOCUSUA41_CP,
       PRD_SICINGR01.SOCUSUA41_TELEFONO,
       PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC
   FROM PRD_SICINGR01(:RELA_SICINGR01)
   INTO
       :CLIENTE,
       :CLIENTE_COD,
       :CLIENTE_DIRECCION,
       :CLIENTE_NROEXT,
       :CLIENTE_NROINT,
       :CLIENTE_PISO,
       :CLIENTE_CORREO,
       :CLIENTE_CODPOSTAL,
       :CLIENTE_TELEFONOS,
       :CLIENTE_RFC;

  SELECT FIRST 1 REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_CODEXT
  FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
  WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
  INTO :CODIGO_EMISOR;

  SELECT PYMINGR03_DET_REFERENCIAS.PYMINGR03_DOCUMENTO
  FROM PYMINGR03_DET_REFERENCIAS
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINGR03_DET_REFERENCIAS.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
  WHERE PYMINGR03_DET_REFERENCIAS.RELA_PYMINGR01 = :PARAM_ID
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'ORDENCOMP'
  INTO :ORDENCOMPRA;

  FOR
    SELECT
        PYMINGR02_DET_CONCEPTOS.RELA_SOCSYST10_UNIDAD,
        PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD,
        PYMINGR10_CAB_CONCEPTOS.PYMINGR10_CODIGO,
        PYMINGR10_CAB_CONCEPTOS.PYMINGR10_DESCRIPCION,
        PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE,
        PYMINGR02_DET_CONCEPTOS.PYMINGR02_CANTIDAD * PYMINGR02_DET_CONCEPTOS.PYMINGR02_IMPORTE
    FROM PYMINGR02_DET_CONCEPTOS
    INNER JOIN PYMINGR10_CAB_CONCEPTOS ON (PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR10 = PYMINGR10_CAB_CONCEPTOS.ID_PYMINGR10)
    WHERE PYMINGR02_DET_CONCEPTOS.RELA_PYMINGR01 = :PARAM_ID
    INTO
        :RELA_SOCSYST10_UNIDAD,
        :CANTIDAD,
        :CODIGO,
        :CONCEPTO,
        :PRECIO,
        :IMPORTE
  DO
  BEGIN
    CODIGO_UNIDAD = 'No Aplica';

    IF (:RELA_SOCSYST10_UNIDAD IS NOT NULL) THEN
      SELECT CBO_UNIDADBIENES.SOCSYST10_CODIGO
      FROM CBO_UNIDADBIENES
      WHERE CBO_UNIDADBIENES.ID_SOCSYST10 = :RELA_SOCSYST10_UNIDAD
      INTO :CODIGO_UNIDAD;

    SUSPEND;
  END

  FOR
    SELECT
        PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_MEDIDA,
        PYMINGR06_DET_ITEMS.PYMINGR06_CANTIDAD,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
        PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
        PYMINGR06_DET_ITEMS.PYMINGR06_IMPORTE,
        PYMINGR06_DET_ITEMS.PYMINGR06_CANTIDAD * PYMINGR06_DET_ITEMS.PYMINGR06_IMPORTE
    FROM PYMINGR06_DET_ITEMS
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINGR06_DET_ITEMS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :PARAM_ID
    INTO
        :RELA_SOCSYST10_UNIDAD,
        :CANTIDAD,
        :CODIGO,
        :CONCEPTO,
        :PRECIO,
        :IMPORTE
  DO
  BEGIN
    CODIGO_UNIDAD = 'No Aplica';

    IF (:RELA_SOCSYST10_UNIDAD IS NOT NULL) THEN
      SELECT CBO_UNIDADBIENES.SOCSYST10_CODIGO
      FROM CBO_UNIDADBIENES
      WHERE CBO_UNIDADBIENES.ID_SOCSYST10 = :RELA_SOCSYST10_UNIDAD
      INTO :CODIGO_UNIDAD;

      SUSPEND;
  END
END
PRD_PYMINGR01_CANCELASTOCK     

DECLARE VARIABLE NPYMINVE50 BIGINT;
DECLARE VARIABLE NSOCUSUA02 BIGINT;
DECLARE VARIABLE NSOCWFLO01 BIGINT;
DECLARE VARIABLE NPYMINVE10 BIGINT;
DECLARE VARIABLE NPYMINVE40 BIGINT;
DECLARE VARIABLE NCANTIDAD DOUBLE PRECISION;
BEGIN
  nPymInve50 = 0;
  nSocUsua02 = 0;
  nSocWflo01 = 0;
  nPymInve10 = 0;
  nPymInve40 = 0;
  nCantidad = 0;

  SELECT PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50
  FROM PYMINVE50_CAB_CONCEPTOS
  WHERE PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO = 'PY-EN-CAN'
  INTO :nPymInve50;

  SELECT FIRST 1 PYMINGR06_DET_ITEMS.RELA_SOCUSUA02
  FROM PYMINGR06_DET_ITEMS
  WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :PARAM_ID
  INTO nSocUsua02;

  FOR
    SELECT
        PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
        PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
        PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
        PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD * -1
    FROM PYMINGR06_DET_ITEMS
    INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINGR06_DET_ITEMS.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
    WHERE PYMINGR06_DET_ITEMS.RELA_PYMINGR01 = :PARAM_ID
    INTO
        :nSocWflo01,
        :nPymInve10,
        :nPymInve40,
        :nCantidad
    DO
    BEGIN
      INSERT INTO PYMINVE30_MOV_STOCK (PYMINVE30_MOV_STOCK.RELA_PYMINVE50,
                                       PYMINVE30_MOV_STOCK.RELA_SOCUSUA02,
                                       PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
                                       PYMINVE30_MOV_STOCK.RELA_PYMINVE10,
                                       PYMINVE30_MOV_STOCK.RELA_PYMINVE40,
                                       PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
                                       PYMINVE30_MOV_STOCK.PYMINVE30_EXISTENCIA)
                               VALUES (:nPymInve50,
                                       :nSocUsua02,
                                       :nSocWflo01,
                                       :nPymInve10,
                                       :nPymInve40,
                                       :nCantidad,
                                       :nCantidad);
    END
END
PRD_SGPINGR01_SEMAFORO         

DECLARE VARIABLE FACTURACION DOUBLE PRECISION;
DECLARE VARIABLE COMPRAS DOUBLE PRECISION;
DECLARE VARIABLE DVENC DATE;
begin
      FOR SELECT
        GRID_SGPINGR01.entidad,
        GRID_SGPINGR01.SOCUSUA02_USUARIO,
        grid_sgpingr04.rela_socsyst10,
        grid_sgpingr04.rela_socusua02,
        grid_sgpingr04.rela_socsyst01,
        grid_sgpingr04.rela_sgpingr01,
        grid_sgpingr04.id_sgpingr04,
        grid_sgpingr04.sgpingr04_docnro,
        grid_sgpingr04.sgpingr04_resumen,
        grid_sgpingr04.moneda,
        grid_sgpingr04.importe,
        grid_sgpingr04.sgpingr04_ordcompra,
        grid_sgpingr04.sgpingr04_sobreutilidad,
        grid_sgpingr04.sgpingr04_fini,
        grid_sgpingr04.sgpingr04_ffin,
        grid_sgpingr04.sgpingr04_fvto,
        grid_sgpingr04.sgpingr04_fapl,
        grid_sgpingr04.sgpingr04_cancelada,
        grid_sgpingr04.cancelada,
        GRID_SGPINGR01.sgpingr01_cerrado
      FROM grid_sgpingr04
      INNER JOIN GRID_SGPINGR01 ON (GRID_SGPINGR04.rela_sgpingr01 = GRID_SGPINGR01.id_sgpingr01)
      WHERE GRID_SGPINGR04.rela_socsyst01 = :param_empresa
      INTO
        :ENTIDAD,
        :socusua02_usuario,
        :RELA_SOCSYST10,
        :RELA_SOCUSUA02,
        :RELA_SOCSYST01,
        :ID_SGPINGR01,
        :RELA_SGPINGR04,
        :SGPINGR04_DOCNRO,
        :SGPINGR04_RESUMEN,
        :MONEDA,
        :COTIZACION,
        :SGPINGR04_ORDCOMPRA,
        :sgpingr04_sobreutilidad,
        :sgpingr04_fini,
        :sgpingr04_ffin,
        :sgpingr04_fvto,
        :sgpingr04_fapl,
        :sgpingr04_cancelada,
        :cancelada,
        :SGPINGR01_CERRADO

      DO
        BEGIN
          /* Numerología de colores
           * 0.- Negro
           * 1.- AZUL
           * 2.- AMARILLO
           * 3.- VERDE
           * 4.- ROJO
           * default.- blanco
           */

          if (SGPINGR01_CERRADO = 1) THEN
            BEGIN
              cerrado= 'Si';
            END
          else
            BEGIN
              cerrado= 'No';
            END

          if (:SGPINGR04_CANCELADA = 1 or SGPINGR01_CERRADO = 1 ) then
            BEGIN
              COLOR = 4;
              orden = 3;
            END
          else
            begin

              select SUM(pymingr01_cab_facturas.pymingr01_total)
              from sgpingr07_det_facturas
              inner JOIN pymingr01_cab_facturas ON (sgpingr07_det_facturas.rela_pymingr01 = pymingr01_cab_facturas.id_pymingr01)
              WHERE sgpingr07_det_facturas.rela_sgpingr04 = :rela_sgpingr04
              into
                :FACTURACION;

              if (:FACTURACION is null) then
                begin
                  FACTURACION= 0;
                end

              if (:facturacion >= :cotizacion or  current_date <= :SGPINGR04_FVTO) then
                begin
                  COLOR = 3;
                  orden = 2;
                end

              ELSE
                BEGIN
                  DVENC = cast ( cast( :SGPINGR04_FVTO as varchar(255)) as date) + 7;
                  if (SGPINGR04_SOBREUTILIDAD > 0 or
                       (current_date > :sgpingr04_fvto AND  current_date <= :DVENC) or
                         (:FACTURACION > 0 AND :FACTURACION <: cotizacion)) then
                    BEGIN
                      COLOR = 2;
                      orden = 1;
                    END

                  ELSE
                    BEGIN

                      select SUM(pymegre02_cab_facturas.pymegre02_total)
                      from sgpingr08_det_compras
                      inner JOIN pymegre02_cab_facturas ON (sgpingr08_det_compras.rela_pymegre02 = pymegre02_cab_facturas.id_pymegre02)
                      where sgpingr08_det_compras.rela_sgpingr04 = :rela_sgpingr04
                      into
                        :compras;

                       if (:compras is null) then
                         begin
                           compras= 0;
                         end

                      if (:facturacion = 0 or current_date > DVENC or :compras > :cotizacion) then
                        BEGIN
                          color = 1;
                          orden = 0;
                        END
                    END
                END
            end
          suspend;
        END

end
PRD_SOCSYST20_PYMREFE01        

BEGIN
  SELECT
      SOCSYST21_MOV_CONTADORES_EMP.ID_SOCSYST21,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_CONTADOR,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_MASCARA,
      SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_PREFIJO,'') SOCSYST21_PREFIJO,
      SNVL(SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_POSFIJO,'') SOCSYST21_POSFIJO,
      SOCSYST21_MOV_CONTADORES_EMP.SOCSYST21_LONGITUD
  FROM SOCSYST10_TBL_LISTAESTADOS
  INNER JOIN SOCSYST21_MOV_CONTADORES_EMP ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST10)
  WHERE SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCSYST01 = :ARG_IDEMPRESA
    AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = :ARG_CODIGO
    AND SOCSYST21_MOV_CONTADORES_EMP.RELA_SOCWFLO01 = :ARG_IDSOCWFLO01
  INTO
      :XID_SOCSYST20,
      :XSOCSYST20_CONTADOR,
      :XSOCSYST20_MASCARA,
      :XSOCSYST20_PREFIJO,
      :XSOCSYST20_POSFIJO,
      :XSOCSYST20_LONGITUD;

  SUSPEND;
END
REP_PYMINVE10_FACTURADOS       

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :ID_SOCSYST01,
     :EMPRESA;

  IF (:PARAM_CLIENTE != -1) THEN
    FOR
      SELECT
          PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMVENT24_CAB_CLIENTES.ID_PYMVENT24,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
          PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
          CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE)
      FROM PYMVENT21_DET_TICKETS
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
      INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
      INNER JOIN PYMVENT28_DEP_FACTELECT ON (PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
      WHERE PYMVENT24_CAB_CLIENTES.ID_PYMVENT24 = :PARAM_CLIENTE
        AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
      INTO
         :RELA_SOCWFLO01,
         :SUCURSAL,
         :ID_PYMVENT24,
         :CLIENTE,
         :CODIGO,
         :DESCRIPCION,
         :CANTIDAD,
         :FECHA
    DO
    BEGIN
      SUSPEND;
    END
  ELSE
    FOR
      SELECT
          PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMVENT24_CAB_CLIENTES.ID_PYMVENT24,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
          PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
          CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE)
      FROM PYMVENT21_DET_TICKETS
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
      INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
      INNER JOIN PYMVENT28_DEP_FACTELECT ON (PYMVENT28_DEP_FACTELECT.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
      WHERE CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
      INTO
         :RELA_SOCWFLO01,
         :SUCURSAL,
         :ID_PYMVENT24,
         :CLIENTE,
         :CODIGO,
         :DESCRIPCION,
         :CANTIDAD,
         :FECHA
    DO
    BEGIN
      SUSPEND;
    END
END
PRD_SICEGRE01_ALL              

BEGIN
    FOR
      SELECT
          SICCONT75_MOV_SICEGRE01.RELA_SOCSYST01,
          GRID_SICEGRE01.RELA_SOCUSUA02,
          GRID_SICEGRE01.ID_SICEGRE01,
          CAST('Capturado' AS VARCHAR(12)),
          GRID_SICEGRE01.SICEGRE01_CODIGO,
          GRID_SICEGRE01.ENTIDAD,
          GRID_SICEGRE01.SOCSYST10_FILTRO_DES,
          RUPPER(GRID_SICEGRE01.SICEGRE01_CODIGO) || ' ' || RUPPER(GRID_SICEGRE01.ENTIDAD) || ' ' || RUPPER(CAST('Capturado' AS VARCHAR(12)))
      FROM SICCONT75_MOV_SICEGRE01
      INNER JOIN GRID_SICEGRE01 ON (SICCONT75_MOV_SICEGRE01.RELA_SICEGRE01 = GRID_SICEGRE01.ID_SICEGRE01)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT75_MOV_SICEGRE01.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
        AND SICCONT75_MOV_SICEGRE01.RELA_SOCSYST01 = :PARAM_SOCSYST01

      UNION

      SELECT
          CAST(NULL AS BIGINT),
          GRID_SICEGRE01.RELA_SOCUSUA02,
          GRID_SICEGRE01.ID_SICEGRE01,
          CAST('Sin Capturar' AS VARCHAR(12)),
          GRID_SICEGRE01.SICEGRE01_CODIGO,
          GRID_SICEGRE01.ENTIDAD,
          GRID_SICEGRE01.SOCSYST10_FILTRO_DES,
          RUPPER(GRID_SICEGRE01.SICEGRE01_CODIGO) || ' ' || RUPPER(GRID_SICEGRE01.ENTIDAD) || ' ' || RUPPER(CAST('Sin Capturar' AS VARCHAR(12)))
      FROM GRID_SICEGRE01
      WHERE GRID_SICEGRE01.ID_SICEGRE01 NOT IN (SELECT SICCONT75_MOV_SICEGRE01.RELA_SICEGRE01
                                                FROM SICCONT75_MOV_SICEGRE01
                                                INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT75_MOV_SICEGRE01.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                                                WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
                                                  AND SICCONT75_MOV_SICEGRE01.RELA_SOCSYST01 = :PARAM_SOCSYST01)
    INTO
        :RELA_SOCSYST01,
        :RELA_SOCUSUA02,
        :ID_SICEGRE01,
        :TIPO,
        :SICEGRE01_CODIGO,
        :ENTIDAD,
        :SOCSYST10_GIRO,
        :BUSQUEDA
    DO
    BEGIN
        SUSPEND;
    END
END
REP_SGPINGR04_COTIZACION       

DECLARE VARIABLE RELA_PYMINVE10 BIGINT;
DECLARE VARIABLE RELA_PYMINGR10 BIGINT;
DECLARE VARIABLE RELA_SRHMAIN10 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_CONTACTO BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_EMPRESA BIGINT;
BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCUSUA02_EMPRESA,
      :RELA_SOCSYST01,
      :EMPRESA,
      :LOGO;

  SELECT
      SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01,
      SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR01,
      SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR02,
      SGPINGR01_CAB_PROSPECTOS.RELA_SOCUSUA02,
      SGPINGR04_CAB_COTIZACION.RELA_SOCUSUA02,
      SGPINGR04_CAB_COTIZACION.ID_SGPINGR04,
      SGPINGR01_CAB_PROSPECTOS.SGPINGR01_RESUMEN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_DOCNRO,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_RESUMEN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FINI,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FFIN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FVTO,
      SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
      SGPINGR01_CAB_PROSPECTOS.SGPINGR01_NOTAS
  FROM SGPINGR04_CAB_COTIZACION
  INNER JOIN SGPINGR01_CAB_PROSPECTOS ON (SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01 = SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SGPINGR04_CAB_COTIZACION.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
  WHERE SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01 = :PARAM_SGPINGR01
  INTO
      :RELA_SGPINGR01,
      :RELA_SICINGR01,
      :RELA_SICINGR02,
      :RELA_SOCUSUA02,
      :RELA_SOCUSUA02_SGPINGR04,
      :ID_SGPINGR04,
      :SGPINGR01_RESUMEN,
      :SGPINGR04_DOCNRO,
      :SGPINGR04_RESUMEN,
      :SGPINGR04_FINI,
      :SGPINGR04_FFIN,
      :SGPINGR04_FVTO,
      :MONEDA,
      :SGPINGR01_NOTAS;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02
  INTO :USUARIO_CREADOR;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02_SGPINGR04
  INTO :USUARIO_REFERENTE;

  SELECT FIRST 1 SICINGR02_DET_REFERENTES.RELA_SOCUSUA02
  FROM SICINGR02_DET_REFERENTES
  WHERE SICINGR02_DET_REFERENTES.ID_SICINGR02 = :RELA_SICINGR02
  INTO :RELA_SOCUSUA02_CONTACTO;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02_CONTACTO
  INTO :REFERENTE;

  SELECT
      PRD_SICINGR01.SOCUSUA02_ENTIDAD,
      PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC,
      PRD_SICINGR01.SOCUSUA41_DOMICILIO,
      PRD_SICINGR01.SOCUSUA41_CALLE,
      PRD_SICINGR01.SOCUSUA41_NRODOMICILIO,
      PRD_SICINGR01.SOCUSUA41_COLONIA,
      PRD_SICINGR01.SOCUSUA41_DEPTO,
      PRD_SICINGR01.SOCUSUA41_PISO,
      PRD_SICINGR01.SOCUSUA41_TELEFONO,
      PRD_SICINGR01.SOCUSUA41_FAX,
      PRD_SICINGR01.SOCUSUA41_CORREO,
      PRD_SICINGR01.SOCUSUA41_CP,
      PRD_SICINGR01.SOCUSUA50_CIUDAD
  FROM PRD_SICINGR01(:RELA_SICINGR01)
  INTO
      :CLIENTE,
      :CLIENTE_RFC,
      :CLIENTE_DIRECCION,
      :CLIENTE_CALLE,
      :CLIENTE_NRODOMICILIO,
      :CLIENTE_COLONIA,
      :CLIENTE_DEPTO,
      :CLIENTE_PISO,
      :CLIENTE_TELEFONO,
      :CLIENTE_FAX,
      :CLIENTE_CORREO,
      :CLIENTE_CP,
      :CLIENTE_CIUDAD;

  SELECT
       PRD_DATOS_ENTIDADES.CALLE,
       PRD_DATOS_ENTIDADES.NRO,
       PRD_DATOS_ENTIDADES.PISO,
       PRD_DATOS_ENTIDADES.NROINT,
       PRD_DATOS_ENTIDADES.CP,
       PRD_DATOS_ENTIDADES.TELEFONOS,
       PRD_DATOS_ENTIDADES.CELULAR,
       PRD_DATOS_ENTIDADES.FAX,
       PRD_DATOS_ENTIDADES.EMAIL,
       PRD_DATOS_ENTIDADES.LOCALIDAD,
       PRD_DATOS_ENTIDADES.ESTADO,
       PRD_DATOS_ENTIDADES.CIUDAD,
       PRD_DATOS_ENTIDADES.PAIS,
       PRD_DATOS_ENTIDADES.DIRECCION,
       PRD_DATOS_ENTIDADES.LUGAR
   FROM PRD_DATOS_ENTIDADES(:RELA_SOCUSUA02_EMPRESA, -1)
   INTO
       :CALLE_MATRIZ,
       :NRO_MATRIZ,
       :PISO_MATRIZ,
       :NROINT_MATRIZ,
       :CP_MATRIZ,
       :TELEFONOS_MATRIZ,
       :CELULAR_MATRIZ,
       :FAX_MATRIZ,
       :EMAIL_MATRIZ,
       :LOCALIDAD_MATRIZ,
       :ESTADO_MATRIZ,
       :CIUDAD_MATRIZ,
       :PAIS_MATRIZ,
       :DIRECCION_MATRIZ,
       :LUGAR_MATRIZ;

  FOR
    SELECT
        SGPINGR05_DET_RECURSOS.RELA_PYMINVE10,
        SGPINGR05_DET_RECURSOS.RELA_PYMINGR10,
        SGPINGR05_DET_RECURSOS.RELA_SRHMAIN10,
        SGPINGR05_DET_RECURSOS.SGPINGR05_CANTIDAD,
        SGPINGR05_DET_RECURSOS.SGPINGR05_PRECIO,
        SGPINGR05_DET_RECURSOS.SGPINGR05_IMPORTE
    FROM SGPINGR05_DET_RECURSOS
    WHERE SGPINGR05_DET_RECURSOS.RELA_SGPINGR04 = :ID_SGPINGR04
    INTO
        :RELA_PYMINVE10,
        :RELA_PYMINGR10,
        :RELA_SRHMAIN10,
        :SGPINGR05_CANTIDAD,
        :SGPINGR05_PRECIO,
        :SGPINGR05_IMPORTE
  DO
  BEGIN
    IF (:RELA_PYMINVE10 IS NOT NULL) THEN
      SELECT
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
      FROM PYMINVE10_CAB_PRODUCTOS
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10_MEDIDA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = :RELA_PYMINVE10
      INTO
          :SGPINGR05_CODIGO,
          :SGPINGR05_DESCRIPCION,
          :SGPINGR05_MEDIDA;
    ELSE
      IF (:RELA_PYMINGR10 IS NOT NULL) THEN
        SELECT
            PYMINGR10_CAB_CONCEPTOS.PYMINGR10_CODIGO,
            PYMINGR10_CAB_CONCEPTOS.PYMINGR10_DESCRIPCION
        FROM PYMINGR10_CAB_CONCEPTOS
        WHERE PYMINGR10_CAB_CONCEPTOS.ID_PYMINGR10 = :RELA_PYMINGR10
        INTO
            :SGPINGR05_CODIGO,
            :SGPINGR05_DESCRIPCION;
      ELSE
        IF (:RELA_SRHMAIN10 IS NOT NULL) THEN
          SELECT CBO_SRHMAIN10.ENTIDAD
          FROM CBO_SRHMAIN10
          WHERE CBO_SRHMAIN10.ID_SRHMAIN10 = :RELA_SRHMAIN10
          INTO :SGPINGR05_DESCRIPCION;

    SUSPEND;
  END
END
REP_PYMVENT20_NOTAREMISION     

DECLARE VARIABLE RELA_SOCUSUA42 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA50 BIGINT;
BEGIN
   SELECT
       PYMVENT20_CAB_TICKETS.RELA_SOCSYST01,
       SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
       PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01,
       PYMVENT24_CAB_CLIENTES.RELA_SICINGR01,
       PYMVENT20_CAB_TICKETS.RELA_PYMVENT24,
       PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
       SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
       SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO,''),
       SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_FONDO,''),
       CAST(PYMVENT20_CAB_TICKETS.PYMVENT20_FAPL AS DATE),
       PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_DIRECCION || ' # ' || PYMVENT24_CAB_CLIENTES.PYMVENT24_NROEXT || ' ' || SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_NROINT,'') || ' ' || SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_PISO,'') || ' ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO_TIPO || ' ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_DIRECCION,
       SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_NROEXT,''),
       SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_NROINT,''),
       SNVL(PYMVENT24_CAB_CLIENTES.PYMVENT24_PISO,''),
       PYMVENT24_CAB_CLIENTES.PYMVENT24_TELEFONOS,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_CODPOSTAL,
       SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO || ', ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA,
       SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO,
       SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_DOCUMENTOS,
       PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
       PYMVENT20_CAB_TICKETS.PYMVENT20_SUBTOTAL,
       PYMVENT24_CAB_CLIENTES.PYMVENT24_DESCUENTO,
       DNVL((SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_DESCUENTOS)
             FROM PYMVENT21_DET_TICKETS
             WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20), PYMVENT20_CAB_TICKETS.PYMVENT20_DESCUENTOS),
       PYMVENT20_CAB_TICKETS.PYMVENT20_NOTAS,
       PYMVENT20_CAB_TICKETS.PYMVENT20_NOTAS_PRINTER,
       SNVL((SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1
             FROM PYMVENT22_MOV_CAMBIOS
             INNER JOIN PYMVENT11_DET_RENDICIONES ON (PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11)
             INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
             WHERE PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20
               AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO_EXT1 = 'CREDITO'), 'CONTADO'),
       SNVL((SELECT PYMVENT22_MOV_CAMBIOS.PYMVENT22_NOTAS
             FROM PYMVENT22_MOV_CAMBIOS
             WHERE PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20), '')
   FROM PYMVENT20_CAB_TICKETS
   INNER JOIN SOCSYST01_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = SOCSYST01_CAB_CLIENTES.ID_SOCSYST01)
   INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
   INNER JOIN SOCUSUA42_TBL_CODPOSTALES ON (PYMVENT24_CAB_CLIENTES.RELA_SOCUSUA42 = SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42)
   WHERE PYMVENT20_CAB_TICKETS.ID_PYMVENT20 = :PARAM_TICKET
   INTO
       :RELA_SOCSYST01,
       :RELA_SOCUSUA02,
       :RELA_SOCWFLO01,
       :RELA_SICINGR01,
       :RELA_PYMVENT24,
       :ID_PYMVENT20,
       :EMPRESA,
       :LOGO,
       :FONDO,
       :FECHA,
       :CLIENTE,
       :DIRECCION,
       :CALLE,
       :NROEXT,
       :NROINT,
       :PISO,
       :TELEFONO,
       :CODPOSTAL,
       :CIUDAD,
       :MUNICIPIO,
       :ESTADO,
       :RFC,
       :TICKET,
       :SUBTOTAL,
       :PYMVENT24_DESCUENTO,
       :DESCUENTOS,
       :NOTAS,
       :NOTAS_PRINTER,
       :CONDICION,
       :NROCTA;

   SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES
   FROM PYMVENT22_MOV_CAMBIOS
   INNER JOIN PYMVENT11_DET_RENDICIONES ON (PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT11 = PYMVENT11_DET_RENDICIONES.ID_PYMVENT11)
   INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT11_DET_RENDICIONES.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
   WHERE PYMVENT22_MOV_CAMBIOS.RELA_PYMVENT20 = :ID_PYMVENT20
   INTO :TIPOPAGO;

   SELECT SNVL(REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,'')
   FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
   WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
   INTO
       :EMISOR_RFC;

   SELECT SNVL(REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,'')
   FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
   WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'CURP'
   INTO
       :EMISOR_CURP;

   SELECT
       REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA42,
       REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA50,
       REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CALLE || ' # ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_NRO,'') || ' ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_DEPTO,'') || ' ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PISO,''),
       REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CP,
       REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_LINEA,
       REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_CELU,
       REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_FAX,
       REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_MAIL_PERSO
   FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
   WHERE REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 1
   INTO
       :RELA_SOCUSUA42,
       :RELA_SOCUSUA50,
       :EMISOR_DIRECCION,
       :EMISOR_CP,
       :EMISOR_TELEFONOS,
       :EMISOR_CELULAR,
       :EMISOR_FAX,
       :EMISOR_EMAIL;

   IF (:RELA_SOCUSUA42 IS NOT NULL) THEN
     SELECT
         SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_CIUDAD || ', ' || SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA || ', ' || SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI
     FROM SOCUSUA42_TBL_CODPOSTALES
     INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
     WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :RELA_SOCUSUA42
     INTO
         :EMISOR_CIUDAD;

   SELECT DNVL(PRD_PYMVENT20_PYMVENT01.PORCENTAJE,0)
   FROM PRD_PYMVENT20_PYMVENT01(:RELA_SOCSYST01,:ID_PYMVENT20)
   INTO :PORCENTAJE;

   IF (PARAM_IVA = 0) THEN
     BEGIN
        SUBTOTAL = SUBTOTAL / (1 + (PORCENTAJE / 100));

        IF (DESCUENTOS != 0 AND PYMVENT24_DESCUENTO != 0) THEN
            DESCUENTOS = SUBTOTAL * (PYMVENT24_DESCUENTO / 100);

        IMPUESTOS = ((SUBTOTAL - DESCUENTOS) * PORCENTAJE) / 100;
        TOTAL = (SUBTOTAL - DESCUENTOS) + IMPUESTOS;
     END
   ELSE
     BEGIN
        IMPUESTOS = ((SUBTOTAL - DESCUENTOS) * PORCENTAJE) / 100;
        TOTAL = (SUBTOTAL - DESCUENTOS) + IMPUESTOS;
     END

   SELECT API_NUM_MEXICO.CNUMERO
   FROM API_NUM_MEXICO(:TOTAL,'MXP')
   INTO :TOTAL_LETRA;

   SUSPEND;
END
GRID_SECPLAN02_PAGOS           

DECLARE VARIABLE SECPLAN02_V_FORZOSO INTEGER; /* x */
DECLARE VARIABLE SECPLAN02_V_LADA VARCHAR(50); /* x */
DECLARE VARIABLE SECPLAN02_V_TELEFONO VARCHAR(50); /* x */
DECLARE VARIABLE SECPLAN02_V_NROCUENTA VARCHAR(100); /* X */
DECLARE VARIABLE SECPLAN02_V_NROCUENTAYA VARCHAR(100); /* X */
DECLARE VARIABLE SECPLAN02_V_YACLIENTE SMALLINT; /* X */
begin
    FOR SELECT
    CBO_SICINGR01.id_sicingr01,
    CBO_SICINGR01.entidad,
    SECPLAN02_DET_PLANES.ID_SECPLAN02,
    SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_des,
    PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
    SECPLAN01_CAB_SOLICITUDES.secplan01_docnro,
    SECPLAN02_DET_PLANES.SECPLAN02_FOLIO,
    SECPLAN02_DET_PLANES.SECPLAN02_IMPORTE,
    SECPLAN02_DET_PLANES.SECPLAN02_DEPOSITO,
    SECPLAN02_DET_PLANES.SECPLAN02_FAPL,
    cast(SECPLAN02_DET_PLANES.SECPLAN02_FINI as date),
    cast(SECPLAN02_DET_PLANES.SECPLAN02_FAPRO as date),
    SECPLAN02_DET_PLANES.secplan02_plazo,
    SECPLAN02_DET_PLANES.secplan02_forzoso,
    SECPLAN02_DET_PLANES.secplan02_adelanto,
    SECPLAN02_DET_PLANES.secplan02_nrocuenta,
    SECPLAN02_DET_PLANES.secplan02_nrocuentaya,
    SECPLAN02_DET_PLANES.secplan02_yacliente,
    snvl(SECPLAN02_DET_PLANES.secplan02_lada,''),
    snvl(SECPLAN02_DET_PLANES.secplan02_telefono,'')
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN SECPLAN01_CAB_SOLICITUDES ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SECPLAN01_CAB_SOLICITUDES.RELA_SOCSYST10)
    INNER JOIN SECPLAN02_DET_PLANES ON (SECPLAN01_CAB_SOLICITUDES.ID_SECPLAN01 = SECPLAN02_DET_PLANES.RELA_SECPLAN01)
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (SECPLAN02_DET_PLANES.RELA_PYMINVE10_PLAN = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    INNER JOIN CBO_SICINGR01 ON (SECPLAN01_CAB_SOLICITUDES.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
    where SECPLAN02_DET_PLANES.SECPLAN02_FAPRO is not null
    and SECPLAN02_DET_PLANES.secplan02_denegado = 0
    and SECPLAN01_CAB_SOLICITUDES.rela_socsyst01 = :rela_socsyst01
    and SECPLAN01_CAB_SOLICITUDES.rela_socwflo01 = :rela_socwflo01
    and SECPLAN01_CAB_SOLICITUDES.rela_socusua02 = :rela_socusua02
    into :RELA_SICINGR01,
         :entidad,
         :id_secplan02,
         :secplan02_tplan,
         :secplan02_plan,
         :secplan01_sfolio,
         :secplan02_folio,
         :secplan02_importe,
         :secplan02_deposito,
         :SECPLAN02_CREADO,
         :secplan02_fini,
         :secplan02_fapro,
         :SECPLAN02_PLAZO,
         :SECPLAN02_V_FORZOSO,
         :SECPLAN02_RENTAS,
         :SECPLAN02_V_NROCUENTA,
         :SECPLAN02_V_NROCUENTAYA,
         :SECPLAN02_V_YACLIENTE,
         :secplan02_v_lada,
         :secplan02_v_telefono
    do
    begin
        /* -------------------------------------------------------------------------------------------------------- */
        if (SECPLAN02_PLAZO = 1) then
            SECPLAN02_PLAZO = 12;
        else if (SECPLAN02_PLAZO > 1) then
            SECPLAN02_PLAZO = 6 * (SECPLAN02_PLAZO+1);
        /* -------------------------------------------------------------------------------------------------------- */
        if (SECPLAN02_V_FORZOSO = 0) then
            SECPLAN02_FORZOSO = 'Libre';
        else
            SECPLAN02_FORZOSO = 'Forzoso';
        /* -------------------------------------------------------------------------------------------------------- */
        SECPLAN02_ADELANTO = secplan02_importe * SECPLAN02_RENTAS;
        /* -------------------------------------------------------------------------------------------------------- */
        if (SECPLAN02_V_YACLIENTE = 0) then
        begin
            SECPLAN02_STATUS = 'Nuevo Cliente';
            SECPLAN02_NROCUENTA = SECPLAN02_V_NROCUENTA;
        end
        else
        begin
            SECPLAN02_STATUS = 'Cliente Existente';
            SECPLAN02_NROCUENTA = SECPLAN02_V_NROCUENTAYA;
        end
        /* -------------------------------------------------------------------------------------------------------- */
        if (secplan02_v_lada = '') then
            secplan02_v_lada = substr(secplan02_v_telefono,1,3);
        /* -------------------------------------------------------------------------------------------------------- */
        SECPLAN02_TELEFONO = '';
        secplan03_diferencia = null;

        for SELECT
        secplan03_det_equipos.id_secplan03,
        pyminve10_cab_productos.id_pyminve10,
        pyminve10_cab_productos.pyminve10_codigo,
        pyminve10_cab_productos.pyminve10_descripcion,
        secplan03_det_equipos.secplan03_factura,
        secplan03_det_equipos.secplan03_diferencia,
        secplan03_det_equipos.secplan03_telnvo,
        secplan03_det_equipos.secplan03_telnvo_serie,
        secplan03_det_equipos.secplan03_telnvo_chip
        FROM secplan03_det_equipos
        INNER JOIN pyminve10_cab_productos ON (pyminve10_cab_productos.id_pyminve10 = secplan03_det_equipos.rela_pyminve10)
        WHERE secplan03_det_equipos.rela_secplan02 = :id_secplan02
        AND snvl(secplan03_det_equipos.secplan03_telnvo_serie,'') <> ''
        and snvl(secplan03_det_equipos.secplan03_telnvo_chip,'') <> ''
        and snvl(secplan03_det_equipos.secplan03_factura, '') <> ''
        order by secplan03_det_equipos.secplan03_fapl desc
        into :rela_secplan03,
             :RELA_PYMINVE10,
             :pyminve10_codigo,
             :pyminve10_descripcion,
             :secplan03_factura,
             :secplan03_diferencia,
             :SECPLAN02_TELEFONO,
             :secplan03_telnvo_serie,
             :secplan03_telnvo_chip
        do
        begin
            break;
        end
        /* -------------------------------------------------------------------------------------------------------- */
        if (secplan03_diferencia is null) then
            secplan03_diferencia = 0;
        /* -------------------------------------------------------------------------------------------------------- */
        if (SECPLAN02_TELEFONO = '') then
            SECPLAN02_TELEFONO = secplan02_v_telefono;
        else
            SECPLAN02_TELEFONO = secplan02_v_lada || SECPLAN02_TELEFONO;
        /* -------------------------------------------------------------------------------------------------------- */
        SECPLAN02_TOTAL = secplan02_adelanto + secplan02_deposito + secplan03_diferencia;
        /* -------------------------------------------------------------------------------------------------------- */
        select
        max(SECPLAN04_DET_PAGOS.secplan04_total),
        sum(SECPLAN04_DET_PAGOS.secplan04_recibe),
        min(SECPLAN04_DET_PAGOS.secplan04_cambio),
        cast(max(SECPLAN04_DET_PAGOS.secplan04_fapl) as date)
        from SECPLAN04_DET_PAGOS
        where SECPLAN04_DET_PAGOS.rela_secplan02 = :id_secplan02
        into :secplan04_total,
             :secplan04_recibe,
             :secplan04_cambio,
             :secplan04_fapl;
        /* -------------------------------------------------------------------------------------------------------- */
        SELECT cast(max(SECPLAN20_CAB_CORTECAJA.SECPLAN20_FCORTE) as date)
        FROM SECPLAN20_CAB_CORTECAJA
        INNER JOIN SECPLAN21_DET_PLANES ON (SECPLAN20_CAB_CORTECAJA.ID_SECPLAN20 = SECPLAN21_DET_PLANES.RELA_SECPLAN20)
        where SECPLAN21_DET_PLANES.rela_secplan02 = :id_secplan02
        into :SECPLAN20_FCORTE;
        /* -------------------------------------------------------------------------------------------------------- */
        suspend;
    end
end
REP_PYMVENT21_SUCURSALES       

BEGIN
  DELETE FROM ZTMPYMVENT21_CANT
  WHERE ZTMPYMVENT21_CANT.USUARIO = CURRENT_USER;

  DELETE FROM ZTMPYMVENT21_RESURTIDO
  WHERE ZTMPYMVENT21_RESURTIDO.USUARIO = CURRENT_USER;

  INSERT INTO ZTMPYMVENT21_CANT
    SELECT
        CURRENT_USER,
        PYMVENT21_DET_TICKETS.RELA_PYMINVE10,
        SUM(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD)
    FROM PYMVENT21_DET_TICKETS
    INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
    WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :PARAM_CATEGORIA
      AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    GROUP BY PYMVENT21_DET_TICKETS.RELA_PYMINVE10;

  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :RELA_SOCSYST01,
     :EMPRESA;

  SELECT
      PYMINVE40_ARB_LOCACIONES.RELA_SOCWFLO01,
      PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40
  FROM PYMINVE40_ARB_LOCACIONES
  WHERE PYMINVE40_ARB_LOCACIONES.RELA_SOCSYST01 = :PARAM_EMPRESA
    AND PYMINVE40_ARB_LOCACIONES.PYMINVE40_CODEXT = 'MAIN'
  INTO
      :ID_ORGANIGRAMA,
      :ID_ALMACEN;

  IF (:ID_ALMACEN IS NULL) THEN
    BEGIN
      ID_ORGANIGRAMA = -1;
      ID_ALMACEN = -1;
    END

  SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD)
  FROM PYMVENT21_DET_TICKETS
  INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
  WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
    AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :PARAM_CATEGORIA
    AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
  INTO :CANTIDAD_TOTAL;

  IF (:PARAM_SOCWFLO01 IS NOT NULL) THEN
    BEGIN
      FOR
        SELECT
            PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            CATEGORIA.SOCSYST10_FILTRO_DES
        FROM PYMVENT21_DET_TICKETS
        INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = :PARAM_SOCWFLO01
          AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :PARAM_CATEGORIA
          AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        GROUP BY
            PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            CATEGORIA.SOCSYST10_FILTRO_DES
        INTO
            :RELA_SOCWFLO01,
            :RELA_SOCSYST10,
            :SUCURSAL,
            :CATEGORIA
      DO
      BEGIN
        CANTIDAD_SUC = 0;
        PORCENTAJE = 0;

        SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD)
        FROM PYMVENT21_DET_TICKETS
        INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
        WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :PARAM_CATEGORIA
          AND PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = :RELA_SOCWFLO01
          AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO :CANTIDAD_SUC;

        PORCENTAJE = CANTIDAD_SUC / CANTIDAD_TOTAL * 100;

        FOR
          SELECT
              ARB_PYMVENT21_VENTAS.RELA_PYMINVE10,
              ARB_PYMVENT21_VENTAS.HIJO_CODPROD,
              ARB_PYMVENT21_VENTAS.HIJO_DESCRIPCION,
              ARB_PYMVENT21_VENTAS.HIJO_CANTI,
              ARB_PYMVENT21_VENTAS.HIJO_IMPORTE,
              ARB_PYMVENT21_VENTAS.HIJO_STOCK,
              ARB_PYMVENT21_VENTAS.HIJO_ULTFECHA
          FROM ARB_PYMVENT21_VENTAS(:PARAM_EMPRESA,
                                    :PARAM_CATEGORIA,
                                    :PARAM_FECHADESDE,
                                    :PARAM_FECHAHASTA,
                                    :RELA_SOCWFLO01,
                                    NULL)
          ORDER BY HIJO_IMPORTE DESC
          INTO
              :RELA_PYMINVE10,
              :CODIGO,
              :PRODUCTO,
              :CANTIDAD,
              :IMPORTE,
              :STOCK,
              :ULTFECHA
        DO
        BEGIN
          AJUSTE = 0;
          RESURTIDO = 0;
          STOCK_ALMACEN = 0;

          SELECT ZTMPYMVENT21_CANT.TOT_CANTIDAD
          FROM ZTMPYMVENT21_CANT
          WHERE ZTMPYMVENT21_CANT.USUARIO = CURRENT_USER
            AND ZTMPYMVENT21_CANT.RELA_PYMINVE10 = :RELA_PYMINVE10
          INTO :CANTIDAD_ALL;

          AJUSTE = CANTIDAD_ALL * PORCENTAJE / 100;
          RESURTIDO = AJUSTE - STOCK;

          IF (:RESURTIDO >= 0) THEN
            BEGIN
              SELECT SUM(PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD)
              FROM PYMINVE36_MOV_CANTIDADES
              WHERE PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE40 = :ID_ALMACEN
                AND PYMINVE36_MOV_CANTIDADES.RELA_SOCWFLO01 = :ID_ORGANIGRAMA
                AND PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE10 = :RELA_PYMINVE10
              INTO :STOCK_ALMACEN;

              IF (:STOCK_ALMACEN IS NULL) THEN
                STOCK_ALMACEN = 0;

              INSERT INTO ZTMPYMVENT21_RESURTIDO (ZTMPYMVENT21_RESURTIDO.USUARIO,
                                                  ZTMPYMVENT21_RESURTIDO.RELA_SOCSYST01,
                                                  ZTMPYMVENT21_RESURTIDO.RELA_SOCWFLO01,
                                                  ZTMPYMVENT21_RESURTIDO.RELA_PYMINVE10,
                                                  ZTMPYMVENT21_RESURTIDO.CODIGO,
                                                  ZTMPYMVENT21_RESURTIDO.PRODUCTO,
                                                  ZTMPYMVENT21_RESURTIDO.STOCK_BODEGA,
                                                  ZTMPYMVENT21_RESURTIDO.STOCK,
                                                  ZTMPYMVENT21_RESURTIDO.RESURTIDO)
                                          VALUES (CURRENT_USER,
                                                  :RELA_SOCSYST01,
                                                  :RELA_SOCWFLO01,
                                                  :RELA_PYMINVE10,
                                                  :CODIGO,
                                                  :PRODUCTO,
                                                  :STOCK_ALMACEN,
                                                  :STOCK,
                                                  :RESURTIDO);

              SUSPEND;
          END
        END
      END
    END
  ELSE
    BEGIN
      FOR
        SELECT
            PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            CATEGORIA.SOCSYST10_FILTRO_DES
        FROM PYMVENT21_DET_TICKETS
        INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS CATEGORIA ON (PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = CATEGORIA.ID_SOCSYST10)
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :PARAM_CATEGORIA
          AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        GROUP BY
            PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
            PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            CATEGORIA.SOCSYST10_FILTRO_DES
        INTO
            :RELA_SOCWFLO01,
            :RELA_SOCSYST10,
            :SUCURSAL,
            :CATEGORIA
      DO
      BEGIN
        CANTIDAD_SUC = 0;
        PORCENTAJE = 0;

        SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD)
        FROM PYMVENT21_DET_TICKETS
        INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMVENT21_DET_TICKETS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
        WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST10 = :PARAM_CATEGORIA
          AND PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = :RELA_SOCWFLO01
          AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO :CANTIDAD_SUC;

        PORCENTAJE = CANTIDAD_SUC / CANTIDAD_TOTAL * 100;

        FOR
          SELECT
              ARB_PYMVENT21_VENTAS.RELA_PYMINVE10,
              ARB_PYMVENT21_VENTAS.HIJO_CODPROD,
              ARB_PYMVENT21_VENTAS.HIJO_DESCRIPCION,
              ARB_PYMVENT21_VENTAS.HIJO_CANTI,
              ARB_PYMVENT21_VENTAS.HIJO_IMPORTE,
              ARB_PYMVENT21_VENTAS.HIJO_STOCK,
              ARB_PYMVENT21_VENTAS.HIJO_ULTFECHA
          FROM ARB_PYMVENT21_VENTAS(:PARAM_EMPRESA,
                                    :PARAM_CATEGORIA,
                                    :PARAM_FECHADESDE,
                                    :PARAM_FECHAHASTA,
                                    :RELA_SOCWFLO01,
                                    NULL)
          ORDER BY HIJO_IMPORTE DESC
          INTO
              :RELA_PYMINVE10,
              :CODIGO,
              :PRODUCTO,
              :CANTIDAD,
              :IMPORTE,
              :STOCK,
              :ULTFECHA
        DO
        BEGIN
          AJUSTE = 0;
          RESURTIDO = 0;
          STOCK_ALMACEN = 0;

          SELECT ZTMPYMVENT21_CANT.TOT_CANTIDAD
          FROM ZTMPYMVENT21_CANT
          WHERE ZTMPYMVENT21_CANT.USUARIO = CURRENT_USER
            AND ZTMPYMVENT21_CANT.RELA_PYMINVE10 = :RELA_PYMINVE10
          INTO :CANTIDAD_ALL;

          AJUSTE = CANTIDAD_ALL * PORCENTAJE / 100;
          RESURTIDO = AJUSTE - STOCK;

          IF (:RESURTIDO >= 0) THEN
            BEGIN
              SELECT SUM(PYMINVE36_MOV_CANTIDADES.PYMINVE36_CANTIDAD)
              FROM PYMINVE36_MOV_CANTIDADES
              WHERE PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE40 = :ID_ALMACEN
                AND PYMINVE36_MOV_CANTIDADES.RELA_SOCWFLO01 = :ID_ORGANIGRAMA
                AND PYMINVE36_MOV_CANTIDADES.RELA_PYMINVE10 = :RELA_PYMINVE10
              INTO :STOCK_ALMACEN;

              IF (:STOCK_ALMACEN IS NULL) THEN
                STOCK_ALMACEN = 0;
    
              INSERT INTO ZTMPYMVENT21_RESURTIDO (ZTMPYMVENT21_RESURTIDO.USUARIO,
                                                  ZTMPYMVENT21_RESURTIDO.RELA_SOCSYST01,
                                                  ZTMPYMVENT21_RESURTIDO.RELA_SOCWFLO01,
                                                  ZTMPYMVENT21_RESURTIDO.RELA_PYMINVE10,
                                                  ZTMPYMVENT21_RESURTIDO.CODIGO,
                                                  ZTMPYMVENT21_RESURTIDO.PRODUCTO,
                                                  ZTMPYMVENT21_RESURTIDO.STOCK_BODEGA,
                                                  ZTMPYMVENT21_RESURTIDO.STOCK,
                                                  ZTMPYMVENT21_RESURTIDO.RESURTIDO)
                                          VALUES (CURRENT_USER,
                                                  :RELA_SOCSYST01,
                                                  :RELA_SOCWFLO01,
                                                  :RELA_PYMINVE10,
                                                  :CODIGO,
                                                  :PRODUCTO,
                                                  :STOCK_ALMACEN,
                                                  :STOCK,
                                                  :RESURTIDO);
    
              SUSPEND;
            END
        END
      END
    END
END
VW_SOCSYST17                   

DECLARE VARIABLE LOCAL BIGINT;
DECLARE VARIABLE EXISTE BIGINT;
DECLARE VARIABLE RELASOCSYST10 BIGINT;
begin
    SELECT COUNT(*)
    FROM SOCSYST17_TBL_CONFIGURACION
    WHERE RELA_SOCUSUA02 = :xIDUsuario
    INTO :EXISTE;

    select socsyst10_tbl_listaestados.id_socsyst10
    from socsyst10_tbl_listaestados
    where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'ID30'
      and socsyst10_tbl_listaestados.socsyst10_codigo = '0 NU'
      into :RELASOCSYST10;

    if (EXISTE=0) then
        BEGIN
        select MIN(ID_SOCUSUA50)
        FROM SOCUSUA50_ARB_LOCALIDADES
        INTO :LOCAL;

        INSERT INTO SOCSYST17_TBL_CONFIGURACION
        (RELA_SOCUSUA02,
         RELA_SOCUSUA50_ORIG,
         RELA_SOCUSUA50_DEST,
         RELA_SOCSYST10,
         SOCSYST17_WORD,
         SOCSYST17_EXCEL,
         SOCSYST17_PDF,
         SOCSYST17_DATOS_I,
         SOCSYST17_SETNUM,
         SOCSYST17_TIMEOUT,
         SOCSYST17_IMGDESKTOP)
        VALUES
        (:xIDUsuario,
         :LOCAL,
         :LOCAL,
         :RELASOCSYST10,
         '',
         '',
         '',
         '',
         'Americano',
         0,
         null);
         END

    FOR SELECT
    RELA_SOCUSUA50_ORIG,
    RELA_SOCUSUA50_DEST,
    RELA_SOCSYST10,
    ID_SOCSYST17,
    SOCSYST17_WORD,
    SOCSYST17_EXCEL,
    SOCSYST17_PDF,
    SOCSYST17_DATOS_I,
    SOCSYST17_SETNUM,
    SOCSYST17_BARCODE,
    SOCSYST17_TIMEOUT,
    SOCSYST17_IMGDESKTOP,
    socsyst17_decimales
    FROM SOCSYST17_TBL_CONFIGURACION
    WHERE RELA_SOCUSUA02 = :xIDUsuario
    INTO
    :RELA_SOCUSUA50_ORIG,
    :RELA_SOCUSUA50_DEST,
    :RELA_SOCSYST10,
    :ID_SOCSYST17,
    :SOCSYST17_WORD,
    :SOCSYST17_EXCEL,
    :SOCSYST17_PDF,
    :SOCSYST17_DATOS_I,
    :SOCSYST17_SETNUM,
    :SOCSYST17_BARCODE,
    :SOCSYST17_TIMEOUT,
    :SOCSYST17_IMGDESKTOP,
    :socsyst17_decimales
    DO
    SUSPEND;
end
REP_PYMINVE12_UTILIDAD         

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :ID_SOCSYST01,
      :EMPRESA;

  IF (:PARAM_PROVEEDOR != -1) THEN
    /*FOR
      SELECT
          PYMINVE26_DET_PEDIDOS.RELA_PYMINVE10,
          PYMINVE26_DET_PEDIDOS.RELA_PYMINVE12,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
          PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO + ((PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD) / 100),
          PYMINVE12_DET_PROVEEDORES.PYMINVE12_PROVEEDOR,
          PYMINVE12_DET_PROVEEDORES.PYMINVE12_CODIGO,
          PYMINVE12_DET_PROVEEDORES.PYMINVE12_DESCRIPCION,
          PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
          PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD,
          PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE * PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD,
          (PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE * PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD) / PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD
      FROM PYMINVE27_DET_RECEPCION
      INNER JOIN PYMINVE26_DET_PEDIDOS ON (PYMINVE26_DET_PEDIDOS.ID_PYMINVE26 = PYMINVE27_DET_RECEPCION.RELA_PYMINVE26)
      INNER JOIN PYMINVE25_CAB_PEDIDOS ON (PYMINVE26_DET_PEDIDOS.RELA_PYMINVE25 = PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25)
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE25_CAB_PEDIDOS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE26_DET_PEDIDOS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
      INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMINVE12_DET_PROVEEDORES.RELA_PYMINVE10)
      WHERE PYMINVE25_CAB_PEDIDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMINVE12_DET_PROVEEDORES.RELA_SICEGRE01 = :PARAM_PROVEEDOR
        AND CAST(PYMINVE27_DET_RECEPCION.PYMINVE27_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
      INTO
         :RELA_PYMINVE10,
         :RELA_PYMINVE12,
         :SUCURSAL,
         :CODIGO,
         :DESCRIPCION,
         :PCOSTO,
         :UTILIDAD,
         :PVENTA,
         :PROVEEDOR,
         :CODIGO_PROVEEDOR,
         :DESCRIPCION_PROVEEDOR,
         :PCOSTO_PROVEEDOR,
         :CANTIDAD,
         :TOTAL,
         :PROMEDIO_COSTO
    DO
    BEGIN
      SUSPEND;
    END
  ELSE*/
    FOR
      SELECT
          PYMINVE24_CAB_RECEPCION.RELA_PYMINVE25,
          PYMINVE24_CAB_RECEPCION.ID_PYMINVE24,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI
      FROM PYMINVE25_CAB_PEDIDOS
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE25_CAB_PEDIDOS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMINVE24_CAB_RECEPCION ON (PYMINVE25_CAB_PEDIDOS.ID_PYMINVE25 = PYMINVE24_CAB_RECEPCION.RELA_PYMINVE25)
      WHERE PYMINVE25_CAB_PEDIDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      INTO
         :RELA_PYMINVE25,
         :ID_PYMINVE24,
         :SUCURSAL
    DO
    BEGIN
      FOR
        SELECT
            PYMINVE26_DET_PEDIDOS.RELA_PYMINVE10,
            PYMINVE26_DET_PEDIDOS.RELA_PYMINVE12,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO + ((PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_UTILIDAD) / 100),
            PYMINVE12_DET_PROVEEDORES.PYMINVE12_PROVEEDOR,
            PYMINVE12_DET_PROVEEDORES.PYMINVE12_CODIGO,
            PYMINVE12_DET_PROVEEDORES.PYMINVE12_DESCRIPCION,
            PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
            PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD,
            PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE * PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD,
            (PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE * PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD) / PYMINVE27_DET_RECEPCION.PYMINVE27_CANTIDAD
        FROM PYMINVE27_DET_RECEPCION
        INNER JOIN PYMINVE26_DET_PEDIDOS ON (PYMINVE27_DET_RECEPCION.RELA_PYMINVE26 = PYMINVE26_DET_PEDIDOS.ID_PYMINVE26)
        INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE26_DET_PEDIDOS.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
        INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE26_DET_PEDIDOS.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
        WHERE PYMINVE27_DET_RECEPCION.RELA_PYMINVE24 = :ID_PYMINVE24
          AND CAST(PYMINVE27_DET_RECEPCION.PYMINVE27_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
           :RELA_PYMINVE10,
           :RELA_PYMINVE12,
           :CODIGO,
           :DESCRIPCION,
           :PCOSTO,
           :UTILIDAD,
           :PVENTA,
           :PROVEEDOR,
           :CODIGO_PROVEEDOR,
           :DESCRIPCION_PROVEEDOR,
           :PCOSTO_PROVEEDOR,
           :CANTIDAD,
           :TOTAL,
           :PROMEDIO_COSTO
      DO
      BEGIN
        SUSPEND;
      END
    END
END
REP_PYMINVE30_CARGARAPIDA      

DECLARE VARIABLE PRECIO_PROVEEDOR DOUBLE PRECISION;
BEGIN
    SELECT SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
    FROM SOCSYST01_CAB_CLIENTES
    WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
    INTO :EMPRESA;

    SELECT PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO
    FROM PYMINVE50_CAB_CONCEPTOS
    WHERE PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50 = :PARAM_PYMINVE50
    INTO :CODIGO;

    IF (:PARAM_PYMINVE50 IS NULL) THEN
      FOR
        SELECT
            PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
            PYMINVE30_MOV_STOCK.RELA_PYMINVE30,
            PYMINVE30_MOV_STOCK.ID_PYMINVE30,
            PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
            PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO,
            PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
            PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
            PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
            PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
            PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_NROFACTURA,
            PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_IMPORTE,
            PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_FECHA,
            PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_NOTAS
        FROM PYMINVE41_CAB_CARGARAPIDA
        INNER JOIN PYMINVE42_MOV_CARGARAPIDA ON (PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41 = PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE41)
        INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
        INNER JOIN PYMINVE50_CAB_CONCEPTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
        INNER JOIN PYMINVE40_ARB_LOCACIONES ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
        WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41 = :PARAM_PYMINVE41
        INTO
            :RELA_SOCWFLO01,
            :RELA_PYMINVE30,
            :ID_PYMINVE30,
            :ID_PYMINVE41,
            :SUCURSAL,
            :ALMACEN,
            :CODIGO,
            :CONCEPTO,
            :CODIGO_PRODUCTO,
            :PRODUCTO,
            :CANTIDAD,
            :IMPORTE,
            :TOTAL,
            :NRO_FACTURA,
            :IMPORTE_FACTURA,
            :FECHA_FACTURA,
            :OBSERVACIONES
      DO
      BEGIN
        IF (:CODIGO = 'SA-NU' OR :CODIGO = 'TR-SA') THEN
          BEGIN
            CANTIDAD = CANTIDAD * -1;
            TOTAL = CANTIDAD * IMPORTE;
          END

        SERIE_LOTE = '';
        PROVEEDOR = '';
        PRECIO_PROVEEDOR = 0;

        SELECT
            CBO_SICEGRE01.ENTIDAD,
            PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
            PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
        FROM PYMINVE31_DEP_PROVEEDORES
        INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
        INNER JOIN  CBO_SICEGRE01 ON (PYMINVE12_DET_PROVEEDORES.RELA_SICEGRE01 = CBO_SICEGRE01.ID_SICEGRE01)
        WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :ID_PYMINVE30
        INTO
            :PROVEEDOR,
            :PRECIO_PROVEEDOR,
            :SERIE_LOTE;

        IF (PRECIO_PROVEEDOR != 0) THEN
          BEGIN
            IMPORTE = PRECIO_PROVEEDOR;
            TOTAL = CANTIDAD * IMPORTE;
          END

        SUSPEND;
      END
    ELSE
      IF (:CODIGO != 'TR-SA') THEN
        FOR
          SELECT
              PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
              PYMINVE30_MOV_STOCK.RELA_PYMINVE30,
              PYMINVE30_MOV_STOCK.ID_PYMINVE30,
              PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41,
              SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
              PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
              PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
              PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
              PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
              PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_NROFACTURA,
              PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_IMPORTE,
              PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_FECHA,
              PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_NOTAS
          FROM PYMINVE41_CAB_CARGARAPIDA
          INNER JOIN PYMINVE42_MOV_CARGARAPIDA ON (PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41 = PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE41)
          INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
          INNER JOIN PYMINVE50_CAB_CONCEPTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
          INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
          INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
          INNER JOIN PYMINVE40_ARB_LOCACIONES ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
          WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41 = :PARAM_PYMINVE41
            AND PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50 = :PARAM_PYMINVE50
          INTO
              :RELA_SOCWFLO01,
              :RELA_PYMINVE30,
              :ID_PYMINVE30,
              :ID_PYMINVE41,
              :SUCURSAL,
              :ALMACEN,
              :CONCEPTO,
              :CODIGO_PRODUCTO,
              :PRODUCTO,
              :CANTIDAD,
              :IMPORTE,
              :TOTAL,
              :NRO_FACTURA,
              :IMPORTE_FACTURA,
              :FECHA_FACTURA,
              :OBSERVACIONES
        DO
        BEGIN
          IF (:CODIGO = 'SA-NU') THEN
            BEGIN
              CANTIDAD = CANTIDAD * -1;
              TOTAL = CANTIDAD * IMPORTE;
            END

          SERIE_LOTE = '';
          PROVEEDOR = '';
          PRECIO_PROVEEDOR = 0;

          SELECT
              CBO_SICEGRE01.ENTIDAD,
              PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
              PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
          FROM PYMINVE31_DEP_PROVEEDORES
          INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
          INNER JOIN  CBO_SICEGRE01 ON (PYMINVE12_DET_PROVEEDORES.RELA_SICEGRE01 = CBO_SICEGRE01.ID_SICEGRE01)
          WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :ID_PYMINVE30
          INTO
              :PROVEEDOR,
              :PRECIO_PROVEEDOR,
              :SERIE_LOTE;

          IF (PRECIO_PROVEEDOR != 0) THEN
            BEGIN
              IMPORTE = PRECIO_PROVEEDOR;
              TOTAL = CANTIDAD * IMPORTE;
            END

          SUSPEND;
        END
      ELSE
        FOR
          SELECT
              PYMINVE30_MOV_STOCK.RELA_SOCWFLO01,
              PYMINVE30_MOV_STOCK.RELA_PYMINVE30,
              PYMINVE30_MOV_STOCK.ID_PYMINVE30,
              PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41,
              SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
              PYMINVE40_ARB_LOCACIONES.PYMINVE40_DESCRI,
              PYMINVE50_CAB_CONCEPTOS.PYMINVE50_DESCRIPCION,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_CODIGO,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_DESCRIPCION,
              PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD,
              PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
              PYMINVE30_MOV_STOCK.PYMINVE30_CANTIDAD * PYMINVE10_CAB_PRODUCTOS.PYMINVE10_PCOSTO,
              PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_NROFACTURA,
              PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_IMPORTE,
              PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_FECHA,
              PYMINVE41_CAB_CARGARAPIDA.PYMINVE41_NOTAS
          FROM PYMINVE41_CAB_CARGARAPIDA
          INNER JOIN PYMINVE42_MOV_CARGARAPIDA ON (PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41 = PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE41)
          INNER JOIN PYMINVE30_MOV_STOCK ON (PYMINVE42_MOV_CARGARAPIDA.RELA_PYMINVE30 = PYMINVE30_MOV_STOCK.ID_PYMINVE30)
          INNER JOIN PYMINVE50_CAB_CONCEPTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE50 = PYMINVE50_CAB_CONCEPTOS.ID_PYMINVE50)
          INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINVE30_MOV_STOCK.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
          INNER JOIN PYMINVE10_CAB_PRODUCTOS ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE10 = PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10)
          INNER JOIN PYMINVE40_ARB_LOCACIONES ON (PYMINVE30_MOV_STOCK.RELA_PYMINVE40 = PYMINVE40_ARB_LOCACIONES.ID_PYMINVE40)
          WHERE PYMINVE10_CAB_PRODUCTOS.RELA_SOCSYST01 = :PARAM_EMPRESA
            AND PYMINVE41_CAB_CARGARAPIDA.ID_PYMINVE41 = :PARAM_PYMINVE41
            AND (PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO = 'TR-EN'
                 OR PYMINVE50_CAB_CONCEPTOS.PYMINVE50_CODIGO = 'TR-SA')
          INTO
              :RELA_SOCWFLO01,
              :RELA_PYMINVE30,
              :ID_PYMINVE30,
              :ID_PYMINVE41,
              :SUCURSAL,
              :ALMACEN,
              :CONCEPTO,
              :CODIGO_PRODUCTO,
              :PRODUCTO,
              :CANTIDAD,
              :IMPORTE,
              :TOTAL,
              :NRO_FACTURA,
              :IMPORTE_FACTURA,
              :FECHA_FACTURA,
              :OBSERVACIONES
        DO
        BEGIN
          SERIE_LOTE = '';
          PROVEEDOR = '';
          PRECIO_PROVEEDOR = 0;

          SELECT
              CBO_SICEGRE01.ENTIDAD,
              PYMINVE12_DET_PROVEEDORES.PYMINVE12_IMPORTE,
              PYMINVE31_DEP_PROVEEDORES.PYMINVE31_NROLOTE
          FROM PYMINVE31_DEP_PROVEEDORES
          INNER JOIN PYMINVE12_DET_PROVEEDORES ON (PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE12 = PYMINVE12_DET_PROVEEDORES.ID_PYMINVE12)
          INNER JOIN  CBO_SICEGRE01 ON (PYMINVE12_DET_PROVEEDORES.RELA_SICEGRE01 = CBO_SICEGRE01.ID_SICEGRE01)
          WHERE PYMINVE31_DEP_PROVEEDORES.RELA_PYMINVE30 = :ID_PYMINVE30
          INTO
              :PROVEEDOR,
              :PRECIO_PROVEEDOR,
              :SERIE_LOTE;

          IF (PRECIO_PROVEEDOR != 0) THEN
            BEGIN
              IMPORTE = PRECIO_PROVEEDOR;
              TOTAL = CANTIDAD * IMPORTE;
            END

          SUSPEND;
        END
END
PRD_SGPINGR01_FILTROS          

DECLARE VARIABLE SQLUSER VARCHAR(2000);
DECLARE VARIABLE SQLFILTRO VARCHAR(1000);
DECLARE VARIABLE SOCSYST10_CODIGO VARCHAR(50);
BEGIN
  SQLUSER = 'SELECT CBO_SICINGR01.ENTIDAD, ' ||
                'SGPINGR01_CAB_PROSPECTOS.RELA_SOCSYST01, ' ||
                'SGPINGR01_CAB_PROSPECTOS.RELA_SOCUSUA02, ' ||
                'SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR01, ' ||
                'SGPINGR01_CAB_PROSPECTOS.RELA_SGPINGR01, ' ||
                'SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01, ' ||
                'SGPINGR01_CAB_PROSPECTOS.SGPINGR01_RESUMEN, ' ||
                'SGPINGR01_CAB_PROSPECTOS.SGPINGR01_NOTAS, ' ||
                'CBO_USUARIOS.SOCUSUA02_USUARIO, ' ||
                'SGPINGR01_CAB_PROSPECTOS.SGPINGR01_FAPL, ' ||
                'SGPINGR01_CAB_PROSPECTOS.SGPINGR01_CERRADO ' ||
            'FROM SGPINGR01_CAB_PROSPECTOS ' ||
            'INNER JOIN CBO_USUARIOS ON (SGPINGR01_CAB_PROSPECTOS.RELA_SOCUSUA02 = CBO_USUARIOS.ID_SOCUSUA02) ' ||
            'INNER JOIN CBO_SICINGR01 ON (SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01) ';

  SELECT SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO
  FROM SOCSYST10_TBL_LISTAESTADOS
  WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = :PARAM_FILTRO
  INTO :SOCSYST10_CODIGO;

  IF (:SOCSYST10_CODIGO = 'SINCOTIZA') THEN
    BEGIN
      SQLFILTRO = 'WHERE SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 NOT IN (SELECT SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01 ' ||
                                                                      'FROM SGPINGR04_CAB_COTIZACION ' ||
                                                                      'WHERE SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01 = SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01)';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');

        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'CONCOTIZA') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');

        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'CONFACTURA') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'INNER JOIN SGPINGR07_DET_FACTURAS ON (SGPINGR04_CAB_COTIZACION.ID_SGPINGR04 = SGPINGR07_DET_FACTURAS.RELA_SGPINGR04) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');

        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'SINFACTURA') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'WHERE SGPINGR04_CAB_COTIZACION.ID_SGPINGR04 NOT IN (SELECT SGPINGR07_DET_FACTURAS.RELA_SGPINGR04 ' ||
                                                                      'FROM SGPINGR07_DET_FACTURAS ' ||
                                                                      'WHERE SGPINGR07_DET_FACTURAS.RELA_SGPINGR04 = SGPINGR04_CAB_COTIZACION.ID_SGPINGR04) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');

        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'CERRADOS') THEN
    BEGIN
      SQLFILTRO = 'WHERE SGPINGR01_CAB_PROSPECTOS.SGPINGR01_CERRADO = 1 ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');

        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'COTIZACAN') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'WHERE SGPINGR04_CAB_COTIZACION.SGPINGR04_CANCELADA = 1 ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');

        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'NOCOTIZADOS') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'WHERE SGPINGR04_CAB_COTIZACION.ID_SGPINGR04 NOT IN (SELECT SGPINGR05_DET_RECURSOS.RELA_SGPINGR04 ' ||
                                                                      'FROM SGPINGR05_DET_RECURSOS' ||
                                                                      'WHERE SGPINGR05_DET_RECURSOS.RELA_SGPINGR04 = SGPINGR04_CAB_COTIZACION.ID_SGPINGR04) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');

        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'PROVERECEP') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'WHERE SGPINGR04_CAB_COTIZACION.ID_SGPINGR04 NOT IN (SELECT SGPINGR09_DET_PROVEEDORES.RELA_SGPINGR04 ' ||
                                                                      'FROM SGPINGR09_DET_PROVEEDORES' ||
                                                                      'WHERE SGPINGR09_DET_PROVEEDORES.RELA_SGPINGR04 = SGPINGR04_CAB_COTIZACION.ID_SGPINGR04) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');

        SUSPEND;
      END
    END
END
REP_PYMVENT15_APARTADOS        

DECLARE VARIABLE CODIGO_RESERVA VARCHAR(50);
DECLARE VARIABLE ADEUDO DOUBLE PRECISION;
DECLARE VARIABLE TOTAL21 DOUBLE PRECISION;
BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
     :ID_SOCSYST01,
     :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :CODIGO;

  IF(:PARAM_CLIENTE!=-1) THEN
     FOR
        SELECT
            PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
            PYMVENT21_DET_TICKETS.RELA_SOCSYST10_RESERVA,
            SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
            SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
            PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
            PYMVENT21_DET_TICKETS.ID_PYMVENT21,
            PYMVENT24_CAB_CLIENTES.ID_PYMVENT24,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
            PYMVENT24_CAB_CLIENTES.PYMVENT24_TELEFONOS,
            PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
            PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
            PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
            PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
            PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL,
            PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL,
            PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO,
            CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE),
            CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) + PYMVENT01_CAB_CAJAS.PYMVENT01_MAXDIASAPART,
            CBO_SRHMAIN10.ENTIDAD,
            PYMVENT01_CAB_CAJAS.PYMVENT01_MAXDIASAPART
        FROM PYMVENT21_DET_TICKETS
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        INNER JOIN PYMVENT20_CAB_TICKETS  ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
        INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
        INNER JOIN CBO_SRHMAIN10 ON (PYMVENT20_CAB_TICKETS.RELA_SRHMAIN10_VENDEDOR = CBO_SRHMAIN10.ID_SRHMAIN10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT21_DET_TICKETS.RELA_SOCSYST10_RESERVA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
        INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
        INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
        WHERE PYMVENT21_DET_TICKETS.RELA_SOCSYST10_RESERVA IS NOT NULL
          AND PYMVENT21_DET_TICKETS.RELA_PYMVENT21 IS NULL
          AND PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
          AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
          AND PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = :PARAM_CLIENTE
        INTO
            :RELA_SOCWFLO01,
            :RELA_SOCSYST10_RESERVA,
            :CODIGO_RESERVA,
            :RESERVA,
            :ID_PYMVENT20,
            :ID_PYMVENT21,
            :ID_PYMVENT24,
            :SUCURSAL,
            :FOLIO_APARTADO,
            :CLIENTE,
            :TELEFONO_CLIENTE,
            :CODIGO_PROD,
            :CANTIDAD,
            :PRODUCTO,
            :IMPOUNITARIO,
            :IMPOSUBTOTAL,
            :TOTAL21,
            :ADEUDO,
            :FECHA_APARTADO,
            :FECHA_ENTREGA,
            :VENDEDOR,
            :MAXDIASAPART
     DO
     BEGIN
       SALDO=0;
       ABONOS =0;
       TOTAL=0;

       SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL)
       FROM PYMVENT21_DET_TICKETS
       WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT21 = :ID_PYMVENT21
       INTO :ABONOS;

       IF (:ABONOS IS NULL) THEN
         ABONOS = 0;

       ABONOS = TOTAL21 + ABONOS;
       TOTAL = TOTAL21 + ADEUDO;
       SALDO = TOTAL - ABONOS;

       SUSPEND;
     END
  ELSE
    FOR
      SELECT
          PYMVENT21_DET_TICKETS.RELA_SOCWFLO01,
          PYMVENT21_DET_TICKETS.RELA_SOCSYST10_RESERVA,
          SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
          SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
          PYMVENT20_CAB_TICKETS.ID_PYMVENT20,
          PYMVENT21_DET_TICKETS.ID_PYMVENT21,
          PYMVENT24_CAB_CLIENTES.ID_PYMVENT24,
          SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
          PYMVENT20_CAB_TICKETS.PYMVENT20_DOCNRO,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_CLIENTE,
          PYMVENT24_CAB_CLIENTES.PYMVENT24_TELEFONOS,
          PYMVENT21_DET_TICKETS.PYMVENT21_CODIGO,
          PYMVENT21_DET_TICKETS.PYMVENT21_CANTIDAD,
          PYMVENT21_DET_TICKETS.PYMVENT21_DESCRIPCION,
          PYMVENT21_DET_TICKETS.PYMVENT21_IMPOUNITARIO,
          PYMVENT21_DET_TICKETS.PYMVENT21_IMPOSUBTOTAL,
          PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL,
          PYMVENT21_DET_TICKETS.PYMVENT21_ADEUDO,
          CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE),
          CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) + PYMVENT01_CAB_CAJAS.PYMVENT01_MAXDIASAPART,
          CBO_SRHMAIN10.ENTIDAD,
          PYMVENT01_CAB_CAJAS.PYMVENT01_MAXDIASAPART
      FROM PYMVENT21_DET_TICKETS
      INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMVENT21_DET_TICKETS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
      INNER JOIN PYMVENT20_CAB_TICKETS  ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
      INNER JOIN PYMVENT24_CAB_CLIENTES ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT24 = PYMVENT24_CAB_CLIENTES.ID_PYMVENT24)
      INNER JOIN CBO_SRHMAIN10 ON (PYMVENT20_CAB_TICKETS.RELA_SRHMAIN10_VENDEDOR = CBO_SRHMAIN10.ID_SRHMAIN10)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (PYMVENT21_DET_TICKETS.RELA_SOCSYST10_RESERVA = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      INNER JOIN PYMVENT10_CAB_APERTURACIERRE ON (PYMVENT20_CAB_TICKETS.RELA_PYMVENT10 = PYMVENT10_CAB_APERTURACIERRE.ID_PYMVENT10)
      INNER JOIN PYMVENT01_CAB_CAJAS ON (PYMVENT10_CAB_APERTURACIERRE.RELA_PYMVENT01 = PYMVENT01_CAB_CAJAS.ID_PYMVENT01)
      WHERE PYMVENT21_DET_TICKETS.RELA_SOCSYST10_RESERVA IS NOT NULL
        AND PYMVENT21_DET_TICKETS.RELA_PYMVENT21 IS NULL
        AND PYMVENT20_CAB_TICKETS.RELA_SOCSYST01 = :PARAM_EMPRESA
        AND PYMVENT20_CAB_TICKETS.RELA_SOCWFLO01 = :PARAM_ORGANIGRAMA
        AND CAST(PYMVENT21_DET_TICKETS.PYMVENT21_FAPL AS DATE) BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
      INTO
          :RELA_SOCWFLO01,
          :RELA_SOCSYST10_RESERVA,
          :CODIGO_RESERVA,
          :RESERVA,
          :ID_PYMVENT20,
          :ID_PYMVENT21,
          :ID_PYMVENT24,
          :SUCURSAL,
          :FOLIO_APARTADO,
          :CLIENTE,
          :TELEFONO_CLIENTE,
          :CODIGO_PROD,
          :CANTIDAD,
          :PRODUCTO,
          :IMPOUNITARIO,
          :IMPOSUBTOTAL,
          :TOTAL21,
          :ADEUDO,
          :FECHA_APARTADO,
          :FECHA_ENTREGA,
          :VENDEDOR,
          :MAXDIASAPART
    DO
    BEGIN
      SALDO=0;
      ABONOS =0;
      TOTAL=0;

      SELECT SUM(PYMVENT21_DET_TICKETS.PYMVENT21_TOTAL)
      FROM PYMVENT21_DET_TICKETS
      WHERE PYMVENT21_DET_TICKETS.RELA_PYMVENT21 = :ID_PYMVENT21
      INTO :ABONOS;

      IF (:ABONOS IS NULL) THEN
        ABONOS = 0;

      TOTAL = TOTAL21 + ADEUDO;
      ABONOS= TOTAL21 + ABONOS;
      SALDO = TOTAL - ABONOS;

      SUSPEND;
    END
END
PRD_SICINGR01_ALL              

BEGIN
    FOR
      SELECT
          SICCONT74_MOV_SICINGR01.RELA_SOCSYST01,
          GRID_SICINGR01.RELA_SOCUSUA02,
          GRID_SICINGR01.ID_SICINGR01,
          CAST('Capturado' AS VARCHAR(12)),
          GRID_SICINGR01.SICINGR01_CODIGO,
          GRID_SICINGR01.ENTIDAD,
          GRID_SICINGR01.SOCSYST10_FILTRO_DES,
          RUPPER(GRID_SICINGR01.SICINGR01_CODIGO) || ' ' || RUPPER(GRID_SICINGR01.ENTIDAD) || ' ' || RUPPER(CAST('Capturado' AS VARCHAR(12)))
      FROM SICCONT74_MOV_SICINGR01
      INNER JOIN GRID_SICINGR01 ON (SICCONT74_MOV_SICINGR01.RELA_SICINGR01 = GRID_SICINGR01.ID_SICINGR01)
      INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT74_MOV_SICINGR01.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
      WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'INGREFISCAL'
        AND SICCONT74_MOV_SICINGR01.RELA_SOCSYST01 = :PARAM_SOCSYST01

      UNION

      SELECT
          CAST(NULL AS BIGINT),
          GRID_SICINGR01.RELA_SOCUSUA02,
          GRID_SICINGR01.ID_SICINGR01,
          CAST('Sin Capturar' AS VARCHAR(12)),
          GRID_SICINGR01.SICINGR01_CODIGO,
          GRID_SICINGR01.ENTIDAD,
          GRID_SICINGR01.SOCSYST10_FILTRO_DES,
          RUPPER(GRID_SICINGR01.SICINGR01_CODIGO) || ' ' || RUPPER(GRID_SICINGR01.ENTIDAD) || ' ' || RUPPER(CAST('Sin Capturar' AS VARCHAR(12)))
      FROM GRID_SICINGR01
      WHERE GRID_SICINGR01.ID_SICINGR01 NOT IN (SELECT SICCONT74_MOV_SICINGR01.RELA_SICINGR01
                                                FROM SICCONT74_MOV_SICINGR01
                                                INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SICCONT74_MOV_SICINGR01.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
                                                WHERE SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'INGREFISCAL'
                                                  AND SICCONT74_MOV_SICINGR01.RELA_SOCSYST01 = :PARAM_SOCSYST01)
    INTO
        :RELA_SOCSYST01,
        :RELA_SOCUSUA02,
        :ID_SICINGR01,
        :TIPO,
        :SICINGR01_CODIGO,
        :ENTIDAD,
        :SOCSYST10_GIRO,
        :BUSQUEDA
    DO
    BEGIN
        SUSPEND;
    END
END
REP_PYMINGR01_FACTURAS_ALL     

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCSYST01,
      :EMPRESA;

  FOR
    SELECT
        PYMINGR01_CAB_FACTURAS.RELA_SICINGR01,
        PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01,
        PYMINGR01_CAB_FACTURAS.RELA_MSGPOLI01_CANCELADO,
        PYMINGR01_CAB_FACTURAS.ID_PYMINGR01,
        SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
        TIPO.SOCSYST10_FILTRO_DES,
        MONEDA.SOCSYST10_CODIGO,
        CBO_SICINGR01.ENTIDAD,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_CONCEPTO,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_DOCNRO,
        (SELECT FIRST 1 PYMINGR18_DEP_FACTELECT.PYMINGR18_DOCNRO
         FROM PYMINGR18_DEP_FACTELECT
         WHERE PYMINGR18_DEP_FACTELECT.RELA_PYMINGR01 = PYMINGR01_CAB_FACTURAS.ID_PYMINGR01),
        PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_SUBTOTAL,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TOTAL,
        PYMINGR01_CAB_FACTURAS.PYMINGR01_TIPOCAMBIO
    FROM PYMINGR01_CAB_FACTURAS
    INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
    INNER JOIN CBO_SICINGR01 ON (PYMINGR01_CAB_FACTURAS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPO ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10 = TIPO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS MONEDA ON (PYMINGR01_CAB_FACTURAS.RELA_SOCSYST10_MONEDA = MONEDA.ID_SOCSYST10)
    WHERE PYMINGR01_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND PYMINGR01_CAB_FACTURAS.PYMINGR01_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    INTO
        :RELA_SICINGR01,
        :RELA_MSGPOLI01,
        :RELA_MSGPOLI01_CANCELADO,
        :ID_PYMINGR01,
        :SUCURSAL,
        :TIPO,
        :MONEDA,
        :CLIENTE,
        :CONCEPTO,
        :FOLIO,
        :FOLIO_ELECT,
        :FECHA,
        :SUBTOTAL,
        :TOTAL,
        :TIPOCAMBIO
  DO
  BEGIN
     IF (:RELA_MSGPOLI01_CANCELADO IS NOT NULL) THEN
       BEGIN
         SUBTOTAL = 0;
         TOTAL = 0;
         IVA = 0;
         IEPS = 0;
         RETISR = 0;
         RETIVA = 0;
       END
     ELSE
       SELECT
           SUM(REP_PYMINGR02_PYMINGR06.IVA),
           SUM(REP_PYMINGR02_PYMINGR06.IEPS),
           SUM(REP_PYMINGR02_PYMINGR06.RETISR),
           SUM(REP_PYMINGR02_PYMINGR06.RETIVA)
       FROM REP_PYMINGR02_PYMINGR06(:ID_PYMINGR01)
       WHERE REP_PYMINGR02_PYMINGR06.CODIGO != 'GASTOS'
       INTO
          :IVA,
          :IEPS,
          :RETISR,
          :RETIVA;

     SUSPEND;
  END
END
REP_SGPINGR01_FILTROS          

DECLARE VARIABLE SQLUSER VARCHAR(2000);
DECLARE VARIABLE SQLFILTRO VARCHAR(1000);
DECLARE VARIABLE SOCSYST10_CODIGO VARCHAR(50);
DECLARE VARIABLE VAR_IMPORTE DOUBLE PRECISION;
DECLARE VARIABLE DOCNRO VARCHAR(50);
BEGIN

    SELECT
        SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
        SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO,'')
    FROM SOCSYST01_CAB_CLIENTES
    WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
    INTO
       :EMPRESA,
       :LOGO;

  SQLUSER = 'SELECT CBO_SICINGR01.ENTIDAD, ' ||
                'SGPINGR01_CAB_PROSPECTOS.RELA_SOCSYST01, ' ||
                'SGPINGR01_CAB_PROSPECTOS.RELA_SOCUSUA02, ' ||
                'SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR01, ' ||
                'SGPINGR01_CAB_PROSPECTOS.RELA_SGPINGR01, ' ||
                'SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01, ' ||
                'SGPINGR01_CAB_PROSPECTOS.SGPINGR01_RESUMEN, ' ||
                'SGPINGR01_CAB_PROSPECTOS.SGPINGR01_NOTAS, ' ||
                'CBO_USUARIOS.SOCUSUA02_USUARIO, ' ||
                'SGPINGR01_CAB_PROSPECTOS.SGPINGR01_FAPL, ' ||
                'SGPINGR01_CAB_PROSPECTOS.SGPINGR01_CERRADO ' ||
            'FROM SGPINGR01_CAB_PROSPECTOS ' ||
            'INNER JOIN CBO_USUARIOS ON (SGPINGR01_CAB_PROSPECTOS.RELA_SOCUSUA02 = CBO_USUARIOS.ID_SOCUSUA02) ' ||
            'INNER JOIN CBO_SICINGR01 ON (SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR01 = CBO_SICINGR01.ID_SICINGR01) ';

  SELECT
      SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO,
      SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_des
  FROM SOCSYST10_TBL_LISTAESTADOS
  WHERE SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = :PARAM_FILTRO
  INTO :SOCSYST10_CODIGO,
       :FILTRADOPOR;

  IF (:SOCSYST10_CODIGO = 'SINCOTIZA') THEN
    BEGIN
      SQLFILTRO = 'WHERE SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 NOT IN (SELECT SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01 ' ||
                                                                      'FROM SGPINGR04_CAB_COTIZACION ' ||
                                                                      'WHERE SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01 = SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01)';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');
        IF (:SGPINGR01_FAPL IS NOT NULL) THEN
            EXECUTE PROCEDURE API_FECHA_CADENA :SGPINGR01_FAPL, 1 RETURNING_VALUES FECHA_CADENA;

        IMPORTE = 0;
        FOR
            SELECT
                grid_sgpingr04.importe
            from grid_sgpingr04
            where grid_sgpingr04.rela_sgpingr01 = :id_sgpingr01
            into
                :var_importe

            do
                begin
                    IMPORTE= IMPORTE + :var_importe;
                end
        SUSPEND;

      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'CONCOTIZA') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');
        IF (:SGPINGR01_FAPL IS NOT NULL) THEN
            EXECUTE PROCEDURE API_FECHA_CADENA :SGPINGR01_FAPL, 1 RETURNING_VALUES FECHA_CADENA;
        DOCNRO= null;
        FOR
            SELECT
                grid_sgpingr04.importe,
                grid_sgpingr04.sgpingr04_docnro,
                grid_sgpingr04.sgpingr04_resumen
            from grid_sgpingr04
            where grid_sgpingr04.rela_sgpingr01 = :id_sgpingr01
            into
                :var_importe,
                :cotizacion,
                :RESUMEN

            do
                begin
                    IMPORTE = 0;
                    IMPORTE= :var_importe;
                    DOCNRO= '';
                    SUSPEND;
                end
        if (:DOCNRO is null) then
          begin
            COTIZACION= '';
            SUSPEND;
          end
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'CONFACTURA') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'INNER JOIN SGPINGR07_DET_FACTURAS ON (SGPINGR04_CAB_COTIZACION.ID_SGPINGR04 = SGPINGR07_DET_FACTURAS.RELA_SGPINGR04) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');
        IF (:SGPINGR01_FAPL IS NOT NULL) THEN
            EXECUTE PROCEDURE API_FECHA_CADENA :SGPINGR01_FAPL, 1 RETURNING_VALUES FECHA_CADENA;
        IMPORTE = 0;
        FOR
            SELECT
                grid_sgpingr04.importe
            from grid_sgpingr04
            where grid_sgpingr04.rela_sgpingr01 = :id_sgpingr01
            into
                :var_importe

            do
                begin
                    IMPORTE= IMPORTE + :var_importe;
                end
        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'SINFACTURA') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'WHERE SGPINGR04_CAB_COTIZACION.ID_SGPINGR04 NOT IN (SELECT SGPINGR07_DET_FACTURAS.RELA_SGPINGR04 ' ||
                                                                      'FROM SGPINGR07_DET_FACTURAS ' ||
                                                                      'WHERE SGPINGR07_DET_FACTURAS.RELA_SGPINGR04 = SGPINGR04_CAB_COTIZACION.ID_SGPINGR04) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');
        IF (:SGPINGR01_FAPL IS NOT NULL) THEN
            EXECUTE PROCEDURE API_FECHA_CADENA :SGPINGR01_FAPL, 1 RETURNING_VALUES FECHA_CADENA;
        IMPORTE = 0;
        FOR
            SELECT
                grid_sgpingr04.importe
            from grid_sgpingr04
            where grid_sgpingr04.rela_sgpingr01 = :id_sgpingr01
            into
                :var_importe

            do
                begin
                    IMPORTE= IMPORTE + :var_importe;
                end
        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'CERRADOS') THEN
    BEGIN
      SQLFILTRO = 'WHERE SGPINGR01_CAB_PROSPECTOS.SGPINGR01_CERRADO = 1 ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');
        IF (:SGPINGR01_FAPL IS NOT NULL) THEN
            EXECUTE PROCEDURE API_FECHA_CADENA :SGPINGR01_FAPL, 1 RETURNING_VALUES FECHA_CADENA;
        IMPORTE = 0;
        FOR
            SELECT
                grid_sgpingr04.importe
            from grid_sgpingr04
            where grid_sgpingr04.rela_sgpingr01 = :id_sgpingr01
            into
                :var_importe

            do
                begin
                    IMPORTE= IMPORTE + :var_importe;
                end
        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'COTIZACAN') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'WHERE SGPINGR04_CAB_COTIZACION.SGPINGR04_CANCELADA = 1 ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');
        IF (:SGPINGR01_FAPL IS NOT NULL) THEN
            EXECUTE PROCEDURE API_FECHA_CADENA :SGPINGR01_FAPL, 1 RETURNING_VALUES FECHA_CADENA;
        IMPORTE = 0;
        FOR
            SELECT
                grid_sgpingr04.importe
            from grid_sgpingr04
            where grid_sgpingr04.rela_sgpingr01 = :id_sgpingr01
            into
                :var_importe

            do
                begin
                    IMPORTE= IMPORTE + :var_importe;
                end
        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'NOCOTIZADOS') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'WHERE SGPINGR04_CAB_COTIZACION.ID_SGPINGR04 NOT IN (SELECT SGPINGR05_DET_RECURSOS.RELA_SGPINGR04 ' ||
                                                                      'FROM SGPINGR05_DET_RECURSOS ' ||
                                                                      'WHERE SGPINGR05_DET_RECURSOS.RELA_SGPINGR04 = SGPINGR04_CAB_COTIZACION.ID_SGPINGR04) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');
        IF (:SGPINGR01_FAPL IS NOT NULL) THEN
            EXECUTE PROCEDURE API_FECHA_CADENA :SGPINGR01_FAPL, 1 RETURNING_VALUES FECHA_CADENA;
        IMPORTE = 0;
        FOR
            SELECT
                grid_sgpingr04.importe
            from grid_sgpingr04
            where grid_sgpingr04.rela_sgpingr01 = :id_sgpingr01
            into
                :var_importe

            do
                begin
                    IMPORTE= IMPORTE + :var_importe;
                end
        SUSPEND;
      END
    END
  ELSE IF (:SOCSYST10_CODIGO = 'PROVERECEP') THEN
    BEGIN
      SQLFILTRO = 'INNER JOIN SGPINGR04_CAB_COTIZACION ON (SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01 = SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01) ' ||
                  'WHERE SGPINGR04_CAB_COTIZACION.ID_SGPINGR04 NOT IN (SELECT SGPINGR09_DET_PROVEEDORES.RELA_SGPINGR04 ' ||
                                                                      'FROM SGPINGR09_DET_PROVEEDORES ' ||
                                                                      'WHERE SGPINGR09_DET_PROVEEDORES.RELA_SGPINGR04 = SGPINGR04_CAB_COTIZACION.ID_SGPINGR04) ';

      FOR EXECUTE STATEMENT :SQLUSER || :SQLFILTRO
      INTO
          :ENTIDAD,
          :RELA_SOCSYST01,
          :RELA_SOCUSUA02,
          :RELA_SICINGR01,
          :RELA_SGPINGR01,
          :ID_SGPINGR01,
          :SGPINGR01_RESUMEN,
          :SGPINGR01_NOTAS,
          :SOCUSUA02_USUARIO,
          :SGPINGR01_FAPL,
          :SGPINGR01_CERRADO
      DO
      BEGIN
        CERRADO = CIF(:SGPINGR01_CERRADO,'Si','No');
        IF (:SGPINGR01_FAPL IS NOT NULL) THEN
            EXECUTE PROCEDURE API_FECHA_CADENA :SGPINGR01_FAPL, 1 RETURNING_VALUES FECHA_CADENA;
        IMPORTE = 0;
        FOR
            SELECT
                grid_sgpingr04.importe
            from grid_sgpingr04
            where grid_sgpingr04.rela_sgpingr01 = :id_sgpingr01
            into
                :var_importe

            do
                begin
                    IMPORTE= IMPORTE + :var_importe;
                end
        SUSPEND;
      END
    END
END
PRD_PYMVENT35_TOT_SALDOS       

begin
    for select
    pymvent24_cab_clientes.id_pymvent24,
    pymvent24_cab_clientes.pymvent24_cliente,
    pymvent24_cab_clientes.pymvent24_credito
    from pymvent24_cab_clientes
    where pymvent24_cab_clientes.id_pymvent24 = :cliente
    into :RELA_PYMVENT24,
         :PYMVENT24_CLIENTE,
         :PYMVENT24_CREDITO
    do
    begin
        select vw_pymvent35_tot_ventas.pymvent20_total
        from vw_pymvent35_tot_ventas
        where vw_pymvent35_tot_ventas.rela_pymvent24 = :CLIENTE
        into :TOTAL_VENTAS;

        select vw_pymvent35_tot_pagos.pymvent35_importe
        from vw_pymvent35_tot_pagos
        where vw_pymvent35_tot_pagos.rela_pymvent24 = :CLIENTE
        into :TOTAL_PAGOS;

        select sum(dnvl(VW_PYMVENT35_TOT_PUNTOS.pymvent20_puntos,0))
        from VW_PYMVENT35_TOT_PUNTOS
        where VW_PYMVENT35_TOT_PUNTOS.rela_pymvent24 = :CLIENTE
        and VW_PYMVENT35_TOT_PUNTOS.tipo = 'V'
        into :PUNTOS_VENTAS;

        select sum(dnvl(VW_PYMVENT35_TOT_PUNTOS.pymvent20_puntos,0))
        from VW_PYMVENT35_TOT_PUNTOS
        where VW_PYMVENT35_TOT_PUNTOS.rela_pymvent24 = :CLIENTE
        and VW_PYMVENT35_TOT_PUNTOS.tipo = 'D'
        into :PUNTOS_PAGOS;

        select sum(dnvl(pymvent20_cab_tickets.pymvent20_devolucion, 0))
        from pymvent20_cab_tickets
        where pymvent20_cab_tickets.rela_pymvent24 = :CLIENTE
        and pymvent20_devolucion > 0
        into :VALES_DEVOLUCION;

        if (TOTAL_VENTAS is null) then
            TOTAL_VENTAS = 0;

        if (TOTAL_PAGOS IS NULL) then
            TOTAL_PAGOS = 0;

        if (PYMVENT24_CREDITO IS NULL) then
            PYMVENT24_CREDITO = 0;

        if (PUNTOS_VENTAS IS NULL) then
            PUNTOS_VENTAS = 0;

        if (PUNTOS_PAGOS IS NULL) then
            PUNTOS_PAGOS = 0;

        if (VALES_DEVOLUCION IS NULL) then
            VALES_DEVOLUCION = 0;
        suspend;
    end
end
CBO_SGPINGR11_MODI             

begin
    if (:VISTA = 'M') then
    begin
        for
        select
        CBO_SGPINGR11_MATER.marca,
        CBO_SGPINGR11_MATER.id_sgpingr05,
        CBO_SGPINGR11_MATER.descripcion,
        CBO_SGPINGR11_MATER.sgpingr05_importe
        from CBO_SGPINGR11_MATER
        WHERE CBO_SGPINGR11_MATER.rela_sgpingr01 = :RELA_SGPINGR01
        AND CBO_SGPINGR11_MATER.id_sgpingr04 = :id_sgpingr04
        AND CBO_SGPINGR11_MATER.rela_sgpingr10 = :rela_sgpingr10

        UNION ALL

        select
        CBO_SGPINGR11_MATER.marca,
        CBO_SGPINGR11_MATER.id_sgpingr05,
        CBO_SGPINGR11_MATER.descripcion,
        CBO_SGPINGR11_MATER.sgpingr05_importe
        from CBO_SGPINGR11_MATER
        WHERE CBO_SGPINGR11_MATER.rela_sgpingr01 = :RELA_SGPINGR01
        AND CBO_SGPINGR11_MATER.id_sgpingr04 = :id_sgpingr04
        AND CBO_SGPINGR11_MATER.rela_sgpingr10 is null

        into :marca,
             :id_sgpingr05,
             :descripcion,
             :sgpingr05_importe
        DO
        BEGIN
            suspend;
        END
    end
    else if (:VISTA = 'C') then
    begin
        for select
        cbo_sgpingr11_concep.marca,
        cbo_sgpingr11_concep.id_sgpingr05,
        cbo_sgpingr11_concep.descripcion,
        cbo_sgpingr11_concep.sgpingr05_importe
        from cbo_sgpingr11_concep
        WHERE cbo_sgpingr11_concep.rela_sgpingr01 = :RELA_SGPINGR01
        AND cbo_sgpingr11_concep.id_sgpingr04 = :id_sgpingr04
        AND cbo_sgpingr11_concep.rela_sgpingr10 = :rela_sgpingr10

        union

        select
        cbo_sgpingr11_concep.marca,
        cbo_sgpingr11_concep.id_sgpingr05,
        cbo_sgpingr11_concep.descripcion,
        cbo_sgpingr11_concep.sgpingr05_importe
        from cbo_sgpingr11_concep
        WHERE cbo_sgpingr11_concep.rela_sgpingr01 = :RELA_SGPINGR01
        AND cbo_sgpingr11_concep.id_sgpingr04 = :id_sgpingr04
        AND cbo_sgpingr11_concep.rela_sgpingr10 is null

        into :marca,
             :id_sgpingr05,
             :descripcion,
             :sgpingr05_importe
        DO
        BEGIN
            suspend;
        END
    end
    else if (:VISTA = 'R') then
    begin
        for
        select
        cbo_sgpingr11_rhum.marca,
        cbo_sgpingr11_rhum.id_sgpingr05,
        cbo_sgpingr11_rhum.descripcion,
        cbo_sgpingr11_rhum.sgpingr05_importe
        from cbo_sgpingr11_rhum
        WHERE cbo_sgpingr11_rhum.rela_sgpingr01 = :RELA_SGPINGR01
        AND cbo_sgpingr11_rhum.id_sgpingr04 = :id_sgpingr04
        AND cbo_sgpingr11_rhum.rela_sgpingr10 = :rela_sgpingr10

        UNION ALL

        select
        cbo_sgpingr11_rhum.marca,
        cbo_sgpingr11_rhum.id_sgpingr05,
        cbo_sgpingr11_rhum.descripcion,
        cbo_sgpingr11_rhum.sgpingr05_importe
        from cbo_sgpingr11_rhum
        WHERE cbo_sgpingr11_rhum.rela_sgpingr01 = :RELA_SGPINGR01
        AND cbo_sgpingr11_rhum.id_sgpingr04 = :id_sgpingr04
        AND cbo_sgpingr11_rhum.rela_sgpingr10 is null

        into :marca,
             :id_sgpingr05,
             :descripcion,
             :sgpingr05_importe
        DO
        BEGIN
            suspend;
        END
    end
end
PRD_VENTAS_POS_MESES           

DECLARE VARIABLE XMES INTEGER;
begin
    for select
    extractmonth(pymvent20_cab_tickets.pymvent20_fapl),
    sum(PYMVENT21_DET_TICKETS.pymvent21_total),
    sum(PYMVENT21_DET_TICKETS.pymvent21_cantidad)
    FROM PYMINVE10_CAB_PRODUCTOS
    INNER JOIN PYMVENT21_DET_TICKETS ON (PYMINVE10_CAB_PRODUCTOS.ID_PYMINVE10 = PYMVENT21_DET_TICKETS.RELA_PYMINVE10)
    INNER JOIN PYMVENT20_CAB_TICKETS ON (PYMVENT21_DET_TICKETS.RELA_PYMVENT20 = PYMVENT20_CAB_TICKETS.ID_PYMVENT20)
    where pymvent20_cab_tickets.rela_socsyst01 = :rela_socsyst01
    and PYMINVE10_CAB_PRODUCTOS.rela_socsyst10 = :CATEGORIA
    and pymvent20_cab_tickets.pymvent20_fapl between :desde and :hasta
    group by
    extractmonth(pymvent20_cab_tickets.pymvent20_fapl),
    pymvent20_cab_tickets.rela_socsyst01
    into :xmes,
         :importe,
         :cantidad
    do
    begin
        if (xmes = 1) then
            mes = 'Enero';
        else if (xmes = 2) then
            mes = 'Febrero';
        else if (xmes = 3) then
            mes = 'Marzo';
        else if (xmes = 4) then
            mes = 'Abril';
        else if (xmes = 5) then
            mes = 'Mayo';
        else if (xmes = 6) then
            mes = 'Junio';
        else if (xmes = 7) then
            mes = 'Julio';
        else if (xmes = 8) then
            mes = 'Agosto';
        else if (xmes = 9) then
            mes = 'Septiembre';
        else if (xmes = 10) then
            mes = 'Octubre';
        else if (xmes = 11) then
            mes = 'Noviembre';
        else if (xmes = 12) then
            mes = 'Diciembre';

        suspend;
    end
end
VW_MEDDOCT01                   

begin
    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    1
    FROM CBO_MEDDOCT01
    WHERE ID_SOCUSUA02 = :FILTRO
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO

    begin
        SUSPEND;
    end

    FOR SELECT
    ID_SOCUSUA02,
    ENTIDAD,
    SOCUSUA01_TIPO,
    SOCUSUA02_USUARIO,
    0
    FROM vr_entidades_all
    WHERE vr_entidades_all.socsyst10_codigo = 'UME'
    and ID_SOCUSUA02 not in (select SICEGRE01_CAB_PROVEEDORES.rela_socusua02
                             from SICEGRE01_CAB_PROVEEDORES
                            )
    ORDER BY ENTIDAD
    INTO :ID_SOCUSUA02,
         :ENTIDAD,
         :SOCUSUA01_TIPO,
         :SOCUSUA02_USUARIO,
         :STATUS
    DO
    SUSPEND;


end
REP_SGPINGR10_DETALLE          

DECLARE VARIABLE ID_PYMINVE10 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_CONTACTO BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_EMPRESA BIGINT;
DECLARE VARIABLE SICINGR01_DIAS_CREDITO INTEGER;
BEGIN
  SELECT
      SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01,
      SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR01,
      SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR02,
      SGPINGR01_CAB_PROSPECTOS.RELA_SOCUSUA02,
      SGPINGR04_CAB_COTIZACION.RELA_SOCUSUA02,
      SGPINGR04_CAB_COTIZACION.ID_SGPINGR04,
      SGPINGR01_CAB_PROSPECTOS.SGPINGR01_RESUMEN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_DOCNRO,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_RESUMEN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FINI,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FFIN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FVTO,
      SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
      SGPINGR01_CAB_PROSPECTOS.SGPINGR01_NOTAS
  FROM SGPINGR04_CAB_COTIZACION
  INNER JOIN SGPINGR01_CAB_PROSPECTOS ON (SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01 = SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SGPINGR04_CAB_COTIZACION.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
  WHERE SGPINGR04_CAB_COTIZACION.id_sgpingr04 = :param_sgpingr04
  INTO
      :RELA_SGPINGR01,
      :RELA_SICINGR01,
      :RELA_SICINGR02,
      :RELA_SOCUSUA02,
      :RELA_SOCUSUA02_SGPINGR04,
      :ID_SGPINGR04,
      :SGPINGR01_RESUMEN,
      :SGPINGR04_DOCNRO,
      :SGPINGR04_RESUMEN,
      :SGPINGR04_FINI,
      :SGPINGR04_FFIN,
      :SGPINGR04_FVTO,
      :MONEDA,
      :SGPINGR01_NOTAS;

  SELECT
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCUSUA02_EMPRESA,
      :RELA_SOCSYST01,
      :EMPRESA,
      :LOGO;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02
  INTO :USUARIO_CREADOR;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02_SGPINGR04
  INTO :USUARIO_REFERENTE;

  SELECT FIRST 1 SICINGR02_DET_REFERENTES.RELA_SOCUSUA02
  FROM SICINGR02_DET_REFERENTES
  WHERE SICINGR02_DET_REFERENTES.ID_SICINGR02 = :RELA_SICINGR02
  INTO :RELA_SOCUSUA02_CONTACTO;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02_CONTACTO
  INTO :REFERENTE;

  SELECT sicingr01_cab_clientes.sicingr01_dias_credito
  FROM sicingr01_cab_clientes
  WHERE sicingr01_cab_clientes.id_sicingr01 = :RELA_SICINGR01
  INTO :SICINGR01_DIAS_CREDITO;

  if (SICINGR01_DIAS_CREDITO > 0) then
    begin
      CONDICIONES= CAST(SICINGR01_DIAS_CREDITO AS varchar(5)) || ' días';
    end
  else
    begin
      CONDICIONES= 'Contado';
    end

  SELECT
      PRD_SICINGR01.SOCUSUA02_ENTIDAD,
      PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC,
      PRD_SICINGR01.SOCUSUA41_DOMICILIO,
      PRD_SICINGR01.SOCUSUA41_CALLE,
      PRD_SICINGR01.SOCUSUA41_NRODOMICILIO,
      PRD_SICINGR01.SOCUSUA41_COLONIA,
      PRD_SICINGR01.SOCUSUA41_DEPTO,
      PRD_SICINGR01.SOCUSUA41_PISO,
      PRD_SICINGR01.SOCUSUA41_TELEFONO,
      PRD_SICINGR01.SOCUSUA41_FAX,
      PRD_SICINGR01.SOCUSUA41_CORREO,
      PRD_SICINGR01.SOCUSUA41_CP,
      PRD_SICINGR01.SOCUSUA50_CIUDAD
  FROM PRD_SICINGR01(:RELA_SICINGR01)
  INTO
      :CLIENTE,
      :CLIENTE_RFC,
      :CLIENTE_DIRECCION,
      :CLIENTE_CALLE,
      :CLIENTE_NRODOMICILIO,
      :CLIENTE_COLONIA,
      :CLIENTE_DEPTO,
      :CLIENTE_PISO,
      :CLIENTE_TELEFONO,
      :CLIENTE_FAX,
      :CLIENTE_CORREO,
      :CLIENTE_CP,
      :CLIENTE_CIUDAD;

  SELECT
       PRD_DATOS_ENTIDADES.CALLE,
       PRD_DATOS_ENTIDADES.NRO,
       PRD_DATOS_ENTIDADES.PISO,
       PRD_DATOS_ENTIDADES.NROINT,
       PRD_DATOS_ENTIDADES.CP,
       PRD_DATOS_ENTIDADES.TELEFONOS,
       PRD_DATOS_ENTIDADES.CELULAR,
       PRD_DATOS_ENTIDADES.FAX,
       PRD_DATOS_ENTIDADES.EMAIL,
       PRD_DATOS_ENTIDADES.LOCALIDAD,
       PRD_DATOS_ENTIDADES.ESTADO,
       PRD_DATOS_ENTIDADES.CIUDAD,
       PRD_DATOS_ENTIDADES.PAIS,
       PRD_DATOS_ENTIDADES.DIRECCION,
       PRD_DATOS_ENTIDADES.LUGAR
   FROM PRD_DATOS_ENTIDADES(:RELA_SOCUSUA02_EMPRESA, -1)
   INTO
       :CALLE_MATRIZ,
       :NRO_MATRIZ,
       :PISO_MATRIZ,
       :NROINT_MATRIZ,
       :CP_MATRIZ,
       :TELEFONOS_MATRIZ,
       :CELULAR_MATRIZ,
       :FAX_MATRIZ,
       :EMAIL_MATRIZ,
       :LOCALIDAD_MATRIZ,
       :ESTADO_MATRIZ,
       :CIUDAD_MATRIZ,
       :PAIS_MATRIZ,
       :DIRECCION_MATRIZ,
       :LUGAR_MATRIZ;

  TOTAL= 0;

  FOR
    SELECT
        sgpingr10_cab_cotizacion.id_sgpingr10,
        sgpingr10_cab_cotizacion.sgpingr10_orden,
        sgpingr10_cab_cotizacion.sgpingr10_resumen,
        sgpingr10_cab_cotizacion.sgpingr10_notas,
        sgpingr10_cab_cotizacion.sgpingr10_importe
    FROM sgpingr10_cab_cotizacion
    WHERE sgpingr10_cab_cotizacion.rela_sgpingr04 = :param_sgpingr04
    INTO
        :ID_SGPINGR10,
        :ORDEN,
        :RESUMEN,
        :NOTAS,
        :IMPORTE
    DO
    BEGIN
      TOTAL= :TOTAL + :IMPORTE;
      FOR
        SELECT
          rep_sgpingr11_materiales.rela_pyminve10,
          rep_sgpingr11_materiales.cantidad,
          rep_sgpingr11_materiales.descripcion
        from rep_sgpingr11_materiales
        WHERE rep_sgpingr11_materiales.rela_sgpingr10= :id_sgpingr10
        INTO
          :id_pyminve10,
          :CANTIDAD_DETALLE,
          :DESCRIPCION_DETALLE
        do
          BEGIN
            SUSPEND;
          END
        if (id_pyminve10 IS NULL) then
          BEGIN
            SUSPEND;
          END
    END
END
REP_SGPINGR10_GENERAL          

DECLARE VARIABLE RELA_SOCUSUA02_CONTACTO BIGINT;
DECLARE VARIABLE RELA_SOCUSUA02_EMPRESA BIGINT;
DECLARE VARIABLE SICINGR01_DIAS_CREDITO INTEGER;
BEGIN
  SELECT
      SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01,
      SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR01,
      SGPINGR01_CAB_PROSPECTOS.RELA_SICINGR02,
      SGPINGR01_CAB_PROSPECTOS.RELA_SOCUSUA02,
      SGPINGR04_CAB_COTIZACION.RELA_SOCUSUA02,
      SGPINGR04_CAB_COTIZACION.ID_SGPINGR04,
      SGPINGR01_CAB_PROSPECTOS.SGPINGR01_RESUMEN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_DOCNRO,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_RESUMEN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FINI,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FFIN,
      SGPINGR04_CAB_COTIZACION.SGPINGR04_FVTO,
      SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_FILTRO_DES,
      SGPINGR01_CAB_PROSPECTOS.SGPINGR01_NOTAS
  FROM SGPINGR04_CAB_COTIZACION
  INNER JOIN SGPINGR01_CAB_PROSPECTOS ON (SGPINGR04_CAB_COTIZACION.RELA_SGPINGR01 = SGPINGR01_CAB_PROSPECTOS.ID_SGPINGR01)
  INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SGPINGR04_CAB_COTIZACION.RELA_SOCSYST10 = SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10)
  WHERE SGPINGR04_CAB_COTIZACION.id_sgpingr04 = :param_sgpingr04
  INTO
      :RELA_SGPINGR01,
      :RELA_SICINGR01,
      :RELA_SICINGR02,
      :RELA_SOCUSUA02,
      :RELA_SOCUSUA02_SGPINGR04,
      :ID_SGPINGR04,
      :SGPINGR01_RESUMEN,
      :SGPINGR04_DOCNRO,
      :SGPINGR04_RESUMEN,
      :SGPINGR04_FINI,
      :SGPINGR04_FFIN,
      :SGPINGR04_FVTO,
      :MONEDA,
      :SGPINGR01_NOTAS;

  SELECT
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      SOCSYST01_CAB_CLIENTES.ID_SOCSYST01,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCUSUA02_EMPRESA,
      :RELA_SOCSYST01,
      :EMPRESA,
      :LOGO;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02
  INTO :USUARIO_CREADOR;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02_SGPINGR04
  INTO :USUARIO_REFERENTE;

  SELECT FIRST 1 SICINGR02_DET_REFERENTES.RELA_SOCUSUA02
  FROM SICINGR02_DET_REFERENTES
  WHERE SICINGR02_DET_REFERENTES.ID_SICINGR02 = :RELA_SICINGR02
  INTO :RELA_SOCUSUA02_CONTACTO;

  SELECT VR_ENTIDADES_ALL.ENTIDAD
  FROM VR_ENTIDADES_ALL
  WHERE VR_ENTIDADES_ALL.ID_SOCUSUA02 = :RELA_SOCUSUA02_CONTACTO
  INTO :REFERENTE;

  SELECT sicingr01_cab_clientes.sicingr01_dias_credito
  FROM sicingr01_cab_clientes
  WHERE sicingr01_cab_clientes.id_sicingr01 = :RELA_SICINGR01
  INTO :SICINGR01_DIAS_CREDITO;

  if (SICINGR01_DIAS_CREDITO > 0) then
    begin
      CONDICIONES= CAST(SICINGR01_DIAS_CREDITO AS varchar(5)) || ' días';
    end
  else
    begin
      CONDICIONES= 'Contado';
    end

  SELECT
      PRD_SICINGR01.SOCUSUA02_ENTIDAD,
      PRD_SICINGR01.SOCUSUA20_SOCUSUA30_RFC,
      PRD_SICINGR01.SOCUSUA41_DOMICILIO,
      PRD_SICINGR01.SOCUSUA41_CALLE,
      PRD_SICINGR01.SOCUSUA41_NRODOMICILIO,
      PRD_SICINGR01.SOCUSUA41_COLONIA,
      PRD_SICINGR01.SOCUSUA41_DEPTO,
      PRD_SICINGR01.SOCUSUA41_PISO,
      PRD_SICINGR01.SOCUSUA41_TELEFONO,
      PRD_SICINGR01.SOCUSUA41_FAX,
      PRD_SICINGR01.SOCUSUA41_CORREO,
      PRD_SICINGR01.SOCUSUA41_CP,
      PRD_SICINGR01.SOCUSUA50_CIUDAD
  FROM PRD_SICINGR01(:RELA_SICINGR01)
  INTO
      :CLIENTE,
      :CLIENTE_RFC,
      :CLIENTE_DIRECCION,
      :CLIENTE_CALLE,
      :CLIENTE_NRODOMICILIO,
      :CLIENTE_COLONIA,
      :CLIENTE_DEPTO,
      :CLIENTE_PISO,
      :CLIENTE_TELEFONO,
      :CLIENTE_FAX,
      :CLIENTE_CORREO,
      :CLIENTE_CP,
      :CLIENTE_CIUDAD;

  SELECT
       PRD_DATOS_ENTIDADES.CALLE,
       PRD_DATOS_ENTIDADES.NRO,
       PRD_DATOS_ENTIDADES.PISO,
       PRD_DATOS_ENTIDADES.NROINT,
       PRD_DATOS_ENTIDADES.CP,
       PRD_DATOS_ENTIDADES.TELEFONOS,
       PRD_DATOS_ENTIDADES.CELULAR,
       PRD_DATOS_ENTIDADES.FAX,
       PRD_DATOS_ENTIDADES.EMAIL,
       PRD_DATOS_ENTIDADES.LOCALIDAD,
       PRD_DATOS_ENTIDADES.ESTADO,
       PRD_DATOS_ENTIDADES.CIUDAD,
       PRD_DATOS_ENTIDADES.PAIS,
       PRD_DATOS_ENTIDADES.DIRECCION,
       PRD_DATOS_ENTIDADES.LUGAR
   FROM PRD_DATOS_ENTIDADES(:RELA_SOCUSUA02_EMPRESA, -1)
   INTO
       :CALLE_MATRIZ,
       :NRO_MATRIZ,
       :PISO_MATRIZ,
       :NROINT_MATRIZ,
       :CP_MATRIZ,
       :TELEFONOS_MATRIZ,
       :CELULAR_MATRIZ,
       :FAX_MATRIZ,
       :EMAIL_MATRIZ,
       :LOCALIDAD_MATRIZ,
       :ESTADO_MATRIZ,
       :CIUDAD_MATRIZ,
       :PAIS_MATRIZ,
       :DIRECCION_MATRIZ,
       :LUGAR_MATRIZ;

  TOTAL= 0;

  FOR
    SELECT
        sgpingr10_cab_cotizacion.id_sgpingr10,
        sgpingr10_cab_cotizacion.sgpingr10_orden,
        sgpingr10_cab_cotizacion.sgpingr10_resumen,
        sgpingr10_cab_cotizacion.sgpingr10_notas,
        sgpingr10_cab_cotizacion.sgpingr10_importe
    FROM sgpingr10_cab_cotizacion
    WHERE sgpingr10_cab_cotizacion.rela_sgpingr04 = :param_sgpingr04
    INTO
        :ID_SGPINGR10,
        :ORDEN,
        :RESUMEN,
        :NOTAS,
        :IMPORTE
    DO
    BEGIN
      SUSPEND;
    END
END
GRID_ON2NIME21                 

DECLARE VARIABLE ON2REGI10_APELLIDOP VARCHAR(100);
DECLARE VARIABLE ON2REGI10_APELLIDOM VARCHAR(100);
DECLARE VARIABLE ON2REGI10_NOMBRES1 VARCHAR(100);
DECLARE VARIABLE ON2REGI10_NOMBRES2 VARCHAR(100);
begin
    if (RELA_ON2REGI10X is not null) then
    begin
        for select
        on2regi10_cab_clientes.on2regi10_apellidop,
        on2regi10_cab_clientes.on2regi10_apellidom,
        on2regi10_cab_clientes.on2regi10_nombres1,
        on2regi10_cab_clientes.on2regi10_nombres2,
        on2regi10_cab_clientes.on2regi10_denominacion,
        CAST(on2regi10_cab_clientes.on2regi10_fapl AS DATE),
        on2regi10_cab_clientes.on2regi10_documento,
        DOC.socsyst10_filtro_des,
        SOCUSUA50_ARB_LOCALIDADES.socusua50_descri,
        on2regi10_cab_clientes.on2regi10_estado,
        on2regi10_cab_clientes.on2regi10_municipio,
        on2regi10_cab_clientes.on2regi10_ciudad,
        on2regi10_cab_clientes.on2regi10_calle,
        on2regi10_cab_clientes.on2regi10_nro,
        on2regi10_cab_clientes.on2regi10_cp,
        on2regi10_cab_clientes.on2regi10_tels,
        on2regi10_cab_clientes.on2regi10_mail1
        from ON2REGI10_CAB_CLIENTES
        inner join SOCUSUA50_ARB_LOCALIDADES on (ON2REGI10_CAB_CLIENTES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        inner join SOCSYST10_TBL_LISTAESTADOS DOC on (ON2REGI10_CAB_CLIENTES.RELA_SOCSYST10 = DOC .ID_SOCSYST10)
        WHERE on2regi10_cab_clientes.id_on2regi10 = :RELA_ON2REGI10X
        INTO :on2regi10_apellidop,
             :on2regi10_apellidom,
             :on2regi10_nombres1,
             :on2regi10_nombres2,
             :on2regi10_denominacion,
             :fecha_registro,
             :tipodocumento,
             :on2regi10_documento,
             :socusua50_descri,
             :on2regi10_estado,
             :on2regi10_municipio,
             :on2regi10_ciudad,
             :on2regi10_calle,
             :on2regi10_nro,
             :on2regi10_cp,
             :on2regi10_tels,
             :on2regi10_mail1
        do
        begin
        if (on2regi10_apellidop is null) then
            on2regi10_apellidop = '';

        if (on2regi10_apellidom is null) then
            on2regi10_apellidom = '';

        if (on2regi10_nombres1 is null) then
            on2regi10_nombres1 = '';

        if (on2regi10_nombres2 is null) then
            on2regi10_nombres2 = '';

        APELLIDOS = trim(on2regi10_apellidop || ' ' || on2regi10_apellidom);
        NOMBRES = trim(on2regi10_nombres1 || ' ' || on2regi10_nombres2);

        SELECT 
        SNVL(ACCESO.socsyst10_filtro_des,''),
        SNVL(SUCURSAL.socsyst10_filtro_des,''),
        SNVL(PRODUCTO.socsyst10_filtro_des,'')
        FROM SOCSYST10_TBL_LISTAESTADOS ACCESO
        INNER JOIN ON2REGI20_DEP_ACTIVADO ON (ACCESO.ID_SOCSYST10 = ON2REGI20_DEP_ACTIVADO.RELA_SOCSYST10_MODODEACCESO)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS SUCURSAL ON (ON2REGI20_DEP_ACTIVADO.RELA_SOCSYST10 = SUCURSAL.ID_SOCSYST10)
        INNER JOIN SOCSYST10_TBL_LISTAESTADOS PRODUCTO ON (ON2REGI20_DEP_ACTIVADO.RELA_SOCSYST10_PRODUCTOS = PRODUCTO.ID_SOCSYST10)
        WHERE ON2REGI20_DEP_ACTIVADO.rela_on2regi10 = :RELA_ON2REGI10X
        into :ACCESO,
             :SUCURSAL,
             :PRODUCTO;

        suspend;
        end
    end
    else if (RELA_ON2NIME20X is not null) then
    begin
        FOR SELECT
        on2nime21_det_instancias.rela_on2nime20,
        on2nime21_det_instancias.rela_on2regi10,
        on2nime21_det_instancias.id_on2nime21,
        on2nime21_det_instancias.on2nime21_instancia,
        on2nime21_det_instancias.on2nime21_fapl
        FROM on2nime21_det_instancias
        WHERE on2nime21_det_instancias.rela_on2nime20 = :rela_on2nime20x
        INTO :rela_on2nime20,
             :rela_on2regi10,
             :id_on2nime21,
             :on2nime21_instancia,
             :on2nime21_fapl
        DO
        BEGIN
            select
            on2regi10_cab_clientes.on2regi10_apellidop,
            on2regi10_cab_clientes.on2regi10_apellidom,
            on2regi10_cab_clientes.on2regi10_nombres1,
            on2regi10_cab_clientes.on2regi10_nombres2,
            on2regi10_cab_clientes.on2regi10_denominacion,
            CAST(on2regi10_cab_clientes.on2regi10_fapl AS DATE),
            on2regi10_cab_clientes.on2regi10_documento,
            DOC.socsyst10_filtro_des,
            SOCUSUA50_ARB_LOCALIDADES.socusua50_descri,
            on2regi10_cab_clientes.on2regi10_estado,
            on2regi10_cab_clientes.on2regi10_municipio,
            on2regi10_cab_clientes.on2regi10_ciudad,
            on2regi10_cab_clientes.on2regi10_calle,
            on2regi10_cab_clientes.on2regi10_nro,
            on2regi10_cab_clientes.on2regi10_cp,
            on2regi10_cab_clientes.on2regi10_tels,
            on2regi10_cab_clientes.on2regi10_mail1
            from ON2REGI10_CAB_CLIENTES
            inner join SOCUSUA50_ARB_LOCALIDADES on (ON2REGI10_CAB_CLIENTES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
            inner join SOCSYST10_TBL_LISTAESTADOS DOC on (ON2REGI10_CAB_CLIENTES.RELA_SOCSYST10 = DOC .ID_SOCSYST10)
            WHERE on2regi10_cab_clientes.id_on2regi10 = :rela_on2regi10
            INTO :on2regi10_apellidop,
                 :on2regi10_apellidom,
                 :on2regi10_nombres1,
                 :on2regi10_nombres2,
                 :on2regi10_denominacion,
                 :fecha_registro,
                 :tipodocumento,
                 :on2regi10_documento,
                 :socusua50_descri,
                 :on2regi10_estado,
                 :on2regi10_municipio,
                 :on2regi10_ciudad,
                 :on2regi10_calle,
                 :on2regi10_nro,
                 :on2regi10_cp,
                 :on2regi10_tels,
                 :on2regi10_mail1;

            if (on2regi10_apellidop is null) then
                on2regi10_apellidop = '';

            if (on2regi10_apellidom is null) then
                on2regi10_apellidom = '';

            if (on2regi10_nombres1 is null) then
                on2regi10_nombres1 = '';

            if (on2regi10_nombres2 is null) then
                on2regi10_nombres2 = '';

            APELLIDOS = trim(on2regi10_apellidop || ' ' || on2regi10_apellidom);
            NOMBRES = trim(on2regi10_nombres1 || ' ' || on2regi10_nombres2);

            SELECT 
            SNVL(ACCESO.socsyst10_filtro_des,''),
            SNVL(SUCURSAL.socsyst10_filtro_des,''),
            SNVL(PRODUCTO.socsyst10_filtro_des,'')
            FROM SOCSYST10_TBL_LISTAESTADOS ACCESO
            INNER JOIN ON2REGI20_DEP_ACTIVADO ON (ACCESO.ID_SOCSYST10 = ON2REGI20_DEP_ACTIVADO.RELA_SOCSYST10_MODODEACCESO)
            INNER JOIN SOCSYST10_TBL_LISTAESTADOS SUCURSAL ON (ON2REGI20_DEP_ACTIVADO.RELA_SOCSYST10 = SUCURSAL.ID_SOCSYST10)
            INNER JOIN SOCSYST10_TBL_LISTAESTADOS PRODUCTO ON (ON2REGI20_DEP_ACTIVADO.RELA_SOCSYST10_PRODUCTOS = PRODUCTO.ID_SOCSYST10)
            WHERE ON2REGI20_DEP_ACTIVADO.rela_on2regi10 = :rela_on2regi10
            into :ACCESO,
                 :SUCURSAL,
                 :PRODUCTO;

            suspend;
        END
    END
end
REP_SRHNOMI01_FORMATO          

BEGIN
  SELECT
      SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO,
      SOCSYST01_CAB_CLIENTES.SOCSYST01_FONDO
  FROM SOCSYST01_CAB_CLIENTES
  WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO
      :RELA_SOCUSUA02,
      :EMPRESA,
      :LOGO,
      :FONDO;

  SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_CODEXT
  FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
  WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
  INTO :EMPRESA_RFC;

  SELECT
      REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CALLE,
      REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_NRO,
      REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PISO,
      REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_DEPTO,
      REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CP,
      REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_LINEA,
      REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_FAX,
      REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_MAIL_PERSO
  FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
  WHERE REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 1
  INTO
      :CALLE,
      :NRO_EXTERIOR,
      :NRO_INTERIOR,
      :PISO,
      :CODIGO_POSTAL,
      :TELEFONO,
      :FAX,
      :EMAIL;

  FOR
    SELECT
        SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01,
        CBO_SRHMAIN10.ID_SOCUSUA02,
        SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02,
        SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10,
        SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_ANO,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_MES,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_SEM,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM,
        SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_CODEXT,
        CBO_SRHMAIN10.ENTIDAD,
        PUESTO.SOCSYST10_FILTRO_DES,
        PROCESO.SOCSYST10_FILTRO_DES,
        REGIMEN.SOCSYST10_FILTRO_DES,
        SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_FINGRESO,
        SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_SALARIO_DIA,
        SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_SALARIO_NOM
    FROM SRHNOMI01_CAB_SUELDOS
    INNER JOIN SRHNOMI02_DET_EMPLEADOS ON (SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01 = SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01)
    INNER JOIN SRHMAIN10_CAB_EMPLEADO ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS PROCESO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PROCESOS = PROCESO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS PUESTO ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PUESTOS = PUESTO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS REGIMEN ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_REG_PAGO = REGIMEN.ID_SOCSYST10)
    INNER JOIN CBO_SRHMAIN10 ON (SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10 = CBO_SRHMAIN10.ID_SRHMAIN10)
    WHERE SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST01 = :PARAM_EMPRESA
      AND SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
    INTO
        :RELA_SOCSYST01,
        :RELA_SOCUSUA02_EMP,
        :RELA_SRHNOMI02,
        :RELA_SRHMAIN10,
        :ID_SRHNOMI01,
        :SRHNOMI01_ANO,
        :SRHNOMI01_MES,
        :SRHNOMI01_SEM,
        :SRHNOMI01_FECHA_NOM,
        :SRHMAIN10_CODEXT,
        :ENTIDAD,
        :PUESTO,
        :PROCESO,
        :REGIMEN_PAGO,
        :SRHMAIN10_FINGRESO,
        :SRHMAIN10_SALARIO_DIA,
        :SRHMAIN10_SALARIO_NOM
  DO
  BEGIN
    SELECT
       SICCONT70_MOV_EMPLEADOS.RELA_SICCONT02
    FROM SICCONT70_MOV_EMPLEADOS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10)
    WHERE SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'SUELDO'
      AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_EMPRESA
    INTO :RELA_SICCONT02_CARGO;

    SELECT
        SICCONT70_MOV_EMPLEADOS.RELA_SICCONT02
    FROM SICCONT70_MOV_EMPLEADOS
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST10)
    WHERE SICCONT70_MOV_EMPLEADOS.RELA_SRHMAIN10 = :RELA_SRHMAIN10
      AND SOCSYST10_TBL_LISTAESTADOS.SOCSYST10_CODIGO = 'EGREFISCAL'
      AND SICCONT70_MOV_EMPLEADOS.RELA_SOCSYST01 = :PARAM_EMPRESA
    INTO :RELA_SICCONT02_ABONO;

    SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_CODEXT
    FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02_EMP)
    WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
    INTO :ENTIDAD_RFC;

    SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_CODEXT
    FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02_EMP)
    WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'NSS'
    INTO :ENTIDAD_NSS;

    SUSPEND;
  END
END
REP_SRHNOMI01_CFDI             

BEGIN
    SELECT
        SOCSYST01_CAB_CLIENTES.RELA_SOCUSUA02,
        SOCSYST01_CAB_CLIENTES.SOCSYST01_DESCRI,
        SOCSYST01_CAB_CLIENTES.SOCSYST01_REGPATRONAL,
        SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_LOGO,''),
        SNVL(SOCSYST01_CAB_CLIENTES.SOCSYST01_FONDO,'')
    FROM SOCSYST01_CAB_CLIENTES
    WHERE SOCSYST01_CAB_CLIENTES.ID_SOCSYST01 = :PARAM_EMPRESA
    INTO
        :RELA_SOCUSUA02,
        :EMPRESA,
        :REGPATRONAL,
        :LOGO,
        :FONDO;

    SELECT SNVL(SOCSYST08_DET_REGFISCALES.SOCSYST08_REGFISCAL,'')
    FROM SOCSYST08_DET_REGFISCALES
    WHERE SOCSYST08_DET_REGFISCALES.RELA_SOCSYST01 = :PARAM_EMPRESA
    INTO :REGFISCAL;

    SELECT
        SRHMAIN10_CAB_EMPLEADO.RELA_SOCUSUA02,
        SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_DOCNRO,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FECHA_NOM,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FDESDE,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FHASTA,
        SRHNOMI01_CAB_SUELDOS.SRHNOMI01_FPAGO,
        TIPOPAGO.SOCSYST10_FILTRO_DES,
        SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_CODEXT,
        SRHMAIN10_CAB_EMPLEADO.SRHMAIN10_FINGRESO,
        PUESTO.SOCSYST10_FILTRO_DES,
        METODOPAGO.SOCSYST10_FILTRO_DES,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_CONCEPTO,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_CTAPAGO,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_NUMDIASPAGOS,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_SALARIO_NOM,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_SALARIO_DIA,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_NOTAS,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_PERCEP,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_DEDUC + SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_ISR,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_ISR,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_INCAP,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_HORAS,
        SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_PERCEP - (SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_DEDUC + SRHNOMI02_DET_EMPLEADOS.SRHNOMI02_TOT_ISR)
    FROM SRHNOMI02_DET_EMPLEADOS
    INNER JOIN SRHMAIN10_CAB_EMPLEADO
       ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHMAIN10 = SRHMAIN10_CAB_EMPLEADO.ID_SRHMAIN10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS PUESTO
       ON (SRHMAIN10_CAB_EMPLEADO.RELA_SOCSYST10_PUESTOS = PUESTO.ID_SOCSYST10)
    INNER JOIN SRHNOMI01_CAB_SUELDOS
       ON (SRHNOMI02_DET_EMPLEADOS.RELA_SRHNOMI01 = SRHNOMI01_CAB_SUELDOS.ID_SRHNOMI01)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS TIPOPAGO
       ON (SRHNOMI01_CAB_SUELDOS.RELA_SOCSYST10_PERIODO = TIPOPAGO.ID_SOCSYST10)
    INNER JOIN SOCSYST10_TBL_LISTAESTADOS METODOPAGO
       ON (SRHNOMI02_DET_EMPLEADOS.RELA_SOCSYST10_MPAGO = METODOPAGO.ID_SOCSYST10)
    WHERE SRHNOMI02_DET_EMPLEADOS.ID_SRHNOMI02 = :PARAM_ID
    INTO
        :RELA_SOCUSUA02_EMP,
        :ID_SRHNOMI02,
        :DOCNRO,
        :DOCNRO_FECHA,
        :FDESDE,
        :FHASTA,
        :FPAGO,
        :TIPOPAGO,
        :NO_EMP,
        :FINGRESO,
        :PUESTO,
        :METODOPAGO,
        :CONCEPTO,
        :NUMCTAPAGO,
        :NUMDIASPAGOS,
        :SALARIO_NOM,
        :SALARIO_DIA,
        :NOTAS,
        :TOT_PERCEP,
        :TOT_DEDUC,
        :TOT_ISR,
        :TOT_INC,
        :TOT_HORAS,
        :TOTAL;

    SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO
    FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02_EMP)
    WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'NSS'
    INTO :RECEPTOR_NSS;

    SELECT
        PRD_CFD.ULTID_FOLIO,
        STRREPEAT('0', 8 - STRLEN(INTTOSTR(:PARAM_EMPRESA,:PARAM_EMPRESA))),
        STRREPEAT('$', 12 - (PRD_CFD.SOCSYST21_LONGITUD + STRLEN(SNVL(PRD_CFD.SOCSYST21_PREFIJO,'')))),
        INTTOSTR(PRD_CFD.SOCSYST20_ANO_APROBA,PRD_CFD.SOCSYST20_ANO_APROBA) || INTTOSTR(PRD_CFD.SOCSYST20_NRO_APROBA,PRD_CFD.SOCSYST20_NRO_APROBA),
        PRD_CFD.SOCSYST20_ANO_APROBA,
        PRD_CFD.SOCSYST20_NRO_APROBA,
        EXTRACTDAY(PRD_CFD.SOCSYST20_FECHA_APROBA) || '/' || EXTRACTMONTH(PRD_CFD.SOCSYST20_FECHA_APROBA) || '/' || EXTRACTYEAR(PRD_CFD.SOCSYST20_FECHA_APROBA),
        PRD_CFD.SOCSYST20_IMGCBB,
        PRD_CFD.SOCSYST01_NROCERTIFICADO,
        PRD_CFD.SOCSYST20_FOLIO_SERIE,
        PRD_CFD.SOCSYST20_FOLIO_DESDE,
        PRD_CFD.SOCSYST20_FOLIO_HASTA,
        PRD_CFD.FOLIO_FECHA,
        PRD_CFD.EMISOR,
        PRD_CFD.EMISOR_RFC,
        PRD_CFD.EMISOR_CURP,
        PRD_CFD.EMISOR_CALLE || ' No. ' || SNVL(PRD_CFD.EMISOR_NRO_EXTERIOR,''),
        SNVL(PRD_CFD.EMISOR_NRO_INTERIOR,''),
        SNVL(PRD_CFD.EMISOR_PISO,''),
        SNVL(PRD_CFD.EMISOR_COLONIA,''),
        SNVL(PRD_CFD.LUGAR_EXPEDICION,''),
        PRD_CFD.EMISOR_CP,
        PRD_CFD.EMISOR_MUNICIPIO || ', ' || PRD_CFD.EMISOR_ESTADO || ', ' || PRD_CFD.EMISOR_PAIS,
        PRD_CFD.EMISOR_TELEFONOS,
        PRD_CFD.EMISOR_FAX,
        PRD_CFD.EMISOR_CELULAR,
        PRD_CFD.EMISOR_CORREO,
        PRD_CFD.RECEPTOR,
        PRD_CFD.RECEPTOR_RFC,
        PRD_CFD.RECEPTOR_CALLE || ' No. ' || SNVL(PRD_CFD.RECEPTOR_NRO_EXTERIOR,'') || ' ' || SNVL(PRD_CFD.RECEPTOR_NRO_INTERIOR,'') || ', Col. ' || PRD_CFD.RECEPTOR_COLONIA ||  ' C.P. ' || PRD_CFD.RECEPTOR_CP,
        PRD_CFD.RECEPTOR_MUNICIPIO || ', ' || PRD_CFD.RECEPTOR_ESTADO || ', ' || PRD_CFD.RECEPTOR_PAIS,
        PRD_CFD.SOCSYST21_FORMATEADO
    FROM PRD_CFD(4, :PARAM_ID, -1)
    INTO
        :ULTID_FOLIO,
        :FORMATO_EMPRESA,
        :FORMATO,
        :ANOYNUMERO,
        :ANOAPROBA,
        :NUMEROAPROBA,
        :FECHA_APROBA,
        :IMG_CBB,
        :NROCERTIFICADO,
        :FOLIO_SERIE,
        :FOLIO_DESDE,
        :FOLIO_HASTA,
        :FOLIO_FECHA,
        :EMISOR,
        :EMISOR_RFC,
        :EMISOR_CURP,
        :EMISOR_CALLE,
        :EMISOR_NROINT,
        :EMISOR_PISO,
        :EMISOR_LOCALIDAD,
        :LUGAR_EXPEDICION,
        :EMISOR_CP,
        :EMISOR_CIUDAD,
        :EMISOR_TELEFONOS,
        :EMISOR_FAX,
        :EMISOR_CELULAR,
        :EMISOR_CORREO,
        :RECEPTOR,
        :RECEPTOR_RFC,
        :RECEPTOR_DIRECCION,
        :RECEPTOR_CIUDAD,
        :FOLIO;

    EMISOR_DIRECCION = EMISOR_CALLE;

    IF (:EMISOR_NROINT != '') THEN
      EMISOR_DIRECCION = EMISOR_DIRECCION || ' Int. ' || :EMISOR_NROINT;

    IF (:EMISOR_PISO != '') THEN
      EMISOR_DIRECCION = EMISOR_DIRECCION || ' Piso ' || :EMISOR_PISO;

    IF (:EMISOR_LOCALIDAD != '') THEN
      EMISOR_DIRECCION = EMISOR_DIRECCION || ' ' || :EMISOR_LOCALIDAD;

    IF (:EMISOR_TELEFONOS != '') THEN
      EMISOR_TELEFONOS = 'Tel. ' || EMISOR_TELEFONOS;

    IF (:EMISOR_FAX != '') THEN
      EMISOR_FAX = 'Fax ' || EMISOR_FAX;

    IF (:EMISOR_CELULAR != '') THEN
      EMISOR_CELULAR = 'Celular ' || EMISOR_CELULAR;

    SELECT
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_DOCNRO,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_CADENAORIGINAL,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_SELLO,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_CANCELA,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_FECHA,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_UUID_VER,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_SELLOSAT,
        SRHNOMI18_DEP_FACTELECT.SRHNOMI18_NOCERTSAT
    FROM SRHNOMI18_DEP_FACTELECT
    WHERE SRHNOMI18_DEP_FACTELECT.ID_SRHNOMI18 = :ULTID_FOLIO
    INTO
        :DOCNRO_ELECT,
        :CADENA,
        :SELLO,
        :UUID,
        :UUID_CANCELA,
        :UUID_FECHA,
        :UUID_VER,
        :SELLOSAT,
        :NOCERTSAT;

    IF (:DOCNRO_ELECT IS NULL) THEN
      BEGIN
        SELECT
            REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO,
            REP_SOCUSUA40_SOCUSUA02.ENTIDAD
        FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'RFC'
        INTO
            :EMISOR_RFC,
            :EMISOR;

        SELECT REP_SOCUSUA40_SOCUSUA02.SOCUSUA40_NUMERO
        FROM REP_SOCUSUA40_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA40_SOCUSUA02.SOCSYST10_CODIGO = 'CURP'
        INTO :EMISOR_CURP;

        SELECT
            REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA42,
            REP_SOCUSUA41_SOCUSUA02.RELA_SOCUSUA50,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CALLE || ' No. ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_NRO,'') || ' ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_DEPTO,'') || ' ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PISO,'') || ' C.P. ' || SNVL(REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_CP,''),
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_LINEA,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_CELU,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_TELE_FAX,
            REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_MAIL_PERSO
        FROM REP_SOCUSUA41_SOCUSUA02(:RELA_SOCUSUA02)
        WHERE REP_SOCUSUA41_SOCUSUA02.SOCUSUA41_PRINCIPAL = 1
        INTO
            :RELA_SOCUSUA42,
            :RELA_SOCUSUA50,
            :EMISOR_DIRECCION,
            :EMISOR_TELEFONOS,
            :EMISOR_CELULAR,
            :EMISOR_FAX,
            :EMISOR_CORREO;

        SELECT
            SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ASENTAMIENTO,
            RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_MUNICIPIO) || ', ' || RUPPER(SOCUSUA42_TBL_CODPOSTALES.SOCUSUA42_ESTADOPROVINCIA) || ', ' || RUPPER(SOCUSUA50_ARB_LOCALIDADES.SOCUSUA50_DESCRI)
        FROM SOCUSUA42_TBL_CODPOSTALES
        INNER JOIN SOCUSUA50_ARB_LOCALIDADES ON (SOCUSUA42_TBL_CODPOSTALES.RELA_SOCUSUA50 = SOCUSUA50_ARB_LOCALIDADES.ID_SOCUSUA50)
        WHERE SOCUSUA42_TBL_CODPOSTALES.ID_SOCUSUA42 = :RELA_SOCUSUA42
        INTO
            :EMISOR_LOCALIDAD,
            :EMISOR_CIUDAD;

        EXECUTE PROCEDURE PRD_LOCALIDAD :RELA_SOCWFLO01 RETURNING_VALUES LUGAR_EXPEDICION;
      END

    SELECT API_NUM_MEXICO.CNUMERO
    FROM API_NUM_MEXICO(:TOTAL, 'MXP')
    INTO :TOTAL_LETRA;

    IF (:FOLIO_FECHA IS NOT NULL) THEN
        EXECUTE PROCEDURE API_FECHA_CADENA :FOLIO_FECHA, 1 RETURNING_VALUES FOLIO_FECHA_CADENA;

    SUSPEND;
END
GRID_MSGPOLI13                 

DECLARE VARIABLE RELA_SOCSYST01 BIGINT;
DECLARE VARIABLE RELA_SICEGRE01 BIGINT;
DECLARE VARIABLE RELA_SICINGR01 BIGINT;
DECLARE VARIABLE RELA_SRHMAIN10 BIGINT;
begin
    FOR SELECT
    MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02,
    MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10,
    MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10_BANCO,
    MSGPOLI13_DET_REFERENCIAS.rela_siccont02_banco,
    MSGPOLI13_DET_REFERENCIAS.ID_MSGPOLI13,
    SOCSYST10_TBL_LISTAESTADOS.socsyst10_codigo,
    SOCSYST10_TBL_LISTAESTADOS.socsyst10_filtro_des,
    MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_REFERENCIA,
    MSGPOLI13_DET_REFERENCIAS.msgpoli13_origen,
    MSGPOLI13_DET_REFERENCIAS.MSGPOLI13_FAPL
    FROM SOCSYST10_TBL_LISTAESTADOS
    INNER JOIN MSGPOLI13_DET_REFERENCIAS ON (SOCSYST10_TBL_LISTAESTADOS.ID_SOCSYST10 = MSGPOLI13_DET_REFERENCIAS.RELA_SOCSYST10)
    WHERE MSGPOLI13_DET_REFERENCIAS.RELA_MSGPOLI02 = :RELA_MSGPOLI02X
    INTO :RELA_MSGPOLI02,
         :RELA_SOCSYST10,
         :RELA_SOCSYST10_BANCO,
         :rela_siccont02_banco,
         :ID_MSGPOLI13,
         :socsyst10_codigo,
         :socsyst10_filtro_des,
         :MSGPOLI13_REFERENCIA,
         :msgpoli13_origen,
         :MSGPOLI13_FAPL
    do
    begin
        Select
        CBO_BANCOS_CHEQUES_CUENTAS.cuenta,
        CBO_BANCOS_CHEQUES_CUENTAS.banco,
        CBO_BANCOS_CHEQUES_CUENTAS.moneda,
        cBO_BANCOS_CHEQUES_CUENTAS.rela_banco,
        cBO_BANCOS_CHEQUES_CUENTAS.rela_moneda,
        cBO_BANCOS_CHEQUES_CUENTAS.banco_sat
        from CBO_BANCOS_CHEQUES_CUENTAS
        where CBO_BANCOS_CHEQUES_CUENTAS.id_siccont02 = :rela_siccont02_banco
        into :CUENTA,
             :BANCO,
             :MONEDA,
             :rela_moneda,
             :rela_banco,
             :BANCO_SAT;

        Select
        msgpoli02_det_polizas.rela_socsyst01,
        msgpoli02_det_polizas.rela_sicegre01,
        msgpoli02_det_polizas.rela_sicingr01,
        msgpoli02_det_polizas.rela_srhmain10
        from msgpoli02_det_polizas
        where msgpoli02_det_polizas.id_msgpoli02 = :RELA_MSGPOLI02X
        into :rela_socsyst01,
             :rela_sicegre01,
             :rela_sicingr01,
             :rela_srhmain10;

        if (rela_sicegre01 is not null) then
            select
            cbo_bancos_filtro.cuenta,
            cbo_bancos_filtro.banco,
            cbo_bancos_filtro.banco_sat
            from cbo_bancos_filtro('P', :rela_socsyst01, :rela_sicegre01)
            WHERE cbo_bancos_filtro.id_socsyst10 = :RELA_SOCSYST10_BANCO
            INTO :BANCO_PROCLI_CUENTA,
                 :BANCO_PROCLI,
                 :BANCO_PROCLI_SAT;

        else if (rela_sicingr01 is not null) then
            select
            cbo_bancos_filtro.cuenta,
            cbo_bancos_filtro.banco,
            cbo_bancos_filtro.banco_sat
            from cbo_bancos_filtro('C', :rela_socsyst01, :rela_sicingr01)
            WHERE cbo_bancos_filtro.id_socsyst10 = :RELA_SOCSYST10_BANCO
            INTO :BANCO_PROCLI_CUENTA,
                 :BANCO_PROCLI,
                 :BANCO_PROCLI_SAT;

        else if (rela_srhmain10 is not null) then
            select
            cbo_bancos_filtro.cuenta,
            cbo_bancos_filtro.banco,
            cbo_bancos_filtro.banco_sat
            from cbo_bancos_filtro('E', :rela_socsyst01, :rela_srhmain10)
            WHERE cbo_bancos_filtro.id_socsyst10 = :RELA_SOCSYST10_BANCO
            INTO :BANCO_PROCLI_CUENTA,
                 :BANCO_PROCLI,
                 :BANCO_PROCLI_SAT;

        suspend;
    end
end
REP_SICEGRE01_FACTURAS         

DECLARE VARIABLE DBL_SALDO DOUBLE PRECISION;
BEGIN
  SELECT CBO_CLIENTES_EMPRESAS_ALL.ENTIDAD
  FROM CBO_CLIENTES_EMPRESAS_ALL
  WHERE CBO_CLIENTES_EMPRESAS_ALL.ID_SOCSYST01 = :PARAM_EMPRESA
  INTO :EMPRESA;

  SELECT SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO
  FROM SOCWFLO01_ARB_ORGANIGRAMA
  WHERE SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01 = :PARAM_ORGANIGRAMA
  INTO :CODIGO;

  IF (:PARAM_PROVEEDOR != -1) THEN
    BEGIN
      FOR
        SELECT
            PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01,
            PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01,
            PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01,
            PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01,
            PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            CBO_SICEGRE01.ENTIDAD,
            TIPO_FACTURA.SOCSYST10_FILTRO_DES,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FVTO,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL,
            (SELECT CASE WHEN SUM(PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE) IS NULL THEN 0.00 END
             FROM PYMEGRE11_DET_FACTURASNOTAS
             WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
        FROM PYMEGRE02_CAB_FACTURAS
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        INNER JOIN CBO_SICEGRE01 ON (PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = CBO_SICEGRE01.ID_SICEGRE01)
        INNER JOIN CBO_TIPOFACTURAS TIPO_FACTURA ON (PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST10 = TIPO_FACTURA.ID_SOCSYST10)
        WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
          AND PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = :PARAM_PROVEEDOR
          AND PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
            :RELA_SOCSYST01,
            :RELA_SOCWFLO01,
            :RELA_SICEGRE01,
            :RELA_MSGPOLI01,
            :ID_PYMEGRE02,
            :SUCURSAL,
            :PROVEEDOR,
            :TIPO_FACTURA,
            :DOCNRO,
            :FECHA,
            :FECHAVTO,
            :TOTAL,
            :TOTAL_CHEQUE
      DO
      BEGIN
        DBL_SALDO = 0.00;
        FECHA_PAGO = NULL;
        IMPORTE = NULL;
        SALDO = NULL;

        FOR
          SELECT
              PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
              PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE
          FROM PYMEGRE10_CAB_CHEQUES
          INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = :ID_PYMEGRE02
          INTO
              :FECHA_PAGO,
              :IMPORTE
        DO
        BEGIN
          DBL_SALDO = DBL_SALDO + IMPORTE;
          SALDO = TOTAL - DBL_SALDO;

          SUSPEND;
        END

        IF (:FECHA_PAGO IS NULL) THEN
          SUSPEND;
      END
    END
  ELSE
    BEGIN
      FOR
        SELECT
            PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01,
            PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01,
            PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01,
            PYMEGRE02_CAB_FACTURAS.RELA_MSGPOLI01,
            PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02,
            SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_DESCRI,
            CBO_SICEGRE01.ENTIDAD,
            TIPO_FACTURA.SOCSYST10_FILTRO_DES,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_NRO,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FVTO,
            PYMEGRE02_CAB_FACTURAS.PYMEGRE02_TOTAL,
            (SELECT CASE WHEN SUM(PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE) IS NULL THEN 0.00 END
             FROM PYMEGRE11_DET_FACTURASNOTAS
             WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = PYMEGRE02_CAB_FACTURAS.ID_PYMEGRE02)
        FROM PYMEGRE02_CAB_FACTURAS
        INNER JOIN SOCWFLO01_ARB_ORGANIGRAMA ON (PYMEGRE02_CAB_FACTURAS.RELA_SOCWFLO01 = SOCWFLO01_ARB_ORGANIGRAMA.ID_SOCWFLO01)
        INNER JOIN CBO_SICEGRE01 ON (PYMEGRE02_CAB_FACTURAS.RELA_SICEGRE01 = CBO_SICEGRE01.ID_SICEGRE01)
        INNER JOIN CBO_TIPOFACTURAS TIPO_FACTURA ON (PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST10 = TIPO_FACTURA.ID_SOCSYST10)
        WHERE PYMEGRE02_CAB_FACTURAS.RELA_SOCSYST01 = :PARAM_EMPRESA
          AND SOCWFLO01_ARB_ORGANIGRAMA.SOCWFLO01_CODIGO LIKE :CODIGO
          AND PYMEGRE02_CAB_FACTURAS.PYMEGRE02_FFAC BETWEEN :PARAM_FECHADESDE AND :PARAM_FECHAHASTA
        INTO
            :RELA_SOCSYST01,
            :RELA_SOCWFLO01,
            :RELA_SICEGRE01,
            :RELA_MSGPOLI01,
            :ID_PYMEGRE02,
            :SUCURSAL,
            :PROVEEDOR,
            :TIPO_FACTURA,
            :DOCNRO,
            :FECHA,
            :FECHAVTO,
            :TOTAL,
            :TOTAL_CHEQUE
      DO
      BEGIN
        DBL_SALDO = 0.00;
        FECHA_PAGO = NULL;
        IMPORTE = NULL;
        SALDO = NULL;

        FOR
          SELECT
              PYMEGRE10_CAB_CHEQUES.PYMEGRE10_FCHE,
              PYMEGRE11_DET_FACTURASNOTAS.PYMEGRE11_IMPORTE
          FROM PYMEGRE10_CAB_CHEQUES
          INNER JOIN PYMEGRE11_DET_FACTURASNOTAS ON (PYMEGRE10_CAB_CHEQUES.ID_PYMEGRE10 = PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE10)
          WHERE PYMEGRE11_DET_FACTURASNOTAS.RELA_PYMEGRE02 = :ID_PYMEGRE02
          INTO
              :FECHA_PAGO,
              :IMPORTE
        DO
        BEGIN
          DBL_SALDO = DBL_SALDO + IMPORTE;
          SALDO = TOTAL - DBL_SALDO;

          SUSPEND;
        END

        IF (:FECHA_PAGO IS NULL) THEN
          SUSPEND;
      END
    END
END
SOC$_CFDIXML_ENTIDADES_UPDATE  

DECLARE VARIABLE RELA_SOCUSUA02 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA01 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA30 BIGINT;
DECLARE VARIABLE RELA_SOCUSUA40 BIGINT;
DECLARE VARIABLE RELA_SOCSYST10_RFC FLOAT;
begin
    idx = -1;
    if (tipo = 'E') then
    BEGIN
        select srhmain10_cab_empleado.rela_socusua02
        FROM srhmain10_cab_empleado
        WHERE srhmain10_cab_empleado.id_srhmain10 = :ID
        INTO :rela_socusua02;

        if (rela_socusua02 is not null) then
        begin
            idx = :rela_socusua02;

            SELECT socusua02_mae_usuarios.rela_socusua01
            FROM socusua02_mae_usuarios
            WHERE socusua02_mae_usuarios.id_socusua02 = :rela_socusua02
            into :rela_socusua01;

            Select socusua01_mae_entidades.rela_socusua30
            from socusua01_mae_entidades
            where socusua01_mae_entidades.id_socusua01 = :rela_socusua01
            into :rela_socusua30;

            if (ACCION = 'W') then
            BEGIN
                update socusua30_mae_entfisicas set socusua30_mae_entfisicas.socusua30_nombres = :entidad,
                                                socusua30_mae_entfisicas.socusua30_ape_padre = ' ',
                                                socusua30_mae_entfisicas.socusua30_ape_madre = ' '
                where socusua30_mae_entfisicas.id_socusua30 = :rela_socusua30;
            END

            Select socsyst10_tbl_listaestados.id_socsyst10
            from socsyst10_tbl_listaestados
            where socsyst10_tbl_listaestados.socsyst10_filtro_cod = 'TD10'
            and socsyst10_tbl_listaestados.socsyst10_codigo = 'RFC'
            INTO :rela_socsyst10_rfc;

            select socusua40_det_documentos.id_socusua40,
            socusua40_det_documentos.socusua40_numero
            from socusua40_det_documentos
            where socusua40_det_documentos.rela_socusua30 = :rela_socusua30
            and socusua40_det_documentos.rela_socsyst10 = :rela_socsyst10_rfc
            INTO :rela_socusua40,
                 :rfcx;

            if (rela_socusua40 is null and accion = 'W') then
            begin
                insert into socusua40_det_documentos( socusua40_det_documentos.rela_socusua30,
                                                      socusua40_det_documentos.rela_socsyst10,
                                                      socusua40_det_documentos.socusua40_numero,
                                                      socusua40_det_documentos.socusua40_codext)
                values(:rela_socusua30,
                       :rela_socsyst10_rfc,
                       :rfc,
                       'AUTCFDI-01-E');
            end
            else if (rela_socusua40 is not null and accion = 'W') then
            begin
                update socusua40_det_documentos set socusua40_det_documentos.socusua40_numero = :rfc,
                                                    socusua40_det_documentos.socusua40_codext = 'AUTCFDI-01-E'
                where socusua40_det_documentos.id_socusua40 = :rela_socusua40;
            end
       end
    END
    suspend;
end
